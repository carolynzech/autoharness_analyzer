{"crate_name":"proc_macro","proof_harnesses":[{"pretty_name":"Literal::with_stringify_parts::get_hashes_str","mangled_name":"_RNvNvMsQ_Cslgb775SWqK2_10proc_macroNtB7_7Literal20with_stringify_parts14get_hashes_str","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1419,"original_end_line":1428,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvNvMsQ_Cslgb775SWqK2_10proc_macroNtB7_7Literal20with_stringify_parts14get_hashes_str_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::usize_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal16usize_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal16usize_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i32_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i32_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i32_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i32_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i32_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i32_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<char as bridge::Mark>::mark","mangled_name":"_RNvXsf_NtCslgb775SWqK2_10proc_macro6bridgecNtB5_4Mark4mark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":288,"original_end_line":290,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsf_NtCslgb775SWqK2_10proc_macro6bridgecNtB5_4Mark4mark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i16_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i16_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i16_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::usize_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14usize_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14usize_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Span::def_site","mangled_name":"_RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span8def_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":458,"original_end_line":460,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span8def_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::symbol::Symbol","mangled_name":"_RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge6symbol6Symbol0B7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/symbol.rs","original_start_line":20,"original_end_line":20,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge6symbol6Symbol0B7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u32_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u32_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u32_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::buffer::Buffer::new","mangled_name":"_RNvMs3_NtNtCslgb775SWqK2_10proc_macro6bridge6bufferNtB5_6Buffer3newB9_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/buffer.rs","original_start_line":44,"original_end_line":46,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs3_NtNtCslgb775SWqK2_10proc_macro6bridge6bufferNtB5_6Buffer3newB9__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::f64_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12f64_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1309,"original_end_line":1314,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12f64_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::LitKind::ByteStrRaw","mangled_name":"_RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind10ByteStrRaw0B7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":348,"original_end_line":348,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind10ByteStrRaw0B7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::LitKind::CStrRaw","mangled_name":"_RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind7CStrRaw0B7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":350,"original_end_line":350,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind7CStrRaw0B7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::isize_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14isize_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14isize_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<char as bridge::Unmark>::unmark","mangled_name":"_RNvXsg_NtCslgb775SWqK2_10proc_macro6bridgecNtB5_6Unmark6unmark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":294,"original_end_line":296,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsg_NtCslgb775SWqK2_10proc_macro6bridgecNtB5_6Unmark6unmark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::byte_character","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14byte_character","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1342,"original_end_line":1350,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14byte_character_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":true,"is_automatically_generated":true},{"pretty_name":"is_available","mangled_name":"_RNvCslgb775SWqK2_10proc_macro12is_available","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":73,"original_end_line":75,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvCslgb775SWqK2_10proc_macro12is_available_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u128_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13u128_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13u128_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i64_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i64_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12i64_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::character","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal9character","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1330,"original_end_line":1338,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal9character_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":true,"is_automatically_generated":true},{"pretty_name":"Literal::u16_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u16_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u16_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::is_available","mangled_name":"_RNvNtNtCslgb775SWqK2_10proc_macro6bridge6client12is_available","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":238,"original_end_line":240,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvNtNtCslgb775SWqK2_10proc_macro6bridge6client12is_available_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<() as bridge::Unmark>::unmark","mangled_name":"_RNvXsc_NtCslgb775SWqK2_10proc_macro6bridgeuNtB5_6Unmark6unmark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":294,"original_end_line":296,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsc_NtCslgb775SWqK2_10proc_macro6bridgeuNtB5_6Unmark6unmark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<bool as bridge::Unmark>::unmark","mangled_name":"_RNvXse_NtCslgb775SWqK2_10proc_macro6bridgebNtB5_6Unmark6unmark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":294,"original_end_line":296,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXse_NtCslgb775SWqK2_10proc_macro6bridgebNtB5_6Unmark6unmark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<bridge::fxhash::FxHasher as std::default::Default>::default","mangled_name":"_RNvXs0_NtNtCslgb775SWqK2_10proc_macro6bridge6fxhashNtB5_8FxHasherNtNtCsaTVvHpgSrVj_4core7default7Default7defaultB9_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/fxhash.rs","original_start_line":25,"original_end_line":25,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXs0_NtNtCslgb775SWqK2_10proc_macro6bridge6fxhashNtB5_8FxHasherNtNtCsaTVvHpgSrVj_4core7default7Default7defaultB9__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u8_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal11u8_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal11u8_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u64_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u64_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12u64_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::Span::recover_proc_macro_span","mangled_name":"_RNvMsA_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span23recover_proc_macro_span","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":147,"original_end_line":163,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsA_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span23recover_proc_macro_span_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":true,"is_automatically_generated":true},{"pretty_name":"<bridge::buffer::Buffer as std::default::Default>::default","mangled_name":"_RNvXs0_NtNtCslgb775SWqK2_10proc_macro6bridge6bufferNtB5_6BufferNtNtCsaTVvHpgSrVj_4core7default7Default7defaultB9_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/buffer.rs","original_start_line":22,"original_end_line":24,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXs0_NtNtCslgb775SWqK2_10proc_macro6bridge6bufferNtB5_6BufferNtNtCsaTVvHpgSrVj_4core7default7Default7defaultB9__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<() as bridge::Mark>::mark","mangled_name":"_RNvXsb_NtCslgb775SWqK2_10proc_macro6bridgeuNtB5_4Mark4mark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":288,"original_end_line":290,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsb_NtCslgb775SWqK2_10proc_macro6bridgeuNtB5_4Mark4mark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::Span::call_site","mangled_name":"_RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span9call_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":125,"original_end_line":127,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span9call_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u64_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u64_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u64_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u32_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u32_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u32_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u128_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal15u128_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal15u128_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::f32_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12f32_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1264,"original_end_line":1269,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal12f32_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"ConcatTreesHelper::new","mangled_name":"_RNvMse_Cslgb775SWqK2_10proc_macroNtB5_17ConcatTreesHelper3new","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":259,"original_end_line":261,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMse_Cslgb775SWqK2_10proc_macroNtB5_17ConcatTreesHelper3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::maybe_install_panic_hook","mangled_name":"_RNvNtNtCslgb775SWqK2_10proc_macro6bridge6client24maybe_install_panic_hook","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":269,"original_end_line":285,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvNtNtCslgb775SWqK2_10proc_macro6bridge6client24maybe_install_panic_hook_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":true,"is_automatically_generated":true},{"pretty_name":"Literal::i8_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal11i8_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal11i8_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::f32_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14f32_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1239,"original_end_line":1248,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14f32_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Span::call_site","mangled_name":"_RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span9call_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":467,"original_end_line":469,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span9call_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i8_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13i8_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13i8_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::isize_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal16isize_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal16isize_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::arena::Arena::new","mangled_name":"_RNvMNtNtCslgb775SWqK2_10proc_macro6bridge5arenaNtB2_5Arena3new","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/arena.rs","original_start_line":35,"original_end_line":41,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMNtNtCslgb775SWqK2_10proc_macro6bridge5arenaNtB2_5Arena3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i64_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i64_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i64_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::symbol::Symbol::invalidate_all","mangled_name":"_RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6symbolNtB5_6Symbol14invalidate_all","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/symbol.rs","original_start_line":62,"original_end_line":64,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6symbolNtB5_6Symbol14invalidate_all_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::server::RunningSameThreadGuard::new","mangled_name":"_RNvMs_NtNtCslgb775SWqK2_10proc_macro6bridge6serverNtB4_22RunningSameThreadGuard3new","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/server.rs","original_start_line":234,"original_end_line":241,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs_NtNtCslgb775SWqK2_10proc_macro6bridge6serverNtB4_22RunningSameThreadGuard3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<usize as bridge::Unmark>::unmark","mangled_name":"_RNvXsq_NtCslgb775SWqK2_10proc_macro6bridgejNtB5_6Unmark6unmark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":294,"original_end_line":296,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsq_NtCslgb775SWqK2_10proc_macro6bridgejNtB5_6Unmark6unmark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"ConcatStreamsHelper::new","mangled_name":"_RNvMsf_Cslgb775SWqK2_10proc_macroNtB5_19ConcatStreamsHelper3new","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":290,"original_end_line":292,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsf_Cslgb775SWqK2_10proc_macroNtB5_19ConcatStreamsHelper3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::Span::mixed_site","mangled_name":"_RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span10mixed_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":129,"original_end_line":131,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span10mixed_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<bool as bridge::Mark>::mark","mangled_name":"_RNvXsd_NtCslgb775SWqK2_10proc_macro6bridgebNtB5_4Mark4mark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":288,"original_end_line":290,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsd_NtCslgb775SWqK2_10proc_macro6bridgebNtB5_4Mark4mark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<usize as bridge::Mark>::mark","mangled_name":"_RNvXsp_NtCslgb775SWqK2_10proc_macro6bridgejNtB5_4Mark4mark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":288,"original_end_line":290,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsp_NtCslgb775SWqK2_10proc_macro6bridgejNtB5_4Mark4mark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<u8 as bridge::Mark>::mark","mangled_name":"_RNvXsn_NtCslgb775SWqK2_10proc_macro6bridgehNtB5_4Mark4mark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":288,"original_end_line":290,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsn_NtCslgb775SWqK2_10proc_macro6bridgehNtB5_4Mark4mark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u8_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13u8_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13u8_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::server::RunningSameThreadGuard","mangled_name":"_RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge6server22RunningSameThreadGuard0B7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/server.rs","original_start_line":231,"original_end_line":231,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge6server22RunningSameThreadGuard0B7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::f64_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14f64_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1284,"original_end_line":1293,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14f64_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"TokenStream::new","mangled_name":"_RNvMs8_Cslgb775SWqK2_10proc_macroNtB5_11TokenStream3new","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":140,"original_end_line":142,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs8_Cslgb775SWqK2_10proc_macroNtB5_11TokenStream3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::LitKind::StrRaw","mangled_name":"_RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind6StrRaw0B7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":346,"original_end_line":346,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNcNtNtNtCslgb775SWqK2_10proc_macro6bridge7LitKind6StrRaw0B7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i128_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal15i128_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal15i128_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Span::mixed_site","mangled_name":"_RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span10mixed_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":476,"original_end_line":478,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span10mixed_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i16_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i16_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14i16_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<TokenStream as std::default::Default>::default","mangled_name":"_RNvXsc_Cslgb775SWqK2_10proc_macroNtB5_11TokenStreamNtNtCsaTVvHpgSrVj_4core7default7Default7default","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":219,"original_end_line":221,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXsc_Cslgb775SWqK2_10proc_macroNtB5_11TokenStreamNtNtCsaTVvHpgSrVj_4core7default7Default7default_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::client::Span::def_site","mangled_name":"_RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span8def_site","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/client.rs","original_start_line":121,"original_end_line":123,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMs0_NtNtCslgb775SWqK2_10proc_macro6bridge6clientNtB5_4Span8def_site_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"bridge::symbol::INTERNER::__init","mangled_name":"_RNvNvNtNtCslgb775SWqK2_10proc_macro6bridge6symbol8INTERNER6___initB7_","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/std/src/sys/thread_local/native/mod.rs","original_start_line":83,"original_end_line":85,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvNvNtNtCslgb775SWqK2_10proc_macro6bridge6symbol8INTERNER6___initB7__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<u8 as bridge::Unmark>::unmark","mangled_name":"_RNvXso_NtCslgb775SWqK2_10proc_macro6bridgehNtB5_6Unmark6unmark","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/bridge/mod.rs","original_start_line":294,"original_end_line":296,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvXso_NtCslgb775SWqK2_10proc_macro6bridgehNtB5_6Unmark6unmark_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::u16_unsuffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u16_unsuffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1175,"original_end_line":1182,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal14u16_unsuffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Literal::i128_suffixed","mangled_name":"_RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13i128_suffixed","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":1148,"original_end_line":1155,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsQ_Cslgb775SWqK2_10proc_macroNtB5_7Literal13i128_suffixed_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Span::recover_proc_macro_span","mangled_name":"_RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span23recover_proc_macro_span","crate_name":"proc_macro","original_file":"/local/home/cmzech/verify-rust-std/library/proc_macro/src/lib.rs","original_start_line":585,"original_end_line":587,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/proc_macro-f6c31b4970be0631__RNvMsm_Cslgb775SWqK2_10proc_macroNtB5_4Span23recover_proc_macro_span_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":true,"is_automatically_generated":true}],"unsupported_features":[],"test_harnesses":[],"contracted_functions":[],"autoharness_md":{"chosen":["bridge::arena::Arena::new","<bridge::buffer::Buffer as std::default::Default>::default","bridge::buffer::Buffer::new","bridge::client::Span::def_site","bridge::client::Span::call_site","bridge::client::Span::mixed_site","bridge::client::Span::recover_proc_macro_span","bridge::client::is_available","bridge::client::maybe_install_panic_hook","<bridge::fxhash::FxHasher as std::default::Default>::default","bridge::server::RunningSameThreadGuard::new","bridge::symbol::Symbol::invalidate_all","bridge::symbol::INTERNER::__init","<() as bridge::Mark>::mark","<() as bridge::Unmark>::unmark","<bool as bridge::Mark>::mark","<bool as bridge::Unmark>::unmark","<char as bridge::Mark>::mark","<char as bridge::Unmark>::unmark","<u8 as bridge::Mark>::mark","<u8 as bridge::Unmark>::unmark","<usize as bridge::Mark>::mark","<usize as bridge::Unmark>::unmark","is_available","TokenStream::new","<TokenStream as std::default::Default>::default","ConcatTreesHelper::new","ConcatStreamsHelper::new","Span::def_site","Span::call_site","Span::mixed_site","Span::recover_proc_macro_span","Literal::u8_suffixed","Literal::u16_suffixed","Literal::u32_suffixed","Literal::u64_suffixed","Literal::u128_suffixed","Literal::usize_suffixed","Literal::i8_suffixed","Literal::i16_suffixed","Literal::i32_suffixed","Literal::i64_suffixed","Literal::i128_suffixed","Literal::isize_suffixed","Literal::u8_unsuffixed","Literal::u16_unsuffixed","Literal::u32_unsuffixed","Literal::u64_unsuffixed","Literal::u128_unsuffixed","Literal::usize_unsuffixed","Literal::i8_unsuffixed","Literal::i16_unsuffixed","Literal::i32_unsuffixed","Literal::i64_unsuffixed","Literal::i128_unsuffixed","Literal::isize_unsuffixed","Literal::f32_unsuffixed","Literal::f32_suffixed","Literal::f64_unsuffixed","Literal::f64_suffixed","Literal::character","Literal::byte_character","Literal::with_stringify_parts::get_hashes_str","bridge::server::RunningSameThreadGuard","bridge::symbol::Symbol","bridge::LitKind::StrRaw","bridge::LitKind::ByteStrRaw","bridge::LitKind::CStrRaw"],"skipped":{"<&'a [Span] as diagnostic::MultiSpan>::into_spans":{"MissingArbitraryImpl":[["self","&[Span]"]]},"<&'a [u8] as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<&'a bridge::Marked<T, M> as bridge::Unmark>::unmark":"GenericFn","<&'a mut bridge::Marked<T, M> as bridge::Unmark>::unmark":"GenericFn","<&'a str as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<&T as to_tokens::ToTokens>::to_tokens":"GenericFn","<&[u8] as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","&[u8]"]]},"<&[u8] as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","&[u8]"]]},"<&[u8] as bridge::rpc::Encode<S>>::encode":"GenericFn","<&bridge::client::FreeFunctions as bridge::rpc::Encode<S>>::encode":"GenericFn","<&bridge::client::SourceFile as bridge::rpc::Encode<S>>::encode":"GenericFn","<&bridge::client::TokenStream as bridge::rpc::Encode<S>>::encode":"GenericFn","<&mut T as to_tokens::ToTokens>::to_tokens":"GenericFn","<&mut bridge::client::FreeFunctions as bridge::rpc::Encode<S>>::encode":"GenericFn","<&mut bridge::client::SourceFile as bridge::rpc::Encode<S>>::encode":"GenericFn","<&mut bridge::client::TokenStream as bridge::rpc::Encode<S>>::encode":"GenericFn","<&str as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","&str"]]},"<&str as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","&str"]]},"<&str as bridge::rpc::Encode<S>>::encode":"GenericFn","<() as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<() as bridge::rpc::Encode<S>>::encode":"GenericFn","<(A, B) as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<(A, B) as bridge::rpc::Encode<S>>::encode":"GenericFn","<Delimiter as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","Delimiter"]]},"<Delimiter as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","Delimiter"]]},"<Delimiter as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Delimiter"]]},"<Delimiter as std::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&Delimiter"]]},"<Delimiter as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&Delimiter"],["other","&Delimiter"]]},"<Delimiter as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Delimiter"],["f","&mut std::fmt::Formatter<'_>"]]},"<ExpandError as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&ExpandError"],["f","&mut std::fmt::Formatter<'_>"]]},"<ExpandError as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&ExpandError"],["f","&mut std::fmt::Formatter<'_>"]]},"<Group as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Group"]]},"<Group as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Group"],["f","&mut std::fmt::Formatter<'_>"]]},"<Group as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&Group"],["f","&mut std::fmt::Formatter<'_>"]]},"<Group as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&Group"],["tokens","&mut TokenStream"]]},"<Ident as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Ident"]]},"<Ident as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Ident"],["f","&mut std::fmt::Formatter<'_>"]]},"<Ident as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&Ident"],["f","&mut std::fmt::Formatter<'_>"]]},"<Ident as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&Ident"],["tokens","&mut TokenStream"]]},"<LexError as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&LexError"],["f","&mut std::fmt::Formatter<'_>"]]},"<LexError as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&LexError"],["f","&mut std::fmt::Formatter<'_>"]]},"<Literal as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Literal"]]},"<Literal as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Literal"],["f","&mut std::fmt::Formatter<'_>"]]},"<Literal as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&Literal"],["f","&mut std::fmt::Formatter<'_>"]]},"<Literal as std::str::FromStr>::from_str":{"MissingArbitraryImpl":[["src","&str"]]},"<Literal as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&Literal"],["tokens","&mut TokenStream"]]},"<Punct as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Punct"]]},"<Punct as std::cmp::PartialEq<char>>::eq":{"MissingArbitraryImpl":[["self","&Punct"],["rhs","&char"]]},"<Punct as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Punct"],["f","&mut std::fmt::Formatter<'_>"]]},"<Punct as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&Punct"],["f","&mut std::fmt::Formatter<'_>"]]},"<Punct as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&Punct"],["tokens","&mut TokenStream"]]},"<SourceFile as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&SourceFile"]]},"<SourceFile as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&SourceFile"],["other","&SourceFile"]]},"<SourceFile as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&SourceFile"],["f","&mut std::fmt::Formatter<'_>"]]},"<Spacing as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","Spacing"]]},"<Spacing as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","Spacing"]]},"<Spacing as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Spacing"]]},"<Spacing as std::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&Spacing"]]},"<Spacing as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&Spacing"],["other","&Spacing"]]},"<Spacing as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Spacing"],["f","&mut std::fmt::Formatter<'_>"]]},"<Span as diagnostic::MultiSpan>::into_spans":{"MissingArbitraryImpl":[["self","Span"]]},"<Span as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Span"]]},"<Span as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Span"],["f","&mut std::fmt::Formatter<'_>"]]},"<TokenStream as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&TokenStream"]]},"<TokenStream as std::convert::From<TokenTree>>::from":{"MissingArbitraryImpl":[["tree","TokenTree"]]},"<TokenStream as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&TokenStream"],["f","&mut std::fmt::Formatter<'_>"]]},"<TokenStream as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&TokenStream"],["f","&mut std::fmt::Formatter<'_>"]]},"<TokenStream as std::iter::Extend<TokenStream>>::extend":"GenericFn","<TokenStream as std::iter::Extend<TokenTree>>::extend":"GenericFn","<TokenStream as std::iter::FromIterator<TokenStream>>::from_iter":"GenericFn","<TokenStream as std::iter::FromIterator<TokenTree>>::from_iter":"GenericFn","<TokenStream as std::str::FromStr>::from_str":{"MissingArbitraryImpl":[["src","&str"]]},"<TokenStream as to_tokens::ToTokens>::into_token_stream":{"MissingArbitraryImpl":[["self","TokenStream"]]},"<TokenStream as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&TokenStream"],["tokens","&mut TokenStream"]]},"<TokenTree as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&TokenTree"]]},"<TokenTree as std::convert::From<Group>>::from":{"MissingArbitraryImpl":[["g","Group"]]},"<TokenTree as std::convert::From<Ident>>::from":{"MissingArbitraryImpl":[["g","Ident"]]},"<TokenTree as std::convert::From<Literal>>::from":{"MissingArbitraryImpl":[["g","Literal"]]},"<TokenTree as std::convert::From<Punct>>::from":{"MissingArbitraryImpl":[["g","Punct"]]},"<TokenTree as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&TokenTree"],["f","&mut std::fmt::Formatter<'_>"]]},"<TokenTree as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&TokenTree"],["f","&mut std::fmt::Formatter<'_>"]]},"<TokenTree as to_tokens::ToTokens>::into_token_stream":{"MissingArbitraryImpl":[["self","TokenTree"]]},"<TokenTree as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&TokenTree"],["tokens","&mut TokenStream"]]},"<bool as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bool as bridge::rpc::Encode<S>>::encode":"GenericFn","<bool as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&bool"],["tokens","&mut TokenStream"]]},"<bridge::DelimSpan<Span> as bridge::Mark>::mark":"GenericFn","<bridge::DelimSpan<Span> as bridge::Unmark>::unmark":"GenericFn","<bridge::DelimSpan<Span> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::DelimSpan<Span> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::DelimSpan<Span> as std::clone::Clone>::clone":"GenericFn","<bridge::Diagnostic<Span> as bridge::Mark>::mark":"GenericFn","<bridge::Diagnostic<Span> as bridge::Unmark>::unmark":"GenericFn","<bridge::Diagnostic<Span> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::Diagnostic<Span> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::Diagnostic<Span> as std::clone::Clone>::clone":"GenericFn","<bridge::Diagnostic<Span> as std::fmt::Debug>::fmt":"GenericFn","<bridge::ExpnGlobals<Span> as bridge::Mark>::mark":"GenericFn","<bridge::ExpnGlobals<Span> as bridge::Unmark>::unmark":"GenericFn","<bridge::ExpnGlobals<Span> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::ExpnGlobals<Span> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::ExpnGlobals<Span> as std::clone::Clone>::clone":"GenericFn","<bridge::Group<TokenStream, Span> as bridge::Mark>::mark":"GenericFn","<bridge::Group<TokenStream, Span> as bridge::Unmark>::unmark":"GenericFn","<bridge::Group<TokenStream, Span> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::Group<TokenStream, Span> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::Group<TokenStream, Span> as std::clone::Clone>::clone":"GenericFn","<bridge::Ident<Span, Symbol> as bridge::Mark>::mark":"GenericFn","<bridge::Ident<Span, Symbol> as bridge::Unmark>::unmark":"GenericFn","<bridge::Ident<Span, Symbol> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::Ident<Span, Symbol> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::Ident<Span, Symbol> as std::clone::Clone>::clone":"GenericFn","<bridge::Ident<Span, Symbol> as std::cmp::Eq>::assert_receiver_is_total_eq":"GenericFn","<bridge::Ident<Span, Symbol> as std::cmp::PartialEq>::eq":"GenericFn","<bridge::LitKind as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","bridge::LitKind"]]},"<bridge::LitKind as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","bridge::LitKind"]]},"<bridge::LitKind as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::LitKind as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::LitKind as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::LitKind"]]},"<bridge::LitKind as std::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&bridge::LitKind"]]},"<bridge::LitKind as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&bridge::LitKind"],["other","&bridge::LitKind"]]},"<bridge::LitKind as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&bridge::LitKind"],["f","&mut std::fmt::Formatter<'_>"]]},"<bridge::Literal<Sp, Sy> as bridge::Mark>::mark":"GenericFn","<bridge::Literal<Sp, Sy> as bridge::Unmark>::unmark":"GenericFn","<bridge::Literal<Sp, Sy> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::Literal<Sp, Sy> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::Literal<Span, Symbol> as std::clone::Clone>::clone":"GenericFn","<bridge::Literal<Span, Symbol> as std::cmp::Eq>::assert_receiver_is_total_eq":"GenericFn","<bridge::Literal<Span, Symbol> as std::cmp::PartialEq>::eq":"GenericFn","<bridge::Marked<T, M> as bridge::Mark>::mark":"GenericFn","<bridge::Marked<T, M> as bridge::Unmark>::unmark":"GenericFn","<bridge::Marked<T, M> as std::clone::Clone>::clone":"GenericFn","<bridge::Marked<T, M> as std::cmp::Eq>::assert_receiver_is_total_eq":"GenericFn","<bridge::Marked<T, M> as std::cmp::PartialEq>::eq":"GenericFn","<bridge::Marked<T, M> as std::hash::Hash>::hash":"GenericFn","<bridge::Punct<Span> as bridge::Mark>::mark":"GenericFn","<bridge::Punct<Span> as bridge::Unmark>::unmark":"GenericFn","<bridge::Punct<Span> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::Punct<Span> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::Punct<Span> as std::clone::Clone>::clone":"GenericFn","<bridge::TokenTree<TokenStream, Span, Symbol> as bridge::Mark>::mark":"GenericFn","<bridge::TokenTree<TokenStream, Span, Symbol> as bridge::Unmark>::unmark":"GenericFn","<bridge::TokenTree<TokenStream, Span, Symbol> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::TokenTree<TokenStream, Span, Symbol> as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::TokenTree<TokenStream, Span, Symbol> as std::clone::Clone>::clone":"GenericFn","<bridge::api_tags::FreeFunctions as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::FreeFunctions as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::api_tags::Method as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::Method as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::api_tags::SourceFile as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::SourceFile as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::api_tags::Span as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::Span as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::api_tags::Symbol as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::Symbol as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::api_tags::TokenStream as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<bridge::api_tags::TokenStream as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::buffer::Buffer as std::convert::From<std::vec::Vec<u8>>>::from":{"MissingArbitraryImpl":[["v","std::vec::Vec<u8>"]]},"<bridge::buffer::Buffer as std::convert::From<std::vec::Vec<u8>>>::from::drop":{"MissingArbitraryImpl":[["b","bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::convert::From<std::vec::Vec<u8>>>::from::reserve":{"MissingArbitraryImpl":[["b","bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::convert::From<std::vec::Vec<u8>>>::from::to_vec":{"MissingArbitraryImpl":[["b","bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::io::Write>::flush":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::io::Write>::write":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"],["xs","&[u8]"]]},"<bridge::buffer::Buffer as std::io::Write>::write_all":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"],["xs","&[u8]"]]},"<bridge::buffer::Buffer as std::ops::Deref>::deref":{"MissingArbitraryImpl":[["self","&bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::ops::DerefMut>::deref_mut":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"<bridge::buffer::Buffer as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"<bridge::client::Client<I, O> as std::clone::Clone>::clone":"GenericFn","<bridge::client::FreeFunctions as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::client::FreeFunctions as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::client::FreeFunctions as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::client::FreeFunctions"]]},"<bridge::client::ProcMacro as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::client::ProcMacro"]]},"<bridge::client::SourceFile as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::client::SourceFile as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::client::SourceFile as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::client::SourceFile"]]},"<bridge::client::SourceFile as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::client::SourceFile"]]},"<bridge::client::Span as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::client::Span as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::client::Span as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::client::Span"]]},"<bridge::client::Span as std::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&bridge::client::Span"]]},"<bridge::client::Span as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&bridge::client::Span"],["other","&bridge::client::Span"]]},"<bridge::client::Span as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&bridge::client::Span"],["f","&mut std::fmt::Formatter<'_>"]]},"<bridge::client::Span as std::hash::Hash>::hash":"GenericFn","<bridge::client::TokenStream as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::client::TokenStream as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::client::TokenStream as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::client::TokenStream"]]},"<bridge::client::TokenStream as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::client::TokenStream"]]},"<bridge::client::state::set::RestoreOnDrop as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::client::state::set::RestoreOnDrop"]]},"<bridge::closure::Closure<'a, A, R> as std::convert::From<&'a mut F>>::from":"GenericFn","<bridge::closure::Closure<'a, A, R> as std::convert::From<&'a mut F>>::from::call":"GenericFn","<bridge::fxhash::FxHasher as std::hash::Hasher>::finish":{"MissingArbitraryImpl":[["self","&bridge::fxhash::FxHasher"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"],["bytes","&[u8]"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u16":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u32":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u64":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write_u8":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"<bridge::fxhash::FxHasher as std::hash::Hasher>::write_usize":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"<bridge::handle::OwnedStore<T> as std::ops::Index<std::num::NonZero<u32>>>::index":"GenericFn","<bridge::handle::OwnedStore<T> as std::ops::IndexMut<std::num::NonZero<u32>>>::index_mut":"GenericFn","<bridge::rpc::PanicMessage as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::rpc::PanicMessage as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::rpc::PanicMessage as std::convert::From<std::boxed::Box<(dyn std::any::Any + std::marker::Send + 'static)>>>::from":{"MissingArbitraryImpl":[["payload","std::boxed::Box<dyn std::any::Any + std::marker::Send>"]]},"<bridge::server::CrossThread<P> as bridge::server::ExecutionStrategy>::run_bridge_and_client":"GenericFn","<bridge::server::Dispatcher<bridge::server::MarkedTypes<S>> as bridge::server::DispatcherTrait>::dispatch":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::drop":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::emit_diagnostic":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::injected_env_var":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::literal_from_str":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::track_env_var":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::FreeFunctions>::track_path":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Server>::globals":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Server>::intern_symbol":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Server>::with_symbol_string":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::SourceFile>::clone":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::SourceFile>::drop":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::SourceFile>::eq":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::SourceFile>::is_real":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::SourceFile>::path":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::byte_range":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::column":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::debug":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::end":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::join":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::line":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::parent":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::recover_proc_macro_span":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::resolved_at":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::save_span":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::source":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::source_file":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::source_text":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::start":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Span>::subspan":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::Symbol>::normalize_and_validate_ident":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::clone":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::concat_streams":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::concat_trees":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::drop":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::expand_expr":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::from_str":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::from_token_tree":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::into_trees":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::is_empty":"GenericFn","<bridge::server::MarkedTypes<S> as bridge::server::TokenStream>::to_string":"GenericFn","<bridge::server::MaybeCrossThread<P> as bridge::server::ExecutionStrategy>::run_bridge_and_client":"GenericFn","<bridge::server::RunningSameThreadGuard as std::ops::Drop>::drop":{"MissingArbitraryImpl":[["self","&mut bridge::server::RunningSameThreadGuard"]]},"<bridge::server::SameThread as bridge::server::ExecutionStrategy>::run_bridge_and_client":"GenericFn","<bridge::symbol::Symbol as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<bridge::symbol::Symbol as bridge::rpc::Encode<S>>::encode":"GenericFn","<bridge::symbol::Symbol as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&bridge::symbol::Symbol"]]},"<bridge::symbol::Symbol as std::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&bridge::symbol::Symbol"]]},"<bridge::symbol::Symbol as std::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&bridge::symbol::Symbol"],["other","&bridge::symbol::Symbol"]]},"<bridge::symbol::Symbol as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&bridge::symbol::Symbol"],["f","&mut std::fmt::Formatter<'_>"]]},"<bridge::symbol::Symbol as std::fmt::Display>::fmt":{"MissingArbitraryImpl":[["self","&bridge::symbol::Symbol"],["f","&mut std::fmt::Formatter<'_>"]]},"<bridge::symbol::Symbol as std::hash::Hash>::hash":"GenericFn","<char as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<char as bridge::rpc::Encode<S>>::encode":"GenericFn","<char as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&char"],["tokens","&mut TokenStream"]]},"<diagnostic::Children<'a> as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&diagnostic::Children<'_>"]]},"<diagnostic::Children<'a> as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&diagnostic::Children<'_>"],["f","&mut std::fmt::Formatter<'_>"]]},"<diagnostic::Children<'a> as std::iter::Iterator>::next":{"MissingArbitraryImpl":[["self","&mut diagnostic::Children<'_>"]]},"<diagnostic::Diagnostic as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"]]},"<diagnostic::Diagnostic as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"],["f","&mut std::fmt::Formatter<'_>"]]},"<diagnostic::Level as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","diagnostic::Level"]]},"<diagnostic::Level as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","diagnostic::Level"]]},"<diagnostic::Level as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&diagnostic::Level"]]},"<diagnostic::Level as std::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&diagnostic::Level"],["f","&mut std::fmt::Formatter<'_>"]]},"<escape::EscapeOptions as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&escape::EscapeOptions"]]},"<f32 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&f32"],["tokens","&mut TokenStream"]]},"<f64 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&f64"],["tokens","&mut TokenStream"]]},"<i128 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&i128"],["tokens","&mut TokenStream"]]},"<i16 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&i16"],["tokens","&mut TokenStream"]]},"<i32 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&i32"],["tokens","&mut TokenStream"]]},"<i64 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&i64"],["tokens","&mut TokenStream"]]},"<i8 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&i8"],["tokens","&mut TokenStream"]]},"<impl std::cmp::PartialEq<Punct> for char>::eq":{"MissingArbitraryImpl":[["self","&char"],["rhs","&Punct"]]},"<isize as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&isize"],["tokens","&mut TokenStream"]]},"<std::borrow::Cow<'_, T> as to_tokens::ToTokens>::to_tokens":"GenericFn","<std::boxed::Box<T> as to_tokens::ToTokens>::to_tokens":"GenericFn","<std::collections::Bound<T> as bridge::Mark>::mark":"GenericFn","<std::collections::Bound<T> as bridge::Unmark>::unmark":"GenericFn","<std::ffi::CStr as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&std::ffi::CStr"],["tokens","&mut TokenStream"]]},"<std::ffi::CString as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&std::ffi::CString"],["tokens","&mut TokenStream"]]},"<std::num::NonZero<u32> as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<std::num::NonZero<u32> as bridge::rpc::Encode<S>>::encode":"GenericFn","<std::ops::Range<T> as bridge::Mark>::mark":"GenericFn","<std::ops::Range<T> as bridge::Unmark>::unmark":"GenericFn","<std::option::Option<T> as bridge::Mark>::mark":"GenericFn","<std::option::Option<T> as bridge::Unmark>::unmark":"GenericFn","<std::option::Option<T> as to_tokens::ToTokens>::to_tokens":"GenericFn","<std::rc::Rc<T> as to_tokens::ToTokens>::to_tokens":"GenericFn","<std::result::Result<T, E> as bridge::Mark>::mark":"GenericFn","<std::result::Result<T, E> as bridge::Unmark>::unmark":"GenericFn","<std::string::String as bridge::Mark>::mark":{"MissingArbitraryImpl":[["unmarked","std::string::String"]]},"<std::string::String as bridge::Unmark>::unmark":{"MissingArbitraryImpl":[["self","std::string::String"]]},"<std::string::String as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<std::string::String as bridge::rpc::Encode<S>>::encode":"GenericFn","<std::string::String as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&std::string::String"],["tokens","&mut TokenStream"]]},"<std::vec::Vec<Span> as diagnostic::MultiSpan>::into_spans":{"MissingArbitraryImpl":[["self","std::vec::Vec<Span>"]]},"<std::vec::Vec<T> as bridge::Mark>::mark":"GenericFn","<std::vec::Vec<T> as bridge::Unmark>::unmark":"GenericFn","<std::vec::Vec<T> as bridge::rpc::DecodeMut<'a, '_, S>>::decode":"GenericFn","<std::vec::Vec<T> as bridge::rpc::Encode<S>>::encode":"GenericFn","<str as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&str"],["tokens","&mut TokenStream"]]},"<token_stream::IntoIter as std::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&token_stream::IntoIter"]]},"<token_stream::IntoIter as std::iter::Iterator>::count":{"MissingArbitraryImpl":[["self","token_stream::IntoIter"]]},"<token_stream::IntoIter as std::iter::Iterator>::next":{"MissingArbitraryImpl":[["self","&mut token_stream::IntoIter"]]},"<token_stream::IntoIter as std::iter::Iterator>::size_hint":{"MissingArbitraryImpl":[["self","&token_stream::IntoIter"]]},"<u128 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&u128"],["tokens","&mut TokenStream"]]},"<u16 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&u16"],["tokens","&mut TokenStream"]]},"<u32 as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<u32 as bridge::rpc::Encode<S>>::encode":"GenericFn","<u32 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&u32"],["tokens","&mut TokenStream"]]},"<u64 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&u64"],["tokens","&mut TokenStream"]]},"<u8 as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<u8 as bridge::rpc::Encode<S>>::encode":"GenericFn","<u8 as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&u8"],["tokens","&mut TokenStream"]]},"<usize as bridge::rpc::DecodeMut<'_, '_, S>>::decode":"GenericFn","<usize as bridge::rpc::Encode<S>>::encode":"GenericFn","<usize as to_tokens::ToTokens>::to_tokens":{"MissingArbitraryImpl":[["self","&usize"],["tokens","&mut TokenStream"]]},"ConcatStreamsHelper::append_to":{"MissingArbitraryImpl":[["self","ConcatStreamsHelper"],["stream","&mut TokenStream"]]},"ConcatStreamsHelper::build":{"MissingArbitraryImpl":[["self","ConcatStreamsHelper"]]},"ConcatStreamsHelper::push":{"MissingArbitraryImpl":[["self","&mut ConcatStreamsHelper"],["stream","TokenStream"]]},"ConcatTreesHelper::append_to":{"MissingArbitraryImpl":[["self","ConcatTreesHelper"],["stream","&mut TokenStream"]]},"ConcatTreesHelper::build":{"MissingArbitraryImpl":[["self","ConcatTreesHelper"]]},"ConcatTreesHelper::push":{"MissingArbitraryImpl":[["self","&mut ConcatTreesHelper"],["tree","TokenTree"]]},"Group":{"MissingArbitraryImpl":[["_","bridge::Group<bridge::client::TokenStream, bridge::client::Span>"]]},"Group::delimiter":{"MissingArbitraryImpl":[["self","&Group"]]},"Group::new":{"MissingArbitraryImpl":[["delimiter","Delimiter"],["stream","TokenStream"]]},"Group::set_span":{"MissingArbitraryImpl":[["self","&mut Group"],["span","Span"]]},"Group::span":{"MissingArbitraryImpl":[["self","&Group"]]},"Group::span_close":{"MissingArbitraryImpl":[["self","&Group"]]},"Group::span_open":{"MissingArbitraryImpl":[["self","&Group"]]},"Group::stream":{"MissingArbitraryImpl":[["self","&Group"]]},"Ident":{"MissingArbitraryImpl":[["_","bridge::Ident<bridge::client::Span, bridge::symbol::Symbol>"]]},"Ident::new":{"MissingArbitraryImpl":[["string","&str"],["span","Span"]]},"Ident::new_raw":{"MissingArbitraryImpl":[["string","&str"],["span","Span"]]},"Ident::set_span":{"MissingArbitraryImpl":[["self","&mut Ident"],["span","Span"]]},"Ident::span":{"MissingArbitraryImpl":[["self","&Ident"]]},"Literal":{"MissingArbitraryImpl":[["_","bridge::Literal<bridge::client::Span, bridge::symbol::Symbol>"]]},"Literal::byte_string":{"MissingArbitraryImpl":[["bytes","&[u8]"]]},"Literal::c_string":{"MissingArbitraryImpl":[["string","&std::ffi::CStr"]]},"Literal::new":{"MissingArbitraryImpl":[["kind","bridge::LitKind"],["value","&str"],["suffix","std::option::Option<&str>"]]},"Literal::set_span":{"MissingArbitraryImpl":[["self","&mut Literal"],["span","Span"]]},"Literal::span":{"MissingArbitraryImpl":[["self","&Literal"]]},"Literal::string":{"MissingArbitraryImpl":[["string","&str"]]},"Literal::subspan":"GenericFn","Literal::with_stringify_parts":"GenericFn","Literal::with_symbol_and_suffix":"GenericFn","Punct":{"MissingArbitraryImpl":[["_","bridge::Punct<bridge::client::Span>"]]},"Punct::as_char":{"MissingArbitraryImpl":[["self","&Punct"]]},"Punct::new":{"MissingArbitraryImpl":[["spacing","Spacing"]]},"Punct::set_span":{"MissingArbitraryImpl":[["self","&mut Punct"],["span","Span"]]},"Punct::spacing":{"MissingArbitraryImpl":[["self","&Punct"]]},"Punct::span":{"MissingArbitraryImpl":[["self","&Punct"]]},"SourceFile":{"MissingArbitraryImpl":[["_","bridge::client::SourceFile"]]},"SourceFile::is_real":{"MissingArbitraryImpl":[["self","&SourceFile"]]},"SourceFile::path":{"MissingArbitraryImpl":[["self","&SourceFile"]]},"Span":{"MissingArbitraryImpl":[["_","bridge::client::Span"]]},"Span::byte_range":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::column":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::end":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::eq":{"MissingArbitraryImpl":[["self","&Span"],["other","&Span"]]},"Span::error":"GenericFn","Span::help":"GenericFn","Span::join":{"MissingArbitraryImpl":[["self","&Span"],["other","Span"]]},"Span::line":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::located_at":{"MissingArbitraryImpl":[["self","&Span"],["other","Span"]]},"Span::note":"GenericFn","Span::parent":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::resolved_at":{"MissingArbitraryImpl":[["self","&Span"],["other","Span"]]},"Span::save_span":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::source":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::source_file":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::source_text":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::start":{"MissingArbitraryImpl":[["self","&Span"]]},"Span::warning":"GenericFn","TokenStream":{"MissingArbitraryImpl":[["_","std::option::Option<bridge::client::TokenStream>"]]},"TokenStream::expand_expr":{"MissingArbitraryImpl":[["self","&TokenStream"]]},"TokenStream::is_empty":{"MissingArbitraryImpl":[["self","&TokenStream"]]},"TokenTree::Group":{"MissingArbitraryImpl":[["_","Group"]]},"TokenTree::Ident":{"MissingArbitraryImpl":[["_","Ident"]]},"TokenTree::Literal":{"MissingArbitraryImpl":[["_","Literal"]]},"TokenTree::Punct":{"MissingArbitraryImpl":[["_","Punct"]]},"TokenTree::set_span":{"MissingArbitraryImpl":[["self","&mut TokenTree"],["span","Span"]]},"TokenTree::span":{"MissingArbitraryImpl":[["self","&TokenTree"]]},"bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Delimiter>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for Spacing>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for diagnostic::Level>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for std::collections::Bound<T>>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for std::ops::Range<T>>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for std::option::Option<T>>::decode":"GenericFn","bridge::<impl bridge::rpc::DecodeMut<'a, '_, S> for std::result::Result<T, E>>::decode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for Delimiter>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for Spacing>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for diagnostic::Level>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for std::collections::Bound<T>>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for std::ops::Range<T>>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for std::option::Option<T>>::encode":"GenericFn","bridge::<impl bridge::rpc::Encode<S> for std::result::Result<T, E>>::encode":"GenericFn","bridge::DelimSpan::<Span>::from_single":"GenericFn","bridge::TokenTree::Group":"GenericFn","bridge::TokenTree::Ident":"GenericFn","bridge::TokenTree::Literal":"GenericFn","bridge::TokenTree::Punct":"GenericFn","bridge::api_tags::Method::FreeFunctions":{"MissingArbitraryImpl":[["_","bridge::api_tags::FreeFunctions"]]},"bridge::api_tags::Method::SourceFile":{"MissingArbitraryImpl":[["_","bridge::api_tags::SourceFile"]]},"bridge::api_tags::Method::Span":{"MissingArbitraryImpl":[["_","bridge::api_tags::Span"]]},"bridge::api_tags::Method::Symbol":{"MissingArbitraryImpl":[["_","bridge::api_tags::Symbol"]]},"bridge::api_tags::Method::TokenStream":{"MissingArbitraryImpl":[["_","bridge::api_tags::TokenStream"]]},"bridge::arena::Arena::alloc_raw":{"MissingArbitraryImpl":[["self","&bridge::arena::Arena"]]},"bridge::arena::Arena::alloc_raw_without_grow":{"MissingArbitraryImpl":[["self","&bridge::arena::Arena"]]},"bridge::arena::Arena::alloc_str":{"MissingArbitraryImpl":[["self","&bridge::arena::Arena"],["string","&str"]]},"bridge::arena::Arena::grow":{"MissingArbitraryImpl":[["self","&bridge::arena::Arena"]]},"bridge::buffer::Buffer::clear":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"bridge::buffer::Buffer::extend_from_array":"GenericFn","bridge::buffer::Buffer::extend_from_slice":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"],["xs","&[u8]"]]},"bridge::buffer::Buffer::push":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"bridge::buffer::Buffer::take":{"MissingArbitraryImpl":[["self","&mut bridge::buffer::Buffer"]]},"bridge::client::<impl bridge::symbol::Symbol>::normalize_and_validate_ident":{"MissingArbitraryImpl":[["string","&str"]]},"bridge::client::Bridge::<'_>::with":"GenericFn","bridge::client::Client::<(TokenStream, TokenStream), TokenStream>::expand2":"GenericFn","bridge::client::Client::<TokenStream, TokenStream>::expand1":"GenericFn","bridge::client::FreeFunctions::drop":{"MissingArbitraryImpl":[["self","bridge::client::FreeFunctions"]]},"bridge::client::FreeFunctions::emit_diagnostic":{"MissingArbitraryImpl":[["diagnostic","bridge::Diagnostic<bridge::client::Span>"]]},"bridge::client::FreeFunctions::injected_env_var":{"MissingArbitraryImpl":[["var","&str"]]},"bridge::client::FreeFunctions::literal_from_str":{"MissingArbitraryImpl":[["s","&str"]]},"bridge::client::FreeFunctions::track_env_var":{"MissingArbitraryImpl":[["var","&str"],["value","std::option::Option<&str>"]]},"bridge::client::FreeFunctions::track_path":{"MissingArbitraryImpl":[["path","&str"]]},"bridge::client::ProcMacro::attr":"GenericFn","bridge::client::ProcMacro::bang":"GenericFn","bridge::client::ProcMacro::custom_derive":"GenericFn","bridge::client::ProcMacro::name":{"MissingArbitraryImpl":[["self","&bridge::client::ProcMacro"]]},"bridge::client::SourceFile::clone":{"MissingArbitraryImpl":[["self","&bridge::client::SourceFile"]]},"bridge::client::SourceFile::drop":{"MissingArbitraryImpl":[["self","bridge::client::SourceFile"]]},"bridge::client::SourceFile::eq":{"MissingArbitraryImpl":[["self","&bridge::client::SourceFile"],["other","&bridge::client::SourceFile"]]},"bridge::client::SourceFile::is_real":{"MissingArbitraryImpl":[["self","&bridge::client::SourceFile"]]},"bridge::client::SourceFile::path":{"MissingArbitraryImpl":[["self","&bridge::client::SourceFile"]]},"bridge::client::Span::byte_range":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::column":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::debug":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::end":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::join":{"MissingArbitraryImpl":[["self","bridge::client::Span"],["other","bridge::client::Span"]]},"bridge::client::Span::line":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::parent":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::resolved_at":{"MissingArbitraryImpl":[["self","bridge::client::Span"],["at","bridge::client::Span"]]},"bridge::client::Span::save_span":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::source":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::source_file":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::source_text":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::start":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::Span::subspan":{"MissingArbitraryImpl":[["self","bridge::client::Span"]]},"bridge::client::TokenStream::clone":{"MissingArbitraryImpl":[["self","&bridge::client::TokenStream"]]},"bridge::client::TokenStream::concat_streams":{"MissingArbitraryImpl":[["base","std::option::Option<bridge::client::TokenStream>"],["streams","std::vec::Vec<bridge::client::TokenStream>"]]},"bridge::client::TokenStream::concat_trees":{"MissingArbitraryImpl":[["base","std::option::Option<bridge::client::TokenStream>"],["trees","std::vec::Vec<bridge::TokenTree<bridge::client::TokenStream, bridge::client::Span, bridge::symbol::Symbol>>"]]},"bridge::client::TokenStream::drop":{"MissingArbitraryImpl":[["self","bridge::client::TokenStream"]]},"bridge::client::TokenStream::expand_expr":{"MissingArbitraryImpl":[["self","&bridge::client::TokenStream"]]},"bridge::client::TokenStream::from_str":{"MissingArbitraryImpl":[["src","&str"]]},"bridge::client::TokenStream::from_token_tree":{"MissingArbitraryImpl":[["tree","bridge::TokenTree<bridge::client::TokenStream, bridge::client::Span, bridge::symbol::Symbol>"]]},"bridge::client::TokenStream::into_trees":{"MissingArbitraryImpl":[["self","bridge::client::TokenStream"]]},"bridge::client::TokenStream::is_empty":{"MissingArbitraryImpl":[["self","&bridge::client::TokenStream"]]},"bridge::client::TokenStream::to_string":{"MissingArbitraryImpl":[["self","&bridge::client::TokenStream"]]},"bridge::client::run_client":"GenericFn","bridge::client::state::set":"GenericFn","bridge::client::state::set::RestoreOnDrop":{"MissingArbitraryImpl":[["_","*const ()"]]},"bridge::client::state::with":"GenericFn","bridge::closure::Closure::<'a, A, R>::call":"GenericFn","bridge::fxhash::FxHasher::add_to_hash":{"MissingArbitraryImpl":[["self","&mut bridge::fxhash::FxHasher"]]},"bridge::handle::InternedStore::<T>::alloc":"GenericFn","bridge::handle::InternedStore::<T>::copy":"GenericFn","bridge::handle::InternedStore::<T>::new":"GenericFn","bridge::handle::OwnedStore::<T>::alloc":"GenericFn","bridge::handle::OwnedStore::<T>::new":"GenericFn","bridge::handle::OwnedStore::<T>::take":"GenericFn","bridge::rpc::<impl std::convert::From<bridge::rpc::PanicMessage> for std::boxed::Box<(dyn std::any::Any + std::marker::Send + 'static)>>::from":{"MissingArbitraryImpl":[["val","bridge::rpc::PanicMessage"]]},"bridge::rpc::PanicMessage::StaticStr":{"MissingArbitraryImpl":[["_","&str"]]},"bridge::rpc::PanicMessage::String":{"MissingArbitraryImpl":[["_","std::string::String"]]},"bridge::rpc::PanicMessage::as_str":{"MissingArbitraryImpl":[["self","&bridge::rpc::PanicMessage"]]},"bridge::selfless_reify::_reify_to_extern_c_fn_unary":"GenericFn","bridge::selfless_reify::_reify_to_extern_c_fn_unary::wrapper":"GenericFn","bridge::selfless_reify::reify_to_extern_c_fn_hrt_bridge":"GenericFn","bridge::selfless_reify::reify_to_extern_c_fn_hrt_bridge::wrapper":"GenericFn","bridge::server::<impl bridge::client::Client<(TokenStream, TokenStream), TokenStream>>::run":"GenericFn","bridge::server::<impl bridge::client::Client<TokenStream, TokenStream>>::run":"GenericFn","bridge::server::<impl bridge::rpc::Decode<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s bridge::Marked<<S as bridge::server::Types>::FreeFunctions, bridge::client::FreeFunctions>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::Decode<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s bridge::Marked<<S as bridge::server::Types>::SourceFile, bridge::client::SourceFile>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::Decode<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s bridge::Marked<<S as bridge::server::Types>::TokenStream, bridge::client::TokenStream>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, '_, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::FreeFunctions, bridge::client::FreeFunctions>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, '_, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::SourceFile, bridge::client::SourceFile>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, '_, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::Span, bridge::client::Span>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, '_, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::TokenStream, bridge::client::TokenStream>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s mut bridge::Marked<<S as bridge::server::Types>::FreeFunctions, bridge::client::FreeFunctions>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s mut bridge::Marked<<S as bridge::server::Types>::SourceFile, bridge::client::SourceFile>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::DecodeMut<'_, 's, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for &'s mut bridge::Marked<<S as bridge::server::Types>::TokenStream, bridge::client::TokenStream>>::decode":"GenericFn","bridge::server::<impl bridge::rpc::Encode<bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::FreeFunctions, bridge::client::FreeFunctions>>::encode":"GenericFn","bridge::server::<impl bridge::rpc::Encode<bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::SourceFile, bridge::client::SourceFile>>::encode":"GenericFn","bridge::server::<impl bridge::rpc::Encode<bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::Span, bridge::client::Span>>::encode":"GenericFn","bridge::server::<impl bridge::rpc::Encode<bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::TokenStream, bridge::client::TokenStream>>::encode":"GenericFn","bridge::server::CrossThread":"GenericFn","bridge::server::CrossThread::<P>::new":"GenericFn","bridge::server::FreeFunctions::drop":"GenericFn","bridge::server::HandleStore::<S>::new":"GenericFn","bridge::server::MarkedTypes":"GenericFn","bridge::server::MaybeCrossThread::<P>::new":"GenericFn","bridge::server::SourceFile::clone":"GenericFn","bridge::server::SourceFile::drop":"GenericFn","bridge::server::TokenStream::clone":"GenericFn","bridge::server::TokenStream::drop":"GenericFn","bridge::server::run_server":"GenericFn","bridge::symbol::<impl bridge::rpc::DecodeMut<'_, '_, bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::Symbol, bridge::symbol::Symbol>>::decode":"GenericFn","bridge::symbol::<impl bridge::rpc::Encode<bridge::server::HandleStore<bridge::server::MarkedTypes<S>>> for bridge::Marked<<S as bridge::server::Types>::Symbol, bridge::symbol::Symbol>>::encode":"GenericFn","bridge::symbol::Interner::clear":{"MissingArbitraryImpl":[["self","&mut bridge::symbol::Interner"]]},"bridge::symbol::Interner::get":{"MissingArbitraryImpl":[["self","&bridge::symbol::Interner"],["symbol","bridge::symbol::Symbol"]]},"bridge::symbol::Interner::intern":{"MissingArbitraryImpl":[["self","&mut bridge::symbol::Interner"],["string","&str"]]},"bridge::symbol::Symbol::can_be_raw":{"MissingArbitraryImpl":[["string","&str"]]},"bridge::symbol::Symbol::is_valid_ascii_ident":{"MissingArbitraryImpl":[["bytes","&[u8]"]]},"bridge::symbol::Symbol::new":{"MissingArbitraryImpl":[["string","&str"]]},"bridge::symbol::Symbol::new_ident":{"MissingArbitraryImpl":[["string","&str"]]},"bridge::symbol::Symbol::with":"GenericFn","diagnostic::Children":{"MissingArbitraryImpl":[["_","std::slice::Iter<'_, diagnostic::Diagnostic>"]]},"diagnostic::Diagnostic::children":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::emit":{"MissingArbitraryImpl":[["self","diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::emit::to_internal":{"MissingArbitraryImpl":[["diag","diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::error":"GenericFn","diagnostic::Diagnostic::help":"GenericFn","diagnostic::Diagnostic::level":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::message":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::new":"GenericFn","diagnostic::Diagnostic::note":"GenericFn","diagnostic::Diagnostic::set_level":{"MissingArbitraryImpl":[["self","&mut diagnostic::Diagnostic"],["level","diagnostic::Level"]]},"diagnostic::Diagnostic::set_message":"GenericFn","diagnostic::Diagnostic::set_spans":"GenericFn","diagnostic::Diagnostic::span_error":"GenericFn","diagnostic::Diagnostic::span_help":"GenericFn","diagnostic::Diagnostic::span_note":"GenericFn","diagnostic::Diagnostic::span_warning":"GenericFn","diagnostic::Diagnostic::spanned":"GenericFn","diagnostic::Diagnostic::spans":{"MissingArbitraryImpl":[["self","&diagnostic::Diagnostic"]]},"diagnostic::Diagnostic::warning":"GenericFn","escape::escape_bytes":{"MissingArbitraryImpl":[["bytes","&[u8]"],["opt","escape::EscapeOptions"]]},"escape::escape_single_byte":{"MissingArbitraryImpl":[["opt","escape::EscapeOptions"],["repr","&mut std::string::String"]]},"escape::escape_single_char":{"MissingArbitraryImpl":[["opt","escape::EscapeOptions"],["repr","&mut std::string::String"]]},"quote::quote":{"MissingArbitraryImpl":[["stream","TokenStream"]]},"quote::quote_span":{"MissingArbitraryImpl":[["proc_macro_crate","TokenStream"],["span","Span"]]},"to_tokens::ToTokens::into_token_stream":"GenericFn","to_tokens::ToTokens::to_token_stream":"GenericFn","token_stream::<impl std::iter::IntoIterator for TokenStream>::into_iter":{"MissingArbitraryImpl":[["self","TokenStream"]]},"token_stream::IntoIter":{"MissingArbitraryImpl":[["_","std::vec::IntoIter<bridge::TokenTree<bridge::client::TokenStream, bridge::client::Span, bridge::symbol::Symbol>>"]]},"tracked_env::var":"GenericFn","tracked_path::path":"GenericFn","tree_to_bridge_tree":{"MissingArbitraryImpl":[["tree","TokenTree"]]}}}}