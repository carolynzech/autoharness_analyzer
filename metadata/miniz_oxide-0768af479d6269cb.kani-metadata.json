{"crate_name":"miniz_oxide","proof_harnesses":[{"pretty_name":"MZFlush::new","mangled_name":"_RNvMCsj6v1nDO9Js3_11miniz_oxideNtB2_7MZFlush3new","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/lib.rs","original_start_line":69,"original_end_line":77,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvMCsj6v1nDO9Js3_11miniz_oxideNtB2_7MZFlush3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::HuffmanTable::new","mangled_name":"_RNvMNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB2_12HuffmanTable3new","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":29,"original_end_line":34,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvMNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB2_12HuffmanTable3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::TINFLStatus::from_i32","mangled_name":"_RNvMNtCsj6v1nDO9Js3_11miniz_oxide7inflateNtB2_11TINFLStatus8from_i32","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/mod.rs","original_start_line":65,"original_end_line":77,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvMNtCsj6v1nDO9Js3_11miniz_oxide7inflateNtB2_11TINFLStatus8from_i32_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default","mangled_name":"_RNvXs0_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB5_17DecompressorOxideNtNtCsaTVvHpgSrVj_4core7default7Default7default","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":268,"original_end_line":295,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvXs0_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB5_17DecompressorOxideNtNtCsaTVvHpgSrVj_4core7default7Default7default_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::reverse_bits","mangled_name":"_RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core12reverse_bits","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":691,"original_end_line":700,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core12reverse_bits_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::validate_zlib_header","mangled_name":"_RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core20validate_zlib_headerB5_","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":456,"original_end_line":480,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core20validate_zlib_headerB5__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"<inflate::stream::InflateState as rustc_std_workspace_core::default::Default>::default","mangled_name":"_RNvXs1_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate6streamNtB5_12InflateStateNtNtCsaTVvHpgSrVj_4core7default7Default7default","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/stream.rs","original_start_line":86,"original_end_line":97,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvXs1_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate6streamNtB5_12InflateStateNtNtCsaTVvHpgSrVj_4core7default7Default7default_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::DecompressorOxide::new","mangled_name":"_RNvMs_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB4_17DecompressorOxide3new","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":217,"original_end_line":219,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvMs_NtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4coreNtB4_17DecompressorOxide3new_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::end_of_input","mangled_name":"_RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core12end_of_inputB5_","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":660,"original_end_line":666,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core12end_of_inputB5__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"DataFormat::from_window_bits","mangled_name":"_RNvMs_Csj6v1nDO9Js3_11miniz_oxideNtB4_10DataFormat16from_window_bits","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/lib.rs","original_start_line":160,"original_end_line":166,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvMs_Csj6v1nDO9Js3_11miniz_oxideNtB4_10DataFormat16from_window_bits_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"inflate::core::num_extra_bits_for_distance_code","mangled_name":"_RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core32num_extra_bits_for_distance_code","crate_name":"miniz_oxide","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/miniz_oxide-0.8.3/src/inflate/core.rs","original_start_line":400,"original_end_line":405,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/miniz_oxide-0768af479d6269cb__RNvNtNtCsj6v1nDO9Js3_11miniz_oxide7inflate4core32num_extra_bits_for_distance_code_autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true}],"unsupported_features":[],"test_harnesses":[],"contracted_functions":[],"autoharness_md":{"chosen":["inflate::core::HuffmanTable::new","inflate::core::DecompressorOxide::new","<inflate::core::DecompressorOxide as rustc_std_workspace_core::default::Default>::default","inflate::core::num_extra_bits_for_distance_code","inflate::core::validate_zlib_header","inflate::core::end_of_input","inflate::core::reverse_bits","<inflate::stream::InflateState as rustc_std_workspace_core::default::Default>::default","inflate::TINFLStatus::from_i32","MZFlush::new","DataFormat::from_window_bits"],"skipped":{"<DataFormat as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&DataFormat"]]},"<DataFormat as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&DataFormat"]]},"<DataFormat as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&DataFormat"],["other","&DataFormat"]]},"<DataFormat as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&DataFormat"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<DataFormat as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<MZError as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&MZError"]]},"<MZError as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&MZError"]]},"<MZError as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&MZError"],["other","&MZError"]]},"<MZError as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&MZError"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<MZError as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<MZFlush as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&MZFlush"]]},"<MZFlush as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&MZFlush"]]},"<MZFlush as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&MZFlush"],["other","&MZFlush"]]},"<MZFlush as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&MZFlush"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<MZFlush as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<MZStatus as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&MZStatus"]]},"<MZStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&MZStatus"]]},"<MZStatus as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&MZStatus"],["other","&MZStatus"]]},"<MZStatus as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&MZStatus"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<MZStatus as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<StreamResult as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&StreamResult"]]},"<StreamResult as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&StreamResult"]]},"<StreamResult as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&StreamResult"],["other","&StreamResult"]]},"<StreamResult as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&StreamResult"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<StreamResult as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<impl rustc_std_workspace_core::convert::From<&StreamResult> for rustc_std_workspace_core::result::Result<MZStatus, MZError>>::from":{"MissingArbitraryImpl":[["res","&StreamResult"]]},"<impl rustc_std_workspace_core::convert::From<StreamResult> for rustc_std_workspace_core::result::Result<MZStatus, MZError>>::from":{"MissingArbitraryImpl":[["res","StreamResult"]]},"<inflate::TINFLStatus as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::TINFLStatus"]]},"<inflate::TINFLStatus as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&inflate::TINFLStatus"]]},"<inflate::TINFLStatus as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&inflate::TINFLStatus"],["other","&inflate::TINFLStatus"]]},"<inflate::TINFLStatus as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&inflate::TINFLStatus"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<inflate::TINFLStatus as rustc_std_workspace_core::hash::Hash>::hash":"GenericFn","<inflate::core::DecompressorOxide as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::core::DecompressorOxide"]]},"<inflate::core::HuffmanTable as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::core::HuffmanTable"]]},"<inflate::core::LocalVars as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::core::LocalVars"]]},"<inflate::core::State as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::core::State"]]},"<inflate::core::State as rustc_std_workspace_core::cmp::Eq>::assert_receiver_is_total_eq":{"MissingArbitraryImpl":[["self","&inflate::core::State"]]},"<inflate::core::State as rustc_std_workspace_core::cmp::PartialEq>::eq":{"MissingArbitraryImpl":[["self","&inflate::core::State"],["other","&inflate::core::State"]]},"<inflate::core::State as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&inflate::core::State"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<inflate::output_buffer::InputWrapper<'a> as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::InputWrapper<'_>"]]},"<inflate::stream::FullReset as inflate::stream::ResetPolicy>::reset":{"MissingArbitraryImpl":[["self","&inflate::stream::FullReset"],["state","&mut inflate::stream::InflateState"]]},"<inflate::stream::InflateState as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&inflate::stream::InflateState"]]},"<inflate::stream::MinReset as inflate::stream::ResetPolicy>::reset":{"MissingArbitraryImpl":[["self","&inflate::stream::MinReset"],["state","&mut inflate::stream::InflateState"]]},"<inflate::stream::ZeroReset as inflate::stream::ResetPolicy>::reset":{"MissingArbitraryImpl":[["self","&inflate::stream::ZeroReset"],["state","&mut inflate::stream::InflateState"]]},"DataFormat::to_window_bits":{"MissingArbitraryImpl":[["self","DataFormat"]]},"StreamResult::error":{"MissingArbitraryImpl":[["error","MZError"]]},"inflate::core::Action::End":{"MissingArbitraryImpl":[["_","inflate::TINFLStatus"]]},"inflate::core::Action::Jump":{"MissingArbitraryImpl":[["_","inflate::core::State"]]},"inflate::core::DecompressorOxide::adler32":{"MissingArbitraryImpl":[["self","&inflate::core::DecompressorOxide"]]},"inflate::core::DecompressorOxide::adler32_header":{"MissingArbitraryImpl":[["self","&inflate::core::DecompressorOxide"]]},"inflate::core::DecompressorOxide::init":{"MissingArbitraryImpl":[["self","&mut inflate::core::DecompressorOxide"]]},"inflate::core::HuffmanTable::fast_lookup":{"MissingArbitraryImpl":[["self","&inflate::core::HuffmanTable"]]},"inflate::core::HuffmanTable::lookup":{"MissingArbitraryImpl":[["self","&inflate::core::HuffmanTable"]]},"inflate::core::HuffmanTable::tree_lookup":{"MissingArbitraryImpl":[["self","&inflate::core::HuffmanTable"]]},"inflate::core::State::begin":{"MissingArbitraryImpl":[["self","&mut inflate::core::State"],["new_state","inflate::core::State"]]},"inflate::core::State::is_failure":{"MissingArbitraryImpl":[["self","inflate::core::State"]]},"inflate::core::apply_match":{"MissingArbitraryImpl":[["out_slice","&mut [u8]"]]},"inflate::core::decode_huffman_code":"GenericFn","inflate::core::decompress":{"MissingArbitraryImpl":[["r","&mut inflate::core::DecompressorOxide"],["in_buf","&[u8]"],["out","&mut [u8]"]]},"inflate::core::decompress_fast":{"MissingArbitraryImpl":[["r","&mut inflate::core::DecompressorOxide"],["in_iter","&mut inflate::output_buffer::InputWrapper<'_>"],["out_buf","&mut inflate::output_buffer::OutputBuffer<'_>"],["local_vars","&mut inflate::core::LocalVars"]]},"inflate::core::fill_bit_buffer":{"MissingArbitraryImpl":[["l","&mut inflate::core::LocalVars"],["in_iter","&mut inflate::output_buffer::InputWrapper<'_>"]]},"inflate::core::init_tree":{"MissingArbitraryImpl":[["r","&mut inflate::core::DecompressorOxide"],["l","&mut inflate::core::LocalVars"]]},"inflate::core::pad_to_bytes":"GenericFn","inflate::core::read_bits":"GenericFn","inflate::core::read_byte":"GenericFn","inflate::core::read_u16_le":{"MissingArbitraryImpl":[["iter","&mut inflate::output_buffer::InputWrapper<'_>"]]},"inflate::core::start_static_table":{"MissingArbitraryImpl":[["r","&mut inflate::core::DecompressorOxide"]]},"inflate::core::transfer":{"MissingArbitraryImpl":[["out_slice","&mut [u8]"]]},"inflate::core::undo_bytes":{"MissingArbitraryImpl":[["l","&mut inflate::core::LocalVars"]]},"inflate::decompress_slice_iter_to_slice":"GenericFn","inflate::output_buffer::InputWrapper::<'a>::advance":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::InputWrapper<'_>"]]},"inflate::output_buffer::InputWrapper::<'a>::as_slice":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::InputWrapper<'_>"]]},"inflate::output_buffer::InputWrapper::<'a>::bytes_left":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::InputWrapper<'_>"]]},"inflate::output_buffer::InputWrapper::<'a>::from_slice":{"MissingArbitraryImpl":[["slice","&[u8]"]]},"inflate::output_buffer::InputWrapper::<'a>::read_byte":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::InputWrapper<'_>"]]},"inflate::output_buffer::InputWrapper::<'a>::read_u32_le":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::InputWrapper<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::bytes_left":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::from_slice_and_pos":{"MissingArbitraryImpl":[["slice","&mut [u8]"]]},"inflate::output_buffer::OutputBuffer::<'a>::get_mut":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::get_ref":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::position":{"MissingArbitraryImpl":[["self","&inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::set_position":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::write_byte":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::OutputBuffer<'_>"]]},"inflate::output_buffer::OutputBuffer::<'a>::write_slice":{"MissingArbitraryImpl":[["self","&mut inflate::output_buffer::OutputBuffer<'_>"],["data","&[u8]"]]},"inflate::stream::FullReset":{"MissingArbitraryImpl":[["_","DataFormat"]]},"inflate::stream::InflateState::decompressor":{"MissingArbitraryImpl":[["self","&mut inflate::stream::InflateState"]]},"inflate::stream::InflateState::last_status":{"MissingArbitraryImpl":[["self","&inflate::stream::InflateState"]]},"inflate::stream::InflateState::new":{"MissingArbitraryImpl":[["data_format","DataFormat"]]},"inflate::stream::InflateState::reset":{"MissingArbitraryImpl":[["self","&mut inflate::stream::InflateState"],["data_format","DataFormat"]]},"inflate::stream::InflateState::reset_as":"GenericFn","inflate::stream::inflate":{"MissingArbitraryImpl":[["state","&mut inflate::stream::InflateState"],["input","&[u8]"],["output","&mut [u8]"],["flush","MZFlush"]]},"inflate::stream::inflate_loop":{"MissingArbitraryImpl":[["state","&mut inflate::stream::InflateState"],["next_in","&mut &[u8]"],["next_out","&mut &mut [u8]"],["total_in","&mut usize"],["total_out","&mut usize"],["flush","MZFlush"]]},"inflate::stream::push_dict_out":{"MissingArbitraryImpl":[["state","&mut inflate::stream::InflateState"],["next_out","&mut &mut [u8]"]]},"shared::update_adler32":{"MissingArbitraryImpl":[["data","&[u8]"]]}}}}