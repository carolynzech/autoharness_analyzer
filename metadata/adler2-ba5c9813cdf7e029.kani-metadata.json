{"crate_name":"adler2","proof_harnesses":[{"pretty_name":"<Adler32 as rustc_std_workspace_core::default::Default>::default","mangled_name":"_RNvXs_CsdkFlSyHUz7S_6adler2NtB4_7Adler32NtNtCsaTVvHpgSrVj_4core7default7Default7defaultB4_","crate_name":"adler2","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.0/src/lib.rs","original_start_line":149,"original_end_line":151,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/adler2-ba5c9813cdf7e029__RNvXs_CsdkFlSyHUz7S_6adler2NtB4_7Adler32NtNtCsaTVvHpgSrVj_4core7default7Default7defaultB4__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"algo::U32X4","mangled_name":"_RNcNtNtCsdkFlSyHUz7S_6adler24algo5U32X40B5_","crate_name":"adler2","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.0/src/algo.rs","original_start_line":112,"original_end_line":112,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/adler2-ba5c9813cdf7e029__RNcNtNtCsdkFlSyHUz7S_6adler24algo5U32X40B5__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Adler32::from_checksum","mangled_name":"_RNvMCsdkFlSyHUz7S_6adler2NtB2_7Adler3213from_checksumB2_","crate_name":"adler2","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.0/src/lib.rs","original_start_line":125,"original_end_line":130,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/adler2-ba5c9813cdf7e029__RNvMCsdkFlSyHUz7S_6adler2NtB2_7Adler3213from_checksumB2__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true},{"pretty_name":"Adler32::new","mangled_name":"_RNvMCsdkFlSyHUz7S_6adler2NtB2_7Adler323newB2_","crate_name":"adler2","original_file":"/home/cmzech/.cargo/registry/src/index.crates.io-1949cf8c6b5b557f/adler2-2.0.0/src/lib.rs","original_start_line":95,"original_end_line":97,"goto_file":"/local/home/cmzech/verify-rust-std/target/kani_verify_std/target/x86_64-unknown-linux-gnu/debug/deps/adler2-ba5c9813cdf7e029__RNvMCsdkFlSyHUz7S_6adler2NtB2_7Adler323newB2__autoharness.symtab.out","attributes":{"kind":"Proof","should_panic":false,"solver":null,"unwind_value":null,"stubs":[],"verified_stubs":[]},"contract":null,"has_loop_contracts":false,"is_automatically_generated":true}],"unsupported_features":[],"test_harnesses":[],"contracted_functions":[],"autoharness_md":{"chosen":["Adler32::new","Adler32::from_checksum","<Adler32 as rustc_std_workspace_core::default::Default>::default","algo::U32X4"],"skipped":{"<Adler32 as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&Adler32"]]},"<Adler32 as rustc_std_workspace_core::fmt::Debug>::fmt":{"MissingArbitraryImpl":[["self","&Adler32"],["f","&mut rustc_std_workspace_core::fmt::Formatter<'_>"]]},"<Adler32 as rustc_std_workspace_core::hash::Hasher>::finish":{"MissingArbitraryImpl":[["self","&Adler32"]]},"<Adler32 as rustc_std_workspace_core::hash::Hasher>::write":{"MissingArbitraryImpl":[["self","&mut Adler32"],["bytes","&[u8]"]]},"<algo::U32X4 as rustc_std_workspace_core::clone::Clone>::clone":{"MissingArbitraryImpl":[["self","&algo::U32X4"]]},"<algo::U32X4 as rustc_std_workspace_core::ops::AddAssign>::add_assign":{"MissingArbitraryImpl":[["self","&mut algo::U32X4"],["other","algo::U32X4"]]},"<algo::U32X4 as rustc_std_workspace_core::ops::MulAssign<u32>>::mul_assign":{"MissingArbitraryImpl":[["self","&mut algo::U32X4"]]},"<algo::U32X4 as rustc_std_workspace_core::ops::RemAssign<u32>>::rem_assign":{"MissingArbitraryImpl":[["self","&mut algo::U32X4"]]},"Adler32::checksum":{"MissingArbitraryImpl":[["self","&Adler32"]]},"Adler32::write_slice":{"MissingArbitraryImpl":[["self","&mut Adler32"],["bytes","&[u8]"]]},"adler32_slice":{"MissingArbitraryImpl":[["data","&[u8]"]]},"algo::<impl Adler32>::compute":{"MissingArbitraryImpl":[["self","&mut Adler32"],["bytes","&[u8]"]]},"algo::U32X4::from":{"MissingArbitraryImpl":[["bytes","&[u8]"]]}}}}