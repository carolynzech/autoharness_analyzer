fn_name;inline_assembly;unsafe_dereference;unsafe_call;unsafe_static_access;unsafe_union_access
control::group::sse2::Group::load;0;0;1;0;0
control::group::sse2::Group::load_aligned;0;0;1;0;0
control::group::sse2::Group::store_aligned;0;0;1;0;0
control::group::sse2::Group::match_tag;0;0;3;0;0
control::group::sse2::Group::match_empty_or_deleted;0;0;1;0;0
control::group::sse2::Group::convert_special_to_empty_and_full_to_deleted;0;0;4;0;0
<[control::tag::Tag] as control::tag::TagSliceExt>::fill_tag;0;0;1;0;0
raw::offset_from;0;0;1;0;0
raw::TableLayout::calculate_layout_for;0;0;1;0;0
raw::Bucket::<T>::from_base_index;0;0;2;0;0
raw::Bucket::<T>::to_base_index;0;0;1;0;0
raw::Bucket::<T>::as_ptr;0;0;1;0;0
raw::Bucket::<T>::as_non_null;0;0;1;0;0
raw::Bucket::<T>::next_n;0;0;2;0;0
raw::Bucket::<T>::drop;0;0;1;0;0
raw::Bucket::<T>::read;0;0;1;0;0
raw::Bucket::<T>::write;0;0;1;0;0
raw::Bucket::<T>::as_ref;0;1;0;0;0
raw::Bucket::<T>::as_mut;0;1;0;0;0
raw::RawTable::<T, A>::new_uninitialized;0;0;1;0;0
raw::RawTable::<T, A>::data_start;0;0;1;0;0
raw::RawTable::<T, A>::allocation_size;0;0;1;0;0
raw::RawTable::<T, A>::bucket_index;0;0;1;0;0
raw::RawTable::<T, A>::bucket;0;0;1;0;0
raw::RawTable::<T, A>::erase_no_drop;0;0;2;0;0
raw::RawTable::<T, A>::erase;0;0;2;0;0
raw::RawTable::<T, A>::remove;0;0;3;0;0
raw::RawTable::<T, A>::remove_entry;0;0;1;0;0
raw::RawTable::<T, A>::clear;0;0;1;0;0
raw::RawTable::<T, A>::shrink_to;0;0;4;0;0
raw::RawTable::<T, A>::reserve;0;0;2;0;0
raw::RawTable::<T, A>::try_reserve;0;0;1;0;0
raw::RawTable::<T, A>::reserve_rehash;0;0;1;0;0
raw::RawTable::<T, A>::resize;0;0;1;0;0
raw::RawTable::<T, A>::insert;0;1;4;0;0
raw::RawTable::<T, A>::insert_entry;0;0;1;0;0
raw::RawTable::<T, A>::insert_no_grow;0;0;3;0;0
raw::RawTable::<T, A>::replace_bucket_with;0;1;7;0;0
raw::RawTable::<T, A>::find_or_find_insert_slot;0;0;2;0;0
raw::RawTable::<T, A>::insert_in_slot;0;1;4;0;0
raw::RawTable::<T, A>::find;0;0;2;0;0
raw::RawTable::<T, A>::get;0;0;1;0;0
raw::RawTable::<T, A>::get_mut;0;0;1;0;0
raw::RawTable::<T, A>::get_many_mut;0;0;1;0;0
raw::RawTable::<T, A>::get_many_unchecked_mut;0;0;1;0;0
raw::RawTable::<T, A>::is_bucket_full;0;0;1;0;0
raw::RawTable::<T, A>::iter;0;0;1;0;0
raw::RawTable::<T, A>::iter_hash;0;0;1;0;0
raw::RawTable::<T, A>::drain;0;0;2;0;0
raw::RawTable::<T, A>::into_allocation;0;0;4;0;0
raw::RawTableInner::new;0;0;1;0;0
raw::RawTableInner::new_uninitialized;0;0;2;0;0
raw::RawTableInner::fallible_with_capacity;0;0;1;0;0
raw::RawTableInner::with_capacity;0;0;1;0;0
raw::RawTableInner::fix_insert_slot;0;0;4;0;0
raw::RawTableInner::find_or_find_insert_slot_inner;0;0;4;0;0
raw::RawTableInner::prepare_insert_slot;0;1;3;0;0
raw::RawTableInner::find_insert_slot;0;0;4;0;0
raw::RawTableInner::find_inner;0;0;2;0;0
raw::RawTableInner::prepare_rehash_in_place;0;0;10;0;0
raw::RawTableInner::iter;0;0;2;0;0
raw::RawTableInner::drop_elements;0;0;2;0;0
raw::RawTableInner::drop_inner_table;0;0;2;0;0
raw::RawTableInner::bucket;0;0;1;0;0
raw::RawTableInner::bucket_ptr;0;0;1;0;0
raw::RawTableInner::record_item_insert_at;0;0;1;0;0
raw::RawTableInner::set_ctrl_hash;0;0;1;0;0
raw::RawTableInner::replace_ctrl_hash;0;1;2;0;0
raw::RawTableInner::set_ctrl;0;2;2;0;0
raw::RawTableInner::ctrl;0;0;1;0;0
raw::RawTableInner::ctrl_slice;0;0;1;0;0
raw::RawTableInner::is_bucket_full;0;1;1;0;0
raw::RawTableInner::reserve_rehash_inner;0;0;2;0;0
raw::RawTableInner::full_buckets_indices;0;0;3;0;0
raw::RawTableInner::resize_inner;0;0;5;0;0
raw::RawTableInner::rehash_in_place;0;1;10;0;0
raw::RawTableInner::free_buckets;0;0;2;0;0
raw::RawTableInner::allocation_info;0;0;3;0;0
raw::RawTableInner::allocation_size_or_zero;0;0;1;0;0
raw::RawTableInner::erase;0;0;6;0;0
<raw::RawTable<T, A> as rustc_std_workspace_core::clone::Clone>::clone;0;0;3;0;0
<raw::RawTable<T, A> as rustc_std_workspace_core::clone::Clone>::clone_from;0;0;6;0;0
<raw::RawTable<T, A> as raw::RawTableClone>::clone_from_spec;0;0;1;0;0
<raw::RawTable<T, A> as raw::RawTableClone>::clone_from_spec;0;0;6;0;0
raw::RawTable::<T, A>::clone_from_impl;0;0;8;0;0
<raw::RawTable<T, A> as rustc_std_workspace_core::ops::Drop>::drop;0;0;1;0;0
<raw::RawTable<T, A> as rustc_std_workspace_core::iter::IntoIterator>::into_iter;0;0;2;0;0
raw::RawIterRange::<T>::new;0;0;3;0;0
raw::RawIterRange::<T>::next_impl;0;0;4;0;0
raw::RawIterRange::<T>::fold_impl;0;0;4;0;0
<raw::RawIterRange<T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<raw::RawIterRange<T> as rustc_std_workspace_core::iter::Iterator>::size_hint;0;0;1;0;0
raw::RawIter::<T>::drop_elements;0;0;1;0;0
<raw::RawIter<T> as rustc_std_workspace_core::default::Default>::default;0;0;1;0;0
<raw::RawIter<T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<raw::RawIter<T> as rustc_std_workspace_core::iter::Iterator>::fold;0;0;1;0;0
raw::FullBucketsIndices::next_impl;0;0;3;0;0
<raw::FullBucketsIndices as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<raw::RawIntoIter<T, A> as rustc_std_workspace_core::ops::Drop>::drop;0;0;2;0;0
<raw::RawIntoIter<T, A> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<raw::RawDrain<'_, T, A> as rustc_std_workspace_core::ops::Drop>::drop;0;0;2;0;0
<raw::RawDrain<'_, T, A> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
raw::RawIterHash::<T>::new;0;0;1;0;0
<raw::RawIterHash<T> as rustc_std_workspace_core::default::Default>::default;0;0;1;0;0
raw::RawIterHashInner::new;0;0;2;0;0
<raw::RawIterHash<T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<raw::RawIterHashInner as rustc_std_workspace_core::iter::Iterator>::next;0;0;2;0;0
raw::RawExtractIf::<'_, T, A>::next;0;0;2;0;0
map::HashMap::<K, V, S, A>::iter;0;0;1;0;0
map::HashMap::<K, V, S, A>::iter_mut;0;0;1;0;0
map::HashMap::<K, V, S, A>::retain;0;0;3;0;0
map::HashMap::<K, V, S, A>::extract_if;0;0;1;0;0
map::HashMap::<K, V, S, A>::get_many_unchecked_mut;0;0;1;0;0
map::HashMap::<K, V, S, A>::get_many_key_value_unchecked_mut;0;0;1;0;0
map::HashMap::<K, V, S, A>::get_many_unchecked_mut_inner;0;0;1;0;0
map::HashMap::<K, V, S, A>::insert;0;0;2;0;0
map::HashMap::<K, V, S, A>::insert_unique_unchecked;0;0;1;0;0
<map::Iter<'a, K, V> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<map::IterMut<'a, K, V> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::key;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::remove_entry;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::get;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::get_mut;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::into_mut;0;0;1;0;0
map::OccupiedEntry::<'a, K, V, S, A>::replace_entry_with;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::key;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::key_mut;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::into_key;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::get;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::into_mut;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::get_mut;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::get_key_value;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::get_key_value_mut;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::into_key_value;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::remove_entry;0;0;1;0;0
raw_entry::RawOccupiedEntryMut::<'a, K, V, S, A>::replace_entry_with;0;0;1;0;0
rustc_entry::RustcOccupiedEntry::<'a, K, V, A>::key;0;0;1;0;0
rustc_entry::RustcOccupiedEntry::<'a, K, V, A>::remove_entry;0;0;1;0;0
rustc_entry::RustcOccupiedEntry::<'a, K, V, A>::get;0;0;1;0;0
rustc_entry::RustcOccupiedEntry::<'a, K, V, A>::get_mut;0;0;1;0;0
rustc_entry::RustcOccupiedEntry::<'a, K, V, A>::into_mut;0;0;1;0;0
rustc_entry::RustcVacantEntry::<'a, K, V, A>::insert;0;0;2;0;0
rustc_entry::RustcVacantEntry::<'a, K, V, A>::insert_entry;0;0;1;0;0
scopeguard::ScopeGuard::<T, F>::into_inner;0;0;2;0;0
set::HashSet::<T, S, A>::extract_if;0;0;1;0;0
set::HashSet::<T, S, A>::get_or_insert;0;0;2;0;0
set::HashSet::<T, S, A>::get_or_insert_with;0;0;2;0;0
set::HashSet::<T, S, A>::insert_unique_unchecked;0;0;1;0;0
set::HashSet::<T, S, A>::replace;0;0;2;0;0
<set::HashSet<T, S, A> as rustc_std_workspace_core::ops::BitXorAssign<&set::HashSet<T, S, A>>>::bitxor_assign;0;0;2;0;0
table::HashTable::<T, A>::iter;0;0;1;0;0
table::HashTable::<T, A>::iter_mut;0;0;1;0;0
table::HashTable::<T, A>::iter_hash;0;0;1;0;0
table::HashTable::<T, A>::iter_hash_mut;0;0;1;0;0
table::HashTable::<T, A>::retain;0;0;3;0;0
table::HashTable::<T, A>::extract_if;0;0;1;0;0
table::HashTable::<T, A>::get_many_unchecked_mut;0;0;1;0;0
table::OccupiedEntry::<'a, T, A>::remove;0;0;1;0;0
table::OccupiedEntry::<'a, T, A>::get;0;0;1;0;0
table::OccupiedEntry::<'a, T, A>::get_mut;0;0;1;0;0
table::OccupiedEntry::<'a, T, A>::into_mut;0;0;1;0;0
table::VacantEntry::<'a, T, A>::insert;0;0;1;0;0
<table::Iter<'a, T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<table::IterMut<'a, T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<table::IterHash<'a, T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
<table::IterHashMut<'a, T> as rustc_std_workspace_core::iter::Iterator>::next;0;0;1;0;0
