name;is_unsafe;has_unsafe_ops;has_unsupported_input;has_loop_or_iterator
num::<impl u8>::overflowing_shr;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipFmt<A, B>>::fmt;false;false;true;false
num::nonzero::NonZero::<i128>::isolate_least_significant_one;false;true;false;false
<(K, J, I, H, G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
sync::atomic::AtomicI16::store;false;true;true;false
num::<impl i8>::saturating_add;false;false;false;false
num::<impl u8>::is_ascii_uppercase;false;false;false;false
num::<impl isize>::strict_add;false;false;false;false
core_arch::x86::avx512f::_mm256_load_epi64;true;true;true;false
core_arch::x86::avx512bw::_ktestc_mask32_u8;true;true;false;false
core_arch::x86::avx512f::_mm_cvttsd_u32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_castps_ph;true;false;true;false
num::<impl u16>::strict_rem;false;false;false;false
core_arch::x86::avx512bf16::_mm512_cvtne2ps_pbh;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_srli_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_rol_epi32;true;true;false;false
<num::saturating::Saturating<usize> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<isize as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<u32 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
panicking::panic_nounwind;false;false;false;false
<slice::iter::RSplit<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_simd::ops::deref::<impl ops::arith::Mul<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::mul;false;false;false;false
num::<impl i16>::unchecked_neg;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_sub_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_loadu_ps;true;true;true;false
core_arch::x86::gfni::_mm_mask_gf2p8mul_epi8;true;true;false;false
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
net::ip_addr::Ipv6Addr::is_benchmarking;false;false;false;false
<isize as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
num::nonzero::NonZero::<u16>::swap_bytes;false;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_min_epu8;true;true;false;false
<num::flt2dec::decoder::FullDecoded as cmp::PartialEq>::eq;false;false;true;false
<char::ToUppercase as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl i64>::wrapping_pow;false;false;false;true
error::Tagged::<(dyn error::Erased<'a> + 'a)>::downcast_mut;false;true;true;false
core_arch::x86::sse2::_mm_min_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_test_epi32_mask;true;true;false;false
num::niche_types::NonZeroI128Inner::new_unchecked;true;false;false;false
<&num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl;false;false;false;false
iter::adapters::intersperse::intersperse_size_hint;false;false;false;false
num::wrapping::Wrapping::<i32>::swap_bytes;false;false;false;false
core_arch::x86::sse41::_mm_floor_sd;true;true;true;false
num::<impl u32>::count_ones;false;false;false;false
num::<impl usize>::div_floor;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::get;false;true;false;false
<&'a u32 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_subs_epu8;true;true;false;false
core_arch::simd::u8x16::splat;false;true;false;false
<i128 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<&num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul;false;false;false;false
core_arch::x86::sse::_mm_cmpneq_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_min_epu8;true;true;false;false
tuple::<impl cmp::PartialOrd for (Z, Y, X, W, V, U, T)>::lt;false;false;false;false
char::EscapeDebug::backslash;false;false;false;false
slice::iter::SplitN::<'a, T, P>::new;false;false;true;false
core_arch::x86::sse2::_mm_castsi128_pd;true;false;false;false
num::nonzero::NonZero::<T>::new_unchecked::precondition_check;false;false;false;false
<num::saturating::Saturating<usize> as ops::bit::BitOr>::bitor;false;false;false;false
<task::poll::Poll<result::Result<T, E>> as ops::try_trait::Try>::branch;false;false;true;false
ops::drop::fallback_surface_drop;false;false;true;false
<&num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add;false;false;false;false
task::wake::Waker::wake_by_ref;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_permutevar_pd;true;true;true;false
num::<impl i32>::overflowing_rem;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::Sub>::sub;false;false;false;false
cmp::PartialEq::ne;false;false;false;false
<i32 as ops::arith::Div>::div;false;false;false;false
num::<impl usize>::is_power_of_two;false;false;false;false
num::<impl u32>::unbounded_shr;false;true;false;false
<i128 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
num::<impl i8>::isolate_least_significant_one;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
num::saturating::Saturating::<usize>::is_power_of_two;false;false;false;false
<cmp::Ordering as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
sync::atomic::AtomicI64::compare_and_swap;false;false;true;false
core_arch::x86::sse::_mm_cmpnge_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask3_fmsub_sd;true;true;true;false
<i16 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_broadcastd_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_sll_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_rcp14_ps;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
<f32 as iter::traits::accum::Sum<&'a f32>>::sum;false;false;false;true
tuple::<impl cmp::PartialOrd for (W, V, U, T)>::ge;false;false;false;false
core_arch::x86::avx512f::_mm_roundscale_ss;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::arith::Add>::add;false;false;false;false
num::saturating::Saturating::<i16>::trailing_zeros;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<u32 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::iterator::Iterator>::next;false;false;true;false
<&'a usize as ops::bit::BitXor<usize>>::bitxor;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<core_arch::x86::__m256h as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_or_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_kandn;true;true;false;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_storeu_epi32;true;true;true;false
<num::wrapping::Wrapping<T> as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_ternarylogic_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_getmant_pd;true;true;true;false
slice::<impl [T]>::partition_dedup_by;false;true;true;true
<num::flt2dec::decoder::Decoded as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr;false;false;false;false
<num::niche_types::NonZeroI8Inner as hash::Hash>::hash;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul;false;false;false;false
num::nonzero::NonZero::<i64>::isolate_most_significant_one;false;true;false;false
intrinsics::sub_with_overflow;false;false;false;false
<u8 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<num::FpCategory as fmt::Debug>::fmt;false;false;true;false
num::<impl u32>::strict_add_signed;false;false;false;false
fmt::Formatter::<'a>::sign_minus;false;false;true;false
<&'a u64 as ops::bit::BitXor<u64>>::bitxor;false;false;false;false
<option::Iter<'a, A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
str::count::count_chars;false;false;false;false
cmp::impls::<impl cmp::PartialEq<&B> for &A>::eq;false;false;false;false
<u128 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<&'a i64 as ops::bit::Shr<i128>>::shr;false;false;false;false
<core_arch::simd::u32x16 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_compressstoreu_pd;true;true;true;false
core_arch::x86::avx::_mm_maskstore_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_cvtepi8_epi16;true;true;false;false
core_arch::x86::avx512vbmi::_mm512_maskz_permutexvar_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_fmadd_round_pch;true;true;true;false
ptr::alignment::Alignment::of;false;false;false;false
ptr::const_ptr::<impl *const T>::byte_offset_from;true;true;true;false
<&u64 as ops::arith::Add<&u64>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtsi512_si32;true;true;false;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<iter::adapters::scan::Scan<I, St, F> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_expand_epi32;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&num::wrapping::Wrapping<i8>>>::rem_assign;false;false;true;false
<i32 as ops::bit::Shr<i128>>::shr;false;false;false;false
intrinsics::atomic_fence_seqcst;true;false;false;false
core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_cvtepi64_ps;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_loadu_epi64;true;true;true;false
<&'a num::saturating::Saturating<isize> as ops::arith::Add<num::saturating::Saturating<isize>>>::add;false;false;false;false
num::dec2flt::decimal_seq::DecimalSeq::try_add_digit;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<i32>>::div_assign;false;false;true;false
core_arch::x86::avx512bitalg::_mm512_popcnt_epi8;true;true;false;false
core_arch::x86::sse::_mm_movelh_ps;true;true;true;false
<f64 as convert::num::FloatToInt<isize>>::to_int_unchecked;true;true;true;false
iter::traits::iterator::Iterator::lt;false;false;false;false
<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
<slice::iter::RChunksExact<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_getmant_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_getmant_round_sh;true;true;true;false
core_simd::fmt::<impl fmt::Debug for core_simd::vector::Simd<T, N>>::fmt;false;false;true;false
<i8 as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx512bw::_mm512_shufflelo_epi16;true;true;false;false
core_arch::simd::u64x4::splat::JustOne;false;false;false;false
option::Option::<T>::zip;false;false;true;false
<Iter as iter::traits::collect::TraitJ<EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
<&'a i32 as ops::bit::Shl<usize>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_next;false;false;true;false
<str::iter::EncodeUtf16<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::flatten::Flatten<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
panic::abort_unwind;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmple_epu64_mask;true;true;false;false
core_arch::x86::xsave::_xgetbv;true;true;false;false
<f64 as ops::arith::SubAssign<&f64>>::sub_assign;false;false;true;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
core_arch::x86::avx512f::_mm512_mask3_fmaddsub_round_ps;true;true;true;false
str::pattern::CharArrayRefSearcher;false;false;false;false
<usize as ops::bit::Shr<i32>>::shr;false;false;false;false
<u16 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_min_round_sh;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_set1_epi16;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_sum;false;true;false;false
num::nonzero::NonZero::<u128>::saturating_mul;false;true;false;false
tuple::<impl cmp::PartialOrd for (C, B, A, Z, Y, X, W, V, U, T)>::lt;false;false;false;false
core_arch::x86::avx512f::_mm_mask_max_epi64;true;true;false;false
<iter::adapters::copied::Copied<I> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;false;false
<&'a num::wrapping::Wrapping<u128> as ops::bit::BitAnd<num::wrapping::Wrapping<u128>>>::bitand;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul;false;false;false;false
num::<impl i32>::checked_isqrt;false;true;false;false
<u128 as iter::range::Step>::forward_checked;false;false;false;false
<net::socket_addr::SocketAddrV4 as cmp::Ord>::cmp;false;false;false;false
<sync::atomic::AtomicI32 as default::Default>::default;false;false;false;false
core_arch::x86_64::avx512fp16::_mm_cvttsh_i64;true;true;true;false
<num::nonzero::NonZero<isize> as str::traits::FromStr>::from_str;false;false;false;false
num::<impl i32>::wrapping_div_euclid;false;false;false;false
num::niche_types::NonZeroUsizeInner::new;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_ph;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvtsd_i64;true;true;true;false
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<core_arch::simd::i8x64 as cmp::PartialEq>::eq;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::abs;false;false;false;false
<i8 as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_mul_ps;true;true;true;false
result::Result::<T, E>::map_or;false;false;true;false
core_arch::x86::avx512f::_mm512_zextps256_ps512;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_min_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmplt_epu16_mask;true;true;false;false
num::<impl i128>::wrapping_neg;false;false;false;false
"<&'b [char; N] as str::pattern::Pattern>::is_suffix_of";false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 2>> for core_arch::x86::__m128i>::from;false;false;false;false
<str::iter::Matches<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<i16 as ops::bit::Shl<i64>>::shl;false;false;false;false
<char::convert::ParseCharError as fmt::Debug>::fmt;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::index;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpneq_epu64_mask;true;true;false;false
hash::impls::<impl hash::Hash for ()>::hash;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu32;true;true;true;false
num::<impl i16>::saturating_pow;false;false;false;false
core_arch::x86::avx512f::_mm512_i32scatter_epi32;true;true;true;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<i16, N>>::bitxor;false;true;false;false
result::Result::<T, E>::as_mut;false;false;true;false
iter::adapters::map_while::MapWhile::<I, P>::new;false;false;false;false
<u64 as pat::RangePattern>::sub_one;false;false;false;false
sync::atomic::AtomicI64::fetch_sub;false;true;true;false
<fmt::DebugAsHex as clone::Clone>::clone;false;false;false;false
convert::num::<impl convert::TryFrom<i64> for u16>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_or_si512;true;true;false;false
future::async_drop::AsyncDropInPlace;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl;false;false;false;false
num::wrapping::Wrapping::<i32>::to_le;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_adds_epu8;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask2_permutex2var_epi16;true;true;false;false
<num::saturating::Saturating<usize> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::RemAssign>::rem_assign;false;false;true;false
net::parser::Parser::<'a>::peek_char;false;false;false;false
ptr::mut_ptr::<impl cmp::PartialOrd for *mut T>::le;false;false;true;false
<cell::SyncUnsafeCell<T> as fmt::Debug>::fmt;false;false;true;false
<slice::iter::IterMut<'_, T> as fmt::Debug>::fmt;false;false;true;false
alloc::layout::Layout::max_size_for_align;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::saturating_abs;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
ops::range::RangeInclusive::<Idx>::new;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_andnot_epi64;true;true;false;false
num::nonzero::NonZero::<isize>::overflowing_neg;false;true;false;false
<&num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand;false;false;false;false
<&'a i16 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmsubadd_ps;true;true;true;false
<&i32 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<num::nonzero::NonZero<T> as clone::Clone>::clone;false;false;true;false
<core_arch::simd::u16x4 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_add_pd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::copy_from;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
<slice::iter::IterMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_or_ps;true;true;true;false
<u64 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
sync::atomic::AtomicI16::as_ptr;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi8;true;true;false;false
intrinsics::add_with_overflow;false;false;false;false
<convert::Infallible as convert::From<!>>::from;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srli_epi64;true;true;false;false
intrinsics::compare_bytes;true;false;true;false
core_arch::x86::avx512f::_mm512_mask3_fmaddsub_round_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvttph_epu64;true;true;true;false
num::<impl i64>::trailing_ones;false;false;false;false
core_arch::x86::avx2::_mm256_avg_epu8;true;true;false;false
num::wrapping::Wrapping::<isize>::to_be;false;false;false;false
<i8 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
<&'a u32 as ops::bit::Shr<i64>>::shr;false;false;false;false
<&'a u8 as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvtsi16_si128;true;true;false;false
<&'a num::wrapping::Wrapping<u64> as ops::bit::BitAnd<num::wrapping::Wrapping<u64>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fmul_pch;true;true;true;false
convert::num::<impl convert::From<u8> for i16>::from;false;false;false;false
core_arch::x86::avx512f::_mm_min_round_ss;true;true;true;false
num::<impl u32>::strict_add;false;false;false;false
core_arch::x86::avx512f::_mm_mask_rorv_epi32;true;true;false;false
num::nonzero::NonZero::<usize>::isqrt;false;true;false;false
<result::IntoIter<T> as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicIsize::fetch_update;false;false;true;true
core_arch::simd::i64x1::extract;false;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_getexp_round_ph;true;true;true;false
<u128 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
num::<impl i32>::unchecked_shl::precondition_check;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_min_round_ph;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu16_mask;true;true;false;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;true
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::is_positive;false;false;false;false
core_arch::x86::sse42::_mm_cmpistrs;true;true;false;false
<u16 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpgt_epu32_mask;true;true;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_round_ss;true;true;true;false
num::<impl u64>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_cvttps_epi64;true;true;true;false
<option::Option<T> as clone::Clone>::clone_from;false;false;true;false
slice::sort::unstable::heapsort::sift_down;true;true;true;true
num::<impl i8>::wrapping_add;false;false;false;false
core_arch::x86::__m128::as_mut_array;false;true;true;false
core_arch::x86::avx2::_mm256_shuffle_epi32;true;true;false;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::sse2::_mm_andnot_si128;true;true;false;false
<core_arch::simd::f64x2 as cmp::PartialEq>::eq;false;false;true;false
<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign;false;false;true;false
<str::IsNotEmpty as ops::function::FnMut<(&'a &'b str,)>>::call_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_expand_epi64;true;true;false;false
<core_arch::simd::u16x8 as clone::Clone>::clone;false;false;false;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;true;true;false
core_arch::x86::sse::_mm_comineq_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_ph;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
<str::LinesMap as ops::function::FnMut<(&'a str,)>>::call_mut;false;false;true;false
sync::atomic::AtomicU64::fetch_min;false;true;true;false
<&'a i16 as ops::bit::BitXor<i16>>::bitxor;false;false;false;false
ops::try_trait::Yeet;false;false;false;false
<net::parser::AddrParseError as fmt::Debug>::fmt;false;false;true;false
num::<impl i16>::unsigned_abs;false;false;false;false
<&'a i64 as ops::arith::Rem<i64>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm256_mmask_i32gather_pd;true;true;true;false
intrinsics::caller_location;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_min_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtph_epu16;true;true;true;false
ffi::va_list::VaListImpl::<'f>::as_va_list;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fmsubadd_ps;true;true;true;false
intrinsics::three_way_compare;false;false;false;false
<char::convert::CharTryFromError as error::Error>::description;false;false;false;false
error::Tagged::<error::TaggedOption<'a, I>>::as_request;false;true;true;false
core_arch::x86::vaes::_mm512_aesenc_epi128;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
str::iter::Lines;false;false;true;false
core_arch::x86::avx512dq::_kadd_mask16;true;false;false;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::avx2::_mm256_i64gather_epi32;true;true;true;false
core_arch::simd::u32x4::splat::JustOne;false;false;false;false
intrinsics::unlikely;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign;false;false;true;false
<&'a isize as ops::arith::Rem<isize>>::rem;false;false;false;false
core_arch::x86::sse41::_mm_min_epu32;true;true;false;false
<i16 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::rposition;false;true;true;true
cmp::impls::<impl cmp::PartialEq for i8>::eq;false;false;false;false
core_arch::simd::i8x32::splat::JustOne;false;false;false;false
iter::range::Step::forward;false;false;false;false
num::<impl u16>::strict_neg;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i64>::try_from;false;false;false;false
<num::niche_types::NonZeroUsizeInner as hash::Hash>::hash;false;false;true;false
<panic::panic_info::PanicInfo<'a> as fmt::Debug>::fmt;false;false;true;false
f32::<impl f32>::next_down;false;false;true;false
<bool as random::Random>::random;false;false;true;false
<core_arch::simd::i32x32 as fmt::Debug>::fmt;false;false;true;false
intrinsics::simd::simd_reduce_or;true;false;false;false
<num::wrapping::Wrapping<T> as cmp::Ord>::cmp;false;false;true;false
"array::<impl cmp::PartialOrd for [T; N]>::lt";false;false;false;false
fmt::num::<impl fmt::Binary for isize>::fmt;false;false;true;false
intrinsics::simd::simd_round;true;false;false;false
num::dec2flt::fpu::fpu_precision::set_precision;false;false;false;false
<i8 as ops::bit::Shr<i128>>::shr;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<option::Option<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
ptr::const_ptr::<impl *const T>::byte_sub;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtpd_epi32;true;true;true;false
<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv6Addr>>::partial_cmp;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_sd;true;true;true;false
num::nonzero::NonZero::<u16>::from_be;false;true;false;false
num::<impl u8>::overflowing_rem;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_i64scatter_pd;true;true;true;false
num::wrapping::Wrapping::<u8>::to_be;false;false;false;false
num::nonzero::NonZero::<i128>::rotate_left;false;true;false;false
<i8 as ops::bit::Shr<&i8>>::shr;false;false;false;false
sync::atomic::atomic_and;true;true;true;false
<num::wrapping::Wrapping<isize> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<&'a i64 as ops::bit::Shl<u16>>::shl;false;false;false;false
<&i64 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<u128 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem;false;false;false;false
<[mem::maybe_uninit::MaybeUninit<T>]>::assume_init_ref;true;true;false;false
<&'a u32 as ops::bit::Shr<i16>>::shr;false;false;false;false
<Iter as iter::traits::collect::TraitA<EA>>::extend;false;false;true;true
<str::pattern::CharSearcher<'a> as fmt::Debug>::fmt;false;false;true;false
<num::niche_types::NonZeroUsizeInner as fmt::Debug>::fmt;false;false;true;false
<&'a num::saturating::Saturating<u128> as ops::arith::Sub<num::saturating::Saturating<u128>>>::sub;false;false;false;false
str::lossy::Utf8Chunk::<'a>::invalid;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmple_epu8_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_packs_epi32;true;true;false;false
<net::socket_addr::SocketAddrV6 as hash::Hash>::hash;false;false;true;false
num::<impl u16>::checked_neg;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
num::int_sqrt::i8;true;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_sub_sh;true;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
core_arch::x86::avx512fp16::_mm512_getmant_ph;true;true;true;false
fmt::num::<impl fmt::Display for u128>::fmt;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<u16, N>> for core_simd::vector::Simd<u16, N>>::product;false;false;false;true
<&num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add;false;false;false;false
<u32 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<cell::once::OnceCell<T> as convert::From<T>>::from;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::saturating_abs;false;false;false;false
core_arch::x86::avx::_mm256_castps_pd;true;false;true;false
core_arch::x86::avx512fp16::_mm_getmant_ph;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_reduce_min_epu64;true;true;false;false
<i32 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_sll_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_cmp_round_sh_mask;true;true;true;false
f16::<impl f16>::next_up;false;false;true;false
num::<impl i32>::checked_ilog2;false;true;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi64;true;true;false;false
<&i128 as ops::arith::Sub<&i128>>::sub;false;false;false;false
num::<impl u64>::isolate_least_significant_one;false;false;false;false
<str::iter::SplitWhitespace<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx2::_mm256_unpackhi_epi8;true;true;false;false
net::ip_addr::Ipv4Addr::is_shared;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_div_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fnmsub_sh;true;true;true;false
<f64 as ops::arith::Sub<&f64>>::sub;false;false;true;false
<&'a num::wrapping::Wrapping<i128> as ops::bit::BitOr<num::wrapping::Wrapping<i128>>>::bitor;false;false;false;false
<i128 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<u8>>::sub_assign;false;false;true;false
<&'a num::wrapping::Wrapping<usize> as ops::arith::Sub<num::wrapping::Wrapping<usize>>>::sub;false;false;false;false
<u16 as ops::bit::Shl<usize>>::shl;false;false;false;false
<char as str::pattern::Pattern>::is_contained_in;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<i32, N>> for core_simd::vector::Simd<i32, N>>::product;false;false;false;true
core_arch::x86::avx512bw::_mm256_testn_epi8_mask;true;true;false;false
<&num::nonzero::NonZero<i64> as ops::arith::Neg>::neg;false;false;false;false
num::<impl usize>::wrapping_sub_signed;false;false;false;false
<char::EscapeDebug as fmt::Debug>::fmt;false;false;true;false
<[mem::maybe_uninit::MaybeUninit<T>]>::assume_init_mut;true;true;true;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutex_pd;true;true;true;false
core_arch::x86::sse2::_mm_min_epi16;true;true;false;false
<hash::sip::SipHasher24 as default::Default>::default;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundpd_epi64;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_cvtusepi16_epi8;true;true;false;false
<i16 as ops::arith::MulAssign<&i16>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_sllv_epi16;true;true;false;false
num::<impl i16>::saturating_add_unsigned;false;false;false;false
num::<impl u128>::saturating_sub_signed;false;false;false;false
<i16 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
<&'a u64 as ops::bit::BitOr<u64>>::bitor;false;false;false;false
f128::<impl f128>::is_subnormal;false;false;true;false
num::<impl i8>::from_le;false;false;false;false
core_arch::simd::m16x8;false;false;false;false
<i64 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
num::<impl usize>::trailing_zeros;false;false;false;false
core_arch::x86::fma::_mm256_fmsubadd_ps;true;true;true;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<i16, N>>::shl;false;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cmplt_epu16_mask;true;true;false;false
num::<impl isize>::wrapping_div_euclid;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for u64>::gt;false;false;false;false
num::nonzero::NonZero::<u64>::isolate_most_significant_one;false;true;false;false
<net::parser::AddrKind as cmp::PartialEq>::eq;false;false;false;false
fmt::FormattingOptions::align;false;false;true;false
num::wrapping::Wrapping::<i16>::is_positive;false;false;false;false
slice::sort::stable::drift::create_run;false;false;true;false
unicode::unicode_data::grapheme_extend::lookup;false;false;false;false
core_arch::x86::sse::_MM_SET_EXCEPTION_MASK;true;true;false;false
core_arch::x86::avx::_mm256_set_ps;true;true;true;false
core_arch::x86::sse4a::_mm_extract_si64;true;true;false;false
<core_arch::simd::i16x8 as fmt::Debug>::fmt;false;false;true;false
<&u32 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<u32 as iter::range::Step>::forward;false;false;false;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
num::int_sqrt::u64_stages;false;true;false;false
<&'a num::wrapping::Wrapping<i128> as ops::arith::Sub<num::wrapping::Wrapping<i128>>>::sub;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&usize> for &'lhs core_simd::vector::Simd<usize, N>>::shl;false;false;false;false
char::EscapeUnicode::new;false;false;false;false
unicode::unicode_data::decode_prefix_sum;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_permutex2var_ps;true;true;true;false
core_arch::simd::i32x2;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::SubAssign<&num::saturating::Saturating<u32>>>::sub_assign;false;false;true;false
time::Duration::from_secs_f64;false;false;true;false
core_arch::x86::rtm::_xend;true;true;false;false
core_arch::x86::avx512f::_mm512_mask3_fmsub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm_fixupimm_ss;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for u8>::gt;false;false;false;false
<u128 as ops::bit::BitXorAssign<&u128>>::bitxor_assign;false;false;true;false
<u8 as ops::bit::Shl<&u16>>::shl;false;false;false;false
num::<impl i16>::to_le;false;false;false;false
num::<impl i8>::strict_rem;false;false;false;false
<i16 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
core_arch::x86::fma::_mm_fmaddsub_ps;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::simd_clamp;false;false;true;false
num::<impl i64>::overflowing_mul;false;false;false;false
<iter::sources::once::Once<T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<usize as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi32;true;true;false;false
<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
fmt::FormattingOptions::get_flags;false;false;true;false
core_arch::x86::__m256bh::splat;false;true;false;false
convert::num::<impl convert::TryFrom<usize> for isize>::try_from;false;false;false;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
str::converts::from_utf8_unchecked_mut;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem;false;false;false;false
tuple::<impl cmp::PartialOrd for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::ge;false;false;false;false
intrinsics::forget;false;false;false;false
num::<impl u32>::overflowing_rem_euclid;false;false;false;false
num::<impl u16>::checked_div;false;false;false;false
num::<impl usize>::checked_rem;false;false;false;false
<isize as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<i64 as ops::bit::Shr<i8>>::shr;false;false;false;false
<hash::sip::Sip24Rounds as hash::sip::Sip>::c_rounds;false;false;true;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::rposition;false;false;true;true
core_arch::x86::avx512f::_mm_cvtepu32_pd;true;true;false;false
<core_simd::masks::mask_impl::Mask<T, N> as ops::bit::BitOr>::bitor;false;true;true;false
<T as borrow::Borrow<T>>::borrow;false;false;false;false
f128::<impl f128>::from_ne_bytes;false;false;false;false
<future::async_drop::Fuse<T> as future::future::Future>::poll;false;true;true;false
core_arch::x86::avx512fp16::_mm256_cvttph_epi64;true;true;true;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<&i128 as ops::bit::Shl<&usize>>::shl;false;false;false;false
num::<impl i16>::wrapping_abs;false;false;false;false
num::<impl i32>::wrapping_sub;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&i32>>::div_assign;false;false;true;false
<pin::Pin<Ptr> as ops::deref::DerefMut>::deref_mut;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign;false;false;true;false
core_arch::x86::sse::_mm_shuffle_ps;true;true;true;false
core_arch::x86::avx::_mm_maskload_ps;true;true;true;false
<core_arch::simd::i8x4 as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::reduce_product;false;true;true;false
<ascii::ascii_char::AsciiChar as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_scalef_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvttph_epu16;true;true;true;false
f32::<impl f32>::classify;false;false;true;false
str::converts::from_utf8_mut;false;true;true;false
<&'a u128 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<f32, N>> for core_simd::vector::Simd<f32, N>>::sum;false;false;false;true
<f128 as ops::arith::Sub<&f128>>::sub;false;false;true;false
ops::index_range::IndexRange::start;false;false;true;false
iter::adapters::flatten::Flatten::<I>::new;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fixupimm_round_pd;true;true;true;false
<&u16 as ops::bit::Shr<&i16>>::shr;false;false;false;false
cell::Cell::<T>::take;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
num::wrapping::Wrapping::<u16>::leading_zeros;false;false;false;false
num::<impl i16>::overflowing_add;false;false;false;false
iter::traits::iterator::Iterator::partition_in_place;false;false;false;true
"array::<impl cmp::PartialOrd for [T; N]>::gt";false;false;false;false
intrinsics::simd::simd_shr;true;false;false;false
<u32 as ops::arith::Add<&u32>>::add;false;false;false;false
iter::traits::iterator::Iterator::eq_by::compare;false;false;false;false
num::<impl u64>::div_ceil;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fmadd_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi16;true;true;true;false
<iter::sources::once_with::OnceWith<F> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_or_pd;true;true;true;false
num::<impl u64>::checked_sub;false;false;false;false
<&num::saturating::Saturating<i32> as ops::arith::Neg>::neg;false;false;false;false
<&'a num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl;false;false;false;false
<isize as ops::bit::BitOr<&isize>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_andnot_epi64;true;true;false;false
core_arch::x86::avx512bitalg::_mm512_bitshuffle_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_ucomineq_sh;true;true;true;false
<num::niche_types::NonZeroU32Inner as fmt::Debug>::fmt;false;false;true;false
<ops::range::RangeTo<T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
num::<impl i32>::from_le;false;false;false;false
num::saturating::Saturating::<u8>::to_le;false;false;false;false
core_arch::x86::sse2::_mm_ucomieq_sd;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_shufflehi_epi16;true;true;false;false
<usize as ops::bit::Shl<&isize>>::shl;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_max;false;true;false;false
<&num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add;false;false;false;false
ptr::mut_ptr::<impl cmp::PartialOrd for *mut T>::ge;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<isize as fmt::num::DisplayInt>::to_u128;false;false;false;false
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::index;false;false;true;false
slice::<impl [T]>::last_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_fnmadd_ps;true;true;true;false
<u64 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<isize as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
num::bignum::tests::Big8x3::add_small;false;false;true;true
<&'a i64 as ops::bit::Shr<i32>>::shr;false;false;false;false
<char::EscapeUnicode as iter::traits::iterator::Iterator>::count;false;false;true;false
num::<impl usize>::unchecked_sub;true;false;false;false
cmp::impls::<impl cmp::PartialOrd<&mut B> for &mut A>::lt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvttps_epi32;true;true;true;false
core_arch::x86::avx512f::_mm_mask_load_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epu64;true;true;true;false
intrinsics::atomic_cxchg_seqcst_seqcst;true;false;true;false
<num::dec2flt::decimal::Decimal as cmp::PartialEq>::eq;false;false;true;false
<num::niche_types::UsizeNoHighBit as clone::Clone>::clone;false;false;false;false
iter::traits::iterator::Iterator::min_by_key;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmplt_epu32_mask;true;true;false;false
<&num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub;false;false;false;false
num::wrapping::Wrapping::<usize>::pow;false;false;false;false
sync::atomic::atomic_or;true;true;true;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<char::EscapeUnicode as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::RemAssign<&num::saturating::Saturating<i128>>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u64>::from;false;false;false;false
<mem::Discriminant<T> as fmt::Debug>::fmt;false;false;true;false
<u128 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx2::_mm_mask_i32gather_epi32;true;true;true;false
core_arch::x86::avx512vnni::_mm256_dpbuud_epi32;true;true;false;false
tuple::<impl cmp::PartialOrd for (D, C, B, A, Z, Y, X, W, V, U, T)>::gt;false;false;false;false
core_simd::ops::<impl ops::index::Index<I> for core_simd::vector::Simd<T, N>>::index;false;false;false;false
str::pattern::CharPredicateSearcher;false;false;false;false
num::<impl i8>::strict_add_unsigned;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_expandloadu_epi8;true;true;true;false
iter::adapters::map::map_fold;false;false;false;false
core_arch::x86::avx2::_mm_i64gather_pd;true;true;true;false
f64::<impl f64>::next_up;false;false;true;false
num::<impl i128>::overflowing_rem_euclid;false;false;false;false
num::<impl i32>::checked_next_multiple_of;false;false;false;false
<i8 as ops::bit::BitXor<&i8>>::bitxor;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::fold::enumerate;false;false;false;false
core_arch::x86::sse2::_mm_sub_pd;true;true;true;false
iter::traits::iterator::Iterator::last::some;false;false;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::wrapping_neg;false;false;false;false
option::Option::<T>::get_or_insert_with;false;true;true;false
intrinsics::atomic_singlethreadfence_acqrel;true;false;false;false
str::<impl str>::strip_prefix;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_srlv_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_scalef_ps;true;true;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<i16, N>>::shr;false;true;false;false
num::<impl i8>::checked_shr;false;true;false;false
core_arch::x86::__m512bh::splat::JustOne;false;false;false;false
core_arch::x86::avx512dq::_mm512_andnot_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512f::_mm_cmpeq_epu64_mask;true;true;false;false
<usize as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
num::nonzero::NonZero::<u128>::to_le;false;true;false;false
num::nonzero::NonZero::<i32>::isolate_least_significant_one;false;true;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::nth;false;false;true;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
str::pattern::TwoWaySearcher::next_back;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_sqrt_sd;true;true;true;false
<net::socket_addr::SocketAddrV4 as hash::Hash>::hash;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i128>::gt;false;false;false;false
num::<impl i128>::to_be;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_mov_ps;true;true;true;false
num::<impl isize>::reverse_bits;false;false;false;false
num::<impl i128>::strict_add_unsigned;false;false;false;false
<f64 as ops::arith::MulAssign<&f64>>::mul_assign;false;false;true;false
ops::try_trait::from_yeet;false;false;false;false
core_arch::x86::avx512bw::_mm256_test_epi16_mask;true;true;false;false
<core_arch::simd::i32x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepi32_ph;true;true;true;false
<range::Range<Idx> as cmp::PartialEq>::eq;false;false;true;false
<slice::iter::SplitInclusiveMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
<i8 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<&'a num::wrapping::Wrapping<i64> as ops::bit::BitAnd<num::wrapping::Wrapping<i64>>>::bitand;false;false;false;false
<u128 as iter::traits::accum::Sum<&'a u128>>::sum;false;false;false;true
core_arch::simd::i16x8::extract;false;true;false;false
<char::ToUppercase as fmt::Display>::fmt;false;false;true;false
<num::saturating::Saturating<u8> as ops::arith::SubAssign<&u8>>::sub_assign;false;false;true;false
num::<impl u64>::max_value;false;false;false;false
<i16 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm256_cvtusepi32_epi8;true;true;false;false
core_arch::x86::sse::_mm_cmpunord_ps;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<i64>>::mul_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u16>::gt;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for u32>::ge;false;false;false;false
<&isize as ops::bit::Shr<&u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fnmadd_ph;true;true;true;false
ops::index_range::IndexRange::new_unchecked;true;false;false;false
<sync::atomic::AtomicU16 as convert::From<u16>>::from;false;false;false;false
<i16 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
core_arch::simd::u8x32::new;false;false;false;false
<&'a num::wrapping::Wrapping<i128> as ops::arith::Mul<num::wrapping::Wrapping<i128>>>::mul;false;false;false;false
num::wrapping::Wrapping::<usize>::leading_zeros;false;false;false;false
sync::atomic::AtomicU16::fetch_update;false;false;true;true
"tuple::<impl convert::From<[T; 11]> for (T, T, T, T, T, T, T, T, T, T, T)>::from";false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu32;true;true;true;false
core_arch::x86::avx2::_mm256_abs_epi32;true;true;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundsd_u64;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundps_epi64;true;true;true;false
<&'a num::saturating::Saturating<i64> as ops::arith::Div<num::saturating::Saturating<i64>>>::div;false;false;false;false
num::<impl i16>::next_multiple_of;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mov_epi64;true;true;false;false
<&'a num::wrapping::Wrapping<u64> as ops::arith::Sub<num::wrapping::Wrapping<u64>>>::sub;false;false;false;false
<ops::index_range::IndexRange as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<num::saturating::Saturating<u64> as ops::bit::Not>::not;false;false;false;false
num::<impl i16>::pow;false;false;false;true
<u8 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::new;false;false;false;false
fmt::Formatter::<'a>::pad_integral;false;false;true;true
core_arch::x86::avx512bw::_mm512_sub_epi8;true;true;false;false
<i16 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
<num::saturating::Saturating<usize> as ops::bit::Not>::not;false;false;false;false
hash::impls::<impl hash::Hash for &T>::hash;false;false;true;false
core_arch::x86::avx512f::_mm512_fnmadd_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_i64scatter_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_srl_epi32;true;true;false;false
"array::<impl cmp::PartialOrd for [T; N]>::le";false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_or;false;true;false;false
<&A as alloc::Allocator>::allocate;false;false;false;false
num::<impl i128>::ilog2;false;false;false;false
num::from_ascii_radix_panic;false;false;false;false
<i32 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<net::socket_addr::SocketAddrV6 as cmp::PartialOrd>::partial_cmp;false;false;true;false
core_arch::simd::f16x4::splat;false;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_nth_back;false;false;true;false
core_arch::x86::tbm::_blci_u32;true;false;false;false
core_arch::x86::avx512f::_mm512_ternarylogic_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_rolv_epi32;true;true;false;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
ops::async_function::impls::<impl ops::async_function::AsyncFnMut<A> for &F>::async_call_mut;false;false;true;false
<&A as alloc::Allocator>::grow;true;true;true;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
num::nonzero::NonZero::<u64>::midpoint;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpneq_epu32_mask;true;true;false;false
ptr::non_null::NonNull::<T>::with_exposed_provenance;false;true;false;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&isize> for &'lhs core_simd::vector::Simd<isize, N>>::shr;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
<num::saturating::Saturating<u32> as ops::arith::AddAssign<u32>>::add_assign;false;false;true;false
<&mut H as hash::Hasher>::write_length_prefix;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi8;true;true;false;false
convert::num::<impl convert::From<i8> for f64>::from;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
<u64 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::abs_diff;false;false;false;false
num::<impl i8>::isqrt;false;false;false;false
convert::num::<impl convert::TryFrom<i8> for u128>::try_from;false;false;false;false
ptr::mut_ptr::<impl *mut T>::as_ref;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi32;true;true;false;false
slice::<impl [T]>::first_chunk_mut;false;true;true;false
core_arch::x86::avx512dq::_mm_cvtepu64_pd;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u128>::try_from;false;false;false;false
core_arch::x86::avx2::_mm256_stream_load_si256;true;true;true;false
num::<impl isize>::count_zeros;false;false;false;false
<u8 as ops::bit::Shr<isize>>::shr;false;false;false;false
<core_arch::simd::u64x8 as fmt::Debug>::fmt;false;false;true;false
<ops::range::Range<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;true;false
core_arch::x86::sse2::_mm_avg_epu8;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i32>>>::bitor_assign;false;false;true;false
num::<impl i32>::from_str_radix;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::Rem>::rem;false;false;false;false
char::methods::<impl char>::is_ascii_whitespace;false;false;false;false
<&mut T as fmt::Pointer>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_min_epi32;true;true;false;false
num::<impl i32>::strict_rem;false;false;false;false
<&'a u64 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512dq::_kor_mask8;true;false;false;false
num::<impl i128>::checked_isqrt;false;true;false;false
sync::atomic::AtomicU8::load;false;true;true;false
core_arch::x86::avx512fp16::_mm_getexp_round_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvttph_epu64;true;true;true;false
core_simd::swizzle::Swizzle::concat_swizzle_mask;false;true;true;false
iter::traits::iterator::Iterator::map_while;false;false;false;false
num::<impl i64>::saturating_add_unsigned;false;false;false;false
<future::async_drop::AsyncDropInPlace<T> as fmt::Debug>::fmt;false;false;true;false
<pin::Pin<P> as future::future::Future>::poll;false;false;true;false
num::nonzero::NonZero::<usize>::reverse_bits;false;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_srlv_epi16;true;true;false;false
<i32 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_mov_epi8;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u128>::ge;false;false;false;false
char::methods::encode_utf8_raw;false;true;true;false
core_arch::x86::avx512fp16::_mm256_load_ph;true;true;true;false
<u64 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_fold;false;false;true;true
<&num::wrapping::Wrapping<i32> as ops::bit::Not>::not;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i8>::lt;false;false;false;false
core_arch::x86::__m128::splat;false;true;true;false
<u8 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
core_arch::x86::avx512cd::_mm256_lzcnt_epi32;true;true;false;false
<marker::variance::PhantomInvariantLifetime<'a> as cmp::Ord>::cmp;false;false;true;false
slice::sort::shared::smallsort::insert_tail;true;true;true;true
num::<impl u128>::ilog10;false;false;false;false
core_arch::simd::m64x2::splat::JustOne;false;false;false;false
num::saturating::Saturating::<i32>::rotate_right;false;false;false;false
<ffi::c_str::FromBytesUntilNulError as fmt::Display>::fmt;false;false;true;false
<sync::exclusive::Exclusive<F> as ops::function::FnMut<Args>>::call_mut;false;false;true;false
time::Duration::from_nanos;false;true;false;false
<str::IsNotEmpty as ops::function::FnOnce<(&'a &'b str,)>>::call_once;false;false;false;false
tuple::<impl cmp::PartialOrd for (U, T)>::lt;false;false;false;false
num::wrapping::Wrapping::<usize>::rotate_right;false;false;false;false
core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_getmant_ph;true;true;true;false
slice::<impl [T]>::first_chunk;false;true;false;false
cmp::impls::<impl cmp::PartialOrd<&B> for &A>::ge;false;false;false;false
sync::atomic::atomic_xor;true;true;true;false
<&u16 as ops::bit::Shr<&i128>>::shr;false;false;false;false
net::socket_addr::SocketAddr::is_ipv6;false;false;true;false
bstr::<impl convert::TryFrom<&'a mut bstr::ByteStr> for &'a mut str>::try_from;false;false;true;false
core_arch::x86::avx512bw::_mm_cmp_epi16_mask;true;true;false;false
num::<impl u8>::unchecked_disjoint_bitor;true;true;false;false
<iter::sources::repeat_n::RepeatN<A> as clone::Clone>::clone;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign;false;false;true;false
<iter::adapters::GenericShunt<'_, I, R> as iter::adapters::SourceIter>::as_inner;true;true;true;false
hash::impls::<impl hash::Hash for u32>::hash;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_round_ss;true;true;true;false
num::<impl u64>::from_le;false;false;false;false
<&'a mut I as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epu16;true;true;true;false
<num::niche_types::NonZeroIsizeInner as cmp::Ord>::cmp;false;false;false;false
<error::Source<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
<i32 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for ()>::partial_cmp;false;false;false;false
<str::BytesIsNotEmpty as ops::function::FnMut<(&'a &'b [u8],)>>::call_mut;false;false;true;false
ops::range::RangeInclusive::<usize>::into_slice_range;false;false;true;false
<&'a f128 as ops::arith::Mul<f128>>::mul;false;false;true;false
<i128 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<hash::sip::Sip24Rounds as clone::Clone>::clone;false;false;false;false
<&'b str as str::pattern::Pattern>::strip_prefix_of;false;true;false;false
<f16 as convert::num::FloatToInt<u32>>::to_int_unchecked;true;true;true;false
<i32 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<u8 as ops::bit::BitXor<&u8>>::bitxor;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T, T, T, T)> for [T; 10]>::from";false;false;true;false
core_arch::x86::avx512f::_mm512_castpd512_pd128;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_reduce_round_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvttph_epu16;true;true;true;false
core_arch::x86_64::sse::_mm_cvttss_si64;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvti64_ss;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&isize> for core_simd::vector::Simd<isize, N>>::shr;false;false;false;false
iter::adapters::filter_map::filter_map_try_fold;false;false;true;false
cmp::max_by;false;false;false;false
num::<impl isize>::ilog;false;false;false;false
<&f16 as ops::arith::Sub<&f16>>::sub;false;false;true;false
sync::atomic::AtomicU64::from_mut;false;true;true;false
core_arch::x86::avx512f::_mm512_mask2_permutex2var_ps;true;true;true;false
ptr::const_ptr::<impl *const T>::offset;true;false;true;false
<i8 as ops::bit::Shr<i32>>::shr;false;false;false;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
num::<impl u64>::to_le_bytes;false;false;false;false
<&'a num::wrapping::Wrapping<u8> as ops::arith::Mul<num::wrapping::Wrapping<u8>>>::mul;false;false;false;false
num::wrapping::Wrapping::<i32>::is_negative;false;false;false;false
num::<impl i32>::from_ascii;false;false;false;false
num::nonzero::NonZero::<u64>::saturating_add;false;true;false;false
num::<impl u16>::is_multiple_of;false;false;false;false
<u128 as ops::arith::AddAssign<&u128>>::add_assign;false;false;true;false
<i16 as ops::bit::BitAnd>::bitand;false;false;false;false
<i64 as ops::bit::Shl<&u8>>::shl;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i8>::ge;false;false;false;false
<isize as ops::bit::Shr<&isize>>::shr;false;false;false;false
<usize as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
<u128 as fmt::num::DisplayInt>::from_u8;false;false;false;false
num::saturating::Saturating::<u8>::from_le;false;false;false;false
<i8 as ops::bit::BitOrAssign<&i8>>::bitor_assign;false;false;true;false
<u16 as iter::traits::accum::Sum>::sum;false;false;false;true
<core_arch::simd::u64x8 as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::AddAssign<&num::saturating::Saturating<usize>>>::add_assign;false;false;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<num::saturating::Saturating<u128> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<&'c &'b str as str::pattern::Pattern>::strip_suffix_of;false;false;false;false
core_arch::x86::sse2::_mm_set1_pd;true;true;true;false
core_arch::x86::avx::_mm256_hadd_pd;true;true;true;false
core_arch::x86::avx::_mm256_broadcast_ps;true;true;true;false
core_arch::x86::adx::_subborrow_u32;true;true;true;false
core_arch::x86::avx512f::_mm_cvttss_u32;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_mov_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask3_fnmadd_ph;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi8;true;true;false;false
ptr::mut_ptr::<impl *mut T>::wrapping_add;false;false;true;false
<ops::index_range::IndexRange as clone::Clone>::clone;false;false;true;false
<&'b str as str::pattern::Pattern>::as_utf8_pattern;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_getmant_ph;true;true;true;false
core_simd::vector::Simd::<T, N>::to_array;false;true;true;false
fmt::run;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi8;true;true;false;false
num::<impl i64>::to_le;false;false;false;false
time::Duration::as_millis;false;false;false;false
<str::pattern::CharArraySearcher<'a, N> as fmt::Debug>::fmt;false;false;true;false
num::<impl u32>::from_le_bytes;false;false;false;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpneq_epu32_mask;true;true;false;false
<str::pattern::SearchStep as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512f::_mm_cvtt_roundsd_u32;true;true;true;false
<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign;false;false;true;false
<&'a u32 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtsh_h;true;true;true;false
ub_checks::maybe_is_nonoverlapping::runtime;false;false;true;false
<&i8 as ops::arith::Rem<&i8>>::rem;false;false;false;false
pin::Pin::<&'a mut T>::get_mut;false;false;true;false
num::bignum::tests::Big8x3::mul_small;false;false;true;true
iter::traits::iterator::Iterator::flatten;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_mut;false;true;true;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_broadcastd_epi32;true;true;false;false
intrinsics::simd::simd_reduce_any;true;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<&num::saturating::Saturating<i8>>>::bitand_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtt_roundps_epi64;true;true;true;false
<f64 as convert::num::FloatToInt<u64>>::to_int_unchecked;true;true;true;false
<i64 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cvtt_roundss_si32;true;true;true;false
slice::<impl [T]>::binary_search_by;false;true;false;true
<&'a f64 as ops::arith::Mul<f64>>::mul;false;false;true;false
core_arch::x86::sse::_mm_sqrt_ss;true;true;true;false
core_arch::x86::avx512dq::_mm_fpclass_sd_mask;true;true;true;false
core_arch::x86::avx512f::_cvtmask16_u32;true;false;false;false
slice::iter::ChunksExact::<'a, T>::remainder;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<slice::ascii::EscapeAscii<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
sync::atomic::AtomicI32::compare_exchange_weak;false;true;true;false
<usize as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512fp16::_mm256_maskz_getexp_ph;true;true;true;false
core_arch::x86::avx512vbmi::_mm_mask_permutex2var_epi8;true;true;false;false
mem::align_of_val_raw;true;true;true;false
fmt::num::exp_u128;false;true;true;true
<num::wrapping::Wrapping<i128> as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_cmpneq_epi32_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_getmant_ps;true;true;true;false
str::<impl str>::split_ascii_whitespace;false;false;false;false
cmp::impls::<impl cmp::PartialEq for ()>::ne;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<f64, N>>::product;false;false;false;true
<num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi64;true;true;false;false
option::Option::<T>::get_or_insert_default;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::Sub>::sub;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::AddAssign<i32>>::add_assign;false;false;true;false
<&i64 as ops::bit::BitXor<&i64>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu32_pd;true;true;true;false
<(ED, EC, EB, EA) as iter::traits::collect::Extend<(D, C, B, A)>>::extend_reserve;false;false;true;false
slice::<impl [T]>::split_off_first_mut;false;false;true;false
ptr::mut_ptr::<impl cmp::Ord for *mut T>::cmp;false;false;true;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_min;false;true;false;false
<&'a isize as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmp_epu16_mask;true;true;false;false
num::nonzero::NonZero::<i16>::saturating_pow;false;true;false;false
<&'a usize as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtpd_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_round_sch;true;true;true;false
num::diy_float::Fp::mul;false;false;false;false
core_arch::x86::avx512bw::_mm_cmpge_epi8_mask;true;true;false;false
<(EB, EA) as iter::traits::collect::Extend<(B, A)>>::extend;false;false;true;false
core_arch::x86::sse2::_mm_cvtsi32_si128;true;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_maddubs_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm_mask_cvttps_epu64;true;true;true;false
cmp::impls::<impl cmp::PartialEq for f32>::eq;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_roundscale_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_broadcastss_ps;true;true;true;false
core_arch::x86::sse2::_mm_loadu_si32;true;true;true;false
<result::IterMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::simd::u64x8::splat;false;true;false;false
num::<impl i16>::wrapping_add;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_next_back;false;false;true;false
<fmt::Arguments<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i32scatter_epi64;true;true;true;false
"array::<impl default::Default for [T; 32]>::default";false;false;false;false
<&num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl;false;false;false;false
num::nonzero::NonZero::<isize>::swap_bytes;false;true;false;false
<f16 as convert::num::FloatToInt<u64>>::to_int_unchecked;true;true;true;false
<u16 as ops::arith::SubAssign<&u16>>::sub_assign;false;false;true;false
<hash::sip::SipHasher as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicU64::swap;false;true;true;false
str::pattern::TwoWaySearcher::next;false;false;true;true
num::<impl u8>::carrying_mul_add;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f64>::partial_cmp;false;false;true;false
cell::Ref::<'b, T>::filter_map;false;false;true;false
<core_arch::simd::f32x2 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm256_abs_ph;true;true;true;false
num::<impl i16>::wrapping_add_unsigned;false;false;false;false
core_arch::x86::avx512f::_mm_cvtsepi32_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_andnot_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm_fnmsub_round_ss;true;true;true;false
ptr::<impl cmp::PartialOrd for F>::partial_cmp;false;false;false;false
cell::RefCell::<T>::borrow;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_load_ps;true;true;true;false
core_arch::x86::__m512i::splat::JustOne;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cmp_epi8_mask;true;true;false;false
<u128 as ops::bit::Shl<&i64>>::shl;false;false;false;false
tuple::<impl default::Default for (B, A, Z, Y, X, W, V, U, T)>::default;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldi_epi32;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512vbmi::_mm_multishift_epi64_epi8;true;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
ops::control_flow::ControlFlow::<B, C>::is_continue;false;false;true;false
fmt::builders::DebugStruct::<'a, 'b>::finish;false;false;true;false
slice::<impl [T]>::swap_unchecked::precondition_check;false;false;false;false
hash::sip::SipHasher13::new;false;false;false;false
<core_arch::simd::i8x64 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::bmi1::_mm_tzcnt_32;true;false;false;false
num::nonzero::NonZero::<u32>::ilog10;false;false;false;false
<i32 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<i64>>::div_assign;false;false;true;false
<i64 as ops::arith::Rem>::rem;false;false;false;false
num::<impl i64>::carrying_mul;false;false;false;false
<any::TypeId as cmp::Ord>::cmp;false;false;true;false
fmt::builders::DebugTuple::<'a, 'b>::is_pretty;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldi_epi32;true;true;false;false
core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi64;true;true;false;false
iter::traits::iterator::Iterator::partition_in_place::is_false;false;false;true;false
num::nonzero::NonZero::<i32>::abs;false;true;false;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::RemAssign<u32>>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_maskz_xor_ps;true;true;true;false
<u64 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
f64::<impl f64>::to_le_bytes;false;false;true;false
<&'c &'b str as str::pattern::Pattern>::into_searcher;false;false;false;false
<&num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask3_fmaddsub_pd;true;true;true;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i8>::le;false;false;false;false
convert::num::<impl convert::From<i16> for i64>::from;false;false;false;false
core_arch::x86::sse2::_mm_slli_si128_impl;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
core_arch::x86::avx512f::_mm_cvtt_roundss_u32;true;true;true;false
<&'b str as str::pattern::Pattern>::into_searcher;false;false;false;false
slice::<impl [T]>::chunks_exact;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::DivAssign<&isize>>::div_assign;false;false;true;false
<u128 as ops::bit::Shl<&usize>>::shl;false;false;false;false
slice::index::<impl ops::index::Index<I> for [T]>::index;false;false;false;false
"array::equality::<impl cmp::PartialEq<[U; N]> for &mut [T]>::eq";false;false;true;false
<char::EscapeDefault as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::simd::f32x8::splat::JustOne;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i8>::gt;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvtps_epu64;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmpneq_epu16_mask;true;true;false;false
core_arch::x86::avx512dq::_mm256_cvtpd_epi64;true;true;true;false
iter::range::Step::backward;false;false;false;false
core_arch::x86::avx512bf16::_mm512_mask_cvtneps_pbh;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
<&'a i32 as ops::arith::Rem<i32>>::rem;false;false;false;false
convert::num::<impl convert::From<bool> for u64>::from;false;false;false;false
<i16 as fmt::num::DisplayInt>::to_u8;false;false;false;false
task::wake::Waker::wake;false;true;true;false
core_arch::x86::avx512f::_mm512_maskz_getexp_pd;true;true;true;false
<&'a i8 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_sra_epi32;true;true;false;false
<i8 as ops::bit::Shl<&u64>>::shl;false;false;false;false
ascii::ascii_char::AsciiChar::digit_unchecked::precondition_check;false;false;false;false
<hash::BuildHasherDefault<H> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_broadcastss_ps;true;true;true;false
num::<impl u8>::strict_mul;false;false;false;false
iter::adapters::flatten::FlatMap::<I, U, F>::into_parts;false;false;true;false
core_arch::x86::avx512vnni::_mm512_maskz_dpbusds_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_cmpgt_epu16_mask;true;true;false;false
<u128 as ops::arith::Add>::add;false;false;false;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
core_arch::x86::avx512f::_mm_mask_min_epu32;true;true;false;false
core_arch::simd::u16x8;false;false;false;false
num::<impl u64>::unchecked_add::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm_cvtusepi64_epi8;true;true;false;false
iter::traits::iterator::Iterator::collect_into;false;false;true;false
<core_arch::simd::u64x2 as cmp::PartialEq>::eq;false;false;false;false
<&'a u32 as ops::bit::BitXor<u32>>::bitxor;false;false;false;false
num::niche_types::I64NotAllOnes::as_inner;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi16;true;true;false;false
io::borrowed_buf::BorrowedBuf::<'data>::clear;false;false;true;false
num::nonzero::NonZero::<u32>::isolate_most_significant_one;false;true;false;false
<[mem::maybe_uninit::MaybeUninit<T>] as mem::maybe_uninit::SpecFill<T>>::spec_fill;false;false;true;true
<&'a num::saturating::Saturating<u32> as ops::arith::Mul<num::saturating::Saturating<u32>>>::mul;false;false;false;false
convert::num::<impl convert::From<i8> for i32>::from;false;false;false;false
num::<impl i8>::overflowing_rem_euclid;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T, T, T, T, T, T)> for [T; 12]>::from";false;false;true;false
core_arch::x86::avx::_mm_cmp_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_ps;true;true;true;false
core_arch::simd::i64x2::splat::JustOne;false;false;false;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<str::iter::MatchIndices<'a, P> as fmt::Debug>::fmt;false;false;true;false
str::<impl str>::get_unchecked;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 16>> for core_arch::x86::__m128i>::from;false;false;false;false
num::nonzero::NonZero::<u64>::unchecked_mul;true;true;false;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<net::ip_addr::Ipv6Addr as cmp::PartialEq>::eq;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fmadd_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_blend_epi16;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi16;true;true;false;false
core_arch::x86::avx2::_mm256_cvtepi8_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_rorv_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpge_epu32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_reduce_min_epu8;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cvtepi16_storeu_epi8;true;true;true;false
char::methods::<impl char>::from_u32_unchecked;true;true;false;false
<usize as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx2::_mm_maskstore_epi32;true;true;true;false
ptr::non_null::NonNull::<T>::as_mut;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for char>::lt;false;false;false;false
core_arch::x86::avx512f::_mm512_stream_load_si512;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu16;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundsh_u32;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::index;false;false;false;false
core_simd::swizzle::Swizzle::swizzle::{constant#0}::SimdShuffleIdx;false;false;false;false
num::<impl i16>::wrapping_div_euclid;false;false;false;false
num::<impl u128>::to_be_bytes;false;false;false;false
core_arch::x86::avx::_mm256_loadu2_m128i;true;true;true;false
core_arch::x86::avx512f::_mm512_kortestc;true;false;false;false
core_arch::x86::avx512f::_mm512_reduce_max_ps;true;true;true;false
num::<impl i8>::abs;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&num::wrapping::Wrapping<i16>>>::mul_assign;false;false;true;false
cmp::impls::<impl cmp::Ord for char>::cmp;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<usize, N>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_max_pd;true;true;true;false
<&'a u32 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_reduce_round_ss;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::cast;false;true;false;false
num::<impl u32>::count_zeros;false;false;false;false
num::dec2flt::decimal::Decimal::can_use_fast_path;false;false;true;false
core_arch::simd::u64x4::extract;false;true;false;false
<str::iter::EscapeDefault<'a> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepu32_ps;true;true;false;false
<&num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_compress_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_permutexvar_epi32;true;true;false;false
"<core_simd::vector::Simd<T, N> as convert::AsRef<[T; N]>>::as_ref";false;false;true;false
<u32 as ops::bit::BitXorAssign<&u32>>::bitxor_assign;false;false;true;false
cmp::Ordering::as_raw;false;false;false;false
<&num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_add_round_pd;true;true;true;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
<&'a i8 as ops::bit::Shl<u32>>::shl;false;false;false;false
<u128 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
net::ip_addr::Ipv4Addr::is_global;false;false;false;false
<u32 as default::Default>::default;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::RemAssign<u128>>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_extracti64x2_epi64;true;true;false;false
convert::num::<impl convert::From<bool> for i128>::from;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmple_epi16_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi8;true;true;true;false
ptr::mut_ptr::<impl *mut T>::map_addr;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::DivAssign>::div_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::write;true;true;true;false
core_simd::vector::Simd::<T, N>::as_array;false;true;true;false
<f128 as ops::arith::Add<&f128>>::add;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_try_fold;false;false;true;true
<i16 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
num::<impl u128>::wrapping_rem;false;false;false;false
num::<impl u16>::overflowing_sub_signed;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtps_epu32;true;true;true;false
<&i32 as ops::arith::Neg>::neg;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i16> for &'lhs core_simd::vector::Simd<i16, N>>::shl;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<i128>>::add_assign;false;false;true;false
core_arch::x86::avx2::_mm256_i32gather_epi64;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_getmant_sh;true;true;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::to_radians;false;false;true;false
num::nonzero::NonZero::<i64>::is_negative;false;false;false;false
num::<impl u32>::wrapping_div;false;false;false;false
intrinsics::copysignf64;true;false;true;false
result::Result::<T, E>::iter;false;false;true;false
num::nonzero::NonZero::<usize>::checked_pow;false;true;false;false
num::nonzero::NonZero::<i64>::saturating_neg;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_min_epi16;true;true;false;false
num::nonzero::NonZero::<i8>::checked_pow;false;true;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul;false;false;false;false
<usize as ops::arith::Rem>::rem;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Mul>::mul;false;false;false;false
<&T as fmt::UpperExp>::fmt;false;false;true;false
core_arch::x86::__m128d::as_f64x2;false;false;true;false
<&f16 as ops::arith::Rem<&f16>>::rem;false;false;true;false
<&i32 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_or;false;true;false;false
<core_arch::simd::i16x2 as cmp::PartialEq>::eq;false;false;false;false
slice::iter::SplitInclusive::<'a, T, P>::new;false;false;false;false
str::traits::<impl cmp::Ord for str>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm256_cmp_epu32_mask;true;true;false;false
<str::iter::SplitInternal<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_getexp_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm256_scalef_ph;true;true;true;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::index;false;false;true;false
core_arch::x86::f16c::_mm_cvtph_ps;true;true;false;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::<impl i32>::div_euclid;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::DivAssign<i64>>::div_assign;false;false;true;false
num::saturating::Saturating::<u8>::count_zeros;false;false;false;false
ptr::mut_ptr::<impl cmp::PartialOrd for *mut T>::gt;false;false;true;false
<i64 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<u8 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
num::<impl u128>::wrapping_shr;false;true;false;false
<ops::range::RangeFrom<Idx> as clone::Clone>::clone;false;false;true;false
<iter::adapters::scan::Scan<I, St, F> as iter::traits::iterator::Iterator>::try_fold::scan;false;false;true;false
core_arch::x86::sse::_mm_cmpord_ss;true;true;true;false
core_arch::x86::sse2::_mm_setzero_pd;true;false;false;false
<isize as ops::arith::SubAssign<&isize>>::sub_assign;false;false;true;false
core_arch::x86::avx512bf16::_mm512_maskz_cvtne2ps_pbh;true;true;true;false
<u16 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
num::<impl isize>::strict_sub;false;false;false;false
num::<impl u32>::wrapping_next_power_of_two;false;false;false;false
slice::sort::shared::smallsort::sort8_stable;true;true;true;false
core_arch::x86::avx2::_mm_mask_i32gather_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundps_epu32;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_or_pd;true;true;true;false
<&'a num::saturating::Saturating<u16> as ops::arith::Rem<num::saturating::Saturating<u16>>>::rem;false;false;false;false
<usize as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_unpacklo_epi8;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::to_bits;false;true;true;false
core_arch::x86::avx512dq::_mm_maskz_cvttpd_epu64;true;true;true;false
intrinsics::atomic_cxchgweak_acqrel_relaxed;true;false;true;false
<&i128 as ops::bit::BitOr<&i128>>::bitor;false;false;false;false
<i64 as ops::bit::Shl<u64>>::shl;false;false;false;false
<hash::sip::SipHasher24 as fmt::Debug>::fmt;false;false;true;false
slice::<impl [T]>::as_chunks_unchecked::precondition_check;false;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx2::_mm256_cvtepi16_epi32;true;true;false;false
num::<impl i128>::abs_diff;false;false;false;false
core_arch::x86::avx512f::_mm256_i32scatter_ps;true;true;true;false
num::<impl i8>::wrapping_sub_unsigned;false;false;false;false
"tuple::<impl convert::From<[T; 10]> for (T, T, T, T, T, T, T, T, T, T)>::from";false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&num::wrapping::Wrapping<i16>>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand;false;false;false;false
num::<impl usize>::overflowing_rem_euclid;false;false;false;false
<isize as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_max_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cmp_epi16_mask;true;true;false;false
core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_expandloadu_epi32;true;true;true;false
<&'a num::wrapping::Wrapping<i64> as ops::arith::Add<num::wrapping::Wrapping<i64>>>::add;false;false;false;false
<i32 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
cell::RefCell::<T>::get_mut;false;false;true;false
iter::traits::collect::default_extend_tuple_j;false;false;true;true
<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&num::wrapping::Wrapping<u32>>>::add_assign;false;false;true;false
intrinsics::expf32;true;false;true;false
ptr::<impl cmp::PartialEq for F>::eq;false;false;false;false
<&i32 as ops::bit::Shl<&u128>>::shl;false;false;false;false
intrinsics::powif64;true;false;true;false
num::<impl u128>::pow;false;false;false;true
iter::adapters::peekable::Peekable::<I>::peek_mut;false;false;true;false
<hash::sip::Hasher<S> as hash::Hasher>::write;false;true;true;true
<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<isize>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cvtpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_xor_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_mask_cvtps_epi64;true;true;true;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
"ptr::mut_ptr::<impl *mut [T; N]>::as_mut_ptr";false;false;true;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpgt_epi64_mask;true;true;false;false
range::iter::IterRangeInclusive;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvttpd_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_permutex2var_epi16;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::leading_ones;false;false;false;false
<&i8 as ops::bit::Shl<&i16>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i64>>::try_from;false;true;false;false
<&i16 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_min_epi16;true;true;false;false
<num::nonzero::NonZero<T> as cmp::Ord>::min;false;true;true;false
cmp::impls::<impl cmp::Ord for i128>::cmp;false;false;false;false
num::<impl u64>::rem_euclid;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<sync::atomic::AtomicU32 as convert::From<u32>>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtph_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtusepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_fnmsub_ps;true;true;true;false
num::dec2flt::decimal_seq::DecimalSeq::left_shift;false;false;true;true
num::overflow_panic::sub;false;false;false;false
<&'a num::wrapping::Wrapping<usize> as ops::bit::BitAnd<num::wrapping::Wrapping<usize>>>::bitand;false;false;false;false
num::wrapping::Wrapping::<i128>::from_le;false;false;false;false
<&num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul;false;false;false;false
sync::atomic::AtomicIsize::swap;false;true;true;false
num::<impl i8>::ilog;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<f32, N>> for core_simd::vector::Simd<f32, N>>::product;false;false;false;true
<&'a i128 as ops::bit::Shl<i32>>::shl;false;false;false;false
<ptr::alignment::AlignmentEnum as cmp::PartialEq>::eq;false;false;false;false
num::<impl i16>::div_ceil;false;false;false;false
error::request_value;false;false;false;false
option::unwrap_failed;false;false;false;false
fmt::rt::Argument::<'_>::new_debug_noop;false;false;false;false
num::<impl usize>::rem_euclid;false;false;false;false
<i64 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
core_arch::x86::__m512h::splat;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_max_pd;true;true;true;false
num::<impl u64>::overflowing_neg;false;false;false;false
num::<impl i16>::unchecked_mul;true;false;false;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epu32;true;true;true;false
<&u64 as ops::bit::BitAnd<&u64>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm512_add_pd;true;true;true;false
<num::saturating::Saturating<i16> as ops::arith::AddAssign>::add_assign;false;false;true;false
core_simd::ops::deref::<impl ops::arith::Add<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::add;false;false;false;false
<i16 as ops::arith::Neg>::neg;false;false;false;false
<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv6Addr>>::bitand_assign;false;false;true;false
<sync::atomic::AtomicPtr<T> as default::Default>::default;false;false;false;false
f128::<impl f128>::to_radians;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_and_epi64;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&usize>>::div_assign;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::simd::i8x32::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_srav_epi64;true;true;false;false
core_arch::simd::u16x4::from_array;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_srai_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fcmul_round_pch;true;true;true;false
<cell::BorrowRef<'_> as clone::Clone>::clone;false;false;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<u16, N>>::not;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
<cmp::Ordering as cmp::PartialOrd>::partial_cmp;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<i16>>::rem_assign;false;false;true;false
intrinsics::truncf32;true;false;true;false
<i128 as ops::arith::Add<&i128>>::add;false;false;false;false
<core_arch::simd::u64x2 as fmt::Debug>::fmt;false;false;true;false
num::<impl u8>::checked_shr;false;true;false;false
mem::maybe_uninit::MaybeUninit::<T>::as_ptr;false;false;false;false
<Iter as iter::traits::collect::TraitL<EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
core_arch::x86::avx512f::_mm256_cvtsepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_max_sd;true;true;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<i16, N>>::not;false;false;false;false
<u128 as ops::bit::Shr<i16>>::shr;false;false;false;false
slice::ascii::is_ascii;false;false;false;true
<sync::atomic::AtomicU8 as default::Default>::default;false;false;false;false
<&i128 as ops::bit::BitAnd<&i128>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmul_round_sch;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_broadcastw_epi16;true;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<isize, 8>>::from;false;false;false;false
<f128 as ops::arith::Mul<&f128>>::mul;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::wrapping_offset;false;true;true;false
core_arch::x86::avx512fp16::_mm_fnmsub_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_sub_round_ph;true;true;true;false
<i8 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
str::iter::SplitN::<'a, P>::remainder;false;false;true;false
sync::atomic::AtomicBool::compare_exchange;false;true;true;false
core_arch::x86::avx512f::_mm512_broadcastss_ps;true;true;true;false
<&u64 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<&num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundps_epi32;true;true;true;false
<slice::iter::ChunksMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
fmt::Formatter::<'a>::debug_tuple;false;false;true;false
core_arch::x86::sse::_mm_load_ps1;true;true;true;false
iter::adapters::peekable::Peekable::<I>::next_if;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::index_mut;false;false;true;false
num::wrapping::Wrapping::<i64>::to_be;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpge_epu32_mask;true;true;false;false
core_arch::x86::sse2::_mm_and_pd;true;true;true;false
<u64 as ops::bit::Shr<&u32>>::shr;false;false;false;false
num::nonzero::NonZero::<i8>::isolate_least_significant_one;false;true;false;false
core_arch::x86::avx512fp16::_mm_mask_mul_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_max_ph;true;true;true;false
core_arch::x86_64::avx512bw::_cvtu64_mask64;true;false;false;false
core_arch::x86::avx512f::_mm_mask_expand_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_shufflelo_epi16;true;true;false;false
<num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_rolv_epi64;true;true;false;false
core_arch::x86::avx2::_mm_i32gather_epi32;true;true;true;false
<u128 as iter::traits::accum::Product>::product;false;false;false;true
<u16 as iter::range::Step>::backward_unchecked;true;true;false;false
<&num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div;false;false;false;false
<&'a u32 as ops::bit::Shl<u64>>::shl;false;false;false;false
intrinsics::fadd_algebraic;false;false;false;false
<num::nonzero::NonZero<T> as hash::Hash>::hash;false;false;true;false
<&num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem;false;false;false;false
num::<impl u16>::unbounded_shl;false;true;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_round_sd;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&num::wrapping::Wrapping<u16>>>::add_assign;false;false;true;false
error::tags::Value;false;false;false;false
<&u128 as ops::bit::Shl<&u64>>::shl;false;false;false;false
fmt::Formatter::<'a>::debug_tuple_field2_finish;false;false;true;false
core_arch::x86::sse::_mm_cmple_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_reduce_min_epi64;true;true;false;false
num::wrapping::Wrapping::<u64>::pow;false;false;false;false
core_arch::x86::sse2::_mm_mfence;true;true;false;false
core_arch::x86::avx512vnni::_mm_mask_dpbusds_epi32;true;true;false;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<i8, N>>::shl;false;true;false;false
<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<u128 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<i128 as ops::bit::Shl<i32>>::shl;false;false;false;false
<panic::unwind_safe::AssertUnwindSafe<T> as fmt::Debug>::fmt;false;false;true;false
net::parser::<impl net::socket_addr::SocketAddr>::parse_ascii;false;false;false;false
slice::raw::from_raw_parts::precondition_check;false;false;true;false
<i128 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<ops::range::RangeFull as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
core_arch::x86::avx512f::_mm512_max_ps;true;true;true;false
num::saturating::Saturating::<i16>::rotate_right;false;false;false;false
core_arch::x86::avx512fp16::_mm512_fmaddsub_round_ph;true;true;true;false
<num::saturating::Saturating<isize> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpgt_epu64_mask;true;true;false;false
<&i8 as ops::arith::Add<&i8>>::add;false;false;false;false
num::wrapping::Wrapping::<u8>::leading_zeros;false;false;false;false
num::<impl u128>::checked_shl;false;true;false;false
<u16 as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::avx512f::_mm_getexp_round_ss;true;true;true;false
num::<impl str::traits::FromStr for u32>::from_str;false;false;false;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_cvt_roundss_u32;true;true;true;false
core_arch::x86_64::bswap::_bswap64;true;false;false;false
hash::impls::<impl hash::Hash for i32>::hash;false;false;true;false
<&u16 as ops::bit::Shr<&u128>>::shr;false;false;false;false
fmt::Formatter::<'a>::debug_struct_field1_finish;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_abs_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_reduce_mul_ph;true;true;true;false
mem::forget_unsized;false;false;false;false
slice::sort::shared::pivot::median3_rec;true;true;true;false
num::<impl i16>::saturating_div;false;false;false;false
num::wrapping::Wrapping::<isize>::from_le;false;false;false;false
<u128 as iter::range::Step>::backward_checked;false;false;false;false
net::parser::<impl net::ip_addr::Ipv4Addr>::parse_ascii;false;false;false;false
num::<impl usize>::leading_zeros;false;false;false;false
convert::num::<impl convert::From<bool> for u32>::from;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor;false;false;false;false
<str::pattern::EmptyNeedle as clone::Clone>::clone;false;false;true;false
<task::wake::Waker as fmt::Debug>::fmt;false;false;true;false
<&mut H as hash::Hasher>::write_u16;false;false;true;false
core_arch::x86::sse::_mm_setcsr;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_mul_sd;true;true;true;false
core_arch::x86_64::adx::_subborrow_u64;true;true;true;false
core_simd::ops::assign::<impl ops::arith::AddAssign<U> for core_simd::vector::Simd<T, N>>::add_assign;false;false;true;false
<core_arch::simd::u8x8 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bf16::_mm256_mask_cvtne2ps_pbh;true;true;true;false
num::wrapping::Wrapping::<i128>::signum;false;false;false;false
<error::tags::Ref<I> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_min;false;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::saturating_sub;false;true;false;false
<u16 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::max;false;false;true;false
str::<impl str>::as_mut_ptr;false;false;true;false
fmt::num::GenericRadix::fmt_int;false;true;true;true
<i128 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
sync::atomic::AtomicUsize::try_update;false;false;true;false
num::<impl usize>::overflowing_rem;false;false;false;false
"<[char; N] as str::pattern::Pattern>::strip_suffix_of";false;false;false;false
<num::saturating::Saturating<i16> as ops::bit::BitOr>::bitor;false;false;false;false
<&num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmp_round_ps_mask;true;true;true;false
core_simd::select::<impl core_simd::masks::Mask<T, N>>::select_mask;false;false;true;false
core_simd::vector::Simd::<T, N>::scatter_select_ptr;true;true;true;false
<&i32 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::abs;false;false;false;false
core_arch::x86::avx512f::_mm512_set_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm_reduce_max_epi16;true;true;false;false
<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&num::saturating::Saturating<i8>>>::bitxor_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::arith::Div<num::wrapping::Wrapping<u16>>>::div;false;false;false;false
convert::num::<impl convert::From<u16> for f64>::from;false;false;false;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::Searcher<'a>>::next_reject;false;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
core_arch::x86::ssse3::_mm_sign_epi8;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut::precondition_check;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&num::wrapping::Wrapping<u128>>>::div_assign;false;false;true;false
<&'a u8 as ops::bit::BitAnd<u8>>::bitand;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<i32>>::rem_assign;false;false;true;false
future::async_drop::async_drop;false;false;false;false
core_arch::x86::avx512fp16::_mm512_castph_si512;true;false;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundsh_sd;true;true;true;false
iter::traits::iterator::Iterator::min_by_key::compare;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_slli_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_mul_epi32;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for usize>::gt;false;false;false;false
clone::impls::<impl clone::Clone for i128>::clone;false;false;false;false
core_arch::x86::avx2::_mm256_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_or_epi8;true;true;false;false
num::<impl i64>::unchecked_neg::precondition_check;false;false;false;false
num::dec2flt::lemire::compute_float;false;false;false;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
option::Option::<result::Result<T, E>>::transpose;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::simd_min;false;true;true;false
core_arch::x86::avx512f::_mm_getexp_round_sd;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_sll_epi64;true;true;false;false
num::<impl u64>::unchecked_shr::precondition_check;false;false;false;false
core_arch::x86::sse2::_mm_cmpeq_epi8;true;true;false;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<mem::Discriminant<T> as cmp::PartialEq>::eq;false;false;true;false
clone::impls::<impl clone::Clone for usize>::clone;false;false;false;false
<i128 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
<sync::exclusive::Exclusive<T> as future::future::Future>::poll;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::get_mut;false;false;true;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;false
<str::CharEscapeDebugContinue as ops::function::Fn<(char,)>>::call;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_getmant_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi8;true;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u64>>::from;false;true;false;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_srav_epi16;true;true;false;false
fmt::num::imp::<impl fmt::UpperExp for isize>::fmt;false;false;true;false
num::<impl i128>::wrapping_pow;false;false;false;true
<str::LinesMap as ops::function::Fn<(&'a str,)>>::call;false;false;false;false
core_arch::simd::f64x2::new;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvt_roundss_sh;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::arith::Sub>::sub;false;false;false;false
<usize as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::SubAssign<i32>>::sub_assign;false;false;true;false
<isize as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<ascii::EscapeDefault as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
intrinsics::atomic_umin_relaxed;true;false;true;false
core_arch::simd::f32x4::splat;false;true;true;false
<i8 as ops::bit::Shl<u64>>::shl;false;false;false;false
<&u8 as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm_mask_test_epi32_mask;true;true;false;false
core_arch::x86::bf16::from_bits;false;false;false;false
<&'a u64 as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_cvt_roundsd_si32;true;true;true;false
core_simd::vector::Simd::<T, N>::gather_or;false;false;true;false
core_arch::x86::avx2::_mm256_srl_epi16;true;true;false;false
iter::traits::iterator::Iterator::try_for_each;false;false;true;true
<core_arch::simd::u8x32 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512vbmi::_mm512_maskz_permutex2var_epi8;true;true;false;false
<&u64 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmple_epi64_mask;true;true;false;false
<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign;false;false;true;false
<&u128 as ops::bit::Shl<&i8>>::shl;false;false;false;false
slice::index::get_offset_len_mut_noubcheck;true;true;true;false
core_arch::simd::f64x1::splat;false;true;true;false
<core_arch::simd::i32x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_unpacklo_epi32;true;true;false;false
<iter::adapters::map_while::MapWhile<I, P> as fmt::Debug>::fmt;false;false;true;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<u128 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::guaranteed_ne;false;false;true;false
<u128 as ops::bit::Shr<isize>>::shr;false;false;false;false
num::saturating::Saturating::<i64>::leading_zeros;false;false;false;false
core_arch::x86::sse41::_mm_minpos_epu16;true;true;false;false
option::Option::<&mut T>::copied;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_div_pd;true;true;true;false
<i8 as pat::RangePattern>::sub_one;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_fpclass_ss_mask;true;true;true;false
<&i64 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
num::<impl isize>::checked_next_multiple_of;false;false;false;false
<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds;false;false;true;false
core_arch::simd::f32x4::from_array;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvtt_roundss_u64;true;true;true;false
<&u8 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<i8 as ops::bit::Shl<usize>>::shl;false;false;false;false
<&'a num::saturating::Saturating<u64> as ops::arith::Div<num::saturating::Saturating<u64>>>::div;false;false;false;false
<(A, Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
tuple::<impl cmp::PartialOrd for (A, Z, Y, X, W, V, U, T)>::le;false;false;false;false
f128::<impl f128>::min;false;false;true;false
<&usize as ops::bit::Shl<&i128>>::shl;false;false;false;false
<iter::adapters::map_while::MapWhile<I, P> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::trailing_ones;false;false;false;false
ptr::const_ptr::<impl *const T>::with_metadata_of;false;false;true;false
future::get_context;true;true;true;false
<u128 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
num::<impl isize>::to_be;false;false;false;false
<&'a num::saturating::Saturating<u128> as ops::arith::Add<num::saturating::Saturating<u128>>>::add;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::rfind;false;false;true;true
f16::<impl f16>::signum;false;false;true;false
<f64 as ops::arith::Div<&f64>>::div;false;false;true;false
num::<impl u32>::overflowing_pow;false;false;false;true
<i32 as ops::bit::Shr<u32>>::shr;false;false;false;false
<fmt::Error as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtxph_ps;true;true;true;false
convert::num::<impl convert::From<i16> for i32>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fcmadd_pch;true;true;true;false
f32::<impl f32>::next_up;false;false;true;false
num::flt2dec::decoder::decode;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::ensure_init;false;true;true;false
num::<impl str::traits::FromStr for isize>::from_str;false;false;false;false
num::<impl u32>::saturating_div;false;false;false;false
num::saturating::Saturating::<i16>::count_zeros;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_sub_ph;true;true;true;false
core_arch::simd::i32x4::splat;false;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u16> for isize>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_min_epu32;true;true;false;false
core_arch::simd::i16x4::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_permutex2var_epi32;true;true;false;false
fmt::builders::DebugSet::<'a, 'b>::finish_non_exhaustive;false;false;true;false
<pin::Pin<Ptr> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundepu64_ps;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtxps_ph;true;true;true;false
num::<impl u64>::strict_add;false;false;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
core_arch::x86::avx512fp16::_mm512_getexp_round_ph;true;true;true;false
<i128 as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86_64::cmpxchg16b::cmpxchg16b;true;true;true;false
<u64 as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::sse3::_mm_hadd_ps;true;true;true;false
core_arch::simd::i8x32;false;false;false;false
<i32 as ops::bit::Shr<&i32>>::shr;false;false;false;false
intrinsics::atomic_load_acquire;true;false;true;false
<&u8 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<u64 as iter::range::Step>::backward;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::sse42::_mm_cmpistrm;true;true;false;false
<bool as default::Default>::default;false;false;false;false
<i16 as ops::arith::Mul<&i16>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_undefined_pd;true;false;false;false
<&num::wrapping::Wrapping<usize> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_rcp_ph;true;true;true;false
ptr::const_ptr::<impl cmp::PartialOrd for *const T>::le;false;false;true;false
ptr::mut_ptr::<impl *mut T>::write_bytes;true;true;true;false
core_arch::x86::sse2::_mm_cmpngt_pd;true;true;true;false
slice::sort::stable::drift::sort;false;true;true;true
ptr::const_ptr::<impl *const [T]>::as_array;false;false;true;false
core_arch::simd::i32x2::from_array;false;false;false;false
<u8 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<&'a T as error::Error>::source;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::MulAssign<isize>>::mul_assign;false;false;true;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<char::EscapeDefault as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
sync::atomic::AtomicU8::fetch_add;false;true;true;false
num::<impl i16>::borrowing_sub;false;false;false;false
io::borrowed_buf::BorrowedBuf::<'data>::capacity;false;false;true;false
num::nonzero::NonZero::<u128>::count_ones;false;true;false;false
ptr::mut_ptr::<impl cmp::PartialOrd for *mut T>::lt;false;false;true;false
core_arch::x86::__m128i::as_i8x16;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_pd_mask;true;true;true;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<usize, N>>::bitor;false;true;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::simd_max;false;true;true;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as fmt::Debug>::fmt;false;false;true;false
<str::IsNotEmpty as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_round_sd_mask;true;true;true;false
task::wake::ContextBuilder::<'a>::from_waker;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm_getmant_round_sh;true;true;true;false
<&i8 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<task::wake::LocalWaker as clone::Clone>::clone;false;true;true;false
ops::control_flow::ControlFlow::<B, C>::break_value;false;false;true;false
core_arch::x86::sse2::_mm_srli_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi16;true;true;false;false
num::saturating::Saturating::<u128>::rotate_left;false;false;false;false
num::<impl u64>::wrapping_mul;false;false;false;false
iter::traits::iterator::Iterator::is_sorted_by::check;false;false;true;false
num::saturating::Saturating::<u64>::swap_bytes;false;false;false;false
<hash::sip::Sip24Rounds as hash::sip::Sip>::d_rounds;false;false;true;false
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
net::ip_addr::Ipv6Addr::multicast_scope;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epu32;true;true;true;false
char::methods::<impl char>::is_ascii;false;false;false;false
<ops::control_flow::ControlFlow<B, C> as ops::try_trait::Try>::branch;false;false;true;false
<core_arch::simd::f64x4::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_mulhrs_epi16;true;true;false;false
<usize as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<isize as iter::range::Step>::forward_checked;false;false;false;false
<&mut T as fmt::UpperExp>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtps_epu64;true;true;true;false
intrinsics::log2f16;true;false;true;false
core_arch::simd::u32x16::new;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::DivAssign<u16>>::div_assign;false;false;true;false
<&i32 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&num::saturating::Saturating<u64>>>::bitand_assign;false;false;true;false
num::<impl u16>::rem_euclid;false;false;false;false
num::wrapping::Wrapping::<u64>::reverse_bits;false;false;false;false
<iter::adapters::cloned::Cloned<I> as default::Default>::default;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::next_back;false;false;true;false
<str::iter::Chars<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_cvttpd_epi64;true;true;true;false
num::<impl i16>::checked_shr;false;true;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::fxsr::_fxrstor;true;true;true;false
<core_arch::simd::f64x1 as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvttss_u64;true;true;true;false
net::parser::<impl str::traits::FromStr for net::ip_addr::IpAddr>::from_str;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_mul_round_sh;true;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
num::<impl i16>::from_str_radix;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&num::wrapping::Wrapping<u8>>>::add_assign;false;false;true;false
escape::EscapeIterInner::<N>::unicode;false;false;false;false
core_arch::simd::f64x1;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtxps_ph;true;true;true;false
num::<impl i8>::reverse_bits;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_broadcast_i32x4;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shldi_epi32;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u32>::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_add_round_pd;true;true;true;false
core_arch::x86::avx512vnni::_mm_dpwuuds_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi8;true;true;false;false
num::<impl u64>::wrapping_div_euclid;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f64>::gt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_round_ph;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_size_hint;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_srlv_epi16;true;true;false;false
core_arch::simd::f16x4::splat::JustOne;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 4>> for core_arch::x86::__m256d>::from;false;false;true;false
<convert::Infallible as cmp::PartialEq>::eq;false;false;false;false
core_arch::simd::u64x8::new;false;false;false;false
<u128 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_mulhi_epi16;true;true;false;false
sync::atomic::AtomicBool::store;false;true;true;false
convert::num::<impl convert::From<i16> for f32>::from;false;false;false;false
num::<impl usize>::strict_mul;false;false;false;false
<range::iter::IterRangeFrom<A> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmpeq_epi16_mask;true;true;false;false
num::error::TryFromIntError;false;false;false;false
core_arch::x86::avx512f::_mm_mask_blend_epi64;true;true;false;false
<i32 as ops::bit::Not>::not;false;false;false;false
num::<impl u32>::wrapping_shl;false;true;false;false
<ptr::unique::Unique<T> as convert::From<ptr::non_null::NonNull<T>>>::from;false;false;true;false
<num::dec2flt::ParseFloatError as fmt::Debug>::fmt;false;false;true;false
<&usize as ops::bit::Shl<&u64>>::shl;false;false;false;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::count;false;false;true;true
<&'a isize as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_movepi16_mask;true;true;false;false
<u128 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
<Iter as iter::traits::collect::TraitK<EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
core_arch::x86::__m512i::as_i8x64;false;false;false;false
iter::adapters::flatten::flatten_one;false;false;false;false
<i8 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::sse41::_mm_dp_ps;true;true;true;false
num::<impl u8>::ilog;false;false;false;false
core_arch::x86::avx512f::_mm_mask_shuffle_ps;true;true;true;false
<isize as ops::arith::Rem>::rem;false;false;false;false
<core_arch::simd::f32x16 as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add;false;false;false;false
<usize as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
num::<impl u32>::reverse_bits;false;false;false;false
core_arch::x86::avx512f::_mm_cvttsd_i32;true;true;true;false
<core_arch::simd::u16x4 as clone::Clone>::clone;false;false;false;false
num::<impl u8>::strict_rem;false;false;false;false
<slice::iter::SplitN<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<char::TryFromCharError as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicPtr::<T>::compare_exchange;false;true;true;false
slice::<impl [T]>::rchunks_mut;false;false;true;false
alloc::layout::Layout::from_size_align_unchecked;true;false;false;false
cmp::impls::<impl cmp::PartialOrd for u64>::lt;false;false;false;false
f32::<impl f32>::from_ne_bytes;false;false;false;false
<net::parser::AddrParseError as fmt::Display>::fmt;false;false;true;false
num::<impl u32>::next_power_of_two;false;false;false;false
str::<impl str>::eq_ignore_ascii_case;false;false;false;false
intrinsics::mir::CastPtrToPtr;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi16;true;true;false;false
ptr::mut_ptr::<impl *mut T>::wrapping_byte_add;false;false;true;false
<u64 as ops::bit::Shr<&i32>>::shr;false;false;false;false
fmt::num::<impl fmt::LowerHex for u128>::fmt;false;false;true;false
<bstr::ByteStr as ops::deref::DerefMut>::deref_mut;false;false;true;false
net::parser::Parser::<'a>::read_separator;false;false;true;false
core_arch::x86::avx512f::_mm512_i64scatter_ps;true;true;true;false
fmt::float::<impl fmt::Debug for f128>::fmt;false;true;true;false
core_arch::x86::avx512f::_mm512_rol_epi32;true;true;false;false
<&u32 as ops::arith::Rem<&u32>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm_rorv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fmadd_ph;true;true;true;false
num::dec2flt::common::BiasedFp::zero_pow2;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::index_mut;false;false;true;false
core_arch::x86::avx512f::_mm_mask_movedup_pd;true;true;true;false
<num::saturating::Saturating<i128> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_sll_epi16;true;true;false;false
<num::saturating::Saturating<i64> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_extractf32x8_ps;true;true;true;false
sync::atomic::AtomicPtr::<T>::from_mut_slice;false;true;true;false
core_arch::x86::avx512f::_mm512_cvtpd_epu32;true;true;true;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_nth;false;false;true;true
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u64>> for u64>::rem_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_broadcastw_epi16;true;true;false;false
num::<impl i128>::checked_div_euclid;false;false;false;false
<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<net::ip_addr::Ipv6Addr>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_unpackhi_pd;true;true;true;false
ptr::alignment::Alignment::new;false;true;false;false
hash::Hasher::write_i16;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_mulhi_epu16;true;true;false;false
core_arch::simd::i16x2;false;false;false;false
num::<impl u8>::is_ascii_punctuation;false;false;false;false
<&num::nonzero::NonZero<i16> as ops::arith::Neg>::neg;false;false;false;false
<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv6Addr>>::eq;false;false;true;false
<num::niche_types::NonZeroI32Inner as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::count_zeros;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::MulAssign<&u64>>::mul_assign;false;false;true;false
<str::iter::SplitNInternal<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_fcmadd_sch;true;true;true;false
<num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul;false;false;false;false
<str::iter::Lines<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::niche_types::NonZeroI16Inner::as_inner;false;false;false;false
str::<impl default::Default for &str>::default;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u64> for &'lhs core_simd::vector::Simd<u64, N>>::shl;false;false;false;false
<marker::variance::PhantomContravariant<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_scalef_sd;true;true;true;false
num::<impl i8>::from_ne_bytes;false;false;false;false
<range::Range<Idx> as hash::Hash>::hash;false;false;true;false
<num::nonzero::NonZero<T> as cmp::Ord>::clamp;false;true;true;false
<num::saturating::Saturating<u8> as ops::arith::RemAssign<&u8>>::rem_assign;false;false;true;false
<&num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpwsuds_epi32;true;true;false;false
<num::saturating::Saturating<i32> as ops::arith::Rem>::rem;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign;false;false;true;false
num::<impl u16>::checked_next_power_of_two;false;false;false;false
core_arch::x86::avx512f::_mm_mmask_i32gather_epi32;true;true;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<f64, N>>::rem;false;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<u16>>::sub_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::read_unaligned;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitAnd>::bitand;false;false;false;false
<&'a u32 as ops::arith::Sub<u32>>::sub;false;false;false;false
<&u32 as ops::bit::BitXor<&u32>>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_avg_epu16;true;true;false;false
core_arch::x86::avx512fp16::_mm256_setzero_ph;true;false;false;false
<&num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div;false;false;false;false
cell::lazy::LazyCell::<T, F>::force_mut::really_init_mut;true;true;true;false
<str::IsAsciiWhitespace as clone::Clone>::clone;false;false;false;false
cmp::Eq::assert_receiver_is_total_eq;false;false;false;false
sync::atomic::AtomicI8::fetch_xor;false;true;true;false
<fmt::num::Binary as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpeq_epu16_mask;true;true;false;false
core_arch::x86::avx512bw::_mm512_cmpneq_epi8_mask;true;true;false;false
num::<impl u128>::swap_bytes;false;false;false;false
panicking::panic_nounwind_fmt::compiletime;false;false;true;false
core_arch::x86::avx512fp16::_mm_fmul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu16;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundss_si64;true;true;true;false
core_arch::simd::u8x16::splat::JustOne;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32lo_pd;true;true;true;false
<i16 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr;false;false;false;false
iter::traits::double_ended::DoubleEndedIterator::nth_back;false;false;true;false
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
<core_arch::simd::i32x8 as clone::Clone>::clone;false;false;false;false
<&'a isize as ops::bit::Shr<u128>>::shr;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
<num::niche_types::NonZeroU16Inner as fmt::Debug>::fmt;false;false;true;false
"array::equality::<impl cmp::PartialEq<[U; N]> for [T; N]>::eq";false;false;false;false
<I as iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked;true;true;true;false
slice::index::slice_index_order_fail;false;false;false;false
core_arch::x86::avx::_mm256_rsqrt_ps;true;true;true;false
<core_simd::vector::Simd<T, N> as hash::Hash>::hash;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_min;false;true;false;false
<&'a usize as ops::bit::Shl<u16>>::shl;false;false;false;false
num::<impl u32>::is_multiple_of;false;false;false;false
core_arch::simd::f16x8::from_array;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fnmsub_pd;true;true;true;false
core_arch::x86::__m128i::splat::JustOne;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&i32>>::add_assign;false;false;true;false
"array::iter::<impl iter::traits::collect::IntoIterator for [T; N]>::into_iter";false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&num::wrapping::Wrapping<i8>>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_rolv_epi32;true;true;false;false
<i128 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<iter::adapters::take::Take<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
cell::RefCell::<T>::take;false;false;true;false
sync::atomic::AtomicU32::into_inner;false;false;true;false
core_arch::x86::__m256bh::as_i16x16;false;false;false;false
num::saturating::Saturating::<i32>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_getexp_round_pd;true;true;true;false
core_arch::x86::avx512cd::_mm_lzcnt_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_adds_epu16;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_fpclass_pd_mask;true;true;true;false
<net::ip_addr::Ipv6Addr as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_rolv_epi32;true;true;false;false
<i64 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
clone::impls::<impl clone::Clone for bool>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmpgt_epu8_mask;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<u16, N>>::sum;false;false;false;true
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_cvtusepi16_epi8;true;true;false;false
<str::iter::EscapeDefault<'a> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::shift_elements_right;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_or_epi32;true;true;false;false
<option::Option<T> as ops::try_trait::FromResidual<option::Option<convert::Infallible>>>::from_residual;false;false;false;false
num::<impl i64>::min_value;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvttpd_epi32;true;true;true;false
num::<impl u8>::wrapping_neg;false;false;false;false
num::<impl isize>::checked_isqrt;false;true;false;false
<time::Duration as ops::arith::Sub>::sub;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
net::parser::Parser::<'a>::read_ipv6_addr::read_groups;false;false;true;true
core_arch::x86::avx512f::_mm512_mask_fmsub_pd;true;true;true;false
intrinsics::simd::simd_saturating_sub;true;false;false;false
<num::niche_types::Nanoseconds as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_permutevar_ps;true;true;true;false
<core_arch::simd::u16x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
num::nonzero::NonZero::<i32>::trailing_zeros;false;true;false;false
<i8 as iter::range::Step>::steps_between;false;false;false;false
num::niche_types::NonZeroIsizeInner::new;false;false;false;false
str::traits::<impl cmp::PartialEq for str>::eq;false;false;false;false
cmp::impls::<impl cmp::Ord for isize>::cmp;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f16>::ge;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_epi32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_cmple_epu16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_rcp_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtpd_ph;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for char>::partial_cmp;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add;false;false;false;false
num::<impl i32>::strict_pow;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_fixupimm_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_dbsad_epu8;true;true;false;false
num::nonzero::NonZero::<isize>::is_positive;false;false;false;false
<&num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sllv_epi32;true;true;false;false
num::<impl i16>::is_positive;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sqrt_round_ss;true;true;true;false
slice::sort::shared::smallsort::small_sort_fallback;false;false;true;false
<u8 as ops::arith::Sub>::sub;false;false;false;false
<isize as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx::_mm256_storeu2_m128d;true;true;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::iterator::Iterator>::next;false;false;true;true
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<usize, N>>::bitxor;false;true;false;false
<&'a i8 as ops::bit::Shl<i16>>::shl;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::count::count;false;false;false;true
<net::ip_addr::Ipv6Addr as cmp::PartialOrd>::partial_cmp;false;false;false;false
intrinsics::raw_eq;true;false;false;false
ptr::const_ptr::<impl *const T>::wrapping_sub;false;false;true;false
<iter::sources::repeat_n::RepeatN<A> as ops::drop::Drop>::drop;false;false;true;false
<iter::adapters::copied::Copied<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::sse::_mm_store_ps1;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_sllv_epi64;true;true;false;false
<core_arch::simd::u32x8 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_broadcastsd_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_rsqrt14_sd;true;true;true;false
num::<impl i64>::carrying_add;false;false;false;false
core_arch::x86_64::bmi2::_bzhi_u64;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_max;false;true;false;false
<num::saturating::Saturating<i8> as ops::arith::RemAssign<&i8>>::rem_assign;false;false;true;false
num::<impl usize>::min_value;false;false;false;false
core_simd::vector::Simd::<T, N>::store_select_unchecked;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::AddAssign<&u8>>::add_assign;false;false;true;false
<&'a i128 as ops::bit::Shr<i128>>::shr;false;false;false;false
num::<impl u128>::wrapping_pow;false;false;false;true
ptr::const_ptr::<impl *const T>::wrapping_add;false;false;true;false
num::<impl u32>::isolate_most_significant_one;false;false;false;false
<isize as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
<slice::ascii::EscapeByte as ops::function::Fn<(&u8,)>>::call;false;false;false;false
core_arch::x86::avx512f::_mm512_max_epu64;true;true;false;false
core_arch::x86::avx512cd::_mm256_broadcastmb_epi64;true;true;false;false
num::<impl u8>::wrapping_div_euclid;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fnmadd_pd;true;true;true;false
<(C, B, A, Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::get_mut;false;false;true;false
<u32 as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu32_pd;true;true;false;false
cell::Cell::<[T]>::as_slice_of_cells;false;true;true;false
convert::num::<impl convert::TryFrom<u128> for i8>::try_from;false;false;false;false
num::<impl i32>::from_ascii_radix;false;false;false;true
core_arch::x86::sse2::_mm_cvttps_epi32;true;true;true;false
core_arch::x86::avx::_mm_testnzc_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rorv_epi64;true;true;false;false
<str::iter::RMatchIndices<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
convert::num::<impl convert::TryFrom<i64> for u32>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fnmsub_ss;true;true;true;false
num::<impl u128>::from_str_radix;false;false;false;false
core_arch::x86::avx512bw::_mm512_srai_epi16;true;true;false;false
<i8 as iter::range::Step>::backward_checked;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<i16 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmplt_epu64_mask;true;true;false;false
core_arch::x86::avx2::_mm256_sll_epi16;true;true;false;false
<cmp::Ordering as cmp::PartialEq>::eq;false;false;false;false
tuple::<impl cmp::PartialOrd for (Z, Y, X, W, V, U, T)>::ge;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::SpecFold>::spec_fold;false;true;true;true
core_arch::x86::avx512fp16::_mm512_maskz_reduce_ph;true;true;true;false
<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign;false;false;true;false
<(EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(L, K, J, I, H, G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u32> for &'lhs core_simd::vector::Simd<u32, N>>::shl;false;false;false;false
<ptr::alignment::Alignment as convert::TryFrom<num::nonzero::NonZero<usize>>>::try_from;false;false;false;false
core_arch::x86::bmi1::_bextr2_u32;true;true;false;false
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::without_provenance;false;true;true;false
core_arch::simd::u16x32::from_array;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
<&num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div;false;false;false;false
num::nonzero::NonZero::<i16>::reverse_bits;false;true;false;false
f64::<impl f64>::is_negative;false;false;true;false
num::nonzero::NonZero::<i64>::checked_pow;false;true;false;false
num::<impl i16>::wrapping_mul;false;false;false;false
<num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor;false;false;false;false
<num::nonzero::NonZero<u64> as str::traits::FromStr>::from_str;false;false;false;false
<&mut I as iter::traits::iterator::IteratorRefSpec>::spec_fold;false;false;true;false
<usize as ops::bit::ShlAssign>::shl_assign;false;false;true;false
hash::Hasher::write_u128;false;false;true;false
slice::iter::RSplitN::<'a, T, P>::new;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 4>> for core_arch::x86::__m256i>::from;false;false;false;false
<&num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor;false;false;false;false
<core_arch::simd::i64x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fixupimm_pd;true;true;true;false
<(EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(H, G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXor>::bitxor;false;false;false;false
num::<impl u128>::overflowing_neg;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign;false;false;true;false
core_arch::x86::sse::_mm_undefined_ps;true;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::to_usize;false;false;false;false
intrinsics::fmaf128;true;false;true;false
fmt::FormattingOptions::debug_as_hex;false;false;true;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::nth;false;false;true;false
core_arch::x86::sse2::_mm_lfence;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_sllv_epi16;true;true;false;false
<f128 as convert::num::FloatToInt<i8>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_range_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_max_round_pd;true;true;true;false
<u8 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::saturating_neg;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi32_pd;true;true;false;false
<u8 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
str::<impl str>::contains;false;false;false;false
num::<impl u128>::to_le_bytes;false;false;false;false
sync::atomic::AtomicPtr::<T>::store;false;true;true;false
core_arch::simd::u16x8::splat;false;true;false;false
<&'a num::saturating::Saturating<usize> as ops::arith::Add<num::saturating::Saturating<usize>>>::add;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<core_arch::simd::u8x64::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::sse41::_mm_cvtepi32_epi64;true;true;false;false
num::nonzero::NonZero::<isize>::cast_unsigned;false;true;false;false
f128::<impl f128>::total_cmp;false;false;true;false
num::<impl i128>::checked_mul;false;false;false;false
str::iter::MatchIndicesInternal::<'a, P>::next;false;false;true;false
num::<impl usize>::to_ne_bytes;false;false;false;false
error::Request::<'a>::would_be_satisfied_by;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmadd_ps;true;true;true;false
sync::atomic::AtomicI16::update;false;false;true;true
core_arch::x86::avx::_mm256_or_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_fmsubadd_pd;true;true;true;false
<f32 as ops::arith::Sub<&f32>>::sub;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_srai_epi64;true;true;false;false
<core_arch::simd::f32x4 as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtpd_ph;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_unpackhi_epi8;true;true;false;false
unit::<impl iter::traits::collect::FromIterator<()> for ()>::from_iter;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_slli_epi32;true;true;false;false
str::<impl str>::char_indices;false;false;false;false
<core_arch::simd::i64x2 as fmt::Debug>::fmt;false;false;true;false
<&'a num::saturating::Saturating<i64> as ops::arith::Sub<num::saturating::Saturating<i64>>>::sub;false;false;false;false
num::wrapping::Wrapping::<i16>::reverse_bits;false;false;false;false
tuple::<impl cmp::PartialOrd for (U, T)>::gt;false;false;false;false
<num::wrapping::Wrapping<T> as fmt::Octal>::fmt;false;false;true;false
<core_arch::simd::f64x8::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm512_cvtt_roundpd_epu64;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i32> for &'lhs core_simd::vector::Simd<i32, N>>::shl;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign;false;false;true;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<f32, N>>::sub;false;true;true;false
<u32 as ops::bit::Shr<isize>>::shr;false;false;false;false
f16::<impl f16>::is_sign_positive;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_roundscale_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpge_epi64_mask;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx::_mm256_movedup_pd;true;true;true;false
core_arch::x86::sse::_mm_cmpgt_ss;true;true;true;false
convert::num::<impl convert::From<u8> for i32>::from;false;false;false;false
<core_arch::x86::__m128d as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_cvtepi8_epi16;true;true;false;false
<slice::iter::Iter<'_, T> as clone::Clone>::clone;false;false;true;false
range::iter::IterRange;false;false;true;false
num::nonzero::NonZero::<u32>::checked_mul;false;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut::precondition_check;false;false;false;false
ptr::metadata::from_raw_parts_mut;false;false;true;false
<&'a num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<u16> for num::nonzero::NonZero<u16>>::try_from;false;false;false;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
num::<impl u128>::unchecked_disjoint_bitor;true;true;false;false
fmt::rt::Argument::<'_>::new_lower_exp;false;false;false;false
intrinsics::atomic_umin_acquire;true;false;true;false
<&'a i64 as ops::bit::Shl<u32>>::shl;false;false;false;false
sync::atomic::AtomicI8::fetch_and;false;true;true;false
num::wrapping::Wrapping::<i16>::is_negative;false;false;false;false
num::niche_types::NonZeroI64Inner::new_unchecked;true;false;false;false
<i64 as iter::range::Step>::backward;false;false;false;false
num::wrapping::Wrapping::<i16>::from_be;false;false;false;false
core_arch::simd::u16x8::from_array;false;false;false;false
num::saturating::Saturating::<i64>::from_be;false;false;false;false
num::<impl u64>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_expandloadu_epi32;true;true;true;false
<f64 as iter::traits::accum::Sum<&'a f64>>::sum;false;false;false;true
fmt::num::<impl fmt::Debug for i8>::fmt;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
<i64 as fmt::num::DisplayInt>::from_u8;false;false;false;false
core_arch::x86::sse2::_mm_loadr_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtt_roundpd_epu32;true;true;true;false
<num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add;false;false;false;false
num::<impl u16>::unchecked_shl::precondition_check;false;false;false;false
<&'a num::saturating::Saturating<isize> as ops::arith::Sub<num::saturating::Saturating<isize>>>::sub;false;false;false;false
<u64 as default::Default>::default;false;false;false;false
<&i16 as ops::bit::Not>::not;false;false;false;false
<&u128 as ops::bit::Shl<&isize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_permutex2var_epi32;true;true;false;false
<u16 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_ternarylogic_epi32;true;true;false;false
fmt::Formatter::<'a>::debug_struct_field4_finish;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::abs_diff;false;false;false;false
<&i8 as ops::bit::Shr<&u16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_min_epi32;true;true;false;false
f16::<impl f16>::from_ne_bytes;false;false;false;false
ptr::non_null::NonNull::<T>::write_bytes;true;true;true;false
<f16 as ops::arith::SubAssign<&f16>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmple_epi32_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_cvttpd_epu64;true;true;true;false
num::nonzero::NonZero::<usize>::trailing_zeros;false;true;false;false
<fmt::num::Octal as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::__m512::as_array;false;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epi64;true;true;true;false
core_arch::x86::sse2::_mm_unpackhi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_i32scatter_epi32;true;true;true;false
<(B, A) as iter::traits::collect::FromIterator<(EB, EA)>>::from_iter;false;false;false;false
<&'a i128 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_div_round_pd;true;true;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipFmt<A, B>>::fmt;false;false;true;false
intrinsics::atomic_cxchgweak_acquire_seqcst;true;false;true;false
num::nonzero::NonZero::<i64>::rotate_left;false;true;false;false
<char::ToLowercase as iter::traits::iterator::Iterator>::last;false;false;true;true
<i16 as iter::range::Step>::forward_checked;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::SubAssign<usize>>::sub_assign;false;false;true;false
<i16 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<&num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr;false;false;false;false
intrinsics::atomic_store_relaxed;true;false;true;false
core_arch::simd::u32x16;false;false;false;false
num::<impl i128>::isolate_least_significant_one;false;false;false;false
<i32 as ops::bit::Shl<i64>>::shl;false;false;false;false
<core_arch::simd::u64x1::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpeq_epi32_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdi_epi64;true;true;false;false
ptr::non_null::NonNull::<T>::with_addr;false;true;true;false
str::<impl str>::slice_unchecked;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
<str::iter::EscapeUnicode<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtt_roundps_epi32;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi8;true;true;false;false
core_arch::simd::f64x2::splat;false;true;true;false
<u128 as ops::arith::AddAssign>::add_assign;false;false;true;false
<cell::Ref<'_, T> as fmt::Display>::fmt;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign;false;false;true;false
<panic::unwind_safe::AssertUnwindSafe<F> as future::future::Future>::poll;false;true;true;false
core_arch::x86::avx512f::_mm_mask_sll_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_cmpneq_epi16_mask;true;true;false;false
core_arch::x86_64::amx::_tile_dpfp16ps;true;true;false;false
num::nonzero::NonZero::<usize>::unchecked_add;true;true;false;false
<(EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(H, G, F, E, D, C, B, A)>>::extend;false;false;true;false
num::<impl i32>::abs;false;false;false;false
panicking::panic_const::panic_const_neg_overflow;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::abs;false;true;true;false
core_arch::x86::sse::_mm_store_ss;true;true;true;false
intrinsics::fsub_algebraic;false;false;false;false
slice::<impl [T]>::split_last;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_min;false;true;false;false
<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&num::wrapping::Wrapping<u32>>>::rem_assign;false;false;true;false
<str::error::ParseBoolError as error::Error>::description;false;false;false;false
num::wrapping::Wrapping::<u8>::rotate_right;false;false;false;false
<&'a num::wrapping::Wrapping<i32> as ops::arith::Rem<num::wrapping::Wrapping<i32>>>::rem;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fcmadd_pch;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_getmant_round_pd;true;true;true;false
"<net::ip_addr::Ipv6Addr as convert::From<[u16; 8]>>::from";false;false;false;false
num::<impl u32>::overflowing_neg;false;false;false;false
sync::atomic::AtomicI32::from_mut;false;true;true;false
num::flt2dec::estimator::estimate_scaling_factor;false;false;false;false
num::<impl i128>::unchecked_sub;true;false;false;false
<u64 as iter::traits::accum::Sum>::sum;false;false;false;true
<u8 as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_fmadd_round_ss;true;true;true;false
<u8 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
error::tags::Ref;false;false;false;false
task::wake::ContextBuilder::<'a>::local_waker;false;false;true;false
future::async_drop::defer;true;false;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign;false;false;true;false
<i128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
str::<impl str>::rsplit;false;false;false;false
<any::TypeId as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i32gather_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cmp_round_ph_mask;true;true;true;false
<&'c &'b str as str::pattern::Pattern>::is_contained_in;false;false;false;false
<u64 as ops::bit::Shr<u128>>::shr;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<core_arch::simd::u32x8 as fmt::Debug>::fmt;false;false;true;false
num::<impl usize>::checked_div_euclid;false;false;false;false
fmt::num::<impl fmt::Debug for u8>::fmt;false;false;true;false
<&'a num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl;false;false;false;false
intrinsics::simd::simd_reduce_max;true;false;false;false
core_arch::x86::avx::_mm256_shuffle_pd;true;true;true;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<char::EscapeDefault as iter::traits::iterator::Iterator>::last;false;false;true;false
<&'a isize as ops::bit::Shl<i128>>::shl;false;false;false;false
<&'a num::wrapping::Wrapping<isize> as ops::arith::Sub<num::wrapping::Wrapping<isize>>>::sub;false;false;false;false
<f32 as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512bw::_mm_mask_cmpneq_epu16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepi64_ph;true;true;false;false
<i128 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<core_arch::simd::u16x8 as fmt::Debug>::fmt;false;false;true;false
<iter::sources::once_with::OnceWith<F> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
num::<impl u128>::div_ceil;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmsub_round_ph;true;true;true;false
num::nonzero::NonZero::<u8>::swap_bytes;false;true;false;false
char::methods::<impl char>::is_ascii_uppercase;false;false;false;false
core_arch::simd::u8x4::from_array;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_roundscale_round_sh;true;true;true;false
fmt::FormattingOptions::sign_aware_zero_pad;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_set1_epi8;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for i64>::gt;false;false;false;false
cell::lazy::LazyCell::<T, F>::new;false;false;false;false
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm_mask_min_pd;true;true;true;false
intrinsics::atomic_cxchgweak_release_seqcst;true;false;true;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u32>> for u32>::rem;false;false;false;false
num::<impl i32>::checked_neg;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_broadcastss_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i16> for &'lhs core_simd::vector::Simd<i16, N>>::shr;false;false;false;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_unpackhi_pd;true;true;true;false
<i32 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
<&num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor;false;false;false;false
cell::lazy::panic_poisoned;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvttps_epi64;true;true;true;false
core_arch::x86::ssse3::_mm_maddubs_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_mul_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i8, 64>>::from;false;false;false;false
<u16 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
num::<impl i128>::saturating_add_unsigned;false;false;false;false
<&i32 as ops::bit::Shr<&i64>>::shr;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::next;false;false;true;false
slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::runtime;false;false;false;false
core_arch::x86::avx512fp16::_mm_rcp_ph;true;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;false
core_arch::x86::avx512bf16::_mm_mask_cvtneps_pbh;true;true;true;false
num::<impl u16>::saturating_add;false;false;false;false
<&'a u16 as ops::bit::Shr<u128>>::shr;false;false;false;false
<usize as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::Mul>::mul;false;false;false;false
<ptr::unique::Unique<T> as fmt::Debug>::fmt;false;false;true;false
<i64 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<num::nonzero::NonZero<usize> as str::traits::FromStr>::from_str;false;false;false;false
<isize as ops::arith::Mul<&isize>>::mul;false;false;false;false
<option::IterMut<'a, A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u8, 32>>::from;false;false;false;false
cell::is_writing;false;false;false;false
sync::atomic::AtomicUsize::compare_and_swap;false;false;true;false
ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge::runtime;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepu32_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fmadd_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_setr4_ps;true;true;true;false
f16::<impl f16>::is_infinite;false;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::bit::BitXor<num::wrapping::Wrapping<u16>>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_and_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_reduce_ss;true;true;true;false
str::<impl str>::as_str;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpunord_pd_mask;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_size_hint;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&isize>>::mul_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_try_fold;false;false;true;true
slice::<impl [T]>::as_ptr;false;false;false;false
<i8 as ops::bit::BitOr<&i8>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtpd_epu32;true;true;true;false
<i8 as fmt::num::DisplayInt>::to_u128;false;false;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<i8, N>>::sub;false;true;false;false
<i128 as ops::arith::Mul<&i128>>::mul;false;false;false;false
core_arch::x86::avx::_mm256_maskload_ps;true;true;true;false
sync::atomic::AtomicI64::fetch_max;false;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::leading_zeros;false;false;false;false
panicking::assert_matches_failed::Pattern;false;false;false;false
<error::tags::MaybeSizedValue<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_sqrt_ps;true;true;true;false
ptr::const_ptr::<impl *const T>::guaranteed_eq;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi32_storeu_epi8;true;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
<num::nonzero::NonZero<isize> as ops::arith::Neg>::neg;false;true;false;false
sync::atomic::AtomicU16::fetch_and;false;true;true;false
core_arch::x86::avx512f::_kxnor_mask16;true;true;false;false
num::saturating::Saturating::<isize>::count_ones;false;false;false;false
core_arch::x86::avx512bw::_mm512_slli_epi16;true;true;false;false
<str::pattern::TwoWaySearcher as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_fnmsub_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm_cvti32_sd;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign;false;false;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::find;false;false;true;true
<core_arch::simd::m8x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
num::<impl usize>::abs_diff;false;false;false;false
ptr::write_volatile;true;true;true;false
f32::<impl f32>::maximum;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fnmsub_round_sd;true;true;true;false
future::async_drop::fuse;false;false;false;false
core_arch::x86::avx2::_mm256_blendv_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm256_cvttps_epu64;true;true;true;false
sync::atomic::AtomicIsize::get_mut;false;false;true;false
num::<impl u16>::trailing_zeros;false;false;false;false
cmp::impls::<impl cmp::PartialEq for u128>::ne;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor;false;false;false;false
<u64 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<ops::range::Range<u8> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u8>>>::setup;false;false;true;false
<isize as iter::range::Step>::forward_unchecked;true;true;false;false
str::<impl str>::split_once;false;true;false;false
result::Result::<T, E>::expect;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_min_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_rolv_epi64;true;true;false;false
str::iter::Matches;false;false;true;false
core_arch::simd::f64x2;false;false;true;false
num::<impl i64>::wrapping_rem_euclid;false;false;false;false
<&i8 as ops::arith::Mul<&i8>>::mul;false;false;false;false
<[A] as slice::cmp::SlicePartialEq<B>>::equal;false;true;false;false
core_arch::x86::avx512f::_mm_mask_xor_epi64;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u8>::le;false;false;false;false
<str::iter::EncodeUtf16<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epu32;true;true;true;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_mullo_epi64;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_packs_epi16;true;true;false;false
<num::fmt::Formatted<'a> as clone::Clone>::clone;false;false;false;false
<u32 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_loadu_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvtph_epu64;true;true;true;false
<&u8 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<u64 as ops::bit::Shr<u32>>::shr;false;false;false;false
<&i8 as ops::bit::Shr<&u128>>::shr;false;false;false;false
num::<impl usize>::to_le;false;false;false;false
<u32 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<result::Result<T, E> as cmp::PartialOrd>::partial_cmp;false;false;true;false
tuple::<impl cmp::PartialEq for (D, C, B, A, Z, Y, X, W, V, U, T)>::eq;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<usize>>::add_assign;false;false;true;false
core_arch::x86::__m256h::as_array;false;true;true;false
num::<impl i32>::strict_abs;false;false;false;false
<mem::maybe_uninit::MaybeUninit<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512cd::_mm512_conflict_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_packus_epi16;true;true;false;false
<num::flt2dec::decoder::Decoded as cmp::PartialEq>::eq;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::is_null;false;false;true;false
<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign<&net::ip_addr::Ipv4Addr>>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmple_epu16_mask;true;true;false;false
<u16 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Sub>::sub;false;false;false;false
num::<impl i64>::checked_ilog2;false;true;false;false
num::overflow_panic::div;false;false;false;false
num::<impl usize>::wrapping_pow;false;false;false;true
fmt::num::<impl fmt::Binary for i32>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_add_epi8;true;true;false;false
core_arch::x86::avx512bw::_kshiftri_mask64;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtt_roundpd_epi32;true;true;true;false
<&'a u8 as ops::bit::Shl<u128>>::shl;false;false;false;false
num::nonzero::NonZero::<isize>::saturating_neg;false;false;false;false
<&num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_rolv_epi64;true;true;false;false
cmp::impls::<impl cmp::Ord for bool>::max;false;false;false;false
num::nonzero::NonZero::<isize>::unsigned_abs;false;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epi32;true;true;true;false
f128::<impl f128>::clamp::do_panic;false;false;true;false
<usize as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
fmt::num::<impl fmt::LowerHex for u64>::fmt;false;false;true;false
slice::<impl [T]>::sort_unstable;false;false;true;false
core_arch::simd::u8x2::from_array;false;false;false;false
core_arch::x86::__m128bh::as_u32x4;false;false;false;false
sync::atomic::AtomicI8::get_mut;false;false;true;false
core_arch::x86::sse41::_mm_cvtepu32_epi64;true;true;false;false
num::wrapping::Wrapping::<u64>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm512_stream_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_fmsub_pd;true;true;true;false
core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi16;true;true;false;false
<sync::atomic::AtomicI64 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_max_epu16;true;true;false;false
"<[char; N] as str::pattern::MultiCharEq>::matches";false;false;true;false
num::dec2flt::dec2flt;false;false;false;false
fmt::Formatter::<'a>::sign_aware_zero_pad;false;false;true;false
slice::raw::from_mut;false;false;true;false
num::<impl u64>::unchecked_sub;true;false;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_ps;true;true;true;false
net::socket_addr::SocketAddr::V4;false;false;false;false
fmt::num::imp::exp_u64;false;true;true;true
cmp::impls::<impl cmp::PartialOrd for isize>::gt;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::is_sorted;false;false;true;false
num::<impl i16>::wrapping_sub;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmplt_epu8_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi16;true;true;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign>::bitor_assign;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_permute_ps;true;true;true;false
f128::<impl f128>::to_be_bytes;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
num::<impl usize>::div_euclid;false;false;false;false
<&num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_sub_sh;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_range_pd;true;true;true;false
core_arch::x86::bt::_bittest;true;true;true;false
core_arch::x86::sse41::_mm_cvtepu16_epi32;true;true;false;false
num::<impl i8>::rotate_left;false;false;false;false
<u128 as iter::range::Step>::steps_between;false;false;false;false
<u16 as random::Random>::random;false;false;true;false
num::wrapping::Wrapping::<isize>::trailing_zeros;false;false;false;false
ptr::const_ptr::<impl *const T>::is_null::runtime;false;false;true;false
core_arch::x86::avx512f::_mm256_i64scatter_ps;true;true;true;false
<u64 as fmt::num::DisplayInt>::to_u8;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
num::saturating::Saturating::<u32>::leading_zeros;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::as_mut_ptr;false;false;true;false
<i128 as ops::bit::Shr>::shr;false;false;false;false
num::saturating::Saturating::<u16>::to_be;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
<&num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<&'a i128 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_broadcast_f64x2;true;true;true;false
<u16 as ops::bit::Shr<i64>>::shr;false;false;false;false
num::<impl u8>::from_ascii;false;false;false;false
<f32 as ops::arith::Mul>::mul;false;false;true;false
<i8 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
<&f64 as ops::arith::Neg>::neg;false;false;true;false
<fmt::Alignment as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_castsi256_pd;true;false;false;false
<mem::manually_drop::ManuallyDrop<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
sync::atomic::AtomicI16::get_mut_slice;false;true;true;false
core_arch::x86::avx512bw::_mm256_cmp_epu16_mask;true;true;false;false
num::nonzero::NonZero::<i128>::is_positive;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtepu64_ph;true;true;false;false
fmt::float::<impl fmt::LowerExp for f64>::fmt;false;false;true;false
core_arch::x86::avx512vbmi::_mm512_mask_permutex2var_epi8;true;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Mul<&num::wrapping::Wrapping<i64>>>::mul;false;false;false;false
core_arch::x86::sse2::_mm_load1_pd;true;true;true;false
num::nonzero::NonZero::<u128>::ilog10;false;false;false;false
net::ip_addr::Ipv4Addr::is_loopback;false;false;false;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::Searcher<'a>>::haystack;false;false;false;false
<isize as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi16;true;true;false;false
<&mut I as iter::traits::double_ended::DoubleEndedIteratorRefSpec>::spec_rfold;false;false;true;true
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&isize> for &'lhs core_simd::vector::Simd<isize, N>>::shl;false;false;false;false
core_arch::x86::ssse3::_mm_alignr_epi8;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u32>::lt;false;false;false;false
core_arch::x86::avx512f::_mm512_slli_epi64;true;true;false;false
num::nonzero::NonZero::<u64>::ilog2;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_getmant_round_ps;true;true;true;false
sync::atomic::AtomicI32::into_inner;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_rorv_epi32;true;true;false;false
<u8 as ops::arith::DivAssign<&u8>>::div_assign;false;false;true;false
net::ip_addr::Ipv6Addr::is_ipv4_mapped;false;false;false;false
core_arch::x86::avx512f::_mm_mask_andnot_epi64;true;true;false;false
intrinsics::mir::ReturnTo;false;false;false;false
<iter::adapters::map_windows::Buffer<T, N> as ops::drop::Drop>::drop;false;true;true;false
<u8 as ops::bit::Shr>::shr;false;false;false;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_shuffle_f64x2;true;true;true;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
<&num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
num::wrapping::Wrapping::<u16>::to_be;false;false;false;false
<ops::range::RangeInclusive<Idx> as cmp::PartialEq>::eq;false;false;true;false
<mem::manually_drop::ManuallyDrop<T> as default::Default>::default;false;false;false;false
<hash::sip::SipHasher as hash::Hasher>::write_str;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvttsh_u32;true;true;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::for_each;false;false;true;true
<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<i64>>::sub_assign;false;false;true;false
num::<impl u32>::strict_rem;false;false;false;false
<ops::coroutine::CoroutineState<Y, R> as cmp::Ord>::cmp;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<&u8>>::add_assign;false;false;true;false
<ops::range::RangeTo<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
<i8 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<i32 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
option::Option::<T>::is_some;false;false;true;false
core_arch::x86::eflags::__writeeflags;true;true;false;false
core_arch::simd::i32x8::splat::JustOne;false;false;false;false
<&u32 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<net::ip_addr::Ipv4Addr as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_range_round_ss;true;true;true;false
num::wrapping::Wrapping::<i32>::signum;false;false;false;false
num::saturating::Saturating::<i64>::abs;false;false;false;false
core_arch::x86::__m512bh::as_u16x32;false;false;false;false
ub_checks::maybe_is_nonoverlapping::compiletime;false;false;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::RemAssign<&num::saturating::Saturating<i32>>>::rem_assign;false;false;true;false
num::<impl i32>::unchecked_neg::precondition_check;false;false;false;false
sync::atomic::AtomicIsize::into_inner;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_loadu_epi8;true;true;true;false
<Iter as iter::traits::collect::TraitJ<EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_next_back;false;false;true;false
<core_arch::simd::u16x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u32> for &'lhs core_simd::vector::Simd<u32, N>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_add_epi8;true;true;false;false
fmt::FormattingOptions::alternate;false;false;true;false
core_arch::x86::avx512bw::_mm_movepi16_mask;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i128>::try_from;false;false;false;false
ptr::unique::Unique::<T>::as_mut;true;true;true;false
<&i128 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_srav_epi16;true;true;false;false
<num::saturating::Saturating<u128> as ops::arith::SubAssign<u128>>::sub_assign;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::Rem>::rem;false;false;false;false
<time::TryFromFloatSecsError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_fmsubadd_ph;true;true;true;false
num::<impl u16>::checked_div_euclid;false;false;false;false
core_arch::x86::avx::_mm256_undefined_pd;true;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::index;false;false;true;false
<task::wake::ExtData<'a> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i32>>>::bitand_assign;false;false;true;false
core_arch::x86::fma::_mm256_fmadd_pd;true;true;true;false
mem::min_align_of_val;false;true;false;false
<iter::sources::from_fn::FromFn<F> as clone::Clone>::clone;false;false;true;false
<core_arch::simd::u8x64 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_max_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_min_epi64;true;true;false;false
core_arch::x86::__m256d::as_mut_array;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_add_round_ss;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_shrdi_epi32;true;true;false;false
core_arch::x86::avx512vnni::_mm_dpbusds_epi32;true;true;false;false
<fmt::Arguments<'_> as fmt::Display>::fmt;false;false;true;false
<num::wrapping::Wrapping<u8> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<u8>>>::product;false;false;false;true
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::leading_zeros;false;false;false;false
<sync::atomic::AtomicU8 as convert::From<u8>>::from;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&num::wrapping::Wrapping<isize>>>::rem_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_fnmsub_ph;true;true;true;false
core_arch::x86_64::sse::_mm_cvtss_si64;true;true;true;false
num::saturating::Saturating::<u64>::from_be;false;false;false;false
<ffi::c_str::FromBytesUntilNulError as fmt::Debug>::fmt;false;false;true;false
<usize as ops::bit::BitXor>::bitxor;false;false;false;false
<slice::ascii::EscapeAscii<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::nonzero::NonZero::<u128>::saturating_pow;false;true;false;false
intrinsics::atomic_umax_seqcst;true;false;true;false
num::wrapping::Wrapping::<u8>::to_le;false;false;false;false
core_arch::x86::avx::_mm256_unpackhi_pd;true;true;true;false
net::ip_addr::<impl convert::From<net::ip_addr::Ipv4Addr> for u32>::from;false;false;false;false
<&'a i16 as ops::bit::Shr<u8>>::shr;false;false;false;false
<&'a u16 as ops::bit::Shr<u16>>::shr;false;false;false;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::RangeInclusive<A>>::try_rfold;false;false;true;false
intrinsics::simd::simd_lt;true;false;false;false
<i16 as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fmsub_ps;true;true;true;false
error::Error::type_id;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_i64scatter_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_avg_epu8;true;true;false;false
intrinsics::atomic_max_release;true;false;true;false
num::<impl i128>::trailing_zeros;false;false;false;false
core_arch::x86::ssse3::_mm_hadd_epi16;true;true;false;false
<num::saturating::Saturating<u8> as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512ifma::_mm_mask_madd52hi_epu64;true;true;false;false
num::<impl u128>::saturating_sub;false;false;false;false
num::<impl u16>::checked_pow;false;false;false;true
num::<impl isize>::wrapping_div;false;false;false;false
option::Option::<T>::len;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fmsub_round_pd;true;true;true;false
<i16 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_sub_epi16;true;true;false;false
<core_arch::simd::f32x8 as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm_getexp_sd;true;true;true;false
num::nonzero::NonZero::<i8>::checked_mul;false;true;false;false
<num::niche_types::Nanoseconds as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
f16::<impl f16>::is_sign_negative;false;false;true;false
mem::manually_drop::ManuallyDrop::<T>::into_inner;false;false;true;false
<i32 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_mov_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmple_epi8_mask;true;true;false;false
<time::Duration as fmt::Debug>::fmt::fmt_decimal;false;false;true;true
core_arch::x86::avx512f::_mm512_maskz_max_epi32;true;true;false;false
<sync::atomic::AtomicU8 as fmt::Debug>::fmt;false;false;true;false
<isize as ops::bit::BitAndAssign<&isize>>::bitand_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtepu32_ph;true;true;true;false
core_arch::simd::u8x4::splat;false;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem;false;false;false;false
char::methods::<impl char>::is_uppercase;false;false;false;false
ptr::slice_from_raw_parts;false;false;true;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_mut;false;true;true;false
<u16 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_storeu_pd;true;true;true;false
<u16 as ops::bit::Shr<u128>>::shr;false;false;false;false
num::<impl u8>::wrapping_pow;false;false;false;true
num::<impl u8>::unchecked_add;true;false;false;false
<num::nonzero::NonZero<T> as fmt::Binary>::fmt;false;false;true;false
slice::sort::stable::quicksort::has_direct_interior_mutability;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_adds_epi8;true;true;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_max;false;true;false;false
num::<impl u8>::borrowing_sub;false;true;false;false
core_arch::x86::avx512bw::_mm_cmpgt_epi8_mask;true;true;false;false
num::nonzero::NonZero::<i8>::to_le;false;true;false;false
<num::saturating::Saturating<i128> as ops::arith::AddAssign<&i128>>::add_assign;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
num::<impl i16>::carrying_mul;false;false;false;false
<&i32 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::find;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::get_mut;false;true;true;false
str::<impl str>::matches;false;false;false;false
core_arch::x86::sse2::_mm_add_epi64;true;true;false;false
core_arch::x86::avx2::_mm256_broadcastss_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_roundscale_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_test_epi8_mask;true;true;false;false
core_simd::vector::Simd::<T, N>::splat;false;false;false;false
num::nonzero::NonZero::<usize>::saturating_pow;false;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 16>> for core_arch::x86::__m128i>::from;false;false;false;false
iter::adapters::map_windows::Buffer::<T, N>::buffer_ptr;false;false;true;false
core_arch::x86::avx::_mm256_set1_epi16;true;true;false;false
core_arch::simd::i8x16::from_array;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_mulhi_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_srai_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_scalef_ph;true;true;true;false
<cell::RefCell<T> as cmp::PartialOrd>::lt;false;false;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::is_positive;false;false;false;false
num::<impl i128>::checked_shl;false;true;false;false
<&i16 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_cmpeq_epu16_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_ternarylogic_epi64;true;true;false;false
<(H, G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EH, EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<usize as ops::bit::Shr<u32>>::shr;false;false;false;false
hash::Hasher::write_u32;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_loadu_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm_storeu_ph;true;true;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
time::Duration::from_micros;false;true;false;false
f128::<impl f128>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_fmsubadd_round_ph;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::trailing_ones;false;false;false;false
intrinsics::atomic_cxchgweak_relaxed_acquire;true;false;true;false
core_arch::x86::avx512vnni::_mm512_mask_dpbusds_epi32;true;true;false;false
num::nonzero::NonZero::<u8>::midpoint;false;true;false;false
str::traits::<impl ops::index::IndexMut<I> for str>::index_mut;false;false;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<sync::atomic::AtomicI8 as fmt::Debug>::fmt;false;false;true;false
result::Result::<T, E>::or;false;false;true;false
<&'a num::wrapping::Wrapping<i16> as ops::bit::BitXor<num::wrapping::Wrapping<i16>>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<i64>>::rem_assign;false;false;true;false
<i16 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign;false;false;true;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::get;false;false;true;false
<str::iter::EscapeDefault<'a> as fmt::Display>::fmt;false;false;true;true
<i64 as ops::bit::Shl<&i32>>::shl;false;false;false;false
str::traits::str_index_overflow_fail;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_max_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_i64gather_epi64;true;true;true;false
num::nonzero::NonZero::<i16>::is_positive;false;false;false;false
<str as convert::AsMut<str>>::as_mut;false;false;true;false
iter::adapters::map_windows::Buffer::<T, N>::buffer_mut_ptr;false;false;true;false
<result::Iter<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::wrapping::Wrapping::<i64>::swap_bytes;false;false;false;false
<i8 as fmt::num::DisplayInt>::to_u64;false;false;false;false
<str::iter::SplitWhitespace<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
task::wake::LocalWaker::will_wake;false;false;true;false
core_arch::x86::sse2::_mm_store1_pd;true;true;true;false
core_arch::x86::avx2::_mm256_cvtepi32_epi64;true;true;false;false
ptr::mut_ptr::<impl *mut T>::as_uninit_ref;true;true;true;false
<ops::range::Range<Idx> as hash::Hash>::hash;false;false;true;false
<iter::adapters::take_while::TakeWhile<I, P> as clone::Clone>::clone;false;false;true;false
num::saturating::Saturating::<u32>::swap_bytes;false;false;false;false
num::<impl u64>::overflowing_div_euclid;false;false;false;false
core_arch::x86::sse3::_mm_lddqu_si128;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmplt_epu8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_fpclass_pd_mask;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvtepi64_ph;true;true;false;false
iter::traits::collect::default_extend_tuple_e;false;false;true;true
<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign;false;false;true;false
result::Result::<option::Option<T>, E>::transpose;false;false;true;false
future::async_drop::noop;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_getexp_ph;true;true;true;false
<num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem;false;false;false;false
num::<impl i128>::div_euclid;false;false;false;false
intrinsics::simd::simd_trunc;true;false;false;false
<&'a i8 as ops::arith::Mul<i8>>::mul;false;false;false;false
core_arch::simd::u64x1::extract;false;true;false;false
core_arch::simd::u8x8::splat::JustOne;false;false;false;false
num::<impl u128>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
num::saturating::Saturating::<i8>::pow;false;false;false;false
core_arch::x86::avx2::_mm_mask_i64gather_pd;true;true;true;false
<i8 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<f32 as ops::arith::RemAssign<&f32>>::rem_assign;false;false;true;false
num::bignum::tests::Big8x3::mul_digits;false;false;true;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;true;true;false
core_arch::x86::__m256i::as_u64x4;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign;false;false;true;false
<core_arch::simd::i32x16 as fmt::Debug>::fmt;false;false;true;false
<sync::atomic::AtomicI64 as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_getexp_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_reduce_ps;true;true;true;false
unicode::unicode_data::decode_length;false;false;false;false
num::wrapping::Wrapping::<usize>::to_le;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::all;false;false;true;true
<&usize as ops::bit::Shl<&u16>>::shl;false;false;false;false
fmt::Formatter::<'a>::wrap_buf;false;false;true;false
core_simd::vector::Simd::<T, N>::store_select;false;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::AddAssign>::add_assign;false;false;true;false
<usize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
core_arch::x86::avx512f::_mm256_mask_broadcast_f32x4;true;true;true;false
core_arch::x86::avx512f::_mm256_cmpge_epu32_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_f64x2;true;true;true;false
num::<impl i32>::to_ne_bytes;false;false;false;false
num::wrapping::Wrapping::<i32>::trailing_zeros;false;false;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<&num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor;false;false;false;false
f128::<impl f128>::max;false;false;true;false
<str::iter::RMatchIndices<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
str::iter::MatchesInternal::<'a, P>::next_back;false;false;true;false
core_arch::x86::sse::_mm_sqrt_ps;true;true;true;false
num::nonzero::NonZero::<i128>::saturating_neg;false;false;false;false
<cell::BorrowMutError as error::Error>::description;false;false;false;false
<iter::adapters::map::Map<I, F> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;false;false
sync::atomic::AtomicI8::from_ptr;true;true;true;false
<isize as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
num::<impl u8>::overflowing_add;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_max_epi32;true;true;false;false
ptr::read_volatile::precondition_check;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundpd_epu32;true;true;true;false
<i32 as iter::traits::accum::Product<&'a i32>>::product;false;false;false;true
core_arch::x86::avx512f::_mm256_mask3_fnmadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_i64scatter_epi64;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_set1_epi32;true;true;false;false
char::methods::<impl char>::decode_utf16;false;false;false;false
core_arch::x86::sse2::_mm_cmpngt_sd;true;true;true;false
<&'a i64 as ops::arith::Sub<i64>>::sub;false;false;false;false
<&num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand;false;false;false;false
num::<impl i8>::wrapping_abs;false;false;false;false
core_arch::x86::avx512f::_mm256_rsqrt14_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cmp_epi64_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_range_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_permutexvar_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_sra_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_broadcastb_epi8;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi16;true;true;false;false
core_arch::simd::u32x4::splat;false;true;false;false
core_arch::x86::avx512bw::_mm_maskz_set1_epi16;true;true;false;false
<&usize as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi16;true;true;true;false
num::<impl i8>::unchecked_shl;true;false;false;false
core_arch::x86::avx512fp16::_mm_cvtsh_h;true;true;true;false
ptr::metadata::metadata;false;false;true;false
net::parser::<impl net::ip_addr::IpAddr>::parse_ascii;false;false;false;false
core_arch::x86::gfni::_mm_mask_gf2p8affine_epi64_epi8;true;true;false;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<core_simd::vector::Simd<T, N> as cmp::PartialEq>::eq;false;true;true;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fnmsub_round_sh;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi16;true;true;false;false
num::nonzero::NonZero::<i128>::trailing_zeros;false;true;false;false
<u8 as ops::bit::Shl<&u128>>::shl;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::size_hint;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask3_fnmsub_ph;true;true;true;false
intrinsics::mir::UnwindResume::panic_cold_explicit;false;false;false;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<i16, N>>::bitor;false;true;false;false
<&'a num::saturating::Saturating<isize> as ops::arith::Div<num::saturating::Saturating<isize>>>::div;false;false;false;false
num::<impl i64>::pow;false;false;false;true
num::nonzero::NonZero::<usize>::saturating_mul;false;true;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Sub<&num::wrapping::Wrapping<u16>>>::sub;false;false;false;false
num::wrapping::Wrapping::<u8>::count_zeros;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for char>::gt;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<usize>>::from;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_movehdup_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_rcp_sh;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 32>> for core_arch::x86::__m256i>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundpd_ps;true;true;true;false
iter::adapters::fuse::Fuse::<I>::new;false;false;false;false
<i128 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
<iter::sources::from_coroutine::FromCoroutine<G> as iter::traits::iterator::Iterator>::next;false;false;true;false
<&u128 as ops::bit::BitOr<&u128>>::bitor;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem;false;false;false;false
<num::nonzero::NonZero<T> as fmt::UpperHex>::fmt;false;false;true;false
str::iter::RSplitTerminator;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_mov_epi32;true;true;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<core_arch::x86::__m512h as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_adds_epi8;true;true;false;false
<num::niche_types::NonZeroU64Inner as fmt::Debug>::fmt;false;false;true;false
<&'a i8 as ops::bit::Shl<u16>>::shl;false;false;false;false
pin::Pin::<Ptr>::into_inner_unchecked;true;false;true;false
core_arch::x86::avx512f::_mm_min_epu64;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_srai_epi16;true;true;false;false
<i64 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_adds_epu16;true;true;false;false
<core_arch::simd::f32x4 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_min_epu16;true;true;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::trailing_ones;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x2;true;true;true;false
core_arch::simd::f16x4::extract;false;true;true;false
<&i16 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;true
slice::<impl [T]>::split_once;false;false;false;true
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epu16;true;true;true;false
num::bignum::tests::Big8x3::from_u64;false;false;false;true
core_arch::x86::avx512f::_mm512_getexp_round_ps;true;true;true;false
<bool as ops::bit::BitXor<&bool>>::bitxor;false;false;false;false
core_arch::x86::sse41::_mm_mul_epi32;true;true;false;false
<u8 as ops::arith::Div>::div;false;false;false;false
core_arch::x86::adx::_addcarryx_u32;true;true;true;false
sync::atomic::AtomicI32::try_update;false;false;true;false
<num::niche_types::U64NotAllOnes as hash::Hash>::hash;false;false;true;false
<i16 as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_load_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_mov_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fcmadd_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepu64_ph;true;true;true;false
<&num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul;false;false;false;false
ptr::const_ptr::<impl *const T>::with_addr;false;false;true;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::resize;false;false;true;false
intrinsics::vtable_size;true;false;true;false
<&i64 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
ptr::non_null::NonNull::<T>::new_unchecked::precondition_check;false;false;true;false
num::<impl usize>::checked_ilog10;false;false;false;false
core_arch::x86::avx512bw::_mm512_mulhi_epi16;true;true;false;false
num::niche_types::U32NotAllOnes;true;false;false;false
core_arch::x86::avx512bw::_mm512_mask_shuffle_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_cmplt_epu32_mask;true;true;false;false
<&i8 as ops::bit::Shr<&usize>>::shr;false;false;false;false
sync::atomic::AtomicI64::fetch_xor;false;true;true;false
core_arch::x86_64::avx512fp16::_mm_cvtt_roundsh_i64;true;true;true;false
<&i32 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<iter::adapters::take::Take<I> as iter::adapters::take::SpecTake>::spec_fold;false;true;true;true
intrinsics::wrapping_add;false;false;false;false
core_arch::x86::sse2::_mm_sub_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_store_ph;true;true;true;false
cmp::impls::<impl cmp::Ord for !>::cmp;false;false;false;false
error::Tagged::<(dyn error::Erased<'a> + 'a)>::downcast;false;true;true;false
num::<impl isize>::swap_bytes;false;false;false;false
core_arch::x86::fma::_mm_fmaddsub_pd;true;true;true;false
num::<impl i64>::ilog2;false;false;false;false
<i8 as slice::cmp::SliceContains>::slice_contains;false;true;false;false
core_arch::x86::__m256i::as_u32x8;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sll_epi32;true;true;false;false
core_arch::x86::sse42::_mm_cmpestra;true;true;false;false
core_arch::x86::avx512f::_mm512_set1_epi32;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpunord_ps_mask;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_expand_ps;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_size_hint;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<&isize>>::rem_assign;false;false;true;false
<&'a i8 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_add_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permute_pd;true;true;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u32>>::from;false;true;false;false
core_arch::x86::avx2::_mm_mask_i64gather_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_sqrt_ps;true;true;true;false
<&'a i32 as ops::arith::Sub<i32>>::sub;false;false;false;false
<num::saturating::Saturating<T> as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm_mask_expand_ps;true;true;true;false
<(EA,) as iter::traits::collect::Extend<(A,)>>::extend_one_unchecked;true;true;true;false
<bstr::ByteStr as convert::AsRef<[u8]>>::as_ref;false;false;false;false
num::<impl i16>::unchecked_add::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm512_srli_epi32;true;true;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
core_arch::x86::avx2::_mm256_packs_epi32;true;true;false;false
<&u64 as ops::bit::Shl<&i64>>::shl;false;false;false;false
num::<impl u8>::midpoint;false;false;false;false
str::<impl str>::from_utf8;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::AddAssign>::add_assign;false;false;true;false
<iter::adapters::intersperse::IntersperseWith<I, G> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_storeu_epi8;true;true;true;false
<char::ToLowercase as fmt::Debug>::fmt;false;false;true;false
<(dyn any::Any + marker::Send + 'static)>::is;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_nth_back;false;false;true;false
sync::atomic::AtomicUsize::compare_exchange;false;true;true;false
num::<impl i8>::overflowing_div;false;false;false;false
num::nonzero::NonZero::<i32>::count_ones;false;true;false;false
<slice::iter::SplitInclusive<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::DivAssign<usize>>::div_assign;false;false;true;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::next_chunk;false;false;true;false
core_arch::x86::fma::_mm256_fmaddsub_ps;true;true;true;false
fmt::builders::DebugMap::<'a, 'b>::value_with;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_or_epi32;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for isize>::try_from;false;false;false;false
<i8 as ops::bit::BitAnd>::bitand;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<i16, N>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_xor_epi32;true;true;false;false
<&'a usize as ops::bit::Shr<u8>>::shr;false;false;false;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<str::iter::Matches<'a, P> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor;false;false;false;false
core_arch::simd::i16x2::extract;false;true;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
<&'a i128 as ops::arith::Sub<i128>>::sub;false;false;false;false
<u64 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<str::CharEscapeUnicode as ops::function::FnOnce<(char,)>>::call_once;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_cvtepi64_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi8;true;true;false;false
num::<impl isize>::unchecked_neg;true;false;false;false
ub_checks::check_language_ub::runtime;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::get_unchecked;true;false;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
sync::atomic::atomic_sub;true;true;true;false
<str::iter::SplitTerminator<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_max_epi16;true;true;false;false
<i128 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shldi_epi64;true;true;false;false
num::<impl i8>::count_zeros;false;false;false;false
char::methods::encode_utf16_raw::do_panic;false;false;false;false
<num::error::ParseIntError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm_permutex2var_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm256_cvtpd_epu64;true;true;true;false
<(EC, EB, EA) as iter::traits::collect::Extend<(C, B, A)>>::extend_reserve;false;false;true;false
core_arch::x86::avx2::_mm256_permute2x128_si256;true;true;false;false
core_arch::x86::__m512i::as_u16x32;false;false;false;false
<i8 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avxneconvert::_mm_cvtneps_avx_pbh;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<i16, N>> for core_simd::vector::Simd<i16, N>>::product;false;false;false;true
<sync::atomic::Ordering as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
net::ip_addr::Ipv4Addr::is_documentation;false;false;false;false
core_arch::simd::f16x16::extract;false;true;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<u64, N>>::rem;false;true;false;false
core_arch::x86::avx512f::_mm_mask_unpackhi_epi64;true;true;false;false
<i64 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512dq::_ktestc_mask16_u8;true;true;false;false
slice::<impl [T]>::array_chunks_mut;false;false;true;false
<&u8 as ops::arith::Add<&u8>>::add;false;false;false;false
<array::drain::Drain<'_, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
<&u128 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<core_arch::x86::__m512bh as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign;false;false;true;false
<i32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
<net::ip_addr::Ipv6Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_extracti64x4_epi64;true;true;false;false
<hash::sip::Sip24Rounds as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512cd::_mm512_lzcnt_epi32;true;true;false;false
<&mut I as iter::traits::iterator::Iterator>::try_fold;false;false;true;false
<cell::BorrowRefMut<'_> as ops::drop::Drop>::drop;false;false;true;false
<isize as ops::bit::Shr<i8>>::shr;false;false;false;false
fmt::Formatter::<'a>::debug_struct;false;false;true;false
core_arch::x86::avx512f::_mm_comi_round_sd;true;true;true;false
core_arch::x86::avx2::_mm_i32gather_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_insertf32x8;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::DivAssign<&num::saturating::Saturating<isize>>>::div_assign;false;false;true;false
str::pattern::small_slice_eq;true;true;false;true
<i32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
num::nonzero::NonZero::<i64>::reverse_bits;false;true;false;false
<f16 as convert::num::FloatToInt<usize>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_unpackhi_pd;true;true;true;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<isize as ops::bit::Shl<&u16>>::shl;false;false;false;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundps_ph;true;true;true;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_try_fold;false;false;true;true
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<i64, N>>::shl;false;true;false;false
num::<impl u16>::unchecked_add;true;false;false;false
<ops::range::Range<u32> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u32>>>::setup;false;false;true;false
num::niche_types::I32NotAllOnes::as_inner;false;false;false;false
clone::impls::<impl clone::Clone for u32>::clone;false;false;false;false
<u64 as ops::bit::BitXor<&u64>>::bitxor;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
num::nonzero::NonZero::<i8>::to_be;false;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256> for core_simd::vector::Simd<f32, 8>>::from;false;false;true;false
<panicking::AssertKind as fmt::Debug>::fmt;false;false;true;false
num::wrapping::Wrapping::<i128>::rotate_left;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_cvtepi64_pd;true;true;true;false
<hash::sip::SipHasher13 as clone::Clone>::clone;false;false;true;false
num::<impl i128>::ilog10;false;false;false;false
core_arch::x86::avx512f::_mm_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_fmul_pch;true;true;true;false
num::<impl isize>::checked_ilog2;false;true;false;false
"array::equality::<impl cmp::PartialEq<&[U]> for [T; N]>::ne";false;false;false;false
num::<impl isize>::wrapping_rem;false;false;false;false
core_arch::x86::avx512bw::_kandn_mask64;true;true;false;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::max;false;false;true;false
<&'a i16 as ops::bit::Shr<i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_cvtsepi64_epi8;true;true;false;false
cell::once::OnceCell::<T>::get_or_init;false;false;true;false
core_arch::x86::avx512bw::_mm_cmpgt_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_andnot_epi32;true;true;false;false
<&u8 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_min_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmplt_epu32_mask;true;true;false;false
<i8 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<u64 as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_sll_epi64;true;true;false;false
<u128 as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl u32>::strict_div;false;false;false;false
<u16 as ops::bit::Shr<&u8>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_cvtpd_epu64;true;true;true;false
<mem::manually_drop::ManuallyDrop<T> as cmp::Ord>::cmp;false;false;true;false
intrinsics::powf64;true;false;true;false
core_arch::x86::avx512fp16::_mm256_permutex2var_ph;true;true;true;false
num::wrapping::Wrapping::<u64>::to_be;false;false;false;false
fmt::Formatter::<'a>::debug_lower_hex;false;false;true;false
core_arch::x86::avx512vbmi::_mm_permutexvar_epi8;true;true;false;false
<marker::variance::PhantomInvariant<T> as cmp::PartialEq>::eq;false;false;true;false
<(F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
convert::num::<impl convert::From<i8> for i16>::from;false;false;false;false
<usize as ops::arith::SubAssign>::sub_assign;false;false;true;false
<u64 as ops::bit::Shl<i128>>::shl;false;false;false;false
bstr::<impl cmp::PartialEq<bstr::ByteStr> for [u8]>::eq;false;false;false;false
intrinsics::mir::CastPtrToPtr::panic_cold_explicit;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::trailing_zeros;false;false;false;false
intrinsics::simd::simd_relaxed_fma;true;false;false;false
core_arch::x86::avx512bw::_mm256_mask_max_epu16;true;true;false;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::Range<A>>::nth_back;false;false;true;false
num::<impl u32>::saturating_add_signed;false;false;false;false
core_arch::x86::avx512ifma::_mm_maskz_madd52hi_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_rsqrt_ph;true;true;true;false
convert::num::<impl convert::TryFrom<i32> for u128>::try_from;false;false;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<i8, N>>::mul;false;true;false;false
num::int_log10::i128;false;false;false;false
num::<impl i16>::leading_ones;false;false;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::fold;false;false;true;true
num::<impl usize>::unchecked_add::precondition_check;false;false;false;false
<slice::iter::ArrayWindows<'_, T, N> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_arch::x86::avx2::_mm_mask_i32gather_pd;true;true;true;false
num::saturating::Saturating::<i8>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_getexp_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128> for core_simd::vector::Simd<f32, 4>>::from;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_inserti64x2;true;true;false;false
<&num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem;false;false;false;false
num::<impl u32>::wrapping_mul;false;false;false;false
sync::atomic::atomic_compare_exchange_weak;true;true;true;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_moveldup_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu16_mask;true;true;false;false
num::saturating::Saturating::<u64>::reverse_bits;false;false;false;false
intrinsics::mir::TailCall;false;false;false;false
<&'a i8 as ops::bit::Shl<u128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_alignr_epi8;true;true;false;false
core_arch::simd::m64x2;false;false;false;false
num::<impl u128>::from_ne_bytes;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::any;false;false;true;true
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<u8, N>>::sub;false;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign;false;false;true;false
core_arch::simd::i16x16::from_array;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shldi_epi32;true;true;false;false
<&num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
core_arch::x86::avx2::_mm256_shufflelo_epi16;true;true;false;false
fmt::FormattingOptions::precision;false;false;true;false
hash::sip::SipHasher::new;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_shuffle_epi8;true;true;false;false
<usize as default::Default>::default;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_min_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepi16_ph;true;true;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<isize, N>>::mul;false;true;false;false
num::<impl u128>::checked_mul;false;false;false;false
<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::simd::i32x4::extract;false;true;false;false
convert::num::<impl convert::TryFrom<i64> for u64>::try_from;false;false;false;false
<u8 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
sync::atomic::AtomicI8::try_update;false;false;true;false
<num::nonzero::NonZero<T> as ops::bit::BitOr<T>>::bitor;false;true;true;false
<&'a i32 as ops::bit::Shl<i16>>::shl;false;false;false;false
sync::atomic::AtomicIsize::compare_and_swap;false;false;true;false
<str::iter::Bytes<'_> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<iter::sources::repeat_with::RepeatWith<F> as clone::Clone>::clone;false;false;true;false
core_arch::x86::fma::_mm_fmsubadd_pd;true;true;true;false
num::<impl isize>::from_be_bytes;false;false;false;false
<isize as ops::bit::Shr<&u8>>::shr;false;false;false;false
<isize as ops::bit::Shl<&u128>>::shl;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&u16>>::sub_assign;false;false;true;false
panic::panic_info::PanicInfo::<'a>::force_no_backtrace;false;false;true;false
num::nonzero::NonZero::<i64>::leading_zeros;false;true;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign;false;false;true;false
num::<impl isize>::div_euclid;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::fill_with;false;true;true;true
core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_dbsad_epu8;true;true;false;false
core_arch::x86::tbm::_blcs_u32;true;false;false;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<&i32 as ops::bit::Shr<&u64>>::shr;false;false;false;false
num::nonzero::NonZero::<u8>::checked_mul;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi32;true;true;false;false
<f16 as ops::arith::AddAssign<&f16>>::add_assign;false;false;true;false
num::saturating::Saturating::<i8>::is_positive;false;false;false;false
core_arch::x86::avx2::_mm256_permute4x64_pd;true;true;true;false
<&i8 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_cvtepi16_epi8;true;true;false;false
<usize as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::simd::u8x64::new;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu8;true;true;false;false
<iter::adapters::take::Take<I> as iter::adapters::take::SpecTake>::spec_for_each::check;false;false;false;false
iter::traits::iterator::Iterator::fold;false;false;false;true
core_arch::x86::avx512bw::_mm512_srl_epi16;true;true;false;false
intrinsics::simd::simd_flog10;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_scalef_ps;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_fcmadd_round_sch;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
<num::niche_types::Nanoseconds as cmp::PartialOrd>::partial_cmp;false;false;false;false
sync::atomic::AtomicU16::into_inner;false;false;true;false
<hash::sip::Sip13Rounds as hash::sip::Sip>::d_rounds;false;false;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_sum;false;true;false;false
num::nonzero::NonZero::<u8>::from_be;false;true;false;false
<num::niche_types::NonZeroU64Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
num::nonzero::NonZero::<u16>::unchecked_mul;true;true;false;false
core_arch::x86::avx2::_mm256_mask_i32gather_pd;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&u128>>::mul_assign;false;false;true;false
num::saturating::Saturating::<i32>::signum;false;false;false;false
core_arch::x86::avx512f::_mm_mask_permute_pd;true;true;true;false
num::<impl i8>::strict_add;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::next_back;false;false;true;false
core_arch::simd::u32x32::from_array;false;false;false;false
intrinsics::mir::Len;false;false;false;false
time::Duration::div_f32;false;false;true;false
"array::<impl cmp::Ord for [T; N]>::cmp";false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_subnormal;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepu8_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_ror_epi64;true;true;false;false
<str::UnsafeBytesToStr as ops::function::FnMut<(&'a [u8],)>>::call_mut;false;false;true;false
<range::RangeInclusive<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
<u16 as iter::traits::accum::Product>::product;false;false;false;true
<u128 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::DivAssign>::div_assign;false;false;true;false
num::<impl u64>::saturating_add_signed;false;false;false;false
iter::adapters::array_chunks::ArrayChunks::<I, N>::new;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::last;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvtxps_ph;true;true;true;false
<u128 as ops::arith::Sub>::sub;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
num::<impl i32>::strict_sub;false;false;false;false
"ptr::const_ptr::<impl *const [T; N]>::as_ptr";false;false;true;false
core_arch::x86::avx512f::_mm512_mask_add_epi32;true;true;false;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundpd_ph;true;true;true;false
<&'b [char] as str::pattern::Pattern>::strip_suffix_of;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&num::saturating::Saturating<u16>>>::bitxor_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u128> as ops::arith::Mul<num::wrapping::Wrapping<u128>>>::mul;false;false;false;false
core_arch::simd::m64x2::bool_to_internal;false;false;false;false
<i8 as ops::bit::Shl<&i16>>::shl;false;false;false;false
intrinsics::ptr_offset_from;true;false;true;false
<num::niche_types::NonZeroU8Inner as cmp::Ord>::cmp;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<&num::wrapping::Wrapping<usize>>>::div_assign;false;false;true;false
<slice::iter::Windows<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
num::<impl isize>::cast_unsigned;false;false;false;false
core_arch::simd::f16x16;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
<sync::atomic::AtomicI64 as convert::From<i64>>::from;false;false;false;false
<&i32 as ops::bit::BitXor<&i32>>::bitxor;false;false;false;false
num::nonzero::NonZero::<i128>::isolate_most_significant_one;false;true;false;false
core_arch::x86::sse2::_mm_cmpunord_sd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_min_epi32;true;true;false;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::sse2::_mm_mulhi_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<core_arch::simd::f64x4 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_fcmul_round_pch;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl isize>::checked_add;false;false;false;false
num::<impl u16>::wrapping_pow;false;false;false;true
<&usize as ops::bit::Shr<&i8>>::shr;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<iter::adapters::cycle::Cycle<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512vnni::_mm256_dpbusds_avx_epi32;true;true;false;false
num::int_log10::u16;false;false;false;false
task::wake::ExtData::Some;false;false;true;false
<slice::iter::Iter<'a, T> as iter::adapters::copied::SpecNextChunk<'a, N, T>>::spec_next_chunk;false;true;true;true
core_arch::x86::avx512f::_mm256_mask_sll_epi32;true;true;false;false
sync::atomic::AtomicIsize::fetch_or;false;true;true;false
<i32 as ops::bit::Shr<i16>>::shr;false;false;false;false
num::nonzero::NonZero::<i64>::unchecked_mul;true;true;false;false
<usize as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_subs_epu8;true;true;false;false
core_arch::x86::avx512f::_mm512_cvtsepi32_epi8;true;true;false;false
<i128 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
<slice::iter::SplitMut<'a, T, P> as slice::iter::SplitIter>::finish;false;false;true;false
ops::function::impls::<impl ops::function::FnOnce<A> for &mut F>::call_once;false;false;true;false
<core_arch::simd::i64x8 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx::_mm256_unpacklo_pd;true;true;true;false
escape::EscapeIterInner::<N>::next;false;true;true;false
core_arch::x86::avx512fp16::_mm512_fmul_pch;true;true;true;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::count_zeros;false;false;false;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<&i64 as ops::arith::Div<&i64>>::div;false;false;false;false
<&i128 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::advance_by;false;true;true;false
core_arch::x86::avx::_mm256_hsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu8_epi64;true;true;false;false
core_arch::x86::avx512vnni::_mm256_mask_dpbusds_epi32;true;true;false;false
<core_arch::simd::u16x64 as fmt::Debug>::fmt;false;false;true;false
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u128>> for u128>::rem_assign;false;false;true;false
convert::num::<impl convert::TryFrom<u32> for u8>::try_from;false;false;false;false
<char::ToUppercase as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
num::wrapping::Wrapping::<i64>::to_le;false;false;false;false
<u32 as ops::bit::Shl<i64>>::shl;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_next;false;false;true;false
iter::traits::iterator::Iterator::skip;false;false;false;false
fmt::num::<impl fmt::UpperHex for u8>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtt_roundps_epu32;true;true;true;false
<&num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div;false;false;false;false
core_arch::x86::avx512bw::_mm_reduce_min_epi16;true;true;false;false
<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u32>>>::bitxor_assign;false;false;true;false
<u16 as ops::arith::DivAssign<&u16>>::div_assign;false;false;true;false
intrinsics::simd::simd_bitmask;true;false;false;false
core_arch::x86::avx512dq::_mm512_insertf64x2;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_roundscale_round_ph;true;true;true;false
core_simd::vector::Simd::<T, N>::gather_select_ptr;true;true;true;false
<core_arch::simd::u8x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
core_arch::x86::__m512d;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOr>::bitor;false;false;false;false
f64::<impl f64>::midpoint;false;false;true;false
intrinsics::abort;false;false;false;false
<i32 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i64> for core_simd::vector::Simd<i64, N>>::shr;false;false;false;false
str::pattern::MultiCharEqPattern;false;false;false;false
<i32 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::sse42::_mm_cmpistrc;true;true;false;false
core_arch::x86::avx512fp16::_mm256_getexp_ph;true;true;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm_mask_sra_epi64;true;true;false;false
core_arch::simd::i32x16::from_array;false;false;false;false
intrinsics::atomic_cxchg_acquire_acquire;true;false;true;false
num::flt2dec::to_shortest_str;false;true;true;false
ptr::from_mut;false;false;true;false
<[mem::maybe_uninit::MaybeUninit<T>]>::write_clone_of_slice;false;true;true;true
<&'a u64 as ops::bit::BitAnd<u64>>::bitand;false;false;false;false
<u8 as ops::bit::Shr<i128>>::shr;false;false;false;false
num::nonzero::NonZero::<i32>::to_be;false;true;false;false
num::<impl u32>::div_euclid;false;false;false;false
<u128 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<u128 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
fmt::num::<impl fmt::LowerHex for i8>::fmt;false;false;true;false
<slice::iter::Split<'a, T, P> as slice::iter::SplitIter>::finish;false;false;true;false
num::<impl i8>::pow;false;false;false;true
sync::atomic::AtomicU32::compare_and_swap;false;false;true;false
str::<impl str>::split_at_mut_checked;false;true;true;false
core_arch::simd::i8x32::extract;false;true;false;false
<i32 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&num::saturating::Saturating<u16>>>::bitand_assign;false;false;true;false
<core_arch::simd::f32x16 as cmp::PartialEq>::eq;false;false;true;false
<core_arch::x86::bf16 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse41::_mm_max_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_cvtepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpeq_epi64_mask;true;true;false;false
task::wake::RawWaker::new;false;false;true;false
intrinsics::mir::SetDiscriminant::panic_cold_explicit;false;false;false;false
core_arch::x86::avx512fp16::_mm512_scalef_round_ph;true;true;true;false
<&'a u32 as ops::bit::Shr<usize>>::shr;false;false;false;false
<u32 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
future::async_drop::slice;true;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi32;true;true;false;false
<alloc::layout::Layout as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_div_ps;true;true;true;false
<usize as ops::arith::DivAssign<&usize>>::div_assign;false;false;true;false
<u32 as iter::traits::accum::Sum>::sum;false;false;false;true
<slice::iter::SplitMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512bw::_kxor_mask64;true;false;false;false
<num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<i16>>::add_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_maskz_broadcast_i32x2;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_fmsub_ph;true;true;true;false
<slice::iter::ChunksMut<'a, T> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign;false;false;true;false
num::<impl isize>::abs;false;false;false;false
slice::<impl [T]>::as_chunks;false;true;false;false
<num::saturating::Saturating<i16> as ops::arith::Div>::div;false;false;false;false
slice::<impl [T]>::as_chunks_unchecked_mut::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepu32lo_pd;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_mask_compress_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_cmpgt_epi32_mask;true;true;false;false
core_arch::x86::sse::_mm_ucomige_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmpneq_epi32_mask;true;true;false;false
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
<bool as ops::bit::BitXorAssign<&bool>>::bitxor_assign;false;false;true;false
ops::range::Bound::Excluded;false;false;false;false
<&u32 as ops::bit::Not>::not;false;false;false;false
net::ip_addr::Ipv4Addr::to_ipv6_compatible;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::AddAssign<i64>>::add_assign;false;false;true;false
<f32 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value;false;false;false;false
<i128 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<u8 as fmt::num::DisplayInt>::to_u8;false;false;false;false
num::<impl isize>::strict_mul;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_scalef_ps;true;true;true;false
<f64 as ops::arith::Sub>::sub;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_mov_ps;true;true;true;false
convert::num::<impl convert::TryFrom<i32> for u8>::try_from;false;false;false;false
<u32 as iter::range::Step>::forward_checked;false;false;false;false
<num::niche_types::NonZeroU16Inner as cmp::PartialEq>::eq;false;false;false;false
num::<impl i8>::isolate_most_significant_one;false;false;false;false
<slice::iter::ArrayChunks<'_, T, N> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_size_hint;false;false;true;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::min;false;false;true;false
num::<impl usize>::cast_signed;false;false;false;false
char::methods::<impl char>::len_utf8;false;false;false;false
<&'a num::saturating::Saturating<i64> as ops::arith::Rem<num::saturating::Saturating<i64>>>::rem;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_round_sch;true;true;true;false
num::<impl usize>::saturating_sub;false;false;false;false
num::<impl i32>::from_ne_bytes;false;false;false;false
<time::Duration as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_blend_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvtepi32_ph;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi16;true;true;false;false
num::bignum::tests::Big8x3::mul_pow2;false;false;true;true
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::saturating_sub;false;true;false;false
cmp::impls::<impl cmp::PartialOrd for usize>::partial_cmp;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_mul_sch;true;true;true;false
<u32 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::avx512vbmi::_mm256_maskz_multishift_epi64_epi8;true;true;false;false
<(EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(J, I, H, G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
num::wrapping::Wrapping::<u8>::rotate_left;false;false;false;false
<mem::transmutability::Assume as ops::arith::Sub>::sub;false;false;true;false
intrinsics::copy;true;true;true;false
num::<impl u64>::carrying_mul;false;false;false;false
<i128 as ops::bit::Shr<&i32>>::shr;false;false;false;false
ptr::non_null::NonNull::<T>::copy_to;true;true;true;false
<slice::iter::RSplitNMut<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
panicking::panic_const::panic_const_shr_overflow;false;false;false;false
<&num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul;false;false;false;false
core_arch::x86::avx2::_mm256_cmpgt_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mul_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi16;true;true;false;false
<&i128 as ops::arith::Mul<&i128>>::mul;false;false;false;false
core_arch::x86::avx::_mm256_set_m128d;true;true;true;false
core_arch::x86::sse::_mm_cvtsi32_ss;true;true;true;false
num::<impl u32>::to_le;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Sub>::sub;false;false;false;false
num::<impl usize>::unchecked_disjoint_bitor;true;true;false;false
<i32 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::cast;false;false;true;false
num::<impl u128>::widening_mul;false;false;false;false
core_arch::simd::i16x8::splat::JustOne;false;false;false;false
intrinsics::simd::simd_fsqrt;true;false;false;false
core_arch::x86::avx2::_mm256_min_epu8;true;true;false;false
<u64 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::RemAssign<&i16>>::rem_assign;false;false;true;false
num::dec2flt::decimal::Decimal::try_fast_path;false;false;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::eq;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permute_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_alignr_epi32;true;true;false;false
num::<impl u128>::carrying_mul;false;false;false;false
<u128 as ops::bit::BitXor>::bitxor;false;false;false;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
<iter::adapters::intersperse::IntersperseWith<I, G> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::sse::_MM_SHUFFLE;false;false;false;false
core_arch::x86::sse41::_mm_cvtepi16_epi32;true;true;false;false
intrinsics::simd::simd_expose_provenance;true;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::assume_init_read;true;true;false;false
<result::IterMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
num::<impl usize>::strict_sub;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::saturating::Saturating::<isize>::to_le;false;false;false;false
num::nonzero::NonZero::<i8>::is_positive;false;false;false;false
<fmt::Error as error::Error>::description;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<i16 as ops::bit::BitAndAssign<&i16>>::bitand_assign;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::__iterator_get_unchecked;true;true;true;false
<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<net::ip_addr::Ipv4Addr>>::bitand;false;false;false;false
sync::atomic::AtomicPtr::<T>::get_mut;false;false;true;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F)>::hash;false;false;true;false
<num::niche_types::NonZeroU8Inner as hash::Hash>::hash;false;false;true;false
<&i16 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi32;true;true;false;false
sync::atomic::AtomicU16::from_mut_slice;false;true;true;false
<u64 as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepu32_epi64;true;true;false;false
core_arch::x86::__m256h::as_mut_array;false;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtusepi32_storeu_epi8;true;true;true;false
<i8 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_expandloadu_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_sllv_epi16;true;true;false;false
slice::<impl [T]>::array_chunks;false;false;false;false
core_arch::x86::avx512bw::_mm_permutexvar_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_cvtepi16_epi8;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::AddAssign<&num::saturating::Saturating<i16>>>::add_assign;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<u8, N>> for core_simd::vector::Simd<u8, N>>::product;false;false;false;true
convert::num::<impl convert::From<u8> for isize>::from;false;false;false;false
num::<impl u128>::overflowing_pow;false;false;false;true
<u8 as ops::bit::BitAnd>::bitand;false;false;false;false
cell::RefCell::<T>::replace_with;false;false;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<i32, N>>::add;false;true;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<usize, N>>::div;false;true;false;false
core_arch::x86::avx512cd::_mm_mask_conflict_epi64;true;true;false;false
num::<impl i128>::from_be;false;false;false;false
<core_simd::vector::Simd<T, N> as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicUsize::fetch_add;false;true;true;false
<&mut H as hash::Hasher>::write_usize;false;false;true;false
<core_arch::simd::u32x2 as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::SubAssign<u64>>::sub_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::bit::BitOr<num::wrapping::Wrapping<u16>>>::bitor;false;false;false;false
str::<impl str>::find;false;false;false;false
<&'a i128 as ops::bit::Shl<u8>>::shl;false;false;false;false
num::<impl i128>::wrapping_sub;false;false;false;false
core_arch::x86::avx::_mm256_insert_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_compressstoreu_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm_cvtsepi16_epi8;true;true;false;false
core_simd::ops::assign::<impl ops::arith::RemAssign<U> for core_simd::vector::Simd<T, N>>::rem_assign;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::saturating_neg;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::count_ones;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_expand_ps;true;true;true;false
<num::saturating::Saturating<i64> as ops::arith::DivAssign<&i64>>::div_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm_mask_roundscale_round_ss;true;true;true;false
option::Option::<T>::map;false;false;true;false
<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_unpacklo_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_scalef_round_ph;true;true;true;false
num::wrapping::Wrapping::<u8>::trailing_zeros;false;false;false;false
<net::ip_addr::Ipv4Addr as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::count_zeros;false;false;false;false
task::poll::Poll::Ready;false;false;false;false
core_arch::simd::f64x4;false;false;true;false
num::<impl isize>::wrapping_sub_unsigned;false;false;false;false
num::niche_types::U64NotAllOnes::new;false;false;false;false
num::<impl u16>::wrapping_next_power_of_two;false;false;false;false
str::<impl str>::len;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_nth;false;false;true;true
net::ip_addr::<impl convert::From<net::ip_addr::Ipv6Addr> for u128>::from;false;false;false;false
<f64 as convert::num::FloatToInt<u32>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_min_epu16;true;true;false;false
num::<impl i128>::from_ascii;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fnmadd_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_castps_ph;true;false;true;false
core_arch::x86::avx512bw::_mm_mask_unpacklo_epi8;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi64;true;true;false;false
<core_arch::simd::u8x4 as clone::Clone>::clone;false;false;false;false
slice::<impl [T]>::split_at;false;false;false;false
<i8 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepi64_ph;true;true;false;false
<char::ToLowercase as clone::Clone>::clone;false;false;true;false
<&i16 as ops::bit::Shl<&isize>>::shl;false;false;false;false
sync::atomic::AtomicI8::fetch_min;false;true;true;false
fmt::num::fmt_u128;false;true;true;false
core_arch::x86::avx512f::_mm_mask_unpackhi_ps;true;true;true;false
ptr::non_null::NonNull::<T>::add;true;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi32_storeu_epi8;true;true;true;false
<num::niche_types::NonZeroI128Inner as hash::Hash>::hash;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&i128>>::sub_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_nth_back;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_mul_epu32;true;true;false;false
num::<impl i16>::from_le_bytes;false;false;false;false
hash::impls::<impl hash::Hash for !>::hash;false;false;true;false
<num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtss_f32;true;true;true;false
intrinsics::atomic_xor_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm_fixupimm_round_sd;true;true;true;false
intrinsics::mir::CastTransmute;false;false;false;false
num::<impl u8>::checked_rem;false;false;false;false
convert::num::<impl convert::From<f16> for f128>::from;false;false;true;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
escape::EscapeIterInner::<N>::ascii;false;false;false;false
sync::atomic::AtomicI64::new;false;false;false;false
<T as unit::IsUnit>::is_unit;false;false;false;false
num::nonzero::NonZero::<i128>::unsigned_abs;false;true;false;false
fmt::builders::DebugStruct::<'a, 'b>::field;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_max_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_sqrt_round_sh;true;true;true;false
core_arch::x86::sse2::_mm_srli_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepu16_ph;true;true;false;false
core_simd::vector::Simd;false;false;false;false
<Iter as iter::traits::collect::TraitB<EB, EA>>::extend;false;false;true;true
core_arch::x86::avx512vbmi2::_mm256_shrdv_epi32;true;true;false;false
<&'b [char] as str::pattern::Pattern>::is_contained_in;false;false;false;false
<ops::range::RangeInclusive<T> as iter::range::RangeInclusiveIteratorImpl>::spec_next_back;false;true;true;false
fmt::float::float_to_exponential_common_exact;false;true;true;false
intrinsics::black_box;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_compress_pd;true;true;true;false
num::dec2flt::parse::parse_scientific;false;false;true;false
core_arch::x86::avx512f::_mm_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_expandloadu_epi16;true;true;true;false
<str::iter::EscapeUnicode<'a> as fmt::Debug>::fmt;false;false;true;false
<i32 as ops::bit::Shl<i128>>::shl;false;false;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::expose_provenance;false;true;true;false
<num::saturating::Saturating<i16> as ops::bit::BitAnd<&num::saturating::Saturating<i16>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_add_sh;true;true;true;false
num::<impl u128>::checked_ilog2;false;false;false;false
<marker::PhantomPinned as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::sse41::_mm_test_all_ones;true;true;false;false
core_arch::x86::avx512f::_mm_mask_abs_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_unpacklo_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmpeq_epu32_mask;true;true;false;false
num::wrapping::Wrapping::<u128>::to_be;false;false;false;false
num::niche_types::Nanoseconds::as_inner;false;false;false;false
core_arch::x86::avx512f::_mm512_permute_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_expandloadu_epi64;true;true;true;false
core_arch::x86::avx512bw::_mm512_cmpgt_epi16_mask;true;true;false;false
core_arch::x86::avx512cd::_mm512_maskz_conflict_epi64;true;true;false;false
num::<impl isize>::strict_pow;false;false;false;true
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::get_mut;false;false;true;false
<i8 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512bf16::_mm256_mask_dpbf16_ps;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitOr>::bitor;false;false;true;false
<i64 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i128>::partial_cmp;false;false;false;false
core_arch::x86::sse41::_mm_blend_ps;true;true;true;false
ptr::non_null::NonNull::<[T]>::as_uninit_slice_mut;true;true;true;false
core_arch::x86::avx512f::_mm512_i32logather_epi64;true;true;true;false
<isize as ops::arith::Div<&isize>>::div;false;false;false;false
str::<impl str>::rsplit_terminator;false;false;false;false
core_arch::x86::__m256bh;false;false;false;false
num::saturating::Saturating::<i8>::leading_zeros;false;false;false;false
sync::exclusive::Exclusive::<T>::into_inner;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
fmt::rt::Argument::<'_>::new_debug;false;false;false;false
num::wrapping::Wrapping::<i8>::abs;false;false;false;false
core_arch::simd::i64x8::from_array;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_rsqrt_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtt_roundps_epu32;true;true;true;false
num::<impl u64>::trailing_ones;false;false;false;false
num::nonzero::NonZero::<u32>::unchecked_mul;true;true;false;false
iter::traits::iterator::Iterator::cmp;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_max_epu8;true;true;false;false
core_arch::x86::avx512bf16::_mm512_mask_cvtpbh_ps;true;true;true;false
<ops::range::RangeTo<T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
<alloc::layout::Layout as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_nth;false;true;true;false
<&'a i32 as ops::bit::Shr<u32>>::shr;false;false;false;false
<&'a num::saturating::Saturating<u32> as ops::bit::BitXor<num::saturating::Saturating<u32>>>::bitxor;false;false;false;false
<cell::Cell<T> as cmp::PartialOrd>::ge;false;false;true;false
core_arch::x86::vaes::_mm512_aesdec_epi128;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<u8, N>>::sum;false;false;false;true
iter::traits::iterator::Iterator::find::check;false;false;false;false
num::nonzero::NonZero::<u128>::ilog2;false;false;false;false
cmp::impls::<impl cmp::PartialEq for f128>::ne;false;false;true;false
<iter::adapters::cloned::Cloned<I> as iter::traits::iterator::Iterator>::fold;false;false;false;true
core_arch::x86::avx512f::_mm_rolv_epi64;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<isize> for core_simd::vector::Simd<isize, N>>::shl;false;false;false;false
num::nonzero::NonZero::<i64>::checked_mul;false;true;false;false
core_arch::x86::fma::_mm_fnmadd_sd;true;true;true;false
num::<impl usize>::wrapping_div;false;false;false;false
<option::Option<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_min_epi32;true;true;false;false
<i128 as ops::bit::BitOrAssign<&i128>>::bitor_assign;false;false;true;false
num::wrapping::Wrapping::<usize>::swap_bytes;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_next_back;false;false;true;false
ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge;false;false;true;false
num::saturating::Saturating::<usize>::rotate_right;false;false;false;false
<i128 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<range::RangeInclusive<Idx> as clone::Clone>::clone;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for isize>::le;false;false;false;false
str::<impl str>::parse;false;false;false;false
<fmt::Formatter<'_> as fmt::Write>::write_str;false;false;true;false
core_arch::x86::avx512f::_mm_ternarylogic_epi64;true;true;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
range::<impl convert::From<range::Range<T>> for ops::range::Range<T>>::from;false;false;true;false
core_arch::x86::__m128i::as_u8x16;false;false;false;false
intrinsics::ub_checks;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::RemAssign<i64>>::rem_assign;false;false;true;false
<net::ip_addr::Ipv6MulticastScope as cmp::PartialEq>::eq;false;false;false;false
<&mut H as hash::Hasher>::write_isize;false;false;true;false
num::<impl i128>::wrapping_shr;false;true;false;false
slice::<impl [T]>::rotate_right;false;true;true;false
core_arch::x86::sse2::_mm_ucomigt_sd;true;true;true;false
core_arch::x86::avx::_mm256_setr_epi8;true;false;false;false
fmt::builders::debug_map_new;false;false;true;false
<hash::sip::SipHasher24 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_cmpgt_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_fnmsub_ph;true;true;true;false
num::<impl i128>::is_positive;false;false;false;false
f64::<impl f64>::to_radians;false;false;true;false
<num::fmt::Part<'a> as fmt::Debug>::fmt;false;false;true;false
<u32 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<hash::sip::Sip13Rounds as hash::sip::Sip>::c_rounds;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundi64_sd;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for u64>::le;false;false;false;false
<u32 as iter::traits::accum::Sum<&'a u32>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_sub_epi64;true;true;false;false
num::wrapping::Wrapping::<u128>::swap_bytes;false;false;false;false
option::Option::<T>::unwrap;false;false;true;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;false;true;false
<num::wrapping::Wrapping<u8> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<u8>>>::sum;false;false;false;true
<Iter as iter::traits::collect::TraitD<ED, EC, EB, EA>>::extend::extend;false;false;true;false
num::<impl i64>::saturating_abs;false;false;false;false
<cell::RefCell<T> as cmp::PartialOrd>::le;false;false;true;false
<iter::adapters::map_windows::MapWindows<I, F, N> as clone::Clone>::clone;false;false;true;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::interleave;false;false;true;false
<u64 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<u128>::count_zeros;false;false;false;false
<&u16 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<&i8>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx::_mm256_testnzc_si256;true;true;false;false
<iter::adapters::step_by::StepBy<I> as clone::Clone>::clone;false;false;true;false
iter::adapters::flatten::advance_by_one;false;false;false;false
core_arch::simd::i64x1::splat::JustOne;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi64;true;true;true;false
<&u16 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<f128 as convert::num::FloatToInt<u32>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_epu16;true;true;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
fmt::FormattingOptions::get_precision;false;false;true;false
num::<impl u16>::from_ascii_radix;false;false;false;true
num::<impl u8>::trailing_zeros;false;false;false;false
core_arch::x86::avx::_mm256_testz_si256;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign;false;false;true;false
<num::niche_types::NonZeroIsizeInner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_i64scatter_epi64;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundi64_ss;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u8> for core_simd::vector::Simd<u8, N>>::shr;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::abs;false;false;false;false
<i128 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi32;true;true;false;false
<num::saturating::Saturating<i32> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<i128 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
"slice::<impl [[T; N]]>::as_flattened";false;true;false;false
core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi32;true;true;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::trailing_zeros;false;false;false;false
core_arch::x86::avx512cd::_mm512_lzcnt_epi64;true;true;false;false
<i8 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::simd::i16x4::extract;false;true;false;false
num::flt2dec::round_up;false;false;true;true
num::<impl i32>::wrapping_pow;false;false;false;true
<I as iter::adapters::zip::SpecTrustedRandomAccess>::try_get_unchecked;true;false;true;false
core_arch::x86::avx512f::_mm_rol_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_mask_fpclass_sd_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_cvt_roundps_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm_cmpeq_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_shuffle_f32x4;true;true;true;false
num::<impl usize>::trailing_ones;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mov_ps;true;true;true;false
<i32 as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_sub_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_sd;true;true;true;false
<iter::adapters::filter_map::FilterMap<I, F> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_store_sh;true;true;true;false
core_arch::x86::avx512dq::_mm_range_ps;true;true;true;false
ops::range::Bound::<T>::map;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u16> for core_simd::vector::Simd<u16, N>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu16_mask;true;true;false;false
<&num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div;false;false;false;false
<i32 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_cmpneq_epi8_mask;true;true;false;false
<num::niche_types::U32NotAllOnes as cmp::Ord>::cmp;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub;false;false;false;false
<net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand;false;false;false;false
core_arch::x86::sse::_mm_rcp_ps;true;true;true;false
core_arch::x86::sse41::_mm_ceil_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundps_ph;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_rfold;false;false;true;true
panicking::panic_explicit;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_srl_epi64;true;true;false;false
<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&num::wrapping::Wrapping<u8>>>::div_assign;false;false;true;false
core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi32;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::DivAssign<&u64>>::div_assign;false;false;true;false
<f16 as ops::arith::Neg>::neg;false;false;true;false
str::<impl str>::split_terminator;false;false;false;false
<&num::wrapping::Wrapping<i128> as ops::bit::BitOr<&num::wrapping::Wrapping<i128>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_rol_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_srli_epi64;true;true;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<i8, N>>::bitand;false;true;false;false
<u32 as num::bignum::FullOps>::full_div_rem;false;false;false;false
<cell::BorrowRef<'_> as ops::drop::Drop>::drop;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::MulAssign<i16>>::mul_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_next_back;false;false;true;false
<u64 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
fmt::rt::Argument::<'_>::fmt;true;true;true;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_fmsub_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepu64_ph;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_expandloadu_epi64;true;true;true;false
<i128 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512cd::_mm512_mask_conflict_epi64;true;true;false;false
<num::saturating::Saturating<u8> as ops::arith::RemAssign<&num::saturating::Saturating<u8>>>::rem_assign;false;false;true;false
<usize as iter::range::Step>::forward_checked;false;false;false;false
core_arch::x86::sse2::_mm_srli_si128;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_compress_epi64;true;true;false;false
core_simd::masks::Mask::<T, N>::to_int;false;false;true;false
str::<impl str>::trim_right;false;false;false;false
f32::<impl f32>::recip;false;false;true;false
<&num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand;false;false;false;false
<char as str::pattern::Pattern>::strip_suffix_of;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_cvtepu64_ps;true;true;false;false
core_arch::simd::i16x4::splat::JustOne;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&i16>>::add_assign;false;false;true;false
<core_arch::simd::i16x2 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_slli_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu32;true;true;true;false
core_arch::x86::avx2::_mm256_cvtepu8_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi64;true;true;true;false
core_arch::x86::bmi1::_blsr_u32;true;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmple_epi64_mask;true;true;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::index;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i64>::try_from;false;false;false;false
<&u64 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
"tuple::<impl convert::From<(T, T, T)> for [T; 3]>::from";false;false;true;false
core_arch::x86::avxneconvert::_mm256_cvtneebf16_ps;true;true;true;false
core_arch::x86::sse41::_mm_extract_epi8;true;true;false;false
num::<impl i32>::checked_mul;false;false;false;false
<option::IntoIter<A> as clone::Clone>::clone;false;false;true;false
<core_simd::masks::Mask<i16, N> as convert::From<core_simd::masks::Mask<i64, N>>>::from;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand;false;false;false;false
num::<impl u128>::next_multiple_of;false;false;false;false
core_arch::x86::adx::_addcarry_u32;true;true;true;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl usize>::strict_add;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub;false;false;false;false
<iter::adapters::zip::Zip<A, B> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_set1_ps;true;false;true;false
core_arch::x86::avx512bw::_mm512_mask_packs_epi16;true;true;false;false
core_arch::x86::avx512bf16::_mm512_maskz_cvtpbh_ps;true;true;false;false
<num::wrapping::Wrapping<T> as fmt::LowerHex>::fmt;false;false;true;false
<num::error::ParseIntError as error::Error>::description;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmul_pch;true;true;true;false
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_permutex_pd;true;true;true;false
<&num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub;false;false;false;false
<i64 as ops::arith::DivAssign<&i64>>::div_assign;false;false;true;false
intrinsics::frem_algebraic;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fnmadd_ph;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_load_pd;true;true;true;false
iter::traits::iterator::Iterator::max_by;false;false;false;true
num::<impl i8>::checked_shl;false;true;false;false
core_arch::x86::avx512bw::_mm_maskz_packus_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_getmant_round_sd;true;true;true;false
sync::atomic::AtomicUsize::compare_exchange_weak;false;true;true;false
<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&num::saturating::Saturating<i128>>>::bitor_assign;false;false;true;false
<u64 as ops::bit::Shl<u16>>::shl;false;false;false;false
<u64 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
core_arch::x86::avx512f::_mm512_cmplt_ps_mask;true;true;true;false
core_arch::x86::rtm::_xtest;true;true;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Sub>::sub;false;false;false;false
sync::atomic::AtomicBool::load;false;true;true;false
num::<impl u128>::checked_div_euclid;false;false;false;false
num::wrapping::Wrapping::<usize>::is_power_of_two;false;false;false;false
str::<impl str>::trim_start;false;false;false;false
slice::index::slice_end_index_len_fail;false;false;false;false
<u16 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_sub_epi64;true;true;false;false
<i16 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_and_pd;true;true;true;false
core_arch::x86_64::amx::_tile_loadd;true;true;true;false
convert::num::<impl convert::TryFrom<i64> for i16>::try_from;false;false;false;false
sync::atomic::AtomicI64::compare_exchange;false;true;true;false
num::<impl u32>::pow;false;false;false;true
num::<impl u64>::overflowing_sub_signed;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor;false;false;false;false
<u16 as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::__m256d::as_array;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_permutex_pd;true;true;true;false
core_simd::ops::assign::<impl ops::bit::ShrAssign<U> for core_simd::vector::Simd<T, N>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::DivAssign<&num::saturating::Saturating<i8>>>::div_assign;false;false;true;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256d> for core_simd::vector::Simd<f64, 4>>::from;false;false;true;false
<&u128 as ops::arith::Div<&u128>>::div;false;false;false;false
num::<impl i128>::wrapping_add;false;false;false;false
num::int_log10::panic_for_nonpositive_argument;false;false;false;false
num::<impl i8>::checked_rem;false;false;false;false
<i128 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
net::ip_addr::Ipv4Addr::new;false;false;false;false
net::ip_addr::Ipv6Addr::is_loopback;false;false;false;false
<&num::wrapping::Wrapping<u16> as ops::bit::Not>::not;false;false;false;false
num::<impl u8>::div_euclid;false;false;false;false
ptr::mut_ptr::<impl *mut T>::write_unaligned;true;true;true;false
<Iter as iter::traits::collect::TraitG<EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
core_arch::x86::avx512fp16::_mm_load_sh;true;true;true;false
<net::socket_addr::SocketAddr as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmplt_epu32_mask;true;true;false;false
num::<impl i128>::strict_neg;false;false;false;false
<str::error::ParseBoolError as fmt::Debug>::fmt;false;false;true;false
<str as fmt::Debug>::fmt;false;true;true;true
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_roundscale_ph;true;true;true;false
<num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor;false;false;false;false
num::<impl i128>::strict_div;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for isize>::lt;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::find;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOr<&num::saturating::Saturating<i64>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtps_pd;true;true;true;false
slice::<impl [T]>::split_at_unchecked::precondition_check;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_add_ps;true;true;true;false
core_arch::x86::sse2::_mm_cmpnle_sd;true;true;true;false
<i16 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
<[ascii::ascii_char::AsciiChar]>::as_bytes;false;false;false;false
iter::adapters::map_windows::MapWindows::<I, F, N>::new;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512f::_mm512_cvtps_pd;true;true;true;false
fmt::builders::DebugSet::<'a, 'b>::finish;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvt_roundsh_sd;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvtt_roundsd_si64;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_getmant_pd;true;true;true;false
<num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand;false;false;false;false
num::<impl i8>::checked_isqrt;false;true;false;false
<range::iter::IterRangeInclusive<A> as clone::Clone>::clone;false;false;true;false
num::<impl u8>::saturating_sub;false;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::eq;false;false;false;false
net::parser::<impl net::socket_addr::SocketAddrV4>::parse_ascii;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::RemAssign>::rem_assign;false;false;true;false
sync::atomic::AtomicPtr::<T>::fetch_ptr_add;false;false;true;false
core_arch::x86::avx512vbmi::_mm256_maskz_permutex2var_epi8;true;true;false;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epu32;true;true;true;false
<&usize as ops::bit::Shl<&isize>>::shl;false;false;false;false
<num::nonzero::NonZero<T> as fmt::Debug>::fmt;false;false;true;false
char::convert::from_u32;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::saturating_sub;false;true;false;false
ptr::non_null::NonNull::<T>::is_aligned;false;false;true;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_next_back;false;true;true;false
core_arch::x86::sse2::_mm_sra_epi16;true;true;false;false
num::<impl isize>::checked_shr;false;true;false;false
<num::saturating::Saturating<u64> as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_fcmul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtepu64_ph;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtsd_ss;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<(ops::range::Bound<&'a T>, ops::range::Bound<&'a T>) as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
<&num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul;false;false;false;false
<task::poll::Poll<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtsh_h;true;true;true;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::bignum::Big32x40::div_rem_small;false;false;true;true
<num::saturating::Saturating<i64> as ops::arith::Div>::div;false;false;false;false
num::niche_types::UsizeNoHighBit::new_unchecked;true;false;false;false
ptr::const_ptr::<impl *const T>::offset::runtime_offset_nowrap::runtime;false;false;true;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::<impl i16>::checked_ilog2;false;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 16>> for core_arch::x86::__m256i>::from;false;false;false;false
cmp::impls::<impl cmp::PartialEq for i8>::ne;false;false;false;false
num::nonzero::NonZero::<i8>::cast_unsigned;false;true;false;false
<&mut H as hash::Hasher>::write_u32;false;false;true;false
slice::iter::Windows::<'a, T>::new;false;false;false;false
num::<impl i64>::isqrt;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmpneq_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm_cvtsd_u32;true;true;true;false
error::Request::<'a>::provide_ref_with;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpneq_epu64_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_mullo_epi32;true;true;false;false
<core_arch::simd::f64x2::splat::JustOne as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::swap_bytes;false;true;false;false
<num::niche_types::NonZeroU32Inner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_slli_epi64;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmsub_round_ss;true;true;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::to_usize;false;false;false;false
<core_arch::simd::u16x32 as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<u128>>::rem_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epi32;true;true;true;false
num::<impl i128>::rotate_right;false;false;false;false
str::iter::MatchIndicesInternal;false;false;false;false
core_arch::x86::avx2::_mm_mask_i64gather_ps;true;true;true;false
core_arch::x86::avx512bw::_kortestz_mask64_u8;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shldv_epi16;true;true;false;false
num::<impl u128>::unchecked_shr::precondition_check;false;false;false;false
core_arch::x86::avx2::_mm256_hadd_epi32;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::DivAssign>::div_assign;false;false;true;false
num::fmt::Part::Copy;false;false;false;false
<core_simd::masks::Mask<i64, N> as convert::From<core_simd::masks::Mask<i16, N>>>::from;false;false;true;false
core_arch::x86::avx512vbmi::_mm_permutex2var_epi8;true;true;false;false
<u8 as ops::bit::Shr<i8>>::shr;false;false;false;false
slice::sort::select::partition_at_index_loop;false;true;true;true
core_arch::x86::avx512f::_mm_cvt_roundss_i32;true;true;true;false
core_arch::x86::sse41::_mm_insert_epi32;true;true;false;false
core_arch::x86::avx::_mm256_zextpd128_pd256;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_nth;false;false;true;true
<bool as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
task::wake::Context::<'a>::from_waker;false;false;true;false
<&num::saturating::Saturating<u32> as ops::bit::Not>::not;false;false;false;false
num::<impl i64>::unchecked_mul::precondition_check;false;false;false;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sqrt_round_pd;true;true;true;false
<time::Duration as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<str::error::Utf8Error as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div;false;false;false;false
<i64 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cmple_epi64_mask;true;true;false;false
<u128 as ops::bit::Shr<u64>>::shr;false;false;false;false
num::<impl u32>::strict_pow;false;false;false;true
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next_back;false;false;true;true
<asserting::Capture<E, asserting::TryCaptureWithoutDebug> as fmt::Debug>::fmt;false;false;true;false
cmp::impls::<impl cmp::PartialEq for char>::eq;false;false;false;false
<&mut T as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_div_pd;true;true;true;false
<i16 as ops::arith::Mul>::mul;false;false;false;false
<i16 as ops::bit::Shr<&u8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm_cmp_sh_mask;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi8;true;true;false;false
slice::raw::from_raw_parts_mut::precondition_check;false;false;true;false
core_arch::x86::avx512f::_mm_scalef_sd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_subs_epu8;true;true;false;false
core_arch::x86::avx2::_mm256_max_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmp_epu64_mask;true;true;false;false
<u16 as ops::arith::AddAssign<&u16>>::add_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::Div>::div;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::avx512f::_mm512_cvtps_ph;true;true;true;false
error::request_by_type_tag;false;false;false;false
<u32 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_pd;true;true;true;false
<u16 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_compress_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_andnot_pd;true;true;true;false
<iter::adapters::inspect::Inspect<I, F> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundss_u64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mul_ph;true;true;true;false
<num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub;false;false;false;false
<&i8 as ops::bit::Shr<&i8>>::shr;false;false;false;false
num::wrapping::Wrapping::<u8>::swap_bytes;false;false;false;false
iter::traits::collect::default_extend_tuple_k::extend;false;false;true;false
core_arch::simd::u32x16::extract;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_getexp_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_rorv_epi64;true;true;false;false
core_simd::masks::mask_impl::Mask::<T, N>::from_bitmask_integer;false;true;false;false
core_arch::x86::avx512f::_mm_mask_sub_pd;true;true;true;false
intrinsics::unaligned_volatile_load;true;false;true;false
<u64 as ops::arith::Rem<&u64>>::rem;false;false;false;false
fmt::num::imp::<impl fmt::Display for i32>::fmt;false;false;true;false
num::<impl isize>::next_multiple_of;false;false;false;false
num::<impl u8>::checked_shl;false;true;false;false
core_arch::x86::avx512f::_mm512_getmant_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_loadu_pd;true;true;true;false
num::nonzero::NonZero::<u64>::reverse_bits;false;true;false;false
core_arch::x86::avx512f::_mm_mask_max_round_sd;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_compress_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_abs_epi16;true;true;false;false
<&i64 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::DivAssign>::div_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::is_null::compiletime;false;false;true;false
<i64 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_rcp14_ps;true;true;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<i16 as ops::bit::Shl<i128>>::shl;false;false;false;false
<&'a num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr;false;false;false;false
<core_arch::x86::__m512bh as clone::Clone>::clone;false;false;false;false
<net::ip_addr::Ipv6Addr as fmt::Debug>::fmt;false;false;true;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::RangeInclusive<A>>::rfold;false;false;true;false
sync::atomic::AtomicPtr::<T>::compare_and_swap;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_ror_epi32;true;true;false;false
num::nonzero::NonZero::<u64>::checked_pow;false;true;false;false
f128::<impl f128>::classify;false;false;true;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
<core_arch::simd::u8x8 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm_mask_expand_epi64;true;true;false;false
num::dec2flt::pfe_invalid;false;false;false;false
num::<impl u16>::checked_shr;false;true;false;false
<i32 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<i16 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
<&'a result::Result<T, E> as iter::traits::collect::IntoIterator>::into_iter;false;false;false;false
<num::dec2flt::decimal_seq::DecimalSeq as fmt::Debug>::fmt;false;false;true;false
alloc::layout::Layout::repeat_packed;false;false;false;false
core_arch::x86::sse::_mm_load_ps;true;true;true;false
core_arch::simd::f32x8::from_array;false;false;true;false
core_arch::x86::sse2::_mm_unpacklo_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_mov_epi8;true;true;false;false
<range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping;false;false;true;false
str::validations::contains_nonascii;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::cast;false;true;false;false
intrinsics::prefetch_read_data;true;false;true;false
core_arch::x86::avx512bw::_mm_maskz_add_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_rol_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_srai_epi64;true;true;false;false
core_arch::x86_64::tbm::_blcfill_u64;true;false;false;false
<&num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add;false;false;false;false
<i128 as ops::bit::Shr<&u8>>::shr;false;false;false;false
cmp::impls::<impl cmp::PartialEq for i16>::eq;false;false;false;false
<i16 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
num::<impl isize>::unchecked_sub::precondition_check;false;false;false;false
num::wrapping::Wrapping::<i128>::abs;false;false;false;false
intrinsics::mir::Field::panic_cold_explicit;false;false;false;false
char::methods::<impl char>::is_ascii_alphabetic;false;false;false;false
intrinsics::mir::Return::panic_cold_explicit;false;false;false;false
fmt::num::parse_u64_into;false;true;true;false
<sync::exclusive::Exclusive<G> as ops::coroutine::Coroutine<R>>::resume;false;false;true;false
core_arch::x86::avx512dq::_mm_reduce_round_ss;true;true;true;false
<u8 as ops::bit::BitXor>::bitxor;false;false;false;false
<u64 as iter::range::Step>::steps_between;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i64>>::try_from;false;true;false;false
<i16 as ops::arith::DivAssign<&i16>>::div_assign;false;false;true;false
<i16 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
core_arch::x86::sse41::_mm_dp_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_fmsub_round_ps;true;true;true;false
<u32 as ops::bit::Shl<&i16>>::shl;false;false;false;false
num::<impl i128>::overflowing_rem;false;false;false;false
core_arch::simd::f64x2::extract;false;true;true;false
<num::saturating::Saturating<u64> as ops::arith::Mul<&num::saturating::Saturating<u64>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_unpackhi_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_andnot_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_rcp14_ss;true;true;true;false
num::nonzero::NonZero::<u32>::saturating_mul;false;true;false;false
<fmt::builders::FromFn<F> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_max_round_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_mulhi_epu16;true;true;false;false
<num::bignum::Big32x40 as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_undefined_ph;true;false;false;false
<&num::saturating::Saturating<i64> as ops::bit::Not>::not;false;false;false;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
intrinsics::simd::simd_flog2;true;false;false;false
<ffi::c_str::FromBytesWithNulError as cmp::PartialEq>::eq;false;false;false;false
num::saturating::Saturating::<usize>::count_ones;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpneq_epi16_mask;true;true;false;false
hash::BuildHasherDefault;false;false;true;false
iter::adapters::map::Map::<I, F>::new;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
core_arch::x86::avx512dq::_mm512_broadcast_i64x2;true;true;false;false
<ptr::non_null::NonNull<T> as convert::From<&T>>::from;false;false;false;false
<i128 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<i8 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
<u64 as ops::bit::Shr<&usize>>::shr;false;false;false;false
fmt::num::imp::<impl fmt::Display for u64>::fmt;false;false;true;false
core_arch::x86::sse::_mm_loadu_ps;true;true;true;false
slice::<impl [T]>::split_last_mut;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_round_ss;true;true;true;false
core_arch::simd::i32x32::extract;false;true;false;false
core_arch::x86::avx2::_mm256_xor_si256;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_ss;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
num::<impl u128>::is_multiple_of;false;false;false;false
<str::iter::SplitInclusive<'a, P> as clone::Clone>::clone;false;false;true;false
ptr::swap_nonoverlapping::runtime;false;true;true;false
"array::<impl cmp::PartialOrd for [T; N]>::partial_cmp";false;false;false;false
core_arch::x86::avx512f::_mm512_ror_epi32;true;true;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::count;false;false;false;true
core_arch::x86::sse2::_mm_cmplt_epi32;true;true;false;false
<i16 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<core_arch::simd::i8x32 as clone::Clone>::clone;false;false;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::reverse;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fnmadd_round_pd;true;true;true;false
slice::iter::ArrayChunks::<'a, T, N>::new;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_xor_epi32;true;true;false;false
core_arch::x86::rtm::_xbegin;true;true;false;false
core_arch::simd::f64x4::from_array;false;false;true;false
<u64 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_extracti64x2_epi64;true;true;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_cvtepu32_epi64;true;true;false;false
fmt::num::<impl fmt::UpperHex for usize>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_packus_epi16;true;true;false;false
<&num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor;false;false;false;false
<pin::Pin<Ptr> as fmt::Debug>::fmt;false;false;true;false
num::<impl i64>::unchecked_shr::precondition_check;false;false;false;false
<&isize as ops::bit::Shl<&u8>>::shl;false;false;false;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::count;false;false;true;false
<str::iter::Split<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_hadd_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmpgt_epi32_mask;true;true;false;false
<num::niche_types::NonZeroU8Inner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_adds_epu16;true;true;false;false
num::nonzero::NonZero::<u64>::rotate_left;false;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shrdi_epi64;true;true;false;false
cell::lazy::LazyCell::<T, F>::into_inner;false;false;true;false
core_arch::x86::avx512fp16::_mm_sqrt_ph;true;true;true;false
<u64 as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512f::_mm256_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_sqrt_sd;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_extracti64x2_epi64;true;true;false;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
num::<impl i8>::cast_unsigned;false;false;false;false
fmt::num::<impl fmt::LowerHex for u32>::fmt;false;false;true;false
num::<impl u64>::wrapping_sub;false;false;false;false
<&num::nonzero::NonZero<isize> as ops::arith::Neg>::neg;false;false;false;false
core_arch::simd::u8x16;false;false;false;false
<u64 as ops::arith::Div>::div;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi8_epi64;true;true;false;false
num::<impl i64>::strict_sub;false;false;false;false
<&'a num::saturating::Saturating<u8> as ops::arith::Rem<num::saturating::Saturating<u8>>>::rem;false;false;false;false
num::overflow_panic::mul;false;false;false;false
<&'a num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr;false;false;false;false
<i64 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_store_si128;true;true;true;false
num::<impl u8>::is_ascii;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
slice::<impl [T]>::split_at_checked;false;true;false;false
<usize as iter::traits::accum::Sum<&'a usize>>::sum;false;false;false;true
task::wake::Waker::data;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_unpackhi_epi16;true;true;false;false
<&'a u128 as ops::bit::Shr<usize>>::shr;false;false;false;false
num::niche_types::NonZeroU16Inner::new_unchecked;true;false;false;false
num::<impl i64>::checked_next_multiple_of;false;false;false;false
intrinsics::wrapping_mul;false;false;false;false
<i16 as ops::bit::Shl<u64>>::shl;false;false;false;false
intrinsics::const_eval_select;false;false;false;false
f64::<impl f64>::clamp;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i32loscatter_pd;true;true;true;false
iter::traits::iterator::Iterator::partial_cmp_by::compare;false;false;false;false
core_arch::x86::avx512vbmi::_mm512_permutexvar_epi8;true;true;false;false
<&'a num::saturating::Saturating<i64> as ops::bit::BitAnd<num::saturating::Saturating<i64>>>::bitand;false;false;false;false
num::<impl i64>::checked_ilog;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_mul_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_storeu_epi16;true;true;true;false
core_arch::x86::sse2::_mm_cmple_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi8;true;true;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<cell::RefCell<T> as convert::From<T>>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm512_sub_ph;true;true;true;false
<convert::Infallible as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512vnni::_mm_dpwuud_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_min_ph;true;true;true;false
num::<impl isize>::strict_add_unsigned;false;false;false;false
<! as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_slli_epi64;true;true;false;false
ptr::non_null::NonNull::<[T]>::len;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_or_ps;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::cast;false;true;false;false
<i64 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
<ops::range::RangeToInclusive<T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
<&u64 as ops::arith::Div<&u64>>::div;false;false;false;false
sync::atomic::AtomicIsize::try_update;false;false;true;false
<core_arch::simd::i64x1 as fmt::Debug>::fmt;false;false;true;false
<&f64 as ops::arith::Sub<&f64>>::sub;false;false;true;false
<i8 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_cmp_round_ps_mask;true;true;true;false
<&u32 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::nth;false;false;true;false
sync::atomic::AtomicU64::as_ptr;false;false;true;false
<&num::wrapping::Wrapping<usize> as ops::bit::BitOr<&num::wrapping::Wrapping<usize>>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi64;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAnd>::bitand;false;false;false;false
slice::<impl [T]>::split_first_mut;false;false;true;false
<core_arch::simd::u8x32 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_mul_ss;true;true;true;false
num::<impl u128>::isolate_most_significant_one;false;false;false;false
f32::<impl f32>::is_sign_positive;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_max_epu32;true;true;false;false
<core_arch::simd::i64x8 as cmp::PartialEq>::eq;false;false;false;false
num::nonzero::NonZero::<u128>::checked_mul;false;true;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor;false;false;false;false
ptr::const_ptr::<impl *const T>::offset::precondition_check;false;false;true;false
num::<impl i128>::checked_ilog;false;false;false;false
<u8 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
<i32 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
<(dyn any::Any + marker::Send + 'static)>::downcast_ref_unchecked;true;true;false;false
<option::Option<T> as iter::traits::accum::Sum<option::Option<U>>>::sum;false;false;false;false
str::iter::RSplitN::<'a, P>::remainder;false;false;true;false
<&'a i8 as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx::_mm256_sqrt_pd;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&u16>>::rem_assign;false;false;true;false
num::<impl u128>::max_value;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpge_epu16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fmul_pch;true;true;true;false
option::Option::<T>::get_or_insert;false;false;true;false
<str::iter::SplitWhitespace<'a> as fmt::Debug>::fmt;false;false;true;false
<fmt::rt::Alignment as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<str::pattern::CharPredicateSearcher<'a, F> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm512_loadu_ph;true;true;true;false
<num::niche_types::NonZeroI16Inner as cmp::Ord>::cmp;false;false;false;false
num::int_log10::i16;false;false;false;false
core_arch::x86::avx512f::_mm_mask_div_ss;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_adds_epi16;true;true;false;false
core_arch::x86::sse2::_mm_cvtsi32_sd;true;true;true;false
"<net::ip_addr::IpAddr as convert::From<[u16; 8]>>::from";false;false;false;false
<f16 as ops::arith::Add>::add;false;false;true;false
ptr::mut_ptr::<impl *mut [T]>::split_at_mut;true;true;true;false
<i64 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<str::pattern::MultiCharEqSearcher<'a, C> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;false
<net::socket_addr::SocketAddr as hash::Hash>::hash;false;false;true;false
<i128 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fmsubadd_ps;true;true;true;false
<i32 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_store_ps;true;true;true;false
core_arch::x86::avx512cd::_mm512_maskz_lzcnt_epi64;true;true;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem;false;false;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor;false;false;false;false
core_arch::x86_64::sse2::_mm_cvtsi64_si128;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_xor_epi64;true;true;false;false
core_arch::x86_64::amx::_tile_dpbusd;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm512_add_epi16;true;true;false;false
<u8 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
sync::atomic::AtomicI64::from_mut;false;true;true;false
<&num::wrapping::Wrapping<u64> as ops::bit::BitAnd<&num::wrapping::Wrapping<u64>>>::bitand;false;false;false;false
num::saturating::Saturating::<i32>::swap_bytes;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::to_radians;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_rcp14_pd;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_and_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_andnot_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_getexp_ph;true;true;true;false
str::lossy::Utf8Chunk::<'a>::valid;false;false;false;false
core_arch::x86::avx512f::_mm512_max_round_pd;true;true;true;false
num::bignum::tests::Big8x3::div_rem_small;false;false;true;true
<&u32 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_adds_epu16;true;true;false;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_pd;true;true;true;false
core_arch::x86::sse2::_mm_sqrt_sd;true;true;true;false
<f16 as convert::num::FloatToInt<u16>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx::_mm_cmp_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_sub_epi16;true;true;false;false
<u16 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_rsqrt_ph;true;true;true;false
<core_arch::simd::m64x2 as cmp::PartialEq>::eq;false;false;false;false
core_arch::simd::f16x32::extract;false;true;true;false
<u128 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
num::<impl u8>::checked_div_euclid;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::with_exposed_provenance;false;true;true;false
<&'a num::saturating::Saturating<u64> as ops::bit::BitAnd<num::saturating::Saturating<u64>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_getmant_sh;true;true;true;false
tuple::<impl cmp::PartialOrd for (B, A, Z, Y, X, W, V, U, T)>::gt;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::gfni::_mm512_gf2p8affine_epi64_epi8;true;true;false;false
num::<impl i16>::saturating_sub_unsigned;false;false;false;false
<sync::exclusive::Exclusive<T> as fmt::Debug>::fmt;false;false;true;false
<i128 as iter::range::Step>::forward_checked;false;false;false;false
core_arch::x86::avx512f::_mm512_fnmsub_ps;true;true;true;false
num::<impl u32>::overflowing_div_euclid;false;false;false;false
fmt::builders::PadAdapter::<'buf, 'state>::wrap;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitAnd<&num::saturating::Saturating<u16>>>::bitand;false;false;false;false
core_arch::x86::fma::_mm256_fnmsub_pd;true;true;true;false
<net::ip_addr::IpAddr as cmp::PartialOrd>::partial_cmp;false;false;true;false
num::nonzero::NonZero::<T>::from_mut_unchecked;true;false;true;false
num::nonzero::NonZero::<i8>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_mul_ps;true;true;true;false
<num::saturating::Saturating<i16> as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx2::_mm256_i64gather_ps;true;true;true;false
num::<impl i8>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_max_epu64;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u64> for &'lhs core_simd::vector::Simd<u64, N>>::shr;false;false;false;false
<slice::iter::ChunkBy<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
sync::atomic::AtomicU64::compare_exchange_weak;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_getmant_ps;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<i8, N>>::product;false;false;false;true
iter::adapters::filter_map::FilterMap::<I, F>::new;false;false;false;false
<i128 as iter::range::Step>::forward;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::Shr<&usize>>::shr;false;false;false;false
num::nonzero::NonZero::<i128>::saturating_abs;false;true;false;false
core_simd::ops::deref::<impl ops::arith::Rem<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::rem;false;false;false;false
<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::Add>::add;false;false;false;false
<&u64 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<range::iter::IterRangeFrom<A> as clone::Clone>::clone;false;false;true;false
core_arch::simd::f64x8::extract;false;true;true;false
<marker::variance::PhantomContravariant<T> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx2::_mm_maskload_epi32;true;true;true;false
num::saturating::Saturating::<usize>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_add_round_sd;true;true;true;false
<core_simd::masks::Mask<i32, N> as convert::From<core_simd::masks::Mask<i8, N>>>::from;false;false;true;false
<future::ready::Ready<T> as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx2::_mm256_bslli_epi128::mask;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_blend_epi64;true;true;false;false
<u64 as ops::arith::SubAssign<&u64>>::sub_assign;false;false;true;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G, H, I)>::hash;false;false;true;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
"bstr::<impl cmp::PartialEq<bstr::ByteStr> for [u8; N]>::eq";false;false;false;false
unicode::unicode_data::conversions::to_upper;false;false;false;false
<str::lossy::Utf8Chunk<'a> as fmt::Debug>::fmt;false;false;true;false
<core_simd::masks::Mask<i16, N> as convert::From<core_simd::masks::Mask<isize, N>>>::from;false;false;true;false
<usize as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdi_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_max_round_sh;true;true;true;false
core_arch::x86::sse2::_mm_set_sd;true;true;true;false
num::<impl usize>::checked_next_multiple_of;false;false;false;false
core_arch::x86::avx512ifma::_mm_madd52hi_avx_epu64;true;true;false;false
str::lossy::Utf8Chunks::<'a>::debug;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_getexp_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi16;true;true;true;false
iter::traits::iterator::Iterator::max_by_key;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi64;true;true;false;false
core_arch::x86::sse::_mm_max_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_expandloadu_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtu32_sh;true;true;true;false
<i8 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::new;false;false;false;false
<num::niche_types::NonZeroI64Inner as fmt::Debug>::fmt;false;false;true;false
num::<impl u64>::checked_next_multiple_of;false;false;false;false
sync::atomic::AtomicI8::new;false;false;false;false
core_arch::x86::__m128h;false;false;true;false
f32::<impl f32>::clamp::do_panic;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::for_each;false;false;true;true
<f32 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::simd::i8x8::from_array;false;false;false;false
ptr::swap_nonoverlapping_simple_untyped;true;true;true;true
num::<impl i16>::rotate_right;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sub_ps;true;true;true;false
<net::ip_addr::Ipv4Addr as ops::bit::BitAndAssign>::bitand_assign;false;false;true;true
core_arch::x86::avx512f::_mm512_maskz_fmsubadd_round_ps;true;true;true;false
core_arch::x86::avx2::_mm256_add_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_reduce_max_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_i64x2;true;true;false;false
core_arch::x86::avx512fp16::_mm_fcmul_round_sch;true;true;true;false
intrinsics::simd::simd_as;true;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fmsub_round_ph;true;true;true;false
ptr::write;true;true;true;false
<cmp::Ordering as hash::Hash>::hash;false;false;true;false
cmp::Ordering::then_with;false;false;false;false
core_arch::x86::avx512f::_mm256_cvtepu32_pd;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm_cmplt_epu16_mask;true;true;false;false
slice::sort::stable::merge::MergeState::<T>::merge_down;true;true;true;true
core_arch::x86::sse2::_mm_stream_si32;true;true;true;false
<marker::PhantomData<T> as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
<u64 as iter::range::Step>::backward_checked;false;false;false;false
num::<impl u16>::isolate_most_significant_one;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
<&num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg;false;false;false;false
escape::EscapeIterInner::<N>::empty;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi16;true;true;false;false
num::<impl u128>::overflowing_div;false;false;false;false
<&isize as ops::arith::Add<&isize>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_cvtepi64_epi32;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i8> for &'lhs core_simd::vector::Simd<i8, N>>::shr;false;false;false;false
core_simd::vector::Simd::<T, N>::scatter;false;false;true;false
core_arch::x86::avx512f::_mm256_permutex2var_ps;true;true;true;false
<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::rejecting;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sub_round_sd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::byte_sub;true;true;true;false
core_arch::x86::avx::_mm256_cvtsi256_si32;true;true;false;false
num::<impl i32>::overflowing_sub_unsigned;false;false;false;false
fmt::builders::DebugStruct::<'a, 'b>::field_with;false;false;true;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<isize, N>>::bitor;false;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_subnormal;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_and_pd;true;true;true;false
<num::flt2dec::Sign as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&u128 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::fold;false;false;false;true
<num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor;false;false;false;false
char::CaseMappingIter;false;false;true;false
<i32 as ops::bit::BitOr>::bitor;false;false;false;false
<&'a num::wrapping::Wrapping<i128> as ops::arith::Div<num::wrapping::Wrapping<i128>>>::div;false;false;false;false
num::nonzero::NonZero::<i32>::checked_mul;false;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi8;true;true;false;false
<u64 as ops::bit::BitOrAssign<&u64>>::bitor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_reduce_pd;true;true;true;false
<i32 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<core_simd::masks::Mask<T, N> as ops::bit::BitXor>::bitxor;false;false;true;false
num::<impl usize>::from_ne_bytes;false;false;false;false
<i8 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_and_pd;true;true;true;false
<num::saturating::Saturating<i8> as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx::_mm256_moveldup_ps;true;true;true;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi32_epi8;true;true;false;false
sync::atomic::AtomicU32::fetch_and;false;true;true;false
<num::niche_types::NonZeroI8Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&'a u32 as ops::bit::Shl<u32>>::shl;false;false;false;false
num::flt2dec::determine_sign;false;false;true;false
<i32 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::saturating_add;false;true;false;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<&'a u32 as ops::bit::Shl<u16>>::shl;false;false;false;false
<u8 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<u16 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
core_arch::x86::sse::_mm_and_ps;true;true;true;false
<u128 as ops::arith::Div>::div;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::fma::_mm_fmadd_pd;true;true;true;false
<f16 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::from_bits;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_unpackhi_pd;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i32> for core_simd::vector::Simd<i32, N>>::shr;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
<str::iter::EscapeUnicode<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
<slice::iter::GenericSplitN<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<sync::atomic::AtomicU64 as default::Default>::default;false;false;false;false
ops::range::Bound::<T>::as_ref;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_ph;true;true;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<usize>>::from;false;true;false;false
num::<impl i16>::rem_euclid;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi16;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&u64>>::rem_assign;false;false;true;false
<i64 as ops::arith::Add>::add;false;false;false;false
<&'a i16 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_sub_ps;true;true;true;false
slice::<impl [T]>::rotate_left;false;true;true;false
panicking::panic_cannot_unwind;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<cell::UnsafeCell<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_mul_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_i32scatter_pd;true;true;true;false
core_arch::x86::avx512f::_mm_rol_epi32;true;true;false;false
core_arch::x86::sse41::_mm_blendv_epi8;true;true;false;false
core_arch::x86::avx::_mm256_setr_epi32;true;false;false;false
core_arch::x86::avx512f::_mm256_maskz_broadcast_f32x4;true;true;true;false
"array::equality::<impl cmp::PartialEq<[U; N]> for [T]>::ne";false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_fmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_abs_epi32;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::SubAssign<&i16>>::sub_assign;false;false;true;false
<u32 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
<&u64 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<T as slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl>::small_sort_threshold;false;false;false;false
<i8 as ops::bit::Shl<i32>>::shl;false;false;false;false
<i32 as ops::bit::BitXor<&i32>>::bitxor;false;false;false;false
<u64 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<u16 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<i8 as ops::bit::Shl<u128>>::shl;false;false;false;false
num::nonzero::NonZero::<u16>::cast_signed;false;true;false;false
core_arch::x86::avx512f::_mm_mask_mul_sd;true;true;true;false
core_arch::simd::i8x4::splat;false;true;false;false
mem::align_of;false;false;false;false
<i8 as ops::bit::Shl<&u16>>::shl;false;false;false;false
num::<impl i64>::trailing_zeros;false;false;false;false
<bool as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
sync::atomic::AtomicU64::from_mut_slice;false;true;true;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::Searcher<'a>>::haystack;false;false;false;false
core_arch::x86::avx2::_mm256_slli_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_mulhrs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtxph_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_add_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtusepi32_epi8;true;true;false;false
num::<impl i64>::overflowing_shl;false;false;false;false
<fmt::builders::PadAdapter<'_, '_> as fmt::Write>::write_char;false;false;true;false
<u64 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::avx2::_mm256_mask_i32gather_epi32;true;true;true;false
<i64 as random::Random>::random;false;false;true;false
<usize as fmt::num::DisplayInt>::to_u128;false;false;false;false
core_arch::x86::avx512f::_mm512_cmple_epi64_mask;true;true;false;false
num::saturating::Saturating::<u16>::count_zeros;false;false;false;false
cell::SyncUnsafeCell::<T>::raw_get;false;false;true;false
f32::<impl f32>::minimum;false;false;true;false
num::<impl i128>::count_zeros;false;false;false;false
<iter::adapters::filter::Filter<I, P> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::simd::i16x16::new;false;false;false;false
core_arch::x86::sse41::_mm_round_pd;true;true;true;false
num::niche_types::NonZeroI64Inner::new;false;false;false;false
<char::ToUppercase as iter::traits::iterator::Iterator>::count;false;false;true;true
<num::saturating::Saturating<i128> as ops::bit::BitXor>::bitxor;false;false;false;false
<&'a num::wrapping::Wrapping<u32> as ops::bit::BitAnd<num::wrapping::Wrapping<u32>>>::bitand;false;false;false;false
<&'a num::wrapping::Wrapping<u64> as ops::bit::BitXor<num::wrapping::Wrapping<u64>>>::bitxor;false;false;false;false
num::<impl usize>::overflowing_shr;false;false;false;false
num::<impl i64>::carrying_mul_add;false;false;false;false
num::<impl u64>::to_ne_bytes;false;false;false;false
convert::num::<impl convert::From<u32> for u64>::from;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add;false;false;false;false
tuple::<impl cmp::PartialOrd for (V, U, T)>::le;false;false;false;false
<&u64 as ops::bit::Shl<&isize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fmadd_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fmsub_pd;true;true;true;false
<usize as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
core_arch::x86::sse2::_mm_sll_epi32;true;true;false;false
<&'a i32 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mullo_epi32;true;true;false;false
core_arch::x86::avx512ifma::_mm512_maskz_madd52lo_epu64;true;true;false;false
<u16 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
sync::atomic::AtomicI16::try_update;false;false;true;false
num::<impl i128>::saturating_abs;false;false;false;false
ptr::non_null::NonNull::<T>::read_volatile;true;true;true;false
slice::<impl [T]>::split_off_mut;false;false;true;false
num::<impl i8>::wrapping_neg;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpge_epi16_mask;true;true;false;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
num::niche_types::NonZeroI128Inner::as_inner;false;false;false;false
core_arch::x86::sse2::_mm_slli_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_sub_round_sd;true;true;true;false
num::nonzero::NonZero::<i128>::to_le;false;true;false;false
num::<impl u32>::next_multiple_of;false;false;false;false
core_arch::x86::avx512f::_mm_mask_add_epi64;true;true;false;false
num::<impl u8>::checked_next_power_of_two;false;false;false;false
core_simd::ops::deref::<impl ops::bit::Shr<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::shr;false;false;false;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::<impl i64>::unchecked_add::precondition_check;false;false;false;false
<str::lossy::Utf8Chunks<'a> as iter::traits::iterator::Iterator>::next::safe_get;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx::_mm256_set_m128;true;true;true;false
<num::saturating::Saturating<i16> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_pd;true;true;true;false
<(X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_abs_epi8;true;true;false;false
sync::atomic::AtomicU32::swap;false;true;true;false
<&i64 as ops::bit::Not>::not;false;false;false;false
num::nonzero::NonZero::<u128>::trailing_zeros;false;true;false;false
core_arch::x86::avx512fp16::_mm256_sqrt_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_castph512_ph128;true;true;true;false
num::<impl u32>::unchecked_mul::precondition_check;false;false;false;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<usize>> for usize>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_getmant_round_ph;true;true;true;false
num::<impl u8>::widening_mul;false;false;false;false
<u32 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
<i128 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
core_arch::x86::sse2::_mm_add_sd;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::bit::Shl<usize>>::shl;false;false;false;false
sync::atomic::AtomicI32::fetch_add;false;true;true;false
fmt::num::<impl fmt::LowerHex for i32>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm_cvtepi64_ps;true;true;false;false
<u16 as ops::bit::Not>::not;false;false;false;false
num::saturating::Saturating::<isize>::to_be;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_cvtepu64_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_castsi512_ph;true;false;false;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpwusds_epi32;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512d> for core_simd::vector::Simd<f64, 8>>::from;false;false;true;false
<u64 as ops::bit::Shl<u8>>::shl;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign;false;false;true;false
<core_arch::simd::i64x1 as clone::Clone>::clone;false;false;false;false
num::nonzero::NonZero::<isize>::from_le;false;true;false;false
<&u64 as ops::bit::BitXor<&u64>>::bitxor;false;false;false;false
<ops::range::RangeTo<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512f::_mm512_kunpackb;true;false;false;false
<num::dec2flt::FloatErrorKind as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_min_round_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvt_roundpd_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmsub_ph;true;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::trailing_ones;false;false;false;false
num::nonzero::NonZero::<u16>::isqrt;false;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtph_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_scalef_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtepi64_ph;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::wrapping_neg;false;false;false;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<i64 as ops::bit::Shl<i16>>::shl;false;false;false;false
intrinsics::atomic_or_acqrel;true;false;true;false
num::<impl u64>::saturating_mul;false;false;false;false
<i16 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<(dyn any::Any + 'static) as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<usize>::swap_bytes;false;true;false;false
iter::traits::iterator::Iterator::for_each;false;false;false;true
core_arch::x86::avx512f::_mm512_sub_epi32;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::DivAssign<&i16>>::div_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_broadcastb_epi8;true;true;false;false
num::<impl u64>::is_power_of_two;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_shldi_epi32;true;true;false;false
<&num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor;false;false;false;false
<core_arch::simd::u32x4 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi16;true;true;false;false
core_arch::simd::u8x2;false;false;false;false
char::EscapeDefault::unicode;false;false;false;false
<i128 as ops::bit::Shl<u32>>::shl;false;false;false;false
num::<impl i128>::checked_add;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::nth;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_fmadd_pd;true;true;true;false
<num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u8>>>::bitand_assign;false;false;true;false
<i128 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
<sync::atomic::AtomicU32 as default::Default>::default;false;false;false;false
core_arch::x86::sse::_mm_mul_ps;true;true;true;false
<range::RangeInclusive<T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_rorv_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_subs_epi8;true;true;false;false
core_arch::x86::avx2::_mm256_shuffle_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm512_cmpneq_epu8_mask;true;true;false;false
cmp::impls::<impl cmp::Ord for bool>::min;false;false;false;false
<u32 as net::parser::ReadNumberHelper>::checked_add;false;false;false;false
<num::error::ParseIntError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<alloc::layout::LayoutError as cmp::PartialEq>::eq;false;false;false;false
num::<impl u8>::eq_ignore_ascii_case;false;false;false;false
"array::<impl [T; N]>::as_slice";false;false;false;false
fmt::builders::debug_set_new;false;false;true;false
fmt::rt::Argument::<'_>::from_usize;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_round_ph;true;true;true;false
<i32 as ops::arith::Div<&i32>>::div;false;false;false;false
net::ip_addr::Ipv6Addr::is_unspecified;false;false;false;false
iter::adapters::filter::Filter::<I, P>::next_chunk_dropless;false;true;true;true
<u32 as ops::bit::Shr<&u8>>::shr;false;false;false;false
intrinsics::powf16;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_max_pd;true;true;true;false
core_arch::simd::i64x1::from_array;false;false;false;false
core_simd::masks::Mask::<T, N>::all;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Add>::add;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&num::wrapping::Wrapping<u8>>>::sub_assign;false;false;true;false
num::nonzero::NonZero::<i128>::wrapping_abs;false;true;false;false
num::<impl i16>::carrying_add;false;false;false;false
convert::num::<impl convert::From<u8> for usize>::from;false;false;false;false
iter::traits::iterator::Iterator::for_each::call;false;false;false;false
<slice::iter::SplitInclusive<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
str::<impl str>::rsplitn;false;false;false;false
core_arch::x86::avx512dq::_mm512_broadcast_i32x2;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<isize, N>>::product;false;false;false;true
num::saturating::Saturating::<u8>::swap_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_srav_epi64;true;true;false;false
core_arch::x86::avx512dq::_ktestc_mask8_u8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_set1_ph;true;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_xor;false;true;false;false
<&usize as ops::bit::Shr<&i32>>::shr;false;false;false;false
<slice::GetDisjointMutError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mullo_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_store_ph;true;true;true;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_loadu_ps;true;true;true;false
<str::iter::RSplitN<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundps_pd;true;true;true;false
<isize as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
<num::niche_types::NonZeroI64Inner as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpord_pd_mask;true;true;true;false
<str::CharEscapeDebugContinue as ops::function::FnMut<(char,)>>::call_mut;false;false;true;false
<core_arch::simd::u8x2 as cmp::PartialEq>::eq;false;false;false;false
<error::Source<'a> as clone::Clone>::clone;false;false;false;false
ptr::alignment::Alignment::log2;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmsub_round_sd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::byte_offset;true;true;true;false
<char::ToLowercase as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_add_epi32;true;true;false;false
<u128 as ops::bit::Shr<i32>>::shr;false;false;false;false
sync::atomic::AtomicPtr::<T>::swap;false;true;true;false
num::bignum::Big32x40::mul_small;false;false;true;true
<u32 as ops::bit::Shr<&isize>>::shr;false;false;false;false
num::<impl usize>::checked_shl;false;true;false;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl i16>::overflowing_abs;false;false;false;false
<&u8 as ops::bit::BitAnd<&u8>>::bitand;false;false;false;false
fmt::num::<impl fmt::Debug for u128>::fmt;false;false;true;false
<&'a u64 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_scalef_round_sd;true;true;true;false
<u64 as ops::bit::Shr<&i64>>::shr;false;false;false;false
"ptr::const_ptr::<impl *const [T; N]>::as_slice";false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_broadcast_f64x4;true;true;true;false
<&num::wrapping::Wrapping<i64> as ops::bit::Not>::not;false;false;false;false
<u64 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<u16 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::for_each;false;false;true;false
core_arch::x86::avx512fp16::_mm256_cvtph_epi16;true;true;true;false
intrinsics::atomic_xchg_acqrel;true;false;true;false
<i64 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<char::ToLowercase as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi16;true;true;false;false
<usize as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_packs_epi16;true;true;false;false
core_arch::x86::gfni::_mm256_maskz_gf2p8affine_epi64_epi8;true;true;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<u64, N>>::sub;false;true;false;false
sync::atomic::AtomicU64::get_mut;false;false;true;false
intrinsics::mir::CastTransmute::panic_cold_explicit;false;false;false;false
<&'a num::saturating::Saturating<u64> as ops::arith::Add<num::saturating::Saturating<u64>>>::add;false;false;false;false
cmp::impls::<impl cmp::PartialEq for f128>::eq;false;false;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<u32, N>>::add;false;true;false;false
core_arch::x86::avx512f::_mm_getmant_sd;true;true;true;false
num::<impl i8>::saturating_add_unsigned;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_add_epi64;true;true;false;false
<i64 as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_subs_epu8;true;true;false;false
task::wake::RawWakerVTable::new;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::from_bits;false;true;false;false
fmt::num::<impl fmt::LowerHex for i16>::fmt;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i16, 16>>::from;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next;false;false;true;false
<f16 as default::Default>::default;false;false;false;false
core_arch::x86::avx2::_mm256_sub_epi64;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<usize>>>::bitand_assign;false;false;true;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
<ops::range::RangeInclusive<A> as iter::range::RangeInclusiveIteratorImpl>::spec_try_fold;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_div_round_ss;true;true;true;false
core_arch::x86::avx2::_mm256_sra_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_fnmadd_sd;true;true;true;false
sync::atomic::AtomicUsize::get_mut;false;false;true;false
<num::FpCategory as cmp::PartialEq>::eq;false;false;false;false
<iter::adapters::scan::Scan<I, St, F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512f::_mm512_cvtepi32_ps;true;true;false;false
<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign;false;false;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::nth;false;false;true;true
core_arch::x86::avx512bw::_mm256_maskz_max_epu16;true;true;false;false
<range::RangeFrom<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvtt_roundps_epu64;true;true;true;false
num::<impl u64>::wrapping_next_power_of_two;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::RemAssign>::rem_assign;false;false;true;false
cmp::impls::<impl cmp::PartialEq for i128>::ne;false;false;false;false
<i128 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
array::try_from_trusted_iterator;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::DivAssign<&num::saturating::Saturating<u32>>>::div_assign;false;false;true;false
<fmt::DebugAsHex as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::position;false;true;true;true
core_arch::x86::avx512f::_mm256_mask_srlv_epi64;true;true;false;false
convert::num::<impl convert::From<u8> for i64>::from;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpge_epi16_mask;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_storeu_epi16;true;true;true;false
<bool as ops::bit::Not>::not;false;false;false;false
<usize as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_broadcastw_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_sub_round_sh;true;true;true;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_maddubs_epi16;true;true;false;false
core_arch::simd::i32x32;false;false;false;false
num::<impl usize>::count_ones;false;false;false;false
core_arch::x86::sse41::_mm_cvtepi16_epi64;true;true;false;false
<u128 as ops::bit::Shr<i64>>::shr;false;false;false;false
<ascii::EscapeDefault as iter::traits::iterator::Iterator>::last;false;false;true;false
<str::iter::RMatches<'a, P> as clone::Clone>::clone;false;false;true;false
"<net::ip_addr::IpAddr as convert::From<[u8; 4]>>::from";false;false;false;false
fmt::FormattingOptions::get_sign_aware_zero_pad;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_sqrt_ph;true;true;true;false
num::bignum::Big32x40::add_small;false;false;true;true
fmt::Formatter::<'a>::debug_tuple_field1_finish;false;false;true;false
<F as str::pattern::Pattern>::strip_prefix_of;false;false;false;false
<&'a num::saturating::Saturating<u8> as ops::arith::Sub<num::saturating::Saturating<u8>>>::sub;false;false;false;false
num::nonzero::NonZero::<usize>::to_be;false;true;false;false
<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_checked;false;false;false;false
<slice::ascii::EscapeAscii<'a> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_broadcastsd_pd;true;true;true;false
num::<impl i64>::swap_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_pch;true;true;true;false
<num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<u128 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<&'a i32 as ops::bit::Shl<u128>>::shl;false;false;false;false
<str::iter::SplitTerminator<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
num::nonzero::NonZero::<u64>::ilog10;false;false;false;false
core_arch::x86::vaes::_mm256_aesenclast_epi128;true;true;false;false
core_arch::x86::avx512f::_mm512_zextsi128_si512;true;true;false;false
core_arch::x86::avx512fp16::_mm_comige_sh;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u8> for &'lhs core_simd::vector::Simd<u8, N>>::shl;false;false;false;false
num::nonzero::NonZero::<i128>::checked_neg;false;true;false;false
<marker::variance::PhantomCovariant<T> as cmp::PartialEq>::eq;false;false;true;false
<u32 as ops::bit::Shr<i64>>::shr;false;false;false;false
unicode::unicode_data::grapheme_extend::lookup_slow;false;false;false;false
core_arch::x86::__m128d;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvtepi16_ph;true;true;false;false
num::<impl u8>::leading_ones;false;false;false;false
<i8 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<u8>::from_le;false;false;false;false
<&u16 as ops::bit::Shl<&i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_load_epi64;true;true;true;false
slice::memchr::memchr_aligned;false;false;false;false
num::nonzero::NonZero::<usize>::cast_signed;false;true;false;false
core_arch::x86::avx512dq::_mm256_cvttpd_epu64;true;true;true;false
fmt::pointer_fmt_inner;false;false;true;false
<u8 as iter::traits::accum::Product>::product;false;false;false;true
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<i128 as ops::arith::AddAssign>::add_assign;false;false;true;false
<u16 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<isize as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_ss_mask;true;true;true;false
core_arch::x86::avx512bw::_mm512_srli_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_reduce_round_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cmul_pch;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::count_ones;false;false;false;false
f16::<impl f16>::is_nan;false;false;true;false
<u64 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<&i64 as ops::bit::Shr<&usize>>::shr;false;false;false;false
net::parser::Parser::<'a>::read_socket_addr_v6;false;false;true;false
num::wrapping::Wrapping::<u16>::rotate_right;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_abs_epi64;true;true;false;false
<(EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(L, K, J, I, H, G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::try_rfold;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u64>>>::bitxor_assign;false;false;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<usize, N>>::add;false;true;false;false
num::<impl u32>::to_be;false;false;false;false
num::nonzero::NonZero::<usize>::from_le;false;true;false;false
core_arch::x86::avx::_mm256_permute2f128_si256;true;true;false;false
<u32 as ops::arith::AddAssign>::add_assign;false;false;true;false
<core_arch::simd::u8x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::__m256i::splat::JustOne;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add;false;false;false;false
core_arch::x86::avx512bw::_ktestc_mask64_u8;true;true;false;false
<array::drain::Drain<'_, T> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
alloc::layout::Layout::pad_to_align;false;true;false;false
<f32 as ops::arith::DivAssign<&f32>>::div_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_cmpneq_epu8_mask;true;true;false;false
core_arch::simd::u64x4;false;false;false;false
num::<impl i32>::wrapping_abs;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpgt_epi32_mask;true;true;false;false
iter::adapters::array_chunks::ArrayChunks::<I, N>::into_remainder;false;false;true;true
<iter::adapters::GenericShunt<'_, I, R> as iter::traits::iterator::Iterator>::next;false;false;true;true
<i32 as random::Random>::random;false;false;true;false
<usize as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<bstr::ByteStr as borrow::Borrow<[u8]>>::borrow;false;false;false;false
intrinsics::fmaf32;true;false;true;false
<usize as ops::arith::RemAssign>::rem_assign;false;false;true;false
<str::iter::SplitInternal<'a, P> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_cmp_epu64_mask;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::to_usize;false;false;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;false;true;false
<&'a mut I as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::bit::Not>::not;false;false;false;false
<u128 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_set_epi32;true;true;false;false
<&isize as ops::bit::Shl<&u16>>::shl;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<i32>>::sub_assign;false;false;true;false
net::ip_addr::Ipv4Addr::is_unspecified;false;false;false;false
<iter::adapters::intersperse::IntersperseWith<I, G> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx::_mm256_permutevar_ps;true;true;true;false
num::saturating::Saturating::<u16>::from_be;false;false;false;false
<&'a num::saturating::Saturating<i64> as ops::arith::Mul<num::saturating::Saturating<i64>>>::mul;false;false;false;false
char::convert::from_u32_unchecked::precondition_check;false;false;false;false
num::<impl u8>::is_ascii_whitespace;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmple_epu8_mask;true;true;false;false
ffi::va_list::VaListImpl::<'f>::arg;true;true;true;false
<str::lossy::Utf8Chunk<'a> as clone::Clone>::clone;false;false;false;false
core_arch::x86::__m512i::as_i64x8;false;false;false;false
<i64 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi8;true;true;false;false
<core_simd::masks::Mask<i64, N> as convert::From<core_simd::masks::Mask<i32, N>>>::from;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cmul_round_pch;true;true;true;false
<num::saturating::Saturating<u128> as ops::arith::MulAssign<u128>>::mul_assign;false;false;true;false
"tuple::<impl convert::From<[T; 8]> for (T, T, T, T, T, T, T, T)>::from";false;false;false;false
core_arch::x86::sse::_mm_stream_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_storeu_epi32;true;true;true;false
<&u16 as ops::bit::BitXor<&u16>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_set1_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_cvtu32_sd;true;true;true;false
intrinsics::bitreverse;false;false;false;false
num::<impl i16>::strict_div_euclid;false;false;false;false
<u8 as ops::bit::Shr<u128>>::shr;false;false;false;false
slice::sort::select::median_of_medians;false;false;true;true
<&i16 as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_adds_epu16;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_subs_epu16;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::DivAssign>::div_assign;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::AddAssign<i128>>::add_assign;false;false;true;false
ptr::align_offset::mod_inv;true;false;false;true
<&'a num::saturating::Saturating<usize> as ops::arith::Mul<num::saturating::Saturating<usize>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_mul_epi32;true;true;false;false
sync::atomic::AtomicIsize::update;false;false;true;true
num::<impl u128>::unchecked_add;true;false;false;false
<num::saturating::Saturating<u16> as ops::bit::Not>::not;false;false;false;false
slice::index::slice_start_index_len_fail;false;false;false;false
task::poll::Poll::<T>::is_ready;false;false;true;false
<error::Source<'a> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_fmadd_ps;true;true;true;false
<iter::adapters::flatten::Flatten<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i64gather_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_fnmsub_sh;true;true;true;false
<result::Result<T, E> as iter::traits::accum::Product<result::Result<U, E>>>::product;false;false;false;false
<isize as ops::bit::Shl<u8>>::shl;false;false;false;false
array::TryFromSliceError;false;false;false;false
intrinsics::simd::simd_bswap;true;false;false;false
num::nonzero::NonZero::<i32>::saturating_pow;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_max_epu32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_compressstoreu_ps;true;true;true;false
<i64 as ops::bit::BitXorAssign<&i64>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_cmpeq_epu32_mask;true;true;false;false
num::nonzero::NonZero::<i64>::abs;false;true;false;false
core_arch::x86::avx512bw::_mm256_mask_srl_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_getexp_pd;true;true;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::wrapping_add;false;false;true;false
sync::atomic::AtomicI16::compare_exchange;false;true;true;false
core_arch::x86::avx512f::_mm512_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_fmul_pch;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u8>>>::spec_try_rfold;false;false;true;true
core_arch::x86::avx2::_mm_sllv_epi32;true;true;false;false
num::<impl i64>::to_le_bytes;false;false;false;false
num::wrapping::Wrapping::<u16>::reverse_bits;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_max_epi16;true;true;false;false
num::<impl i8>::div_floor;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitXor<&num::saturating::Saturating<i128>>>::bitxor;false;false;false;false
<&'a isize as ops::bit::Shl<i64>>::shl;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<&i32 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<&num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_movedup_pd;true;true;true;false
core_arch::x86::avx512bitalg::_mm256_popcnt_epi16;true;true;false;false
range::iter::IterRange::<A>::remainder;false;false;true;false
<&'a i32 as ops::bit::BitAnd<i32>>::bitand;false;false;false;false
num::niche_types::U32NotAllOnes::as_inner;false;false;false;false
cell::lazy::State::Uninit;false;false;false;false
<ffi::c_str::FromBytesWithNulError as fmt::Display>::fmt;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
num::<impl i32>::saturating_add_unsigned;false;false;false;false
ptr::without_provenance_mut;false;false;false;false
convert::num::<impl convert::TryFrom<u64> for i8>::try_from;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_next;false;false;true;false
num::wrapping::Wrapping::<i32>::rotate_left;false;false;false;false
core_arch::x86::sse41::_mm_max_epi8;true;true;false;false
num::<impl u8>::from_le_bytes;false;false;false;false
intrinsics::simd::simd_and;true;false;false;false
asserting::Wrapper;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_subs_epi16;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmaddsub_round_ps;true;true;true;false
<&i16 as ops::arith::Div<&i16>>::div;false;false;false;false
<isize as random::Random>::random;false;false;true;false
num::<impl i32>::strict_shr;false;false;false;false
core_arch::x86::avx::_mm256_insertf128_si256;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_min_epu16;true;true;false;false
num::<impl i8>::overflowing_mul;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::saturating::Saturating::<i64>::is_negative;false;false;false;false
core_arch::simd::i8x4::splat::JustOne;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvti32_sh;true;true;true;false
<num::saturating::Saturating<i8> as ops::arith::RemAssign<i8>>::rem_assign;false;false;true;false
task::wake::Waker::noop;false;false;false;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::reverse;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_srai_epi32;true;true;false;false
core_arch::x86::avx512vbmi::_mm512_permutex2var_epi8;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::simd::u16x16::new;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi16_mask;true;true;false;false
<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<u32>>::bitor_assign;false;false;true;false
num::<impl u8>::is_power_of_two;false;false;false;false
<Iter as iter::traits::collect::TraitI<EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
<array::drain::Drain<'_, T> as ops::drop::Drop>::drop;false;true;true;false
<num::saturating::Saturating<i16> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx::_mm256_loadu_si256;true;true;true;false
<slice::iter::RSplit<'_, T, P> as clone::Clone>::clone;false;false;true;false
cmp::impls::<impl cmp::Ord for i16>::cmp;false;false;false;false
<&num::saturating::Saturating<usize> as ops::arith::Rem<&num::saturating::Saturating<usize>>>::rem;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitAnd>::bitand;false;false;false;false
<core_arch::simd::i16x32 as fmt::Debug>::fmt;false;false;true;false
<i8 as ops::bit::BitAndAssign<&i8>>::bitand_assign;false;false;true;false
<(EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
num::<impl i32>::strict_div_euclid;false;false;false;false
num::<impl u64>::checked_neg;false;false;false;false
num::<impl isize>::wrapping_shl;false;true;false;false
num::<impl usize>::repeat_u8;false;false;false;false
<&num::saturating::Saturating<i64> as ops::arith::Add<&num::saturating::Saturating<i64>>>::add;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
<i32 as ops::arith::SubAssign<&i32>>::sub_assign;false;false;true;false
num::saturating::Saturating::<u64>::count_zeros;false;false;false;false
<i16 as ops::bit::Shl<i32>>::shl;false;false;false;false
<u8 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<iter::sources::once::Once<T> as clone::Clone>::clone;false;false;true;false
tuple::<impl cmp::Ord for (Y, X, W, V, U, T)>::cmp;false;false;false;false
num::<impl i32>::saturating_sub_unsigned;false;false;false;false
<i16 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
"<&'b [char; N] as str::pattern::Pattern>::is_prefix_of";false;false;false;false
core_arch::x86::__m128i::as_i64x2;false;false;false;false
core_arch::x86::avx512f::_mm512_srl_epi32;true;true;false;false
num::<impl i64>::checked_div;false;false;false;false
<i16 as ops::bit::Shr>::shr;false;false;false;false
cell::Cell::<T>::as_ptr;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_conj_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmaddsub_round_ph;true;true;true;false
tuple::<impl cmp::PartialOrd for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
num::saturating::Saturating::<isize>::pow;false;false;false;false
<&mut T as borrow::Borrow<T>>::borrow;false;false;true;false
intrinsics::atomic_umin_seqcst;true;false;true;false
<f32 as convert::num::FloatToInt<i128>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdi_epi16;true;true;false;false
core_arch::simd::u32x4;false;false;false;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::ReverseSearcher<'a>>::next_reject_back;false;false;true;false
core_arch::x86::kl::EncodeKey256Output;false;false;false;false
<usize as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<u128>::to_le;false;false;false;false
<u32 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_permutex_epi64;true;true;false;false
net::ip_addr::Ipv6Addr::to_ipv4;false;false;false;false
core_arch::x86::avx512bw::_kshiftli_mask32;true;false;false;false
num::<impl usize>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
num::<impl i32>::overflowing_neg;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_permutex2var_pd;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::get_unchecked_mut;true;true;true;false
core_arch::x86::sse2::_mm_cmpgt_epi16;true;true;false;false
ptr::const_ptr::<impl cmp::PartialOrd for *const T>::partial_cmp;false;false;true;false
core_arch::x86::avx512vnni::_mm512_dpwssds_epi32;true;true;false;false
num::nonzero::NonZero::<u128>::reverse_bits;false;true;false;false
core_arch::x86::avx512bw::_mm512_cmpeq_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_scalef_round_ps;true;true;true;false
<u8 as iter::traits::accum::Product<&'a u8>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_unpackhi_epi64;true;true;false;false
num::<impl u16>::wrapping_add;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::is_null;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu64;true;true;true;false
cmp::PartialOrd::gt;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<u32, N>>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm_mask_mul_round_sh;true;true;true;false
num::<impl i128>::saturating_add;false;false;false;false
slice::<impl [T]>::copy_within;false;true;true;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<isize, N>>::shl;false;true;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdi_epi32;true;true;false;false
<iter::adapters::map::Map<I, F> as iter::traits::iterator::Iterator>::fold;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_cvtph_ps;true;true;true;false
num::<impl i128>::from_ascii_radix;false;false;false;true
<iter::sources::repeat_with::RepeatWith<F> as iter::traits::iterator::Iterator>::next;false;false;true;false
sync::atomic::spin_loop_hint;false;false;false;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
char::methods::<impl char>::is_grapheme_extended;false;false;false;false
<&u32 as ops::bit::Shr<&u64>>::shr;false;false;false;false
num::<impl i8>::from_str_radix;false;false;false;false
<&usize as ops::arith::Mul<&usize>>::mul;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;false;true;false
num::int_sqrt::u32;false;false;false;false
time::Duration::as_millis_f32;false;false;false;false
core_arch::simd::debug_simd_finish;false;false;true;false
<&'a i16 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_xor_ps;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_storeu_ps;true;true;true;false
num::<impl isize>::unbounded_shl;false;true;false;false
num::<impl i16>::overflowing_div_euclid;false;false;false;false
iter::traits::double_ended::DoubleEndedIterator::advance_back_by;false;true;true;true
core_simd::masks::<impl ops::bit::BitXor<core_simd::masks::Mask<T, N>> for bool>::bitxor;false;false;true;false
"array::<impl [T; N]>::split_array_mut";false;false;true;false
<u128 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<u64 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_reduce_round_ph;true;true;true;false
<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign;false;false;true;false
num::nonzero::NonZero::<i32>::saturating_mul;false;true;false;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_try_fold::flatten;false;false;true;false
core_arch::x86::avx512dq::_mm256_cvtepu64_ps;true;true;false;false
num::nonzero::NonZero::<u16>::is_power_of_two;false;false;false;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<i16, N>>::rem;false;true;false;false
future::join::MaybeDone::<F>::take_output;false;false;true;false
core_arch::x86::avx2::_mm_broadcastss_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmpge_epi64_mask;true;true;false;false
<ops::try_trait::Yeet<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::kl::_mm_aesenc256kl_u8;true;true;true;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
intrinsics::powf128;true;false;true;false
<&isize as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permutexvar_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_max_epu8;true;true;false;false
intrinsics::simd::simd_fcos;true;false;false;false
<f32 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::simd::f32x16::extract;false;true;true;false
core_arch::x86::avx512dq::_mm512_cvtepu64_ps;true;true;false;false
core_arch::x86::vaes::_mm512_aesenclast_epi128;true;true;false;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<ptr::alignment::Alignment as clone::Clone>::clone;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u16>>::from;false;true;false;false
core_arch::x86::sse::_MM_SET_ROUNDING_MODE;true;true;false;false
<fmt::builders::PadAdapterState as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_srav_epi32;true;true;false;false
num::nonzero::NonZero::<i64>::is_positive;false;false;false;false
<i32 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
array::try_from_fn;false;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtepi32_ph;true;true;false;false
ptr::metadata::from_raw_parts;false;false;true;false
num::<impl isize>::overflowing_shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvt_roundepu64_ps;true;true;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
str::validations::utf8_first_byte;false;false;false;false
num::<impl i128>::from_be_bytes;false;false;false;false
<i16 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<&i64 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<&i16 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<&'a f32 as ops::arith::Add<f32>>::add;false;false;true;false
num::niche_types::NonZeroIsizeInner::new_unchecked;true;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Add>::add;false;false;false;false
<hash::sip::Hasher<S> as clone::Clone>::clone;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvtss_u64;true;true;true;false
<&num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor;false;false;false;false
core_arch::x86::rdrand::_rdseed32_step;true;true;true;false
core_arch::x86_64::tbm::_blcs_u64;true;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::sse::_mm_rsqrt_ss;true;true;true;false
num::<impl i32>::unchecked_neg;true;false;false;false
core_arch::x86::__m512bh;false;false;false;false
<num::niche_types::NonZeroI32Inner as hash::Hash>::hash;false;false;true;false
<&i8 as ops::arith::Neg>::neg;false;false;false;false
<u32 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
num::<impl u32>::isolate_least_significant_one;false;false;false;false
<&'a bool as ops::bit::BitXor<bool>>::bitxor;false;false;false;false
cell::UnsafeCell::<T>::replace;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fmsubadd_pd;true;true;true;false
<u64 as fmt::num::DisplayInt>::from_u8;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmp_epu8_mask;true;true;false;false
<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV4>>::from;false;false;false;false
<num::nonzero::NonZero<T> as fmt::Octal>::fmt;false;false;true;false
<u16 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<range::Range<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
intrinsics::atomic_singlethreadfence_acquire;true;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Mul>::mul;false;false;false;false
"<[option::Option<T>; N]>::transpose";false;false;true;false
<&num::saturating::Saturating<i8> as ops::bit::Not>::not;false;false;false;false
<u32 as ops::bit::Not>::not;false;false;false;false
fmt::num::<impl fmt::UpperHex for i8>::fmt;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign;false;false;true;false
num::<impl i16>::strict_shr;false;false;false;false
core_arch::x86::sse41::_mm_testnzc_si128;true;true;false;false
core_arch::x86::avx512f::_mm256_mask3_fmsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_expandloadu_epi64;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_expandloadu_epi64;true;true;true;false
sync::atomic::AtomicUsize::fetch_nand;false;true;true;false
<i32 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
num::<impl isize>::from_ascii;false;false;false;false
fmt::num::<impl fmt::UpperHex for u32>::fmt;false;false;true;false
<ops::range::RangeInclusive<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
option::Option::<T>::and_then;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rcp14_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_or_epi64;true;true;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXor>::bitxor;false;false;false;false
<num::error::TryFromIntError as convert::From<convert::Infallible>>::from;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<net::ip_addr::Ipv4Addr as cmp::PartialOrd>::partial_cmp;false;false;false;false
num::<impl isize>::to_be_bytes;false;false;false;false
<pin::Pin<Ptr> as cmp::PartialOrd<pin::Pin<Q>>>::lt;false;false;true;false
fmt::num::imp::<impl fmt::Display for u32>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpord_ps_mask;true;true;true;false
num::<impl u32>::strict_sub;false;false;false;false
tuple::<impl cmp::PartialOrd for (T,)>::le;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_set1_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm_range_round_ss;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128d> for core_simd::vector::Simd<f64, 2>>::from;false;false;true;false
num::<impl i32>::rem_euclid;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<&num::saturating::Saturating<u128>>>::bitand_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u16>::le;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtusepi32_epi16;true;true;false;false
intrinsics::atomic_cxchg_relaxed_relaxed;true;false;true;false
<u128 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 16>> for core_arch::x86::__m512i>::from;false;false;false;false
<Iter as iter::traits::collect::TraitB<EB, EA>>::extend::extend;false;false;true;false
core_arch::x86::avx512fp16::_mm512_castpd_ph;true;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reverse_bits;false;true;false;false
num::<impl u16>::strict_pow;false;false;false;true
<core_arch::simd::i32x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse::_mm_or_ps;true;true;true;false
<&u8 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_compress_epi32;true;true;false;false
fmt::num::imp::<impl fmt::LowerExp for i64>::fmt;false;false;true;false
<cmp::Reverse<T> as cmp::PartialOrd>::gt;false;false;true;false
f16::<impl f16>::to_le_bytes;false;false;true;false
num::nonzero::NonZero::<i128>::leading_zeros;false;true;false;false
<core_arch::x86::__m512i as fmt::Debug>::fmt;false;false;true;false
core_simd::ops::deref::<impl ops::bit::Shr<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::shr;false;false;false;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
bstr::ByteStr::as_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_and_epi32;true;true;false;false
core_arch::simd::u8x4::new;false;false;false;false
<&u8 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_rfold;false;false;true;true
alloc::layout::Layout::new;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_unpacklo_pd;true;true;true;false
num::<impl i8>::strict_mul;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvtu64_ss;true;true;true;false
core_arch::x86::avx512bw::_kand_mask64;true;false;false;false
sync::atomic::AtomicU64::into_inner;false;false;true;false
num::<impl u128>::strict_mul;false;false;false;false
<i32 as ops::bit::Shr<i8>>::shr;false;false;false;false
slice::iter::Iter::<'a, T>::make_slice;false;true;true;false
<&u16 as ops::bit::Not>::not;false;false;false;false
core_simd::ops::deref::<impl ops::bit::BitXor<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<isize>>::sub_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepu64_ph;true;true;true;false
intrinsics::mir::Move::panic_cold_explicit;false;false;false;false
<usize as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<isize as ops::bit::Shl<&usize>>::shl;false;false;false;false
<io::borrowed_buf::BorrowedBuf<'data> as convert::From<&'data mut [mem::maybe_uninit::MaybeUninit<u8>]>>::from;false;false;true;false
intrinsics::assert_inhabited;false;false;false;false
<char as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_div_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_inserti32x4;true;true;false;false
<cell::RefCell<T> as fmt::Debug>::fmt;false;false;true;false
<ops::range::Range<u16> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u16>>>::setup;false;false;true;false
<core_arch::simd::m32x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::map_windows::MapWindows<I, F, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x2;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
<u8 as ops::bit::Shl<&i32>>::shl;false;false;false;false
num::nonzero::NonZero::<i128>::rotate_right;false;true;false;false
core_arch::x86::sse2::_mm_castps_pd;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi64;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u32, 4>>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_kor;true;false;false;false
<u128 as iter::traits::accum::Sum>::sum;false;false;false;true
num::<impl u8>::is_ascii_alphanumeric;false;false;false;false
<iter::adapters::take::Take<I> as iter::adapters::take::SpecTake>::spec_for_each;false;true;true;true
core_arch::x86::avx512f::_mm512_mask_add_round_ps;true;true;true;false
core_arch::x86::avx2::_mm256_hsubs_epi16;true;true;false;false
<isize as ops::bit::Shr<i32>>::shr;false;false;false;false
num::nonzero::NonZero::<i128>::overflowing_neg;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu32_epi64;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
core_arch::x86::avx512f::_mm_permutex2var_epi32;true;true;false;false
num::int_sqrt::u16_stages;false;true;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<&'a f64 as ops::arith::Rem<f64>>::rem;false;false;true;false
ascii::ascii_char::AsciiChar::to_char;false;false;false;false
<&'a i64 as ops::bit::Shr<u128>>::shr;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
sync::atomic::AtomicI16::fetch_or;false;true;true;false
convert::num::<impl convert::TryFrom<u8> for i8>::try_from;false;false;false;false
task::wake::LocalWaker::noop;false;false;false;false
convert::num::<impl convert::TryFrom<u64> for num::nonzero::NonZero<u64>>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtps_ph;true;true;true;false
core_arch::x86::gfni::_mm512_mask_gf2p8mul_epi8;true;true;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<isize, N>>::div;false;true;false;false
<&u64 as ops::bit::Shr<&u32>>::shr;false;false;false;false
fmt::FormattingOptions::new;false;false;false;false
core_arch::x86::sse2::_mm_castpd_si128;true;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_storeu_epi32;true;true;true;false
<core_simd::masks::Mask<i32, N> as convert::From<core_simd::masks::Mask<isize, N>>>::from;false;false;true;false
fmt::Formatter::<'a>::debug_upper_hex;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_mul_epu32;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i16> for &'lhs core_simd::vector::Simd<i16, N>>::shl;false;false;false;false
net::parser::Parser::<'a>::read_ipv6_addr;false;false;true;false
core_arch::simd::f32x2::splat::JustOne;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_rcp_ph;true;true;true;false
hash::impls::<impl hash::Hash for isize>::hash_slice;false;true;true;false
"<[char; N] as str::pattern::Pattern>::is_prefix_of";false;false;false;false
f128::<impl f128>::to_degrees;false;false;true;false
sync::atomic::compiler_fence;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_mov_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_permute_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmple_epi32_mask;true;true;false;false
<&num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div;false;false;false;false
num::<impl usize>::from_le_bytes;false;false;false;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_mask_max_pd;true;true;true;false
<&mut T as fmt::Display>::fmt;false;false;true;false
<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&num::wrapping::Wrapping<i32>>>::mul_assign;false;false;true;false
num::wrapping::Wrapping::<i8>::is_negative;false;false;false;false
num::<impl u16>::unchecked_sub::precondition_check;false;false;false;false
<isize as ops::arith::SubAssign>::sub_assign;false;false;true;false
char::methods::<impl char>::is_ascii_octdigit;false;false;false;false
<pin::Pin<Ptr> as ops::deref::Deref>::deref;false;false;true;false
sync::atomic::AtomicU8::swap;false;true;true;false
core_arch::x86::avx512bw::_mm512_max_epi16;true;true;false;false
num::nonzero::NonZero::<usize>::rotate_left;false;true;false;false
cmp::Ord::min;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_shldv_epi32;true;true;false;false
core_arch::x86::avx512ifma::_mm256_maskz_madd52lo_epu64;true;true;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu32_ps;true;true;true;false
<num::wrapping::Wrapping<u8> as iter::traits::accum::Product>::product;false;false;false;true
tuple::<impl cmp::PartialOrd for (A, Z, Y, X, W, V, U, T)>::ge;false;false;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::without_provenance;false;true;true;false
core_arch::x86::avx512fp16::_mm_fmadd_sh;true;true;true;false
iter::traits::iterator::Iterator::enumerate;false;false;false;false
fmt::PostPadding::new;false;false;false;false
unicode::printable::check;false;false;true;true
ptr::mut_ptr::<impl cmp::PartialOrd for *mut T>::partial_cmp;false;false;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
result::Result::Ok;false;false;false;false
<i16 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<num::saturating::Saturating<u32> as ops::arith::DivAssign<&u32>>::div_assign;false;false;true;false
<f64 as convert::num::FloatToInt<i16>>::to_int_unchecked;true;true;true;false
<iter::adapters::take::Take<I> as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::m16x8 as cmp::PartialEq>::eq;false;false;false;false
num::saturating::Saturating::<i32>::rotate_left;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<num::wrapping::Wrapping<i32> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<i32>>>::sum;false;false;false;true
<&isize as ops::arith::Rem<&isize>>::rem;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_next;false;false;true;true
<net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor;false;false;false;false
core_arch::x86::ssse3::_mm_abs_epi8;true;true;false;false
<core_arch::simd::m8x16 as clone::Clone>::clone;false;false;false;false
num::<impl i64>::checked_pow;false;false;false;true
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 8>> for core_arch::x86::__m256>::from;false;false;true;false
iter::adapters::flatten::FlatMap::<I, U, F>::new;false;false;false;false
<u16 as ops::bit::Shr<i32>>::shr;false;false;false;false
<str::iter::EscapeUnicode<'a> as fmt::Display>::fmt;false;false;true;true
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::abs;false;false;false;false
<fmt::builders::FromFn<F> as fmt::Display>::fmt;false;false;true;false
<num::saturating::Saturating<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_permutex2var_ph;true;true;true;false
core_arch::simd::m32x8::new;false;false;false;false
num::<impl i128>::checked_sub_unsigned;false;false;false;false
ptr::mut_ptr::<impl *mut T>::sub;true;false;true;false
ptr::mut_ptr::<impl *mut T>::wrapping_sub;false;false;true;false
<*mut T as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<u32> as ops::arith::SubAssign<u32>>::sub_assign;false;false;true;false
time::Duration::from_millis;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtpd_epi32;true;true;true;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Neg>::neg;false;false;false;false
num::niche_types::NonZeroU8Inner::new_unchecked;true;false;false;false
cmp::impls::<impl cmp::PartialOrd for i64>::lt;false;false;false;false
intrinsics::sqrtf16;true;false;true;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_try_rfold::flatten;false;false;true;false
sync::atomic::AtomicBool::fetch_not;false;false;true;false
core_simd::ops::assign::<impl ops::arith::MulAssign<U> for core_simd::vector::Simd<T, N>>::mul_assign;false;false;true;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<mem::manually_drop::ManuallyDrop<T> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_reduce_pd;true;true;true;false
num::wrapping::Wrapping::<i16>::rotate_left;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_shuffle_f64x2;true;true;true;false
<iter::adapters::cloned::Cloned<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<slice::iter::SplitInclusive<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
core_arch::x86::__m512::as_f32x16;false;false;true;false
core_arch::x86::sse2::_mm_bsrli_si128;true;true;false;false
core_arch::x86::avx512fp16::_mm_mul_pch;true;true;true;false
core_arch::x86::__m128bh::as_i32x4;false;false;false;false
<i8 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<ffi::c_str::FromBytesWithNulError as error::Error>::description;false;false;false;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::assume_init;true;false;false;false
<&f128 as ops::arith::Sub<&f128>>::sub;false;false;true;false
<ops::range::RangeFull as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
sync::atomic::atomic_swap;true;true;true;false
num::nonzero::NonZero::<u16>::div_ceil;false;true;false;false
core_arch::simd::i8x2::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rolv_epi32;true;true;false;false
core_arch::x86::avx::_mm256_castsi256_si128;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_epi32;true;true;false;false
ptr::drop_in_place;true;true;true;false
core_arch::x86::avx::_mm_testz_pd;true;true;true;false
cmp::impls::<impl cmp::PartialEq for f64>::ne;false;false;true;false
core_simd::ops::deref::<impl ops::bit::BitAnd<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::bitand;false;false;false;false
bstr::ByteStr;false;false;false;false
"<net::ip_addr::IpAddr as convert::From<[u8; 16]>>::from";false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::RemAssign<i16>>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_fixupimm_ps;true;true;true;false
sync::atomic::AtomicU64::fetch_nand;false;true;true;false
num::<impl u32>::checked_rem;false;false;false;false
intrinsics::mir::SetDiscriminant;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::xsave::_xsaves;true;true;true;false
num::nonzero::NonZero::<isize>::is_negative;false;false;false;false
core_arch::x86::sse2::_mm_undefined_pd;true;false;false;false
<&'a num::wrapping::Wrapping<i64> as ops::bit::BitXor<num::wrapping::Wrapping<i64>>>::bitxor;false;false;false;false
intrinsics::atomic_xsub_acqrel;true;false;true;false
<isize as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepu32_epi64;true;true;false;false
core_simd::masks::Mask::<T, N>::to_array;false;true;true;false
ops::range::RangeBounds::contains;false;false;false;false
char::methods::<impl char>::is_ascii_hexdigit;false;false;false;false
<i128 as ops::bit::Shl<&i8>>::shl;false;false;false;false
"array::<impl [T; N]>::rsplit_array_mut";false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_kxor_mask16;true;false;false;false
core_simd::ops::deref::<impl ops::arith::Div<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::div;false;false;false;false
core_simd::ops::deref::<impl ops::bit::BitOr<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::bitor;false;false;false;false
num::<impl i128>::checked_rem;false;false;false;false
<num::wrapping::Wrapping<u128> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<u128>>>::product;false;false;false;true
<i128 as ops::bit::Shl<i16>>::shl;false;false;false;false
core_arch::simd::u32x32::splat;false;true;false;false
<i8 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_comigt_sh;true;true;true;false
core_arch::x86::avx512vnni::_mm_maskz_dpbusds_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_fnmadd_ph;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
intrinsics::atomic_cxchg_acquire_relaxed;true;false;true;false
<u64 as ops::bit::Shr<i16>>::shr;false;false;false;false
sync::atomic::AtomicI8::from_mut_slice;false;true;true;false
cmp::impls::<impl cmp::Ord for u8>::cmp;false;false;false;false
core_arch::x86::avx::_mm256_hsub_ps;true;true;true;false
core_simd::masks::mask_impl::<impl convert::From<core_simd::masks::mask_impl::Mask<T, N>> for core_simd::vector::Simd<T, N>>::from;false;false;true;false
core_arch::x86::avx512dq::_mm512_cvtt_roundpd_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundss_sh;true;true;true;false
core_simd::ops::deref::<impl ops::arith::Mul<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_fnmadd_pd;true;true;true;false
<&num::saturating::Saturating<u64> as ops::bit::BitOr<&num::saturating::Saturating<u64>>>::bitor;false;false;false;false
num::nonzero::NonZero::<u16>::trailing_zeros;false;true;false;false
num::saturating::Saturating::<i64>::rotate_left;false;false;false;false
<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_overlapping;false;false;true;false
core_arch::x86::avx512fp16::_mm256_permutexvar_ph;true;true;true;false
slice::sort::shared::smallsort::swap_if_less;true;true;true;false
<iter::adapters::enumerate::Enumerate<I> as clone::Clone>::clone;false;false;true;false
num::bignum::tests::Big8x3::is_zero;false;false;true;true
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u64>> for u64>::div_assign;false;false;true;false
num::wrapping::Wrapping::<i32>::pow;false;false;false;false
cell::Ref::<'b, T>::map;false;false;true;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<i64 as ops::bit::BitOr<&i64>>::bitor;false;false;false;false
<&u8 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_product;false;true;false;false
<io::borrowed_buf::BorrowedCursor<'a> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::fma::_mm_fmsubadd_ps;true;true;true;false
<task::wake::RawWakerVTable as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<&i32>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_unpackhi_epi16;true;true;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::saturating_add;false;true;false;false
ptr::non_null::NonNull::<T>::byte_offset;true;true;true;false
core_arch::x86::sse::_mm_store1_ps;true;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::nth_back;false;false;true;false
fmt::float::float_to_decimal_common_exact;false;true;true;false
core_arch::x86::__m128bh::as_mut_array;false;true;true;false
<iter::adapters::skip_while::SkipWhile<I, P> as fmt::Debug>::fmt;false;false;true;false
<&i16 as ops::arith::Neg>::neg;false;false;false;false
num::nonzero::NonZero::<u8>::count_ones;false;true;false;false
num::<impl i64>::overflowing_pow;false;false;false;true
<num::niche_types::I32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepi32_ph;true;true;false;false
net::ip_addr::Ipv6Addr::from_octets;false;false;false;false
<&'a u8 as ops::arith::Mul<u8>>::mul;false;false;false;false
<str::iter::SplitWhitespace<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm_cmpeq_epi64_mask;true;true;false;false
<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::fmt_subslice;false;false;true;true
<u8 as ops::bit::BitAnd<&u8>>::bitand;false;false;false;false
tuple::<impl cmp::PartialOrd for (V, U, T)>::partial_cmp;false;false;false;false
slice::ascii::<impl [u8]>::make_ascii_lowercase;false;false;true;true
<&num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epi32;true;true;true;false
intrinsics::truncf128;true;false;true;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
<i128 as iter::traits::accum::Product<&'a i128>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_castsi512_si128;true;true;false;false
num::nonzero::NonZero::<i32>::saturating_abs;false;true;false;false
ptr::const_ptr::<impl *const T>::offset::runtime_offset_nowrap::compiletime;false;false;true;false
core_simd::masks::Mask::<T, N>::cast;false;false;true;false
<fmt::rt::ArgumentType<'a> as clone::Clone>::clone;false;false;true;false
num::<impl i128>::midpoint;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_abs_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_slli_epi16;true;true;false;false
num::<impl usize>::overflowing_div;false;false;false;false
ops::index_range::IndexRange::new_unchecked::precondition_check;false;false;false;false
num::<impl usize>::strict_div_euclid;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm256_cmp_ps_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_mul_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtps_pd;true;true;true;false
<&'a u128 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::sse41::_mm_ceil_sd;true;true;true;false
ptr::non_null::NonNull::<[T]>::get_unchecked_mut;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&i8>>::sub_assign;false;false;true;false
tuple::<impl cmp::Ord for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_or_ps;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<&num::wrapping::Wrapping<u16>>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
sync::atomic::AtomicU64::fetch_or;false;true;true;false
num::nonzero::NonZero::<u64>::div_ceil;false;true;false;false
<core_arch::x86::__m512::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldi_epi64;true;true;false;false
str::<impl str>::trim_left_matches;false;false;false;false
core_arch::x86::avx::_mm256_setr_epi16;true;false;false;false
<i64 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
cell::once::OnceCell::<T>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_movehdup_ps;true;true;true;false
slice::sort::shared::smallsort::sort4_stable;true;true;true;false
<core_simd::masks::Mask<i64, N> as convert::From<core_simd::masks::Mask<isize, N>>>::from;false;false;true;false
<str::iter::Split<'a, P> as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<F as str::pattern::Pattern>::strip_suffix_of;false;false;false;false
num::<impl u8>::swap_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_store_ph;true;true;true;false
intrinsics::unchecked_shl;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_shuffle_pd;true;true;true;false
core_arch::x86::bmi1::_tzcnt_u16;true;false;false;false
num::<impl i32>::trailing_zeros;false;false;false;false
<i32 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<char::ToLowercase as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi64;true;true;false;false
core_arch::x86::avx512vnni::_mm512_dpbusds_epi32;true;true;false;false
num::<impl u64>::overflowing_sub;false;false;false;false
<&isize as ops::bit::Shr<&isize>>::shr;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::get;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::DivAssign<isize>>::div_assign;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_getexp_round_sh;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
num::<impl i64>::max_value;false;false;false;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for char>::from;false;false;false;false
num::nonzero::NonZero::<i128>::reverse_bits;false;true;false;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_castsi128_si512;true;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
<u8 as ops::bit::Shl<i16>>::shl;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&num::saturating::Saturating<u128>>>::bitor_assign;false;false;true;false
<u16 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<iter::adapters::step_by::StepBy<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;false
sync::atomic::AtomicU8::from_ptr;true;true;true;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
time::Duration::from_secs_f64::panic_cold_display;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi16;true;true;false;false
<u64 as iter::range::Step>::forward;false;false;false;false
fmt::num::<impl fmt::Debug for u64>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_set1_epi64;true;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Div>::div;false;false;false;false
marker::variance::PhantomCovariant;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_getmant_round_ph;true;true;true;false
<iter::adapters::scan::Scan<I, St, F> as clone::Clone>::clone;false;false;true;false
fmt::num::imp::<impl fmt::LowerExp for u32>::fmt;false;false;true;false
iter::adapters::map_windows::Buffer::<T, N>::as_array_ref;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_i32loscatter_epi64;true;true;true;false
sync::atomic::AtomicU16::fetch_add;false;true;true;false
slice::iter::ArrayWindows::<'a, T, N>::new;false;false;false;false
<&num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::copysign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_insertf32x4;true;true;true;false
mem::transmutability::Assume::and;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fixupimm_round_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_getmant_ph;true;true;true;false
num::nonzero::NonZero::<u128>::swap_bytes;false;true;false;false
<i64 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
<isize as ops::bit::Shl<u16>>::shl;false;false;false;false
<u64 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<char::convert::CharErrorKind as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_srl_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_rcp_ph;true;true;true;false
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_loadu_si512;true;true;true;false
<num::saturating::Saturating<i8> as ops::bit::Not>::not;false;false;false;false
<&'a num::wrapping::Wrapping<u64> as ops::arith::Add<num::wrapping::Wrapping<u64>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_unpackhi_ps;true;true;true;false
<panic::unwind_safe::AssertUnwindSafe<F> as ops::function::FnOnce<()>>::call_once;false;false;false;false
intrinsics::mir::Deinit::panic_cold_explicit;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::RemAssign<&i128>>::rem_assign;false;false;true;false
<range::iter::IterRangeInclusive<A> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
fmt::num::<impl fmt::Binary for i8>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmsubadd_ps;true;true;true;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<u32, N>>::sub;false;true;false;false
<num::flt2dec::decoder::FullDecoded as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx2::_mm256_adds_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm_srav_epi16;true;true;false;false
<num::error::TryFromIntError as cmp::PartialEq>::eq;false;false;false;false
<num::niche_types::NonZeroU64Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
num::bignum::tests::Big8x3::mul_pow5;false;false;true;true
intrinsics::atomic_load_relaxed;true;false;true;false
<&f32 as ops::arith::Mul<&f32>>::mul;false;false;true;false
pin::Pin::<Ptr>::set;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi32_storeu_epi8;true;true;true;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<u8 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
core_arch::x86::avx2::_mm256_cvtepu32_epi64;true;true;false;false
<slice::GetDisjointMutError as cmp::PartialEq>::eq;false;false;false;false
<[mem::maybe_uninit::MaybeUninit<T>]>::as_bytes_mut;false;true;true;false
core_arch::x86::sse2::_mm_cvtsd_ss;true;true;true;false
<&num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for usize>::try_from;false;false;false;false
<isize as ops::bit::Shl<u64>>::shl;false;false;false;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
num::wrapping::Wrapping::<i64>::rotate_left;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvttpd_epi32;true;true;true;false
<core_arch::simd::u64x2 as clone::Clone>::clone;false;false;false;false
<&'a num::wrapping::Wrapping<u8> as ops::bit::BitOr<num::wrapping::Wrapping<u8>>>::bitor;false;false;false;false
<panic::unwind_safe::AssertUnwindSafe<S> as async_iter::async_iter::AsyncIterator>::poll_next;false;true;true;false
num::<impl u8>::wrapping_add;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmaddsub_ps;true;true;true;false
<core_arch::x86::__m256bh as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_load_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cmul_round_sch;true;true;true;false
<time::Duration as cmp::Ord>::cmp;false;false;false;false
"<&'b [char; N] as str::pattern::Pattern>::strip_suffix_of";false;false;false;false
core_arch::x86::sse2::_mm_div_sd;true;true;true;false
core_arch::x86::avx::_mm256_store_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtusepi64_epi16;true;true;false;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_srl_epi64;true;true;false;false
<any::TypeId as hash::Hash>::hash;false;false;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::addr;false;true;true;false
<usize as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_load_ps;true;true;true;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<f32, N>>::neg;false;true;true;false
tuple::<impl cmp::PartialEq for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::eq;false;false;false;false
num::<impl i8>::overflowing_sub_unsigned;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i64>::ge;false;false;false;false
<u32 as ops::bit::Shr>::shr;false;false;false;false
task::wake::ExtData::None;false;false;false;false
<&'a num::saturating::Saturating<u128> as ops::bit::BitAnd<num::saturating::Saturating<u128>>>::bitand;false;false;false;false
intrinsics::atomic_min_acqrel;true;false;true;false
unicode::unicode_data::alphabetic::lookup;false;false;false;false
<i8 as iter::range::Step>::backward_unchecked;true;true;false;false
<num::nonzero::NonZero<T> as cmp::Ord>::max;false;true;true;false
num::nonzero::NonZero::<u64>::is_power_of_two;false;false;false;false
intrinsics::atomic_xchg_relaxed;true;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::next;false;false;true;false
num::<impl str::traits::FromStr for u16>::from_str;false;false;false;false
num::<impl u8>::from_str_radix;false;false;false;false
<u32 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
<u128 as ops::arith::Sub<&u128>>::sub;false;false;false;false
<bstr::ByteStr as hash::Hash>::hash;false;false;true;false
<core_arch::x86::__m128i as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx::_mm256_load_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_add_sd;true;true;true;false
num::nonzero::NonZero::<u64>::from_be;false;true;false;false
<i16 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::count;false;false;true;true
<num::saturating::Saturating<i8> as ops::arith::RemAssign<&num::saturating::Saturating<i8>>>::rem_assign;false;false;true;false
<i128 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::avx2::_mm_srlv_epi32;true;true;false;false
ptr::const_ptr::<impl *const [T]>::len;false;false;true;false
core_arch::x86::avx512f::_mm512_undefined_epi32;true;false;false;false
core_arch::x86::avx512f::_mm_mask_fnmadd_ss;true;true;true;false
<T as clone::uninit::CopySpec>::clone_slice;true;true;true;true
num::<impl u64>::reverse_bits;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_reduce_mul_ph;true;true;true;false
<i32 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::cast;false;true;false;false
mem::maybe_uninit::MaybeUninit::<T>::slice_as_bytes_mut;false;false;true;false
core_arch::x86::sse::_MM_GET_EXCEPTION_STATE;true;true;false;false
core_arch::x86::avx2::_mm256_max_epu32;true;true;false;false
slice::<impl [T]>::split_off_last_mut;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_epu32_mask;true;true;false;false
<u128 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<&num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub;false;false;false;false
num::<impl i8>::div_ceil;false;false;false;false
num::<impl isize>::from_ascii_radix;false;false;false;true
<&i32 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<(B, A, Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
slice::<impl [T]>::as_mut_ptr_range;false;true;true;false
core_arch::simd::i64x1::new;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtepu16_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_srli_epi16;true;true;false;false
ptr::without_provenance;false;false;false;false
<iter::adapters::peekable::Peekable<I> as clone::Clone>::clone;false;false;true;false
tuple::<impl cmp::PartialOrd for (X, W, V, U, T)>::lt;false;false;false;false
core_arch::x86::sha::_mm_sha256msg2_epu32;true;true;false;false
num::nonzero::NonZero::<i16>::to_be;false;true;false;false
<u128 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epu16;true;true;true;false
core_arch::simd::f64x1::extract;false;true;true;false
num::<impl u128>::saturating_div;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<u8>>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_min_ph;true;true;true;false
num::<impl i32>::pow;false;false;false;true
num::<impl u128>::overflowing_rem_euclid;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::get_unchecked;true;true;true;false
num::<impl usize>::checked_sub_signed;false;false;false;false
num::<impl i8>::unbounded_shr;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_permutex2var_pd;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor;false;false;false;false
num::<impl i64>::signum;false;false;false;false
num::<impl u16>::wrapping_mul;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::index_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_mmask_i32gather_epi64;true;true;true;false
ptr::non_null::NonNull::<T>::new_unchecked;true;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512vnni::_mm_mask_dpwssd_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_cmple_epu16_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_pd;true;true;false;false
hint::spin_loop;false;true;false;false
<isize as ops::bit::Shl<&i8>>::shl;false;false;false;false
error::Error::description;false;false;false;false
core_arch::x86::avx512fp16::_mm512_getmant_round_ph;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::AddAssign>::add_assign;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;false;true;false
intrinsics::exact_div;true;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i32>::try_from;false;false;false;false
core_arch::x86::avx512bw::_mm512_movepi8_mask;true;true;false;false
core_arch::x86::avx512bw::_ktest_mask32_u8;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_permutevar_ps;true;true;true;false
slice::raw::from_ptr_range;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for f32>::le;false;false;true;false
core_arch::x86::__m256d::splat::JustOne;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_reduce_ph;true;true;true;false
<ops::range::RangeInclusive<T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
slice::sort::shared::smallsort::merge_up;true;true;true;false
num::<impl isize>::checked_div;false;false;false;false
ascii::ascii_char::AsciiChar::digit_unchecked;true;true;false;false
core_arch::x86::sse2::_mm_comile_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_fmaddsub_round_ps;true;true;true;false
num::<impl i8>::next_multiple_of;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<core_simd::vector::Simd<T, N> as cmp::PartialEq>::ne;false;true;true;false
iter::sources::empty::Empty;false;false;true;false
<&num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor;false;false;false;false
num::wrapping::Wrapping::<i64>::is_positive;false;false;false;false
tuple::<impl cmp::PartialEq for (Z, Y, X, W, V, U, T)>::ne;false;false;false;false
num::wrapping::Wrapping::<i8>::to_le;false;false;false;false
<core_arch::simd::f16x32 as cmp::PartialEq>::eq;false;false;true;false
<num::niche_types::I64NotAllOnes as hash::Hash>::hash;false;false;true;false
<core_arch::simd::i16x2 as clone::Clone>::clone;false;false;false;false
<future::poll_fn::PollFn<F> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_broadcast_sd;true;true;true;false
core_arch::x86::avx512f::_mm_scalef_round_ss;true;true;true;false
<u32 as ops::arith::DivAssign>::div_assign;false;false;true;false
<&'a usize as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_slli_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_compress_ps;true;true;true;false
<slice::iter::ChunkBy<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm_cvt_roundss_sd;true;true;true;false
core_arch::x86::avx::_mm256_loadu2_m128d;true;true;true;false
core_arch::x86::avx512f::_mm_mask_compress_epi64;true;true;false;false
<iter::adapters::chain::Chain<A, B> as clone::Clone>::clone;false;false;true;false
<u128 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_round_ph;true;true;true;false
num::bignum::Big32x40::mul_digits::mul_inner;false;false;true;true
<iter::adapters::fuse::Fuse<I> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_i32scatter_epi64;true;true;true;false
<&T as borrow::Borrow<T>>::borrow;false;false;false;false
core_arch::x86::aes::_mm_aeskeygenassist_si128;true;true;false;false
tuple::<impl cmp::PartialOrd for (U, T)>::partial_cmp;false;false;false;false
<iter::sources::repeat::Repeat<A> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_sra_epi32;true;true;false;false
<u8 as ops::arith::Rem<&u8>>::rem;false;false;false;false
<&'a i32 as ops::bit::Shl<i128>>::shl;false;false;false;false
<isize as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
<ops::control_flow::ControlFlow<B, C> as ops::try_trait::FromResidual<ops::control_flow::ControlFlow<B, convert::Infallible>>>::from_residual;false;false;true;false
core_arch::x86::avx512bw::_mm_testn_epi16_mask;true;true;false;false
<i32 as ops::arith::Mul<&i32>>::mul;false;false;false;false
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u128>> for u128>::div_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_shrdv_epi32;true;true;false;false
<&'a num::saturating::Saturating<usize> as ops::bit::BitAnd<num::saturating::Saturating<usize>>>::bitand;false;false;false;false
<u128 as default::Default>::default;false;false;false;false
tuple::<impl cmp::PartialOrd for (C, B, A, Z, Y, X, W, V, U, T)>::gt;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::simd::u16x64::extract;false;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_load_sh;true;true;true;false
<num::wrapping::Wrapping<u8> as iter::traits::accum::Sum>::sum;false;false;false;true
sync::atomic::AtomicI16::fetch_update;false;false;true;true
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<u32, N>>::bitxor;false;true;false;false
<T as array::SpecArrayClone>::clone;false;false;false;false
<Iter as iter::traits::collect::TraitK<EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
core_arch::x86::avx::_mm256_andnot_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmpgt_epu32_mask;true;true;false;false
core_arch::x86::avx512ifma::_mm512_madd52lo_epu64;true;true;false;false
f64::<impl f64>::clamp::do_panic::runtime;false;false;true;false
<&isize as ops::bit::Shr<&u64>>::shr;false;false;false;false
num::<impl i16>::checked_rem_euclid;false;false;false;false
<i8 as ops::bit::Shr<&u8>>::shr;false;false;false;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G, H, I, J)>::hash;false;false;true;false
slice::get_disjoint_check_valid;false;false;false;true
core_arch::x86::avx512bw::_mm256_cmpge_epi8_mask;true;true;false;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_simd::swizzle_dyn::<impl core_simd::vector::Simd<u8, N>>::swizzle_dyn;false;false;false;true
num::<impl u16>::wrapping_rem;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u16, 8>>::from;false;false;false;false
num::wrapping::Wrapping::<i128>::swap_bytes;false;false;false;false
<u64 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 16>> for core_arch::x86::__m512>::from;false;false;true;false
<sync::atomic::Ordering as fmt::Debug>::fmt;false;false;true;false
<option::Option<T> as ops::try_trait::Try>::branch;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::AddAssign>::add_assign;false;false;true;false
<u32 as iter::range::Step>::backward_checked;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi16_epi32;true;true;false;false
<u8 as ops::bit::Shr<&u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask2int;true;false;false;false
num::<impl i64>::wrapping_mul;false;false;false;false
<isize as ops::bit::Shl<&isize>>::shl;false;false;false;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
sync::atomic::AtomicUsize::fetch_or;false;true;true;false
<&u8 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<usize as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_subs_epi8;true;true;false;false
num::<impl u16>::saturating_pow;false;false;false;false
<&u64 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<net::socket_addr::SocketAddr as cmp::PartialOrd>::partial_cmp;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu32_pd;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::MulAssign<&num::saturating::Saturating<u64>>>::mul_assign;false;false;true;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Add<&num::wrapping::Wrapping<u128>>>::add;false;false;false;false
future::pending::pending;false;false;false;false
num::wrapping::Wrapping::<i8>::signum;false;false;false;false
hint::unreachable_unchecked::precondition_check;false;false;false;false
core_arch::x86::avx512bw::_mm512_avg_epu8;true;true;false;false
option::Option::<T>::replace;false;false;true;false
num::wrapping::Wrapping::<i16>::abs;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpge_epu8_mask;true;true;false;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u16>> for u16>::div;false;false;false;false
num::nonzero::NonZero::<u32>::isolate_least_significant_one;false;true;false;false
core_arch::x86::avx::_mm256_setzero_pd;true;false;false;false
<&usize as ops::bit::Shr<&i16>>::shr;false;false;false;false
<u16 as ops::arith::Rem>::rem;false;false;false;false
<str::iter::Split<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor;false;false;false;false
<isize as ops::bit::Shl<&u64>>::shl;false;false;false;false
num::nonzero::NonZero::<u32>::leading_zeros;false;true;false;false
num::int_log10::i64;false;false;false;false
core_arch::x86::sse2::_mm_cmpnle_pd;true;true;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::next;false;false;true;true
core_arch::x86::sse::_mm_cmpnlt_ss;true;true;true;false
core_arch::x86::rdrand::_rdrand16_step;true;true;true;false
core_arch::x86::avx512dq::_mm512_xor_pd;true;true;true;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<isize, N>>::bitand;false;true;false;false
<cell::BorrowMutError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundsd_sh;true;true;true;false
<&i64 as ops::bit::Shl<&u64>>::shl;false;false;false;false
num::<impl usize>::overflowing_shl;false;false;false;false
<net::ip_addr::IpAddr as hash::Hash>::hash;false;false;true;false
<net::ip_addr::Ipv6Addr as convert::From<u128>>::from;false;false;false;false
num::<impl usize>::unchecked_shl;true;false;false;false
slice::iter::Iter::<'a, T>::new;false;true;false;false
<F as str::pattern::Pattern>::is_prefix_of;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_sh;true;true;true;false
core_arch::x86::sse::_mm_cmpgt_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_reduce_mul_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_expandloadu_pd;true;true;true;false
intrinsics::powif128;true;false;true;false
time::Duration::from_secs;false;false;false;false
<i32 as ops::bit::Shr<u16>>::shr;false;false;false;false
"<[char; N] as str::pattern::Pattern>::is_contained_in";false;false;false;false
core_arch::x86::avx512f::_mm_maskz_min_epi32;true;true;false;false
fmt::num::<impl fmt::Octal for isize>::fmt;false;false;true;false
<ptr::non_null::NonNull<T> as fmt::Debug>::fmt;false;false;true;false
num::<impl u32>::checked_ilog2;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_sum;false;true;false;false
<u32 as ops::bit::Shl<&u16>>::shl;false;false;false;false
ub_checks::maybe_is_aligned_and_not_null;false;false;true;false
<task::poll::Poll<T> as cmp::PartialEq>::eq;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub;false;false;false;false
intrinsics::atomic_xadd_acquire;true;false;true;false
core_arch::x86::avx512f::_mm_ror_epi64;true;true;false;false
<u16 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::sse41::_mm_blendv_pd;true;true;true;false
<usize as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::read;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for u16>::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm_mask_ternarylogic_epi64;true;true;false;false
<u64 as ops::bit::Shr<i64>>::shr;false;false;false;false
num::<impl usize>::midpoint;false;false;false;false
slice::<impl [T]>::split_first_chunk_mut;false;true;true;false
<cell::once::OnceCell<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::__m512bh::splat;false;true;false;false
<num::nonzero::NonZero<u16> as str::traits::FromStr>::from_str;false;false;false;false
<iter::adapters::map_windows::MapWindows<I, F, N> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_andnot_epi64;true;true;false;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
iter::adapters::zip::Zip::<A, B>::super_nth;false;false;true;true
core_arch::x86::avx512f::_mm512_mullox_epi64;true;true;false;false
core_arch::simd::u8x2::extract;false;true;false;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
slice::sort::stable::drift::stable_quicksort;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::AddAssign<&isize>>::add_assign;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&num::saturating::Saturating<i16>>>::bitor_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvttph_epi64;true;true;true;false
intrinsics::atomic_cxchgweak_acquire_acquire;true;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i32> for &'lhs core_simd::vector::Simd<i32, N>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvtph_epi64;true;true;true;false
<num::niche_types::U32NotAllOnes as hash::Hash>::hash;false;false;true;false
<u128 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
num::<impl usize>::from_be;false;false;false;false
num::wrapping::Wrapping::<i8>::from_le;false;false;false;false
<&'a u16 as ops::bit::Shl<usize>>::shl;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign;false;false;true;false
num::<impl usize>::checked_mul;false;false;false;false
convert::num::<impl convert::TryFrom<i16> for u8>::try_from;false;false;false;false
intrinsics::simd::simd_or;true;false;false;false
<usize as iter::range::Step>::backward;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_ps;true;true;true;false
sync::atomic::AtomicI32::swap;false;true;true;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl isize>::checked_abs;false;false;false;false
core_arch::x86::avx512f::_mm512_insertf64x4;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u64, 8>>::from;false;false;false;false
<i64 as ops::arith::DivAssign>::div_assign;false;false;true;false
num::<impl isize>::saturating_add;false;false;false;false
core_arch::x86::avx512f::_mm_cvtsepi32_epi16;true;true;false;false
convert::num::<impl convert::From<i16> for i128>::from;false;false;false;false
tuple::<impl cmp::PartialOrd for (Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
num::<impl isize>::borrowing_sub;false;false;false;false
intrinsics::simd::simd_ne;true;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvtph_epi16;true;true;true;false
slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u32> for core_simd::vector::Simd<u32, N>>::shr;false;false;false;false
num::<impl isize>::checked_pow;false;false;false;true
<i32 as ops::bit::BitAnd>::bitand;false;false;false;false
num::<impl u32>::checked_next_multiple_of;false;false;false;false
num::nonzero::NonZero::<isize>::isolate_most_significant_one;false;true;false;false
num::<impl usize>::one_less_than_next_power_of_two;false;true;false;false
num::saturating::Saturating::<u64>::leading_zeros;false;false;false;false
<&'a i64 as ops::bit::Shl<i8>>::shl;false;false;false;false
slice::<impl [T]>::binary_search;false;false;false;false
num::<impl u32>::checked_sub_signed;false;false;false;false
<(EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(J, I, H, G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
intrinsics::mir::Goto::panic_cold_explicit;false;false;false;false
intrinsics::is_val_statically_known;false;false;false;false
hash::impls::<impl hash::Hash for i64>::hash;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_min_pd;true;true;true;false
core_arch::x86::sse41::_mm_cvtepu8_epi32;true;true;false;false
slice::<impl [T]>::split_inclusive;false;false;false;false
<i8 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::assume_init_ref;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_srlv_epi32;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::MulAssign<&num::saturating::Saturating<i16>>>::mul_assign;false;false;true;false
convert::num::<impl convert::From<i16> for isize>::from;false;false;false;false
char::methods::<impl char>::escape_debug_ext;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign;false;false;true;false
intrinsics::simd::simd_ge;true;false;false;false
core_simd::vector::Simd::<T, N>::load;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi32_storeu_epi16;true;true;true;false
sync::atomic::AtomicI64::get_mut;false;false;true;false
cmp::impls::<impl cmp::PartialEq for bool>::eq;false;false;false;false
<usize as ops::bit::Not>::not;false;false;false;false
<iter::adapters::skip::Skip<I> as clone::Clone>::clone;false;false;true;false
num::nonzero::NonZero::<i32>::unsigned_abs;false;true;false;false
fmt::num::imp::<impl fmt::UpperExp for i16>::fmt;false;false;true;false
<&u32 as ops::bit::Shr<&i64>>::shr;false;false;false;false
num::<impl usize>::overflowing_sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_castph128_ph512;true;true;true;false
core_arch::x86::avx512f::_mm256_test_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_shuffle_epi32;true;true;false;false
<i128 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
core_arch::simd::i32x16::extract;false;true;false;false
core_arch::x86::avx512f::_mm512_sub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_broadcast_i64x4;true;true;false;false
num::<impl i8>::from_le_bytes;false;false;false;false
fmt::Formatter::<'a>::fill;false;false;true;false
<ops::range::RangeToInclusive<T> as ops::range::OneSidedRange<T>>::bound;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpnle_ps_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_i64scatter_epi32;true;true;true;false
<u8 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
sync::atomic::AtomicU8::store;false;true;true;false
<mem::manually_drop::ManuallyDrop<T> as hash::Hash>::hash;false;false;true;false
num::<impl u64>::from_str_radix;false;false;false;false
core_arch::x86::avx512f::_mm_rcp14_pd;true;true;true;false
core_arch::x86::sse42::_mm_cmpestrz;true;true;false;false
core_arch::x86::avx512f::_mm512_storeu_epi64;true;true;true;false
<&'a num::wrapping::Wrapping<u64> as ops::arith::Div<num::wrapping::Wrapping<u64>>>::div;false;false;false;false
core_simd::vector::Simd::<T, N>::gather_select;false;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&i16>>::sub_assign;false;false;true;false
slice::sort::select::min_index;false;false;true;true
num::<impl i8>::unchecked_neg::precondition_check;false;false;false;false
core_arch::x86::avx512bw::_mm512_subs_epu16;true;true;false;false
<u128 as ops::arith::RemAssign>::rem_assign;false;false;true;false
<str::CharEscapeDefault as clone::Clone>::clone;false;false;false;false
num::<impl u16>::wrapping_div_euclid;false;false;false;false
<Iter as iter::traits::collect::TraitH<EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
result::Result::<T, E>::into_ok;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl;false;false;false;false
iter::traits::iterator::Iterator::cloned;false;false;false;false
num::<impl usize>::strict_neg;false;false;false;false
<str::iter::Chars<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
<f128 as convert::num::FloatToInt<u16>>::to_int_unchecked;true;true;true;false
task::wake::LocalWaker::wake;false;true;true;false
core_arch::x86::tbm::_t1mskc_u32;true;false;false;false
slice::ascii::<impl [u8]>::trim_ascii;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_mullo_epi32;true;true;false;false
<i16 as ops::bit::Shl>::shl;false;false;false;false
core_arch::simd::i16x2::splat;false;true;false;false
num::saturating::Saturating::<u128>::pow;false;false;false;false
intrinsics::atomic_min_release;true;false;true;false
<u8 as ops::arith::AddAssign>::add_assign;false;false;true;false
<slice::iter::Iter<'_, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
ffi::c_str::CStr::from_bytes_with_nul_unchecked::runtime;false;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::leading_ones;false;false;false;false
task::wake::LocalWaker::wake_by_ref;false;true;true;false
num::nonzero::NonZero::<i16>::saturating_mul;false;true;false;false
<i32 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add;false;false;false;false
fmt::rt::Argument::<'_>::new_display;false;false;false;false
ascii::EscapeDefault::as_str;false;false;true;false
time::<impl ops::arith::Mul<time::Duration> for u32>::mul;false;false;false;false
<core_arch::simd::u32x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask2_permutex2var_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_fmaddsub_ph;true;true;true;false
cmp::impls::<impl cmp::Ord for u32>::cmp;false;false;false;false
num::<impl isize>::rotate_left;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::avx512f::_mm_mask_compress_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_unpacklo_epi32;true;true;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Sub>::sub;false;false;false;false
<&'a num::wrapping::Wrapping<i16> as ops::arith::Sub<num::wrapping::Wrapping<i16>>>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_cmp_ph_mask;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epu64;true;true;true;false
<&num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand;false;false;false;false
core_arch::x86::sse::_mm_ucomile_ss;true;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
num::<impl u16>::strict_shr;false;false;false;false
<i32 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<cell::BorrowError as fmt::Debug>::fmt;false;false;true;false
<usize as ops::arith::Add<&usize>>::add;false;false;false;false
<ptr::alignment::Alignment as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cmpge_epu64_mask;true;true;false;false
net::ip_addr::Ipv6Addr::is_unicast;false;false;false;false
core_arch::x86::avx512bw::_kortest_mask32_u8;true;true;true;false
num::<impl i8>::unchecked_sub;true;false;false;false
<&'a i128 as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_min_round_ph;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u64>>>::bitor_assign;false;false;true;false
<char::ToUppercase as iter::traits::iterator::Iterator>::fold;false;false;true;true
<f32 as convert::num::FloatToInt<u128>>::to_int_unchecked;true;true;true;false
num::int_log10::u128;false;false;false;false
<i64 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
core_arch::simd::f32x2;false;false;true;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
cmp::impls::<impl cmp::Ord for i64>::cmp;false;false;false;false
num::<impl i32>::wrapping_add_unsigned;false;false;false;false
<net::ip_addr::Ipv6Addr as hash::Hash>::hash;false;false;true;false
<i128 as iter::traits::accum::Sum<&'a i128>>::sum;false;false;false;true
core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi32;true;true;false;false
core_arch::x86::sse2::_mm_loadl_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_loadu_ph;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask3_fcmadd_sch;true;true;true;false
<i64 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_fpclass_ph_mask;true;true;true;false
num::saturating::Saturating::<u128>::rotate_right;false;false;false;false
slice::<impl [T]>::as_simd;false;true;false;false
core_arch::x86::sse2::_mm_storeh_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_fnmsub_round_sh;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_permutexvar_epi16;true;true;false;false
<u32 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::wrapping_sub;false;false;true;false
<usize as ops::bit::BitAndAssign<&usize>>::bitand_assign;false;false;true;false
core_arch::x86::kl::AesOutput;false;false;false;false
<u32 as pat::RangePattern>::sub_one;false;false;false;false
<u64 as ops::bit::Shr<i128>>::shr;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<u64>>::sub_assign;false;false;true;false
num::<impl i8>::unchecked_sub::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_min_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_shufflelo_epi16;true;true;false;false
core_arch::simd::i16x4::new;false;false;false;false
core_arch::x86::avx512f::_mm_mask_compress_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_load_epi32;true;true;true;false
<i8 as iter::traits::accum::Sum<&'a i8>>::sum;false;false;false;true
<&u16 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<&u128 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvttps_epu64;true;true;true;false
<isize as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx::_mm256_mul_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_div_ph;true;true;true;false
core_arch::x86::avx512dq::_mm512_movm_epi64;true;true;false;false
num::<impl u32>::from_be;false;false;false;false
intrinsics::simd::simd_reduce_mul_unordered;true;false;false;false
core_simd::ops::deref::<impl ops::arith::Add<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::add;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_max_epu32;true;true;false;false
str::pattern::Pattern::strip_prefix_of;false;true;false;false
core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_set4_epi64;true;true;false;false
<i8 as ops::bit::Shr<isize>>::shr;false;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv4Addr>>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_product;false;true;false;false
sync::atomic::AtomicI16::fetch_sub;false;true;true;false
core_arch::x86::avx512f::_mm512_cmp_ps_mask;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_insertf64x2;true;true;true;false
char::EscapeDebug;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<i16 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<i8 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
core_arch::x86::avx512bitalg::_mm256_maskz_popcnt_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_rcp_ph;true;true;true;false
core_arch::x86::avx512f::_mm_mask_store_epi32;true;true;true;false
<i8 as ops::arith::Mul<&i8>>::mul;false;false;false;false
<hash::sip::Hasher<S> as default::Default>::default;false;false;false;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::last;false;true;true;false
core_arch::x86::sse::_mm_setr_ps;true;false;true;false
core_arch::x86::avx512dq::_mm_mask_and_ps;true;true;true;false
core_arch::x86::gfni::_mm512_mask_gf2p8affine_epi64_epi8;true;true;false;false
intrinsics::mir::Variant;false;false;false;false
core_arch::simd::u64x8::extract;false;true;false;false
num::nonzero::NonZero::<u32>::trailing_zeros;false;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepu32_ph;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_getexp_round_ss;true;true;true;false
cmp::impls::<impl cmp::PartialEq for !>::eq;false;false;false;false
f128::<impl f128>::is_normal;false;false;true;false
<i128 as ops::bit::BitXorAssign<&i128>>::bitxor_assign;false;false;true;false
num::<impl u128>::from_be;false;false;false;false
<isize as iter::traits::accum::Product>::product;false;false;false;true
num::<impl u8>::unchecked_shl::precondition_check;false;false;false;false
<&u8 as ops::bit::BitOr<&u8>>::bitor;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_mmask_i32gather_pd;true;true;true;false
<&num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<range::iter::IterRange<A> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<ops::range::RangeFrom<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvttps_epu64;true;true;true;false
core_arch::x86::sse2::_mm_xor_si128;true;true;false;false
<core_arch::simd::m64x2 as clone::Clone>::clone;false;false;false;false
intrinsics::mir::Drop::panic_cold_explicit;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::DivAssign>::div_assign;false;false;true;false
slice::index::slice_start_index_overflow_fail;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&i128>>::rem_assign;false;false;true;false
<&'a num::wrapping::Wrapping<i64> as ops::bit::BitOr<num::wrapping::Wrapping<i64>>>::bitor;false;false;false;false
option::Option::<T>::as_ref;false;false;true;false
slice::<impl [T]>::is_sorted_by;false;false;false;true
<i128 as ops::arith::Div>::div;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_mul_ps;true;true;true;false
num::saturating::Saturating::<i16>::rotate_left;false;false;false;false
core_arch::x86::avx512f::_mm512_sll_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_slli_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_mask_or_ps;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
f16::<impl f16>::copysign;false;true;true;false
char::EscapeUnicode;false;false;true;false
num::<impl u16>::unchecked_sub;true;false;false;false
core_arch::x86::avx512f::_mm512_max_pd;true;true;true;false
fmt::float::<impl fmt::Debug for f16>::fmt;false;true;true;false
<&f32 as ops::arith::Rem<&f32>>::rem;false;false;true;false
<i64 as ops::bit::Shr>::shr;false;false;false;false
net::ip_addr::Ipv4Addr::is_benchmarking;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::index_mut;false;false;true;false
core_arch::x86::avx512bf16::_mm512_maskz_dpbf16_ps;true;true;true;false
num::wrapping::Wrapping::<u32>::reverse_bits;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi64;true;true;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtsd_f64;true;true;true;false
num::<impl u8>::wrapping_div;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
core_arch::simd::u32x32::extract;false;true;false;false
core_arch::x86::sse2::_mm_mulhi_epu16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_mov_epi32;true;true;false;false
num::<impl i32>::checked_rem;false;false;false;false
num::dec2flt::lemire::power;false;false;false;false
<&'a u8 as ops::bit::Shl<i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepu8_epi64;true;true;false;false
<ops::range::RangeInclusive<T> as iter::range::RangeInclusiveIteratorImpl>::spec_next;false;true;true;false
<&'a usize as ops::arith::Add<usize>>::add;false;false;false;false
<&T as fmt::LowerHex>::fmt;false;false;true;false
<pin::Pin<Ptr> as cmp::PartialOrd<pin::Pin<Q>>>::gt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi32;true;true;false;false
<str::lossy::Utf8Chunks<'_> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi32;true;true;true;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
core_arch::x86::avx2::_mm256_sllv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvtph_epu32;true;true;true;false
core_arch::x86::avx512f::_mm_mask2_permutex2var_pd;true;true;true;false
<u64 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_rol_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shrdi_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_fmsubadd_ph;true;true;true;false
num::nonzero::NonZero::<i128>::count_ones;false;true;false;false
core_arch::x86::avx512bw::_mm_movm_epi8;true;true;false;false
<u64 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu16_mask;true;true;false;false
<core_arch::simd::u32x8 as clone::Clone>::clone;false;false;false;false
<num::wrapping::Wrapping<i64> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<i64>>>::product;false;false;false;true
core_arch::x86::sse2::_mm_sub_epi16;true;true;false;false
<u64 as iter::traits::accum::Sum<&'a u64>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_sqrt_round_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_min_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_storeu_si512;true;true;true;false
num::wrapping::Wrapping::<i32>::is_positive;false;false;false;false
<&'a u16 as ops::bit::Shl<u64>>::shl;false;false;false;false
cmp::minmax;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Mul>::mul;false;false;false;false
<&'a num::wrapping::Wrapping<i64> as ops::arith::Sub<num::wrapping::Wrapping<i64>>>::sub;false;false;false;false
num::saturating::Saturating::<u128>::from_le;false;false;false;false
<i64 as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_undefined_ps;true;false;false;false
num::<impl i128>::unchecked_shl::precondition_check;false;false;false;false
<&'a i64 as ops::bit::Shr<u64>>::shr;false;false;false;false
num::<impl u16>::saturating_sub;false;false;false;false
<&'a u64 as ops::bit::Shr<u128>>::shr;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
sync::atomic::AtomicBool::into_inner;false;false;true;false
<sync::atomic::AtomicIsize as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse41::_mm_cvtepi8_epi64;true;true;false;false
<core_arch::simd::u16x16 as fmt::Debug>::fmt;false;false;true;false
net::ip_addr::IpAddr::as_octets;false;false;true;false
str::<impl str>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm_getmant_pd;true;true;true;false
core_arch::x86::avx512f::_mm_cvtsepi64_epi32;true;true;false;false
core_arch::simd::i8x8::new;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_srav_epi16;true;true;false;false
<num::saturating::Saturating<i32> as ops::arith::Sub>::sub;false;false;false;false
fmt::num::<impl fmt::Octal for i128>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_fmul_pch;true;true;true;false
core_arch::x86_64::xsave::_xrstor64;true;true;true;false
num::<impl u32>::carrying_add;false;true;false;false
<f32 as ops::arith::MulAssign<&f32>>::mul_assign;false;false;true;false
<slice::iter::ArrayChunksMut<'_, T, N> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<&u64 as ops::bit::Shr<&u64>>::shr;false;false;false;false
slice::<impl [T]>::split_last_chunk_mut;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_getexp_round_pd;true;true;true;false
<time::Duration as ops::arith::AddAssign>::add_assign;false;false;true;false
num::nonzero::NonZero::<T>::from_mut;false;true;true;false
<net::ip_addr::Ipv6MulticastScope as fmt::Debug>::fmt;false;false;true;false
alloc::layout::size_align;false;false;false;false
core_arch::x86::avx512f::_mm_i64scatter_epi32;true;true;true;false
core_arch::x86_64::tbm::_blcmsk_u64;true;false;false;false
core_arch::simd::i32x8;false;false;false;false
panicking::panic_const::panic_const_rem_overflow;false;false;false;false
<str::pattern::SearchStep as clone::Clone>::clone;false;false;true;false
cmp::impls::<impl cmp::Ord for ()>::cmp;false;false;false;false
core_arch::x86::avx2::_mm256_cvtepu8_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cvtepi8_epi16;true;true;false;false
<&num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand;false;false;false;false
core_arch::x86::gfni::_mm256_mask_gf2p8affine_epi64_epi8;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::count_ones;false;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_max;false;true;false;false
core_arch::x86::avx512fp16::_mm512_load_ph;true;true;true;false
intrinsics::assert_mem_uninitialized_valid;false;false;false;false
num::<impl usize>::saturating_add;false;false;false;false
num::<impl u64>::ilog10;false;false;false;false
core_arch::x86::avx512f::_mm_mask_ternarylogic_epi32;true;true;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<u8, N>>::bitand;false;true;false;false
num::<impl u32>::wrapping_div_euclid;false;false;false;false
num::flt2dec::to_exact_fixed_str;false;true;true;false
<num::saturating::Saturating<i8> as ops::arith::Add<&num::saturating::Saturating<i8>>>::add;false;false;false;false
num::<impl i64>::checked_add_unsigned;false;false;false;false
num::saturating::Saturating::<i64>::to_le;false;false;false;false
<isize as ops::bit::BitAnd>::bitand;false;false;false;false
<(EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(E, D, C, B, A)>>::extend_one;false;false;true;false
num::<impl u64>::one_less_than_next_power_of_two;false;true;false;false
<u32 as ops::bit::BitAnd>::bitand;false;false;false;false
<isize as ops::arith::MulAssign<&isize>>::mul_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::AddAssign>::add_assign;false;false;true;false
num::saturating::Saturating::<i8>::count_ones;false;false;false;false
ops::async_function::impls::<impl ops::async_function::AsyncFnMut<A> for &mut F>::async_call_mut;false;false;true;false
<&'a isize as ops::bit::Shl<u32>>::shl;false;false;false;false
<bstr::ByteStr as ops::index::Index<ops::range::RangeTo<usize>>>::index;false;false;false;false
core_arch::simd::i8x64::from_array;false;false;false;false
core_arch::x86::avx512f::_mm256_permutex2var_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu64;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512vnni::_mm256_dpwsud_epi32;true;true;false;false
<(dyn error::Error + marker::Send + marker::Sync + 'static)>::downcast_ref;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::AddAssign<&i64>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_or_epi32;true;true;false;false
<u16 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<&'a i8 as ops::bit::Shr<usize>>::shr;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<i8>>::sub_assign;false;false;true;false
str::<impl str>::trim_ascii_start;false;true;false;false
num::<impl i16>::count_zeros;false;false;false;false
alloc::layout::Layout::for_value;false;true;false;false
num::nonzero::NonZero::<i32>::overflowing_abs;false;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_min_epu8;true;true;false;false
<i16 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
<f64 as ops::arith::Mul>::mul;false;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitAnd<&num::saturating::Saturating<u128>>>::bitand;false;false;false;false
num::nonzero::NonZero::<u128>::leading_zeros;false;true;false;false
<num::saturating::Saturating<i16> as ops::arith::DivAssign<i16>>::div_assign;false;false;true;false
<&'a num::saturating::Saturating<i128> as ops::bit::BitXor<num::saturating::Saturating<i128>>>::bitxor;false;false;false;false
<i32 as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::simd::m16x8::bool_to_internal;false;false;false;false
<num::wrapping::Wrapping<i8> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<i8>>>::product;false;false;false;true
<iter::adapters::fuse::Fuse<I> as default::Default>::default;false;false;false;false
<core_arch::simd::f64x1 as clone::Clone>::clone;false;false;true;false
<mem::maybe_uninit::MaybeUninit<T> as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_add_ps;true;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::double_ended::DoubleEndedIterator>::rfind;false;false;true;false
num::<impl i16>::unchecked_shr::precondition_check;false;false;false;false
num::<impl isize>::from_be;false;false;false;false
intrinsics::copy::precondition_check;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul;false;false;false;false
task::wake::ContextBuilder::<'a>::waker;false;false;true;false
core_arch::x86::avx512vnni::_mm_dpwssd_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_roundscale_ps;true;true;true;false
num::nonzero::NonZero::<u32>::reverse_bits;false;true;false;false
core_arch::x86::avx512dq::_ktestz_mask16_u8;true;true;false;false
core_arch::x86::avx512f::_mm512_srav_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtps_ph;true;true;true;false
<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::next;false;true;true;false
<&'a num::saturating::Saturating<u64> as ops::bit::BitXor<num::saturating::Saturating<u64>>>::bitxor;false;false;false;false
<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i32>>>::bitxor_assign;false;false;true;false
<char::convert::CharTryFromError as fmt::Display>::fmt;false;false;true;false
<&'a i32 as ops::bit::BitOr<i32>>::bitor;false;false;false;false
net::socket_addr::SocketAddr::set_ip;false;false;true;false
num::saturating::Saturating::<u8>::reverse_bits;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::assume_init_drop;true;true;true;false
<u128 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
core_arch::x86::avx512vnni::_mm256_mask_dpwssds_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu16;true;true;true;false
intrinsics::atomic_fence_release;true;false;false;false
num::<impl isize>::saturating_pow;false;false;false;false
<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&num::saturating::Saturating<usize>>>::bitand_assign;false;false;true;false
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
cmp::Ordering::is_le;false;false;false;false
core_arch::x86::avx512fp16::_mm_rsqrt_sh;true;true;true;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_cmp_epi64_mask;true;true;false;false
<&u32 as ops::bit::Shl<&u64>>::shl;false;false;false;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_rfold;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundpd_ps;true;true;true;false
num::<impl i16>::unchecked_shl::precondition_check;false;false;false;false
core_arch::x86::avx512fp16::_mm_mul_sh;true;true;true;false
num::<impl isize>::unchecked_mul;true;false;false;false
str::iter::SplitInternal::<'a, P>::next;false;true;true;false
<&num::saturating::Saturating<i128> as ops::bit::Not>::not;false;false;false;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::resize;false;true;true;false
<isize as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_cmplt_epi16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtepu64_ph;true;true;false;false
<num::niche_types::NonZeroI32Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<u128 as ops::arith::Div<&u128>>::div;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
core_arch::x86::avx512f::_mm_mask_add_round_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_inserti32x4;true;true;false;false
<&i64 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOr<&num::wrapping::Wrapping<u16>>>::bitor;false;false;false;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_moveldup_ps;true;true;true;false
ptr::mut_ptr::<impl *mut T>::copy_from_nonoverlapping;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::count_ones;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fcmadd_round_pch;true;true;true;false
num::<impl u16>::overflowing_neg;false;false;false;false
mem::min_align_of;false;false;false;false
num::flt2dec::digits_to_dec_str;false;true;true;false
<u8 as ops::bit::Shl<i32>>::shl;false;false;false;false
<str::iter::RMatches<'a, P> as fmt::Debug>::fmt;false;false;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
<&i128 as ops::arith::Add<&i128>>::add;false;false;false;false
<u128 as ops::bit::Shl<&u128>>::shl;false;false;false;false
slice::<impl [T]>::rchunks_exact;false;false;false;false
core_arch::x86::ssse3::_mm_hadds_epi16;true;true;false;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cmple_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fmsub_round_sh;true;true;true;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
slice::<impl [T]>::select_nth_unstable_by;false;false;true;false
<i128 as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl u32>::from_str_radix;false;false;false;false
<(EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
<str::iter::Chars<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
<i16 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
<ops::control_flow::ControlFlow<B, C> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_fmsub_ps;true;true;true;false
<i64 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
fmt::num::<impl fmt::UpperExp for u128>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_unpackhi_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_sra_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mmask_i64gather_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_max_epi8;true;true;false;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::Searcher<'a>>::next_match;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cmp_ph_mask;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_round_ph;true;true;true;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_shuffle_pd;true;true;true;false
fmt::num::imp::<impl fmt::Display for i8>::fmt;false;false;true;false
sync::exclusive::Exclusive::<T>::from_pin_mut;false;true;true;false
<num::bignum::tests::Big8x3 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpge_epu32_mask;true;true;false;false
ptr::non_null::NonNull::<T>::sub;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_srl_epi16;true;true;false;false
<sync::atomic::AtomicPtr<T> as convert::From<*mut T>>::from;false;false;true;false
"<&'b [char; N] as str::pattern::Pattern>::is_contained_in";false;false;false;false
core_arch::x86::sse2::_mm_subs_epi8;true;true;false;false
intrinsics::log10f32;true;false;true;false
"array::<impl ops::index::Index<I> for [T; N]>::index";false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_cvttpd_epi64;true;true;true;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::__m256::as_mut_array;false;true;true;false
<u16 as ops::arith::DivAssign>::div_assign;false;false;true;false
num::saturating::Saturating::<u16>::rotate_left;false;false;false;false
ptr::non_null::NonNull::<T>::copy_from;true;true;true;false
core_arch::x86::avx512bw::_mm256_movm_epi16;true;true;false;false
<f64 as ops::arith::Add<&f64>>::add;false;false;true;false
core_arch::x86::sse2::_mm_cmplt_epi8;true;true;false;false
num::nonzero::NonZero::<u128>::from_be;false;true;false;false
<i32 as ops::bit::Shr>::shr;false;false;false;false
"array::<impl borrow::Borrow<[T]> for [T; N]>::borrow";false;false;false;false
core_arch::simd::i32x8::new;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi32_epi8;true;true;false;false
<str::error::Utf8Error as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_castps256_ps512;true;true;true;false
num::<impl u16>::trailing_ones;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi32;true;true;false;false
<ffi::c_str::CStr as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_cvtepu8_epi16;true;true;false;false
<i64 as ops::arith::Rem<&i64>>::rem;false;false;false;false
<core_arch::simd::m64x2 as fmt::Debug>::fmt;false;false;true;false
ptr::with_exposed_provenance;false;false;false;false
time::Duration::as_nanos;false;false;false;false
ptr::non_null::NonNull::<T>::byte_offset_from_unsigned;true;true;true;false
num::<impl i16>::to_be;false;false;false;false
intrinsics::rustc_peek;false;false;false;false
<Iter as iter::traits::collect::TraitG<EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
hash::impls::<impl hash::Hash for u32>::hash_slice;false;true;true;false
core_arch::x86::avx512bw::_mm512_bslli_epi128;true;true;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<i32, N>>::sub;false;true;false;false
core_arch::simd::u64x2;false;false;false;false
<fmt::rt::Flag as clone::Clone>::clone;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T)> for [T; 4]>::from";false;false;true;false
core_arch::x86::avx512vbmi2::_mm_mask_expandloadu_epi16;true;true;true;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::shift_elements_right;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_unpacklo_pd;true;true;true;false
cell::Cell::<T>::into_inner;false;false;true;false
core_arch::x86::sse2::_mm_castpd_ps;true;false;true;false
core_arch::x86::rdrand::_rdrand32_step;true;true;true;false
<i32 as pat::RangePattern>::sub_one;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::DivAssign>::div_assign;false;false;true;false
<u64 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<&'a i128 as ops::bit::Shl<u64>>::shl;false;false;false;false
<u128 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
marker::variance::variance;false;false;false;false
<fmt::num::UpperHex as cmp::PartialEq>::eq;false;false;false;false
<core_arch::x86::cpuid::CpuidResult as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::simd::i16x2::new;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i32>>::from;false;true;false;false
core_arch::x86::avx512f::_mm512_setr_ps;true;false;true;false
<usize as ops::bit::BitXor<&usize>>::bitxor;false;false;false;false
<num::error::IntErrorKind as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_min_round_ps;true;true;true;false
<i64 as iter::range::Step>::forward_checked;false;false;false;false
task::wake::LocalWaker::data;false;false;true;false
<core_arch::simd::u8x64 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_permute_ps;true;true;true;false
num::nonzero::NonZero::<i128>::swap_bytes;false;true;false;false
<&i128 as ops::bit::BitXor<&i128>>::bitxor;false;false;false;false
<&'a u16 as ops::arith::Rem<u16>>::rem;false;false;false;false
<str::CharEscapeDebugContinue as ops::function::FnOnce<(char,)>>::call_once;false;false;false;false
<i128 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_storeu_epi8;true;true;true;false
sync::atomic::AtomicPtr::<T>::fetch_xor;false;true;true;false
<i128 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
str::converts::from_raw_parts_mut;true;true;true;false
net::parser::Parser::<'a>::new;false;false;false;false
core_arch::x86_64::fxsr::_fxsave64;true;true;true;false
num::<impl i8>::carrying_add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permutevar_pd;true;true;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::addr;false;true;true;false
core_arch::x86::avx512f::_mm_mask_set1_epi64;true;true;false;false
<&'a u16 as ops::arith::Mul<u16>>::mul;false;false;false;false
tuple::<impl cmp::PartialOrd for (B, A, Z, Y, X, W, V, U, T)>::le;false;false;false;false
tuple::<impl cmp::PartialOrd for (A, Z, Y, X, W, V, U, T)>::gt;false;false;false;false
<core_arch::simd::m32x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_max_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_min_round_ps;true;true;true;false
<sync::atomic::Ordering as hash::Hash>::hash;false;false;true;false
num::wrapping::Wrapping::<u32>::rotate_right;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm256_cmple_epi32_mask;true;true;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
iter::adapters::intersperse::Intersperse::<I>::new;false;false;false;false
clone::impls::<impl clone::Clone for *mut T>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtt_roundpd_epu64;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&i64>>::sub_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_adds_epi8;true;true;false;false
option::Option::<T>::take_if;false;false;true;false
<result::Result<T, E> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_broadcast_f32x4;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::to_degrees;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_sqrt_round_sd;true;true;true;false
num::<impl u16>::from_be;false;false;false;false
sync::atomic::AtomicU16::fetch_nand;false;true;true;false
hash::BuildHasherDefault::<H>::new;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
<net::socket_addr::SocketAddrV6 as fmt::Display>::fmt;false;false;true;false
<i16 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Rem>::rem;false;false;false;false
num::niche_types::NonZeroIsizeInner::as_inner;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_ror_epi32;true;true;false;false
fmt::Formatter::<'a>::debug_tuple_field5_finish;false;false;true;false
core_arch::x86::ssse3::_mm_hadd_epi32;true;true;false;false
<ascii::ascii_char::AsciiChar as fmt::Display>::fmt;false;false;true;false
num::<impl u32>::wrapping_rem;false;false;false;false
core_arch::x86::avx512f::_mm512_abs_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_mask_min_epu64;true;true;false;false
<&T as fmt::LowerExp>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_castps512_ps256;true;true;true;false
core_arch::x86::avx512bw::_mm512_sra_epi16;true;true;false;false
ptr::non_null::NonNull::<T>::write_volatile;true;true;true;false
<(EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(E, D, C, B, A)>>::extend_reserve;false;false;true;false
<str::BytesIsNotEmpty as ops::function::Fn<(&'a &'b [u8],)>>::call;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&num::wrapping::Wrapping<usize>>>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fnmadd_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpneq_epi32_mask;true;true;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<u16>>::bitxor_assign;false;false;true;false
num::saturating::Saturating::<isize>::leading_zeros;false;false;false;false
<&'a num::wrapping::Wrapping<isize> as ops::arith::Add<num::wrapping::Wrapping<isize>>>::add;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvtt_roundsh_i32;true;true;true;false
cmp::impls::<impl cmp::PartialOrd<&B> for &A>::partial_cmp;false;false;false;false
<&u32 as ops::bit::Shr<&i8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm256_castph128_ph256;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fmsub_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_move_sh;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi32;true;true;false;false
<f32 as convert::num::FloatToInt<u64>>::to_int_unchecked;true;true;true;false
core_arch::x86::sse4a::_mm_insert_si64;true;true;false;false
<u64 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
<pin::Pin<Ptr> as cmp::PartialEq<pin::Pin<Q>>>::eq;false;false;true;false
<f64 as iter::traits::accum::Product>::product;false;false;false;true
<&'a u16 as ops::arith::Add<u16>>::add;false;false;false;false
num::<impl i64>::from_le_bytes;false;false;false;false
sync::atomic::AtomicI8::fetch_or;false;true;true;false
core_arch::x86::fma::_mm_fmsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_sub_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sqrt_ps;true;true;true;false
<&u64 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<&mut I as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
num::<impl i64>::reverse_bits;false;false;false;false
<usize as ops::bit::Shr<&i32>>::shr;false;false;false;false
sync::atomic::AtomicBool::compare_exchange_weak;false;true;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
num::wrapping::Wrapping::<isize>::signum;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::count;false;true;true;false
core_arch::x86::sse2::_mm_loadu_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_max_epi64;true;true;false;false
<i64 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<i8 as iter::range::Step>::forward;false;false;false;false
<i8 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<&'a i8 as ops::arith::Rem<i8>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi8;true;true;false;false
num::nonzero::NonZero::<i16>::overflowing_abs;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_and_epi64;true;true;false;false
fmt::num::imp::<impl fmt::LowerExp for u64>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_andnot_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm256_broadcast_f64x2;true;true;true;false
core_arch::x86::avx512vnni::_mm256_dpbssds_epi32;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Add>::add;false;false;false;false
num::nonzero::NonZero::<u32>::div_ceil;false;true;false;false
core_arch::x86::avx512fp16::_mm_add_round_sh;true;true;true;false
cell::once::OnceCell::<T>::get_or_try_init;false;false;true;false
<&'a num::saturating::Saturating<u8> as ops::bit::BitOr<num::saturating::Saturating<u8>>>::bitor;false;false;false;false
fmt::Formatter::<'a>::debug_tuple_fields_finish;false;false;true;true
<str::pattern::StrSearcher<'a, 'b> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;false;true;true
core_arch::x86::avx512bw::_mm512_packs_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_ror_epi32;true;true;false;false
num::<impl i32>::strict_add;false;false;false;false
<core_simd::masks::Mask<T, N> as default::Default>::default;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_fpclass_ps_mask;true;true;true;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::nonzero::NonZero::<usize>::count_ones;false;true;false;false
<u64 as ops::arith::Add<&u64>>::add;false;false;false;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
sync::atomic::AtomicI16::fetch_and;false;true;true;false
<str::error::ParseBoolError as cmp::PartialEq>::eq;false;false;false;false
"tuple::<impl convert::From<[T; 3]> for (T, T, T)>::from";false;false;false;false
core_arch::x86::sse41::_mm_cvtepu8_epi16;true;true;false;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_sqrt_ph;true;true;true;false
num::niche_types::NonZeroI16Inner::new;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtph_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_sub_sh;true;true;true;false
<&'a mut bstr::ByteStr as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fnmsub_pd;true;true;true;false
core_simd::vector::Simd::<T, N>::scatter_select;false;true;true;false
"array::<impl fmt::Debug for [T; N]>::fmt";false;false;true;false
<slice::iter::SplitInclusive<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl i8>::wrapping_div_euclid;false;false;false;false
str::<impl str>::is_empty;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_nth;false;false;true;true
panicking::panic_bounds_check;false;false;false;false
core_arch::x86::avx512bw::_mm256_loadu_epi16;true;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitXor>::bitxor;false;false;false;false
num::nonzero::NonZero::<i32>::leading_zeros;false;true;false;false
<isize as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
option::Option::<option::Option<T>>::flatten;false;false;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<u8, N>>::not;false;false;false;false
<marker::variance::PhantomInvariant<T> as default::Default>::default;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_unpackhi_epi8;true;true;false;false
num::wrapping::Wrapping::<i128>::count_zeros;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_cmp_sh_mask;true;true;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<i64, N>>::shr;false;true;false;false
<&'a i64 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_reduce_round_ps;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shrdi_epi64;true;true;false;false
num::<impl i32>::strict_div;false;false;false;false
<&'a num::wrapping::Wrapping<i64> as ops::arith::Mul<num::wrapping::Wrapping<i64>>>::mul;false;false;false;false
intrinsics::floorf128;true;false;true;false
<&'a bool as ops::bit::BitOr<bool>>::bitor;false;false;false;false
<u8 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
<u8 as ops::arith::Mul<&u8>>::mul;false;false;false;false
<usize as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check;false;false;false;false
<ops::range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds;false;false;true;false
core_arch::x86_64::sse2::_mm_cvtsi128_si64x;true;true;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::with_exposed_provenance;false;true;true;false
core_arch::x86::avx::_mm256_extractf128_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_expand_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_cmp_epi16_mask;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<u64, N>>::sum;false;false;false;true
ptr::align_offset;true;true;true;false
sync::atomic::AtomicU8::compare_and_swap;false;false;true;false
<&num::saturating::Saturating<usize> as ops::bit::Not>::not;false;false;false;false
fmt::num::imp::<impl fmt::Display for isize>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_load_mask16;true;true;true;false
<&'a i32 as ops::bit::BitXor<i32>>::bitxor;false;false;false;false
num::nonzero::NonZero::<i16>::saturating_abs;false;true;false;false
core_arch::x86::avx512bw::_mm256_reduce_and_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_scalef_ph;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u16> for core_simd::vector::Simd<u16, N>>::shr;false;false;false;false
cell::RefMut::<'b, T>::leak;false;true;true;false
<slice::ascii::EscapeAscii<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512bw::_mm512_unpackhi_epi8;true;true;false;false
fmt::num::<impl fmt::Debug for i16>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_min_epi32;true;true;false;false
<num::niche_types::I64NotAllOnes as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_max_epu8;true;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::saturating_add;false;true;false;false
mem::drop;false;false;false;false
<&isize as ops::bit::Shl<&usize>>::shl;false;false;false;false
<f16 as convert::num::FloatToInt<i64>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fnmadd_ps;true;true;true;false
<u16 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
<hash::BuildHasherDefault<H> as hash::BuildHasher>::build_hasher;false;false;true;false
core_arch::x86::avx512f::_mm512_testn_epi32_mask;true;true;false;false
<&num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub;false;false;false;false
<marker::variance::PhantomInvariant<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
intrinsics::atomic_cxchgweak_seqcst_acquire;true;false;true;false
<isize as ops::bit::BitXorAssign<&isize>>::bitxor_assign;false;false;true;false
<u16 as ops::bit::Shr<&u128>>::shr;false;false;false;false
intrinsics::simd::simd_arith_offset;true;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitAnd>::bitand;false;false;false;false
num::wrapping::Wrapping::<i32>::from_be;false;false;false;false
<u16 as ops::bit::Shl<u64>>::shl;false;false;false;false
<i8 as ops::bit::Shr<i64>>::shr;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<u8 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
<task::poll::Poll<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
core_arch::x86::avx2::_mm256_subs_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask3_fmadd_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_xor_epi64;true;true;false;false
core_arch::x86::avx512cd::_mm_conflict_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_div_ph;true;true;true;false
f64::<impl f64>::is_sign_negative;false;false;true;false
core_arch::simd::i64x8::splat::JustOne;false;false;false;false
num::<impl usize>::unchecked_shr::precondition_check;false;false;false;false
num::<impl u8>::ilog2;false;false;false;false
<u8 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask3_fmadd_pd;true;true;true;false
core_arch::x86::avx::_mm256_insertf128_ps;true;true;true;false
num::<impl i8>::checked_ilog10;false;false;false;false
core_arch::x86::__m512i::as_u64x8;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srlv_epi32;true;true;false;false
core_arch::x86::sse2::_mm_bslli_si128;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_permutex2var_ps;true;true;true;false
core_arch::x86_64::bmi::_bextr_u64;true;true;false;false
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u16>> for u16>::div_assign;false;false;true;false
<panic::unwind_safe::AssertUnwindSafe<S> as async_iter::async_iter::AsyncIterator>::size_hint;false;false;false;false
sync::atomic::AtomicU32::try_update;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_shrdv_epi16;true;true;false;false
alloc::layout::Layout::from_size_alignment;false;false;false;false
intrinsics::cosf16;true;false;true;false
core_arch::x86::avx2::_mm_i64gather_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_mulhrs_epi16;true;true;false;false
<u8 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_set1_epi16;true;true;false;false
intrinsics::simd::simd_gather;true;false;false;false
sync::atomic::AtomicI64::load;false;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_maddubs_epi16;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i16>>>::bitand_assign;false;false;true;false
num::<impl i32>::unchecked_add::precondition_check;false;false;false;false
"array::<impl convert::TryFrom<&[T]> for [T; N]>::try_from";false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Rem>::rem;false;false;false;false
str::pattern::TwoWaySearcher::reverse_maximal_suffix;false;false;false;true
<time::TryFromFloatSecsError as clone::Clone>::clone;false;false;false;false
core_arch::simd::m32x8::bool_to_internal;false;false;false;false
<isize as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_mov_epi16;true;true;false;false
<char::EscapeDefault as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::adapters::skip_while::SkipWhile<I, P> as clone::Clone>::clone;false;false;true;false
num::<impl u128>::unchecked_sub;true;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i8> for core_simd::vector::Simd<i8, N>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_fixupimm_pd;true;true;true;false
num::<impl u16>::rotate_left;false;false;false;false
num::<impl u16>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
num::<impl u128>::overflowing_shl;false;false;false;false
core_arch::x86::avx512dq::_mm_cvttpd_epi64;true;true;true;false
<f16 as ops::arith::DivAssign<&f16>>::div_assign;false;false;true;false
<core_arch::simd::i8x64::splat::JustOne as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
intrinsics::atomic_max_seqcst;true;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_cvtepi32_epi8;true;true;false;false
core_arch::x86_64::bmi::_blsi_u64;true;false;false;false
<range::iter::IterRangeFrom<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
slice::sort::shared::smallsort::small_sort_general;false;true;true;false
<u8 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
bstr::<impl cmp::PartialEq<bstr::ByteStr> for &[u8]>::eq;false;false;false;false
<range::iter::IterRange<A> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
num::<impl i64>::overflowing_abs;false;false;false;false
num::<impl i32>::unbounded_shr;false;true;false;false
ptr::const_ptr::<impl *const T>::is_null;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u128>>>::bitand_assign;false;false;true;false
<&'a i16 as ops::bit::Shl<u16>>::shl;false;false;false;false
<A as slice::cmp::SliceOrd>::compare;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_sllv_epi64;true;true;false;false
num::saturating::Saturating::<i8>::from_le;false;false;false;false
<T as clone::uninit::CopySpec>::clone_slice;true;true;true;false
core_arch::x86::avx512fp16::_mm256_zextph128_ph256;true;true;true;false
<&'a i8 as ops::bit::Shr<isize>>::shr;false;false;false;false
panicking::panic_nounwind_fmt::runtime;false;true;true;false
fmt::builders::DebugTuple::<'a, 'b>::field_with;false;false;true;false
intrinsics::atomic_cxchgweak_acqrel_acquire;true;false;true;false
core_arch::x86::avx512f::_mm_cvtu32_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_rsqrt14_ps;true;true;true;false
<core_simd::masks::Mask<i8, N> as convert::From<core_simd::masks::Mask<i32, N>>>::from;false;false;true;false
<&u128 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<u32 as ops::arith::MulAssign<&u32>>::mul_assign;false;false;true;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm256_testn_epi16_mask;true;true;false;false
<iter::sources::repeat::Repeat<A> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<u64 as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvtepu64_pd;true;true;true;false
unicode::unicode_data::uppercase::lookup;false;false;false;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<isize, N>>::bitxor;false;true;false;false
convert::num::<impl convert::TryFrom<u128> for num::nonzero::NonZero<u128>>::try_from;false;false;false;false
core_arch::simd::f32x4::extract;false;true;true;false
core_arch::x86::sse2::_mm_cvtpd_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_sub_ph;true;true;true;false
intrinsics::mir::UnwindCleanup::panic_cold_explicit;false;false;false;false
core_arch::x86::gfni::_mm256_gf2p8mul_epi8;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u16, 16>>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask2_permutex2var_pd;true;true;true;false
iter::traits::iterator::Iterator::take_while;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fmsub_ph;true;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
slice::index::slice_start_index_len_fail::do_panic::runtime;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx::_mm256_setzero_ps;true;false;false;false
core_arch::x86::avx512fp16::_mm256_reduce_add_ph;true;true;true;false
num::<impl isize>::leading_ones;false;false;false;false
iter::traits::iterator::Iterator::filter;false;false;false;false
core_arch::x86::avx512f::_mm512_zextps128_ps512;true;true;true;false
intrinsics::fabsf64;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundepu32_ps;true;true;true;false
num::flt2dec::strategy::grisu::format_shortest_opt::round_and_weed;false;false;true;true
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_xor;false;true;false;false
core_arch::simd::f64x8;false;false;true;false
<core_arch::simd::i64x4 as cmp::PartialEq>::eq;false;false;false;false
<iter::adapters::copied::Copied<I> as default::Default>::default;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::MulAssign<u16>>::mul_assign;false;false;true;false
core_arch::x86::sse2::_mm_madd_epi16;true;true;false;false
core_arch::x86::avx512vnni::_mm256_dpwusds_epi32;true;true;false;false
<num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu16_mask;true;true;false;false
clone::impls::<impl clone::Clone for f128>::clone;false;false;true;false
cell::once::OnceCell::<T>::try_init;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
<core_simd::masks::Mask<isize, N> as convert::From<core_simd::masks::Mask<i16, N>>>::from;false;false;true;false
<&u128 as ops::bit::Shr<&i128>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_madd_epi16;true;true;false;false
<cell::Cell<T> as cmp::PartialOrd>::lt;false;false;true;false
core_arch::x86::avx512f::_mm_cvti32_ss;true;true;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::find_map;false;false;true;true
core_arch::simd::f64x2::splat::JustOne;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::RemAssign<&num::saturating::Saturating<i64>>>::rem_assign;false;false;true;false
escape::EscapeIterInner::<N>::len;false;false;true;false
core_arch::x86::sse2::_mm_add_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_cmplt_pd_mask;true;true;true;false
<&'a u64 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_movepi32_mask;true;true;false;false
<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<u32 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_mulhi_epu16;true;true;false;false
<i64 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<char::EscapeDefault as iter::traits::iterator::Iterator>::count;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_fpclass_ph_mask;true;true;true;false
<&num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub;false;false;false;false
num::<impl i16>::wrapping_shl;false;true;false;false
<char::EscapeUnicode as iter::traits::iterator::Iterator>::last;false;false;true;false
<&u32 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::RemAssign<&num::saturating::Saturating<usize>>>::rem_assign;false;false;true;false
num::<impl isize>::overflowing_mul;false;false;false;false
num::<impl u32>::unbounded_shl;false;true;false;false
cmp::impls::<impl cmp::PartialOrd for i16>::ge;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
error::tags::MaybeSizedValue;false;false;false;false
cell::once::OnceCell::<T>::new;false;false;false;false
num::nonzero::NonZero::<usize>::isolate_least_significant_one;false;true;false;false
<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&num::saturating::Saturating<i16>>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_rol_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi16;true;true;false;false
<i64 as ops::bit::Shr<&u64>>::shr;false;false;false;false
ops::function::impls::<impl ops::function::FnMut<A> for &F>::call_mut;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_shufflehi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_max_round_ss;true;true;true;false
<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&usize>>::bitor_assign;false;false;true;false
pin::Pin::<&'static mut T>::static_mut;false;true;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::leading_zeros;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::RemAssign<&i16>>::rem_assign;false;false;true;false
net::ip_addr::IpAddr::to_canonical;false;false;true;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fnmadd_ph;true;true;true;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<&'a num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::advance_by::advance;false;false;true;true
<i8 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_pd_mask;true;true;true;false
core_arch::x86::__m512i::as_u32x16;false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_min;false;true;false;false
num::dec2flt::decimal_seq::parse_decimal_seq;false;false;false;true
core_arch::x86::avx512vbmi2::_mm_mask_shrdi_epi16;true;true;false;false
<result::Result<T, E> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<core_arch::simd::u16x2 as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<str::iter::Lines<'a> as clone::Clone>::clone;false;false;true;false
io::borrowed_buf::BorrowedCursor::<'a>::uninit_mut;false;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_nth;false;false;true;true
core_arch::x86::avx512bw::_mm256_storeu_epi16;true;true;true;false
<str::iter::Chars<'_> as fmt::Debug>::fmt;false;false;true;false
iter::traits::iterator::Iterator::by_ref;false;false;true;false
num::<impl str::traits::FromStr for i8>::from_str;false;false;false;false
str::<impl default::Default for &mut str>::default;false;true;false;false
<i32 as iter::range::Step>::steps_between;false;false;false;false
panicking::panic_misaligned_pointer_dereference;false;true;false;false
fmt::num::<impl fmt::Debug for isize>::fmt;false;false;true;false
<hash::sip::SipHasher as default::Default>::default;false;false;false;false
core_arch::x86::avx2::_mm_broadcastsi128_si256;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtps_epi32;true;true;true;false
<u128 as ops::bit::Shl<u64>>::shl;false;false;false;false
<core_arch::simd::u16x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_ps;true;true;true;false
io::borrowed_buf::BorrowedBuf::<'data>::filled_mut;false;true;true;false
intrinsics::atomic_xsub_relaxed;true;false;true;false
num::<impl i128>::wrapping_sub_unsigned;false;false;false;false
num::<impl i128>::abs;false;false;false;false
<&u16 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<ops::control_flow::ControlFlow<B, C> as ops::try_trait::Try>::from_output;false;false;true;false
core_arch::x86::eflags::__readeflags;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fmadd_pch;true;true;true;false
intrinsics::fabsf32;true;false;true;false
<u32 as ops::bit::BitXor>::bitxor;false;false;false;false
<&num::saturating::Saturating<u8> as ops::bit::BitAnd<&num::saturating::Saturating<u8>>>::bitand;false;false;false;false
core_arch::simd::u8x64::splat;false;true;false;false
num::niche_types::NonZeroU8Inner::as_inner;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvtpd_epi64;true;true;true;false
<num::wrapping::Wrapping<i32> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<i32 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold::check;false;false;false;false
core_arch::x86::sse::_mm_min_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtsi128_si16;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_cmp_epu16_mask;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::Shr<&usize>>::shr;false;false;false;false
iter::adapters::intersperse::intersperse_fold;false;false;false;true
<i8 as ops::bit::Shr<&u16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_test_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_loadu_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_pd;true;true;true;false
time::Duration::try_from_secs_f32;false;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl;false;false;false;false
<&num::wrapping::Wrapping<usize> as ops::arith::Add<&num::wrapping::Wrapping<usize>>>::add;false;false;false;false
tuple::<impl cmp::PartialOrd for (X, W, V, U, T)>::partial_cmp;false;false;false;false
num::can_not_overflow;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign;false;false;true;false
num::<impl i64>::count_zeros;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_next;false;false;true;false
<usize as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
intrinsics::simd::simd_fexp;true;false;false;false
<i32 as ops::bit::Shl<u128>>::shl;false;false;false;false
core_arch::x86::avx512vbmi::_mm256_permutexvar_epi8;true;true;false;false
<&'a usize as ops::bit::Shl<i32>>::shl;false;false;false;false
<cell::Cell<T> as fmt::Debug>::fmt;false;false;true;false
num::<impl i64>::saturating_neg;false;false;false;false
<isize as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shldi_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_dbsad_epu8;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&num::wrapping::Wrapping<i128>>>::mul_assign;false;false;true;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<num::saturating::Saturating<u8> as ops::arith::DivAssign<&num::saturating::Saturating<u8>>>::div_assign;false;false;true;false
<fmt::builders::PadAdapter<'_, '_> as fmt::Write>::write_str;false;false;true;true
<&'a num::saturating::Saturating<u8> as ops::bit::BitXor<num::saturating::Saturating<u8>>>::bitxor;false;false;false;false
num::<impl isize>::overflowing_rem_euclid;false;false;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::iterator::Iterator>::count;false;false;true;true
<num::saturating::Saturating<isize> as ops::arith::AddAssign<isize>>::add_assign;false;false;true;false
num::<impl u8>::to_ascii_uppercase;false;false;false;false
<u32 as ops::bit::Shr<&u128>>::shr;false;false;false;false
core_arch::x86::__m512bh::as_i32x16;false;false;false;false
num::<impl u16>::is_utf16_surrogate;false;false;false;false
core_arch::x86::sse41::_mm_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvt_roundps_ph;true;true;true;false
<ops::range::RangeToInclusive<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;false;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmplt_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpge_epi32_mask;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<f64 as ops::arith::Rem<&f64>>::rem;false;false;true;false
range::RangeFrom::<Idx>::iter;false;false;true;false
f128::<impl f128>::is_sign_negative;false;false;true;false
num::<impl isize>::saturating_sub;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_shufflelo_epi16;true;true;false;false
f64::<impl f64>::to_bits;false;false;true;false
slice::iter::ArrayChunksMut::<'a, T, N>::new;false;false;true;false
str::iter::SplitNInternal::<'a, P>::next_back;false;false;true;false
time::Duration::is_zero;false;false;false;false
core_arch::x86::sse2::_mm_cmpge_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_broadcastq_epi64;true;true;false;false
<bstr::ByteStr as ops::index::Index<ops::range::RangeInclusive<usize>>>::index;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtx_roundph_ps;true;true;true;false
num::saturating::Saturating::<i128>::signum;false;false;false;false
ascii::EscapeDefault;false;false;true;false
<&'a num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr;false;false;false;false
<u128 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<hash::sip::SipHasher13 as hash::Hasher>::write_str;false;false;true;false
num::<impl u128>::strict_rem_euclid;false;false;false;false
core_arch::x86::avx512f::_mm512_sub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm_load_epi64;true;true;true;false
<i64 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_subs_epi8;true;true;false;false
<i128 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
num::<impl usize>::leading_ones;false;false;false;false
convert::num::<impl convert::TryFrom<i32> for i8>::try_from;false;false;false;false
<(A,) as iter::traits::collect::FromIterator<(EA,)>>::from_iter;false;false;false;false
core_arch::x86::avx::_mm256_setr_m128d;true;true;true;false
<panic::unwind_safe::AssertUnwindSafe<T> as ops::deref::Deref>::deref;false;false;true;false
core_arch::x86::sse::_mm_cmpord_ps;true;true;true;false
<num::wrapping::Wrapping<i128> as ops::arith::Add>::add;false;false;false;false
num::wrapping::Wrapping::<i32>::count_zeros;false;false;false;false
slice::index::into_slice_range;false;false;true;false
num::<impl u8>::checked_pow;false;false;false;true
<core_arch::x86::__m512 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_sub_pd;true;true;true;false
core_arch::x86::sse2::_mm_adds_epi8;true;true;false;false
<net::ip_addr::Ipv4Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_add_epi16;true;true;false;false
ascii::EscapeDefault::new;false;false;false;false
intrinsics::mir::Retag;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::nth;false;false;true;false
<option::Item<A> as fmt::Debug>::fmt;false;false;true;false
fmt::num::<impl fmt::Binary for u16>::fmt;false;false;true;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<&'a num::saturating::Saturating<i128> as ops::arith::Add<num::saturating::Saturating<i128>>>::add;false;false;false;false
num::wrapping::Wrapping::<u32>::is_power_of_two;false;false;false;false
num::nonzero::NonZero::<u32>::to_le;false;true;false;false
<f16 as convert::num::FloatToInt<u128>>::to_int_unchecked;true;true;true;false
num::flt2dec::estimate_max_buf_len;false;false;false;false
<&i16 as ops::arith::Rem<&i16>>::rem;false;false;false;false
<str::iter::EscapeDebug<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_cvtsepi64_epi8;true;true;false;false
char::EscapeDebugInner::Bytes;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_div_pd;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_setzero_epi32;true;false;false;false
<future::async_drop::AsyncDropOwning<T> as future::future::Future>::poll;false;true;true;false
<&num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem;false;false;false;false
<num::wrapping::Wrapping<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::index;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_storeu_epi8;true;true;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<u8, N>>::rem;false;true;false;false
core_arch::x86::__m128h::as_array;false;true;true;false
core_arch::x86::sse41::_mm_testz_si128;true;true;false;false
core_arch::x86::avx2::_mm256_srai_epi32;true;true;false;false
alloc::layout::Layout::align_to;false;false;false;false
<isize as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
core_arch::x86::avxneconvert::_mm_bcstnesh_ps;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::Shl<usize>>::shl;false;false;false;false
<(EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(H, G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_ps;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvtepu64_ps;true;true;false;false
<i32 as iter::range::Step>::backward_checked;false;false;false;false
ops::async_function::impls::<impl ops::async_function::AsyncFnOnce<A> for &'a mut F>::async_call_once;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_div_ph;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_testn_epi16_mask;true;true;false;false
<num::wrapping::Wrapping<i32> as iter::traits::accum::Sum>::sum;false;false;false;true
<fmt::Sign as fmt::Debug>::fmt;false;false;true;false
num::<impl u64>::div_euclid;false;false;false;false
<i128 as ops::arith::DivAssign<&i128>>::div_assign;false;false;true;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<u8, N>>::div;false;true;false;false
core_arch::x86::avx2::_mm256_unpacklo_epi64;true;true;false;false
<u16 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::simd::u64x2::extract;false;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i16, 32>>::from;false;false;false;false
core_arch::x86::avx512bw::_knot_mask64;true;false;false;false
sync::atomic::AtomicU64::from_ptr;true;true;true;false
<u128 as ops::bit::Shl<isize>>::shl;false;false;false;false
<u32 as ops::bit::BitXor<&u32>>::bitxor;false;false;false;false
sync::atomic::AtomicU32::from_ptr;true;true;true;false
fmt::num::imp::<impl u8>::_fmt;false;true;true;true
<str::pattern::CharSearcher<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_loadu_epi32;true;true;true;false
core_arch::x86_64::bt::_bittestandcomplement64;true;true;true;false
core_arch::simd::i32x16;false;false;false;false
core_arch::x86::avx512bw::_mm_reduce_mul_epi8;true;true;false;false
num::<impl usize>::overflowing_mul;false;false;false;false
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_nth_back;false;false;true;false
core_arch::x86::avx512cd::_mm_broadcastmw_epi32;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::max_unsigned;false;false;false;false
num::wrapping::Wrapping::<isize>::to_le;false;false;false;false
core_arch::x86::__m256h::as_f16x16;false;false;true;false
core_arch::x86::sse2::_mm_load_pd1;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign<usize>>::bitand_assign;false;false;true;false
sync::atomic::AtomicI64::update;false;false;true;true
<str::error::Utf8Error as error::Error>::description;false;false;false;false
num::<impl u32>::carrying_mul;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold::enumerate;false;false;false;false
<core_arch::simd::f16x16 as fmt::Debug>::fmt;false;false;true;false
ptr::const_ptr::<impl *const T>::copy_to;true;true;true;false
core_arch::x86::sse::_mm_comilt_ss;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fixupimm_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fmaddsub_pd;true;true;true;false
core_arch::x86_64::sse::_mm_cvtsi64_ss;true;true;true;false
<num::saturating::Saturating<u128> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
ptr::non_null::NonNull::<T>::offset_from;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
core_arch::x86::vaes::_mm256_aesdeclast_epi128;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u64> for core_simd::vector::Simd<u64, N>>::shl;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::AddAssign>::add_assign;false;false;true;false
num::<impl i128>::overflowing_shl;false;false;false;false
error::Request::<'a>::would_be_satisfied_by_ref_of;false;false;true;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
core_simd::masks::Mask::<T, N>::first_set;false;true;true;false
net::parser::<impl str::traits::FromStr for net::ip_addr::Ipv6Addr>::from_str;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_unpackhi_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtepi32_ph;true;true;false;false
<char::convert::ParseCharError as error::Error>::description;false;false;false;false
f16::<impl f16>::total_cmp;false;false;true;false
num::<impl u8>::overflowing_neg;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_expand_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmplt_epi64_mask;true;true;false;false
<usize as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx::_mm256_cvtsd_f64;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_min_epi16;true;true;false;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<u64, N>>::add;false;true;false;false
cmp::impls::<impl cmp::PartialEq for f32>::ne;false;false;true;false
num::saturating::Saturating::<u64>::is_power_of_two;false;false;false;false
num::<impl i16>::wrapping_sub_unsigned;false;false;false;false
convert::num::<impl convert::From<u16> for i32>::from;false;false;false;false
io::borrowed_buf::BorrowedBuf::<'data>::into_filled;false;true;true;false
core_arch::x86::avx512vnni::_mm_dpbsud_epi32;true;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<usize, 8>>::from;false;false;false;false
num::<impl u32>::checked_div;false;false;false;false
<&isize as ops::bit::Shl<&i128>>::shl;false;false;false;false
str::validations::next_code_point;true;true;true;false
core_arch::x86::avx512f::_mm512_load_si512;true;true;true;false
core_arch::x86::avx::_mm256_lddqu_si256;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u64> for &'lhs core_simd::vector::Simd<u64, N>>::shr;false;false;false;false
<&'a u64 as ops::bit::Shl<u128>>::shl;false;false;false;false
iter::traits::double_ended::DoubleEndedIterator::rfind::check;false;false;false;false
core_arch::simd::i64x8::extract;false;true;false;false
num::wrapping::Wrapping::<i128>::reverse_bits;false;false;false;false
slice::sort::stable::merge::MergeState::<T>::merge_up;true;true;true;true
mem::maybe_uninit::MaybeUninit::<T>::array_assume_init;true;false;false;false
core_arch::x86::avx512f::_mm_mask_roundscale_sd;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_subs_epu8;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_packs_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_getexp_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_roundscale_ph;true;true;true;false
<(dyn any::Any + 'static)>::downcast_ref;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_store_epi32;true;true;true;false
ptr::alignment::Alignment::new_unchecked::precondition_check;false;false;false;false
num::<impl u32>::from_le;false;false;false;false
ops::control_flow::ControlFlow::<R, <R as ops::try_trait::Try>::Output>::from_try;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_xor;false;true;false;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i16>>::from;false;true;false;false
core_arch::x86::avx512f::_mm_scalef_ps;true;true;true;false
<f64 as ops::arith::RemAssign<&f64>>::rem_assign;false;false;true;false
<u8 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_max_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_loadu_epi32;true;true;true;false
num::<impl u128>::from_ascii_radix;false;false;false;true
<[T] as slice::CloneFromSpec<T>>::spec_clone_from;false;false;true;true
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
<isize as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
num::<impl u16>::unchecked_shl;true;false;false;false
ffi::va_list::VaListImpl::<'f>::with_copy;true;true;true;false
<&u128 as ops::arith::Sub<&u128>>::sub;false;false;false;false
<core_arch::simd::m32x8 as fmt::Debug>::fmt;false;false;true;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<i8, N>>::neg;false;true;false;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
mem::variant_count;false;false;false;false
num::bignum::tests::Big8x3::mul_digits::mul_inner;false;false;true;true
<str::lossy::Utf8Chunk<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm512_shuffle_i32x4;true;true;false;false
num::<impl u64>::checked_pow;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_cvt_roundps_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_and_epi8;true;true;false;false
<u64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
<char::convert::CharErrorKind as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_xor_ps;true;true;true;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
f64::<impl f64>::is_nan;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::to_int_unchecked;true;true;true;false
sync::atomic::AtomicI16::from_ptr;true;true;true;false
tuple::<impl cmp::PartialEq for (B, A, Z, Y, X, W, V, U, T)>::ne;false;false;false;false
iter::traits::iterator::Iterator::try_for_each::call;false;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitOr<&net::ip_addr::Ipv4Addr>>::bitor;false;false;false;false
ptr::const_ptr::<impl *const T>::wrapping_byte_sub;false;false;true;false
<&usize as ops::bit::Shr<&i64>>::shr;false;false;false;false
intrinsics::powf32;true;false;true;false
<u16 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<u32 as ops::bit::Shl<u64>>::shl;false;false;false;false
intrinsics::rintf32;true;false;true;false
num::nonzero::NonZero::<u8>::ilog2;false;false;false;false
"array::equality::<impl cmp::PartialEq<[U; N]> for &mut [T]>::ne";false;false;true;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<i64, N>>::bitor;false;true;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::count_zeros;false;false;false;false
core_arch::x86::tbm::_bextri_u32;true;true;false;false
core_arch::x86::avx512fp16::_mm_roundscale_ph;true;true;true;false
core_arch::x86::avx2::_mm256_max_epi8;true;true;false;false
num::bignum::Big32x40::from_u64;false;false;false;true
<&num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div;false;false;false;false
num::<impl i32>::saturating_abs;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::arith::Mul<&num::wrapping::Wrapping<i16>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_cvt_roundepu32_ps;true;true;false;false
core_arch::x86::avx512fp16::_mm512_zextph128_ph512;true;true;true;false
num::<impl i128>::min_value;false;false;false;false
<num::niche_types::Nanoseconds as fmt::Debug>::fmt;false;false;true;false
<u8 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm256_maskz_cvtps_epi64;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u32>>>::bitor_assign;false;false;true;false
sync::atomic::AtomicI32::get_mut;false;false;true;false
core_arch::x86::__m512h::as_array;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_extractf32x4_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i16> for core_simd::vector::Simd<i16, N>>::shl;false;false;false;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::count_ones;false;true;false;false
num::<impl i16>::isqrt;false;false;false;false
intrinsics::rotate_right;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_and;false;true;false;false
net::socket_addr::SocketAddrV6::scope_id;false;false;true;false
<u64 as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::DivAssign<&u8>>::div_assign;false;false;true;false
core_arch::simd::i16x32;false;false;false;false
hash::Hasher::write_isize;false;false;true;false
<&'a num::saturating::Saturating<u128> as ops::arith::Rem<num::saturating::Saturating<u128>>>::rem;false;false;false;false
core_arch::x86_64::bmi::_mm_tzcnt_64;true;false;false;false
<core_arch::simd::f32x8::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_setzero_ps;true;false;false;false
f128::<impl f128>::to_int_unchecked;true;true;true;false
num::wrapping::Wrapping::<i8>::pow;false;false;false;false
num::<impl i128>::to_le_bytes;false;false;false;false
core_arch::simd::i64x2::extract;false;true;false;false
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u16>> for u16>::rem_assign;false;false;true;false
core_arch::simd::i8x2::splat::JustOne;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitXor>::bitxor;false;false;false;false
<char::convert::CharErrorKind as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
slice::sort::shared::smallsort::small_sort_general_with_scratch;false;true;true;true
<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&u8>>::rem_assign;false;false;true;false
sync::atomic::AtomicIsize::fetch_max;false;true;true;false
<result::IterMut<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_min_round_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmadd_pch;true;true;true;false
<char::decode::DecodeUtf16<I> as clone::Clone>::clone;false;false;true;false
num::<impl i128>::saturating_pow;false;false;false;false
fmt::builders::debug_list_new;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_andnot_ps;true;true;true;false
<f128 as ops::arith::Mul>::mul;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<ffi::c_str::CStr as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::double_ended::DoubleEndedIterator>::next_back::find;false;false;true;false
core_arch::x86::avx512f::_mm256_loadu_epi64;true;true;true;false
<&num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem;false;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::to_usize;false;false;false;false
<num::niche_types::NonZeroU16Inner as clone::Clone>::clone;false;false;false;false
<f128 as ops::arith::RemAssign<&f128>>::rem_assign;false;false;true;false
num::<impl isize>::strict_sub_unsigned;false;false;false;false
core_arch::simd::f16x16::new;false;false;true;false
ptr::const_ptr::<impl *const T>::wrapping_byte_offset;false;false;true;false
<net::parser::AddrParseError as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtps_epu32;true;true;true;false
<result::Result<T, E> as iter::traits::accum::Sum<result::Result<U, E>>>::sum;false;false;false;false
core_arch::simd::i32x4::new;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fnmsub_ph;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i16> for core_simd::vector::Simd<i16, N>>::shr;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&u64>>::sub_assign;false;false;true;false
ptr::unique::Unique::<T>::cast;false;false;true;false
num::<impl u16>::count_ones;false;false;false;false
<u16 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
core_arch::simd::u32x2::from_array;false;false;false;false
<i16 as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_permutexvar_epi64;true;true;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cmp_ph_mask;true;true;true;false
num::dec2flt::lemire::compute_product_approx;false;false;false;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::nth;false;false;true;false
fmt::Arguments::<'a>::new_const;false;false;false;false
core_arch::x86::avx512f::_mm512_i32loscatter_epi64;true;true;true;false
core_simd::ops::assign::<impl ops::bit::BitXorAssign<U> for core_simd::vector::Simd<T, N>>::bitxor_assign;false;false;true;false
sync::atomic::AtomicIsize::fetch_sub;false;true;true;false
intrinsics::simd::simd_with_exposed_provenance;true;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_mullo_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm_mask_cvtepu64_ps;true;true;true;false
intrinsics::mir::Unreachable::panic_cold_explicit;false;false;false;false
core_arch::x86::avx::_mm256_stream_si256;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fnmadd_round_ss;true;true;true;false
core_arch::x86::avx512cd::_mm_mask_lzcnt_epi64;true;true;false;false
slice::iter::RChunksExact::<'a, T>::remainder;false;false;true;false
num::<impl u128>::checked_next_power_of_two;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<isize>>>::bitand_assign;false;false;true;false
cmp::impls::<impl cmp::Ord for bool>::clamp;false;false;false;false
core_arch::x86::avx512bw::_load_mask32;true;true;true;false
num::<impl u32>::to_be_bytes;false;false;false;false
core_arch::x86::avxneconvert::_mm_cvtneeph_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_scalef_round_ps;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
num::<impl u64>::checked_ilog2;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_mul_pch;true;true;true;false
<i16 as ops::bit::Shl<&isize>>::shl;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeFrom<A>>::nth;false;false;true;false
result::Result::<result::Result<T, E>, E>::flatten;false;false;true;false
<&i128 as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmsubadd_round_ps;true;true;true;false
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;true
<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_sqrt_round_ps;true;true;true;false
<slice::iter::Split<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_andnot_ps;true;true;true;false
<core_simd::masks::Mask<isize, N> as convert::From<core_simd::masks::Mask<i32, N>>>::from;false;false;true;false
core_arch::x86::sse2::_mm_shuffle_epi32;true;true;false;false
<(dyn error::Error + marker::Send + marker::Sync + 'static)>::downcast_mut;false;false;true;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::Searcher<'a>>::next_reject;false;false;true;false
<core_arch::simd::i32x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
sync::atomic::AtomicU64::update;false;false;true;true
<f16 as convert::num::FloatToInt<u8>>::to_int_unchecked;true;true;true;false
num::nonzero::NonZero::<u8>::ilog10;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl;false;false;false;false
num::<impl u128>::isqrt;false;true;false;false
<usize as ops::arith::MulAssign<&usize>>::mul_assign;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::index_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_srlv_epi64;true;true;false;false
<num::saturating::Saturating<i32> as ops::arith::Mul>::mul;false;false;false;false
<iter::sources::once::Once<T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::Mul>::mul;false;false;false;false
<future::ready::Ready<T> as future::future::Future>::poll;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi64;true;true;false;false
<i16 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i64gather_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_undefined;true;false;false;false
result::Result::<T, E>::is_ok;false;false;true;false
intrinsics::simd::simd_reduce_min;true;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&num::wrapping::Wrapping<u64>>>::add_assign;false;false;true;false
ops::index_range::IndexRange::len;false;false;true;false
core_arch::x86::sse2::_mm_clflush;true;true;true;false
<core_arch::simd::i64x4 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_epi16;true;true;false;false
f64::<impl f64>::min;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_permutex2var_ps;true;true;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::count;false;false;true;true
core_arch::x86::avx512bw::_mm_maskz_packus_epi16;true;true;false;false
sync::atomic::AtomicI8::fetch_nand;false;true;true;false
escape::escape_ascii;false;true;false;false
core_arch::x86::kl::_mm_aesencwide128kl_u8;true;true;true;false
char::convert::<impl convert::From<char> for u64>::from;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i128>::ge;false;false;false;false
<u32 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
ptr::unique::Unique::<T>::dangling;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::any;false;false;true;true
<slice::iter::IterMut<'a, T> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
num::<impl u8>::overflowing_add_signed;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_fixupimm_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_loadu_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fnmadd_ph;true;true;true;false
core_arch::x86_64::tbm::_blsic_u64;true;false;false;false
core_arch::x86::avx512vnni::_mm256_dpbusd_avx_epi32;true;true;false;false
tuple::<impl default::Default for (Z, Y, X, W, V, U, T)>::default;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i128>::le;false;false;false;false
<i32 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<isize as ops::bit::Shr<&i32>>::shr;false;false;false;false
<core_arch::simd::m8x32 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_max_ps;true;true;true;false
core_arch::x86::sse2::_mm_comieq_sd;true;true;true;false
<i64 as ops::bit::BitAnd<&i64>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_move_sh;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_xor;false;true;false;false
<&i128 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<isize as pat::RangePattern>::sub_one;false;false;false;false
<fmt::FormattingOptions as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_storeu_epi32;true;true;true;false
<u32 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmpeq_epu64_mask;true;true;false;false
<&u64 as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_reduce_max_epi8;true;true;false;false
num::nonzero::NonZero::<u64>::isolate_least_significant_one;false;true;false;false
cell::lazy::LazyCell::<T, F>::force_mut;false;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_abs_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundepu32_ps;true;true;false;false
<f16 as convert::num::FloatToInt<i32>>::to_int_unchecked;true;true;true;false
num::<impl u64>::saturating_sub;false;false;false;false
core_arch::x86::avx512f::_mm512_i32loscatter_pd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i64>>::try_from;false;true;false;false
num::<impl u16>::max_value;false;false;false;false
core_arch::x86::pclmulqdq::_mm_clmulepi64_si128;true;true;false;false
<usize as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<[u8] as num::dec2flt::common::ByteSlice>::offset_from;false;false;false;false
fmt::Arguments::<'a>::as_statically_known_str;false;false;true;false
core_arch::x86::avx::_mm256_and_ps;true;true;true;false
core_arch::x86::avx::_mm256_maskstore_pd;true;true;true;false
<&mut H as hash::Hasher>::write;false;false;true;false
<iter::adapters::GenericShunt<'_, I, R> as iter::traits::iterator::Iterator>::fold;false;false;true;true
<&u64 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_undefined_si128;true;false;false;false
<&'a num::saturating::Saturating<i16> as ops::arith::Rem<num::saturating::Saturating<i16>>>::rem;false;false;false;false
intrinsics::atomic_cxchg_relaxed_seqcst;true;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmplt_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cmul_round_pch;true;true;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as fmt::Debug>::fmt;false;false;true;false
intrinsics::discriminant_value;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvt_roundsh_ss;true;true;true;false
num::<impl usize>::checked_ilog;false;false;false;true
num::wrapping::Wrapping::<usize>::next_power_of_two;false;false;false;false
<u32 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm256_maskz_extracti64x2_epi64;true;true;false;false
<u128 as ops::bit::Shl<i128>>::shl;false;false;false;false
<&num::saturating::Saturating<u32> as ops::bit::BitOr<&num::saturating::Saturating<u32>>>::bitor;false;false;false;false
core_arch::x86::ssse3::_mm_mulhrs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtx_roundps_ph;true;true;true;false
intrinsics::bswap;false;false;false;false
core_arch::x86::avx512f::_mm512_ror_epi64;true;true;false;false
core_arch::simd::m16x8::splat;false;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmadd_pch;true;true;true;false
<core_arch::x86::__m128d::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 2>> for core_arch::x86::__m128i>::from;false;false;false;false
core_arch::x86::cpuid::__cpuid;true;true;false;false
<u32 as ops::arith::Add>::add;false;false;false;false
<&'a i64 as ops::bit::Shr<u32>>::shr;false;false;false;false
num::<impl u32>::unchecked_sub;true;false;false;false
<option::Option<T> as cmp::PartialEq>::eq;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::Sub>::sub;false;false;false;false
net::ip_addr::Ipv4Addr::octets;false;false;false;false
num::<impl u64>::saturating_pow;false;false;false;false
<range::Range<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
<&u16 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<i16 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
core_arch::x86::avx::_mm256_blend_pd;true;true;true;false
core_arch::x86::avx2::_mm256_i32gather_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_or_epi8;true;true;false;false
<num::saturating::Saturating<i128> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpbssds_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_castph_si128;true;false;true;false
core_arch::x86::avx512f::_mm512_and_epi32;true;true;false;false
<i32 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_getexp_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_abs_ph;true;true;true;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::<impl u8>::checked_mul;false;false;false;false
num::<impl i128>::checked_shr;false;true;false;false
<cell::Cell<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
intrinsics::write_via_move;true;false;true;false
num::<impl u8>::reverse_bits;false;false;false;false
<u128 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<str::iter::Bytes<'a> as fmt::Debug>::fmt;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::copy_from_slice;false;false;true;false
<slice::iter::RChunksExact<'a, T> as clone::Clone>::clone;false;false;true;false
"tuple::<impl convert::From<[T; 1]> for (T,)>::from";false;false;false;false
core_arch::x86::avx512f::_mm512_mask_scalef_round_ps;true;true;true;false
<(D, C, B, A, Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_ror_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_xor_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmp_epi32_mask;true;true;false;false
<&num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul;false;false;false;false
slice::sort::stable::driftsort_main;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtps_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_max_epi8;true;true;false;false
core_arch::x86::avx2::_mm256_add_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_cvt_roundps_epu32;true;true;true;false
num::wrapping::Wrapping::<isize>::rotate_left;false;false;false;false
<&'a u8 as ops::bit::Shl<u8>>::shl;false;false;false;false
<i16 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::slice_as_ptr;false;false;false;false
fmt::num::<impl fmt::Display for i128>::fmt;false;false;true;false
core_arch::simd::m16x8::new;false;false;false;false
<&num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_ternarylogic_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_subs_epi16;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u32, 16>>::from;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_max_epi32;true;true;false;false
<cell::once::OnceCell<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::sse2::_mm_pause;true;true;false;false
num::<impl i128>::strict_pow;false;false;false;true
num::<impl i64>::to_ne_bytes;false;false;false;false
<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_unchecked;true;true;false;false
num::<impl isize>::to_ne_bytes;false;false;false;false
iter::traits::iterator::Iterator::step_by;false;false;false;false
<i64 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<num::wrapping::Wrapping<isize> as iter::traits::accum::Product>::product;false;false;false;true
<num::wrapping::Wrapping<isize> as ops::arith::AddAssign>::add_assign;false;false;true;false
<i8 as ops::bit::Not>::not;false;false;false;false
cell::Cell::<T>::set;false;false;true;false
<i64 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::Rem>::rem;false;false;false;false
num::<impl u16>::count_zeros;false;false;false;false
core_arch::x86::avx::_mm256_mul_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i64> for &'lhs core_simd::vector::Simd<i64, N>>::shl;false;false;false;false
<core_arch::simd::i8x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
f16::<impl f16>::to_bits;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<i32>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_fixupimm_round_pd;true;true;true;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<f128 as ops::arith::Add>::add;false;false;true;false
<core_arch::simd::i64x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::simd::i8x64::splat::JustOne;false;false;false;false
<pin::Pin<Ptr> as cmp::PartialEq<pin::Pin<Q>>>::ne;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_test_epi8_mask;true;true;false;false
<&num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::write;false;true;true;false
num::<impl u32>::overflowing_add;false;false;false;false
num::dec2flt::biased_fp_to_float;false;false;false;false
num::<impl i64>::ilog10;false;false;false;false
<result::Result<T, E> as clone::Clone>::clone_from;false;false;true;false
<str as fmt::Display>::fmt;false;false;true;false
intrinsics::exp2f128;true;false;true;false
<(U, T) as fmt::Debug>::fmt;false;false;true;false
<slice::iter::Split<'_, T, P> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx2::_mm256_unpacklo_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi32;true;true;false;false
num::fmt::Part::Zero;false;false;false;false
str::iter::SplitWhitespace::<'a>::remainder;false;false;true;false
<&'a usize as ops::bit::BitAnd<usize>>::bitand;false;false;false;false
num::<impl i16>::unchecked_sub;true;false;false;false
fmt::num::imp::<impl fmt::LowerExp for i32>::fmt;false;false;true;false
num::<impl u8>::checked_div;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::is_sorted;false;false;true;false
sync::atomic::atomic_umin;true;true;true;false
<str::lossy::Debug<'_> as fmt::Debug>::fmt;false;true;true;true
core_arch::x86::avx512bw::_mm_maskz_alignr_epi8;true;true;false;false
iter::sources::repeat_with::repeat_with;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi32;true;true;false;false
<T as slice::sort::stable::quicksort::IsFreeze>::is_freeze;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXor>::bitxor;false;false;false;false
<core_arch::simd::u32x4 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_cmpgt_epi64_mask;true;true;false;false
<&'a num::wrapping::Wrapping<i128> as ops::arith::Add<num::wrapping::Wrapping<i128>>>::add;false;false;false;false
num::<impl u8>::is_ascii_lowercase;false;false;false;false
ascii::ascii_char::AsciiChar::from_u8_unchecked;true;false;false;false
num::<impl i64>::checked_shl;false;true;false;false
<(dyn any::Any + 'static)>::downcast_mut;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmpneq_epi64_mask;true;true;false;false
str::iter::CharIndices::<'a>::as_str;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor;false;false;false;false
<u8 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_mov_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_scalef_ps;true;true;true;false
slice::<impl [T]>::as_rchunks_mut;false;true;true;false
fmt::FormattingOptions::sign;false;false;true;false
num::nonzero::NonZero::<i16>::overflowing_neg;false;true;false;false
num::wrapping::Wrapping::<i32>::abs;false;false;false;false
slice::rotate::ptr_rotate_swap;true;true;true;true
ptr::mut_ptr::<impl cmp::PartialEq for *mut T>::eq;false;false;true;false
<&'a i64 as ops::arith::Add<i64>>::add;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::fold;false;false;false;true
<&'a u128 as ops::bit::Shl<isize>>::shl;false;false;false;false
<&'b [char] as str::pattern::Pattern>::is_prefix_of;false;false;false;false
core_arch::x86::avx512f::_mm_mask_min_epi64;true;true;false;false
num::<impl isize>::wrapping_pow;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_rcp14_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpnlt_ps_mask;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fnmadd_round_ss;true;true;true;false
str::iter::SplitInternal::<'a, P>::next_inclusive;false;true;true;false
core_arch::x86::vpclmulqdq::_mm512_clmulepi64_epi128;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::MulAssign<&num::saturating::Saturating<isize>>>::mul_assign;false;false;true;false
num::<impl u16>::to_le;false;false;false;false
<u64 as ops::arith::DivAssign>::div_assign;false;false;true;false
num::nonzero::NonZero::<u8>::trailing_zeros;false;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::index;false;false;false;false
core_arch::x86::avx512f::_mm_mask_unpacklo_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi32;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_min;false;true;false;false
core_arch::x86::avx512bw::_mm_mask_srai_epi16;true;true;false;false
<u32 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
core_arch::x86::bmi1::_tzcnt_u32;true;false;false;false
core_arch::x86::avx512f::_mm_mask_load_sd;true;true;true;false
<&mut H as hash::Hasher>::write_i128;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmp_round_pd_mask;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 8>> for core_arch::x86::__m512i>::from;false;false;false;false
num::<impl isize>::strict_neg;false;false;false;false
<&u64 as ops::bit::Shr<&i32>>::shr;false;false;false;false
intrinsics::atomic_cxchgweak_seqcst_relaxed;true;false;true;false
core_arch::simd::i64x4;false;false;false;false
<u128 as ops::bit::Shr<&u8>>::shr;false;false;false;false
num::<impl i64>::overflowing_shr;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::DivAssign<&num::saturating::Saturating<i64>>>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_fmaddsub_ph;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmple_epu8_mask;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<isize as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<char::ToLowercase as iter::traits::iterator::Iterator>::next;false;false;true;false
sync::atomic::AtomicU8::fetch_min;false;true;true;false
core_arch::x86::avx512f::_mm512_cmpge_epi32_mask;true;true;false;false
core_arch::x86::kl::_mm_aesenc128kl_u8;true;true;true;false
<i64 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_min_pd;true;true;true;false
<iter::adapters::filter_map::FilterMap<I, F> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_min_ph;true;true;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::eq;false;false;false;false
<&num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor;false;false;false;false
num::<impl usize>::saturating_sub_signed;false;false;false;false
<f64 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_f32x4;true;true;true;false
<u16 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::MulAssign>::mul_assign;false;false;true;false
num::<impl isize>::checked_add_unsigned;false;false;false;false
<&'a u32 as ops::bit::Shl<i8>>::shl;false;false;false;false
num::nonzero::NonZero::<i8>::rotate_right;false;true;false;false
<core_arch::simd::u64x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_cmple_epu64_mask;true;true;false;false
num::wrapping::Wrapping::<isize>::from_be;false;false;false;false
<u64 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
ptr::non_null::NonNull::<T>::dangling;false;false;false;false
iter::adapters::skip::Skip::<I>::new;false;false;false;false
<num::niche_types::NonZeroI16Inner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_extracti32x4_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_round_ss;true;true;true;false
<i128 as iter::range::Step>::steps_between;false;false;false;false
num::<impl u8>::ascii_change_case_unchecked;false;false;false;false
<slice::sort::unstable::quicksort::GapGuard<T> as ops::drop::Drop>::drop;false;true;true;false
tuple::<impl cmp::PartialOrd for (Z, Y, X, W, V, U, T)>::gt;false;false;false;false
ptr::const_ptr::<impl *const T>::to_raw_parts;false;false;true;false
core_arch::x86::avx512bw::_mm512_kunpackd;true;false;false;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmp_ps_mask;true;true;true;false
ffi::c_str::CStr::from_ptr;true;true;true;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_sra_epi64;true;true;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul;false;false;false;false
slice::ascii::<impl [u8]>::is_ascii;false;false;false;false
core_arch::x86_64::adx::_addcarry_u64;true;true;true;false
ptr::mut_ptr::<impl *mut [T]>::split_at_mut_unchecked;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&u16>>::div_assign;false;false;true;false
<i32 as ops::bit::BitXor>::bitxor;false;false;false;false
ptr::alignment::Alignment::as_nonzero;false;false;false;false
ptr::const_ptr::<impl *const T>::byte_offset_from_unsigned;true;true;true;false
<num::bignum::tests::Big8x3 as cmp::PartialOrd>::partial_cmp;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Sub<&num::wrapping::Wrapping<u64>>>::sub;false;false;false;false
<iter::adapters::cycle::Cycle<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cmp_epi64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_reduce_mul_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_add_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_reduce_pd;true;true;true;false
<fmt::FormattingOptions as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtxph_ps;true;true;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<f64, N>>::add;false;true;true;false
intrinsics::round_ties_even_f128;false;false;true;false
num::wrapping::Wrapping::<i64>::reverse_bits;false;false;false;false
num::<impl u16>::pow;false;false;false;true
<&i32 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::simd::i8x32::splat;false;true;false;false
core_arch::x86_64::avx512f::_mm_cvtt_roundss_i64;true;true;true;false
<isize as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi16;true;true;false;false
intrinsics::mir::Checked::panic_cold_explicit;false;false;false;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::get_unchecked;true;false;true;false
core_arch::x86::sse41::_mm_cvtepi8_epi32;true;true;false;false
<&num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add;false;false;false;false
<&num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg;false;false;false;false
<&i128 as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_i32scatter_epi64;true;true;true;false
num::<impl usize>::to_be;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_cvttpd_epi64;true;true;true;false
num::<impl u8>::overflowing_div;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<u64>>::mul_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_nth_back;false;false;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
<str::iter::SplitAsciiWhitespace<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<u128 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<isize as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
bstr::<impl convert::AsRef<bstr::ByteStr> for str>::as_ref;false;false;false;false
<str::IsWhitespace as ops::function::FnOnce<(char,)>>::call_once;false;false;false;false
<u64 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
core_arch::simd::i64x2::from_array;false;false;false;false
core_arch::x86::avx512f::_mm_fnmadd_round_sd;true;true;true;false
<f128 as ops::arith::Div>::div;false;false;true;false
core_arch::x86::avx512dq::_kand_mask8;true;false;false;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_round_sch;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_max_epi8;true;true;false;false
<future::async_drop::Noop as clone::Clone>::clone;false;false;false;false
<sync::atomic::AtomicBool as convert::From<bool>>::from;false;false;false;false
<core_arch::simd::i64x1::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_srli_epi16;true;true;false;false
intrinsics::atomic_or_acquire;true;false;true;false
<u64 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cmp_epi32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi8;true;true;false;false
option::Option::<T>::inspect;false;false;true;false
core_arch::x86::avx512bw::_mm512_subs_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_or_pd;true;true;true;false
<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<i128>>::bitor_assign;false;false;true;false
cmp::impls::<impl cmp::Ord for u16>::cmp;false;false;false;false
<i8 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi64;true;true;false;false
core_simd::select::<impl core_simd::masks::Mask<T, N>>::select;false;true;true;false
<&'a i8 as ops::bit::Shl<i32>>::shl;false;false;false;false
num::<impl i64>::cast_unsigned;false;false;false;false
result::Result::<T, E>::as_deref;false;false;true;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::last;false;false;true;true
cmp::min_by;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_madd_epi16;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu32;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
num::nonzero::NonZero::<i16>::rotate_right;false;true;false;false
<task::wake::ContextBuilder<'a> as fmt::Debug>::fmt;false;false;true;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
char::methods::<impl char>::is_ascii_alphanumeric;false;false;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<isize, 2>>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm_fnmadd_sh;true;true;true;false
<ops::range::Bound<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::gfni::_mm_maskz_gf2p8affine_epi64_epi8;true;true;false;false
<&i8 as ops::bit::Shr<&u8>>::shr;false;false;false;false
ptr::mut_ptr::<impl *mut T>::replace;true;true;true;false
<i8 as ops::bit::Shl<i16>>::shl;false;false;false;false
<str::error::Utf8Error as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtps_epi64;true;true;true;false
num::<impl u8>::strict_rem_euclid;false;false;false;false
<&i32 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<u8 as pat::RangePattern>::sub_one;false;false;false;false
num::nonzero::NonZero::<u32>::count_ones;false;true;false;false
<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_extractf64x2_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtepu32_ph;true;true;false;false
core_arch::x86::avx::_mm256_cvtpd_epi32;true;true;true;false
"<&[char; N] as str::pattern::MultiCharEq>::matches";false;false;true;false
core_arch::x86::avx512f::_mm256_mask_div_ps;true;true;true;false
slice::memchr::memchr_aligned::compiletime;false;false;false;false
core_arch::x86::avx512f::_mm256_cvtusepi64_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_ps;true;true;true;false
<i16 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
char::from_u32;false;false;false;false
num::<impl u32>::to_le_bytes;false;false;false;false
core_arch::x86::avx512bf16::_mm_maskz_cvtneps_pbh;true;true;true;false
num::<impl u16>::checked_sub;false;false;false;false
<iter::adapters::intersperse::IntersperseWith<I, G> as iter::traits::iterator::Iterator>::fold;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_sll_epi64;true;true;false;false
<i128 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<u64 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::to_usize;false;false;false;false
<i128 as ops::bit::Shr<&u128>>::shr;false;false;false;false
core_arch::x86::sse42::_mm_cmpestro;true;true;false;false
num::<impl u128>::from_ascii;false;false;false;false
core_arch::x86::avx512bw::_mm256_reduce_max_epu8;true;true;false;false
<iter::adapters::inspect::Inspect<I, F> as clone::Clone>::clone;false;false;true;false
core_arch::simd::f64x1::new;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_round_ph;true;true;true;false
<sync::atomic::AtomicI8 as convert::From<i8>>::from;false;false;false;false
<&u16 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_arch::x86::avx2::_mm256_adds_epu16;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_cvtepi8_epi16;true;true;false;false
net::ip_addr::Ipv4Addr::from_octets;false;false;false;false
num::<impl isize>::ilog2;false;false;false;false
<sync::exclusive::Exclusive<F> as ops::function::FnOnce<Args>>::call_once;false;false;false;false
f32::<impl f32>::from_be_bytes;false;false;false;false
num::<impl u8>::saturating_pow;false;false;false;false
core_arch::x86::avx512f::_mm_fixupimm_ps;true;true;true;false
core_arch::x86::__m128bh::as_array;false;true;false;false
num::nonzero::NonZero::<u16>::saturating_pow;false;true;false;false
core_arch::x86::avx512bw::_mm512_cmplt_epu8_mask;true;true;false;false
convert::num::<impl convert::From<f64> for f128>::from;false;false;true;false
<&u128 as ops::arith::Rem<&u128>>::rem;false;false;false;false
<i64 as ops::bit::Shr<&u16>>::shr;false;false;false;false
net::ip_addr::Ipv6Addr::segments;false;false;false;false
num::<impl i32>::overflowing_add;false;false;false;false
<i128 as ops::bit::BitXor>::bitxor;false;false;false;false
<(E, D, C, B, A, Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
<&num::wrapping::Wrapping<u8> as ops::bit::BitOr<&num::wrapping::Wrapping<u8>>>::bitor;false;false;false;false
<cell::lazy::LazyCell<T, F> as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::f16x4 as fmt::Debug>::fmt;false;false;true;false
future::async_drop::either;true;false;true;false
<isize as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
convert::num::<impl convert::TryFrom<u64> for i64>::try_from;false;false;false;false
<marker::PhantomData<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_range_pd;true;true;true;false
mem::maybe_uninit::MaybeUninit::<T>::assume_init_mut;true;true;true;false
core_arch::x86::sse3::_mm_movehdup_ps;true;true;true;false
sync::atomic::AtomicI32::get_mut_slice;false;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
f32::<impl f32>::min;false;false;true;false
<num::dec2flt::decimal::Decimal as default::Default>::default;false;false;false;false
num::<impl u128>::one_less_than_next_power_of_two;false;true;false;false
<range::Range<Idx> as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<u64> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<u64>>>::product;false;false;false;true
core_arch::x86::avx2::_mm256_min_epi32;true;true;false;false
<&i16 as ops::arith::Add<&i16>>::add;false;false;false;false
slice::index::try_range;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask3_fcmadd_pch;true;true;true;false
core_arch::simd::u16x2::splat;false;true;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<f32, N>>::div;false;true;true;false
<&u128 as ops::bit::Shr<&u128>>::shr;false;false;false;false
sync::atomic::AtomicU16::from_ptr;true;true;true;false
num::<impl i128>::reverse_bits;false;false;false;false
fmt::<impl convert::From<fmt::rt::Alignment> for option::Option<fmt::Alignment>>::from;false;false;false;false
str::pattern::simd_contains;false;false;false;true
core_arch::x86::avx512f::_mm512_min_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cmul_pch;true;true;true;false
core_arch::simd::f32x8::splat;false;true;true;false
char::EscapeDefault::backslash;false;false;false;false
core_arch::x86::avx512f::_mm256_rolv_epi64;true;true;false;false
sync::atomic::AtomicUsize::as_ptr;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epu64;true;true;true;false
intrinsics::aggregate_raw_ptr;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_or;false;true;false;false
char::methods::<impl char>::is_ascii_lowercase;false;false;false;false
num::<impl u64>::unchecked_shl::precondition_check;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
num::wrapping::Wrapping::<usize>::from_be;false;false;false;false
num::<impl u8>::div_floor;false;false;false;false
intrinsics::mir::Offset::panic_cold_explicit;false;false;false;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<u32 as ops::bit::Shr<i16>>::shr;false;false;false;false
core_arch::x86::__m128i;false;false;false;false
intrinsics::fmaf64;true;false;true;false
<u64 as ops::bit::Shl<isize>>::shl;false;false;false;false
<isize as ops::bit::Shr<&i128>>::shr;false;false;false;false
sync::atomic::AtomicI32::fetch_nand;false;true;true;false
<num::saturating::Saturating<i64> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_set4_epi32;true;true;false;false
num::nonzero::NonZero::<i128>::overflowing_abs;false;true;false;false
num::<impl u64>::strict_sub;false;false;false;false
<i16 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
fmt::builders::DebugMap::<'a, 'b>::finish;false;false;true;false
<task::wake::Waker as clone::Clone>::clone;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_broadcastq_epi64;true;true;false;false
ptr::null;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_reduce_ps;true;true;true;false
num::<impl u128>::from_le;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu64;true;true;true;false
<u64 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
slice::sort::stable::sort;false;false;true;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get;false;true;true;false
cell::lazy::State::Init;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold::enumerate;false;false;false;false
num::nonzero::NonZero::<i32>::checked_neg;false;true;false;false
num::flt2dec::strategy::dragon::div_rem_upto_16;false;false;true;false
core_arch::simd::u8x64::from_array;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx512f::_mm_cvttss_i32;true;true;true;false
<&'a num::saturating::Saturating<u128> as ops::arith::Mul<num::saturating::Saturating<u128>>>::mul;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_try_fold::nth;false;false;true;false
core_arch::x86::avx2::_mm256_permute4x64_epi64;true;true;false;false
ffi::c_str::Bytes::<'a>::is_empty;false;true;true;false
slice::<impl [T]>::rsplitn_mut;false;false;true;false
sync::atomic::AtomicI64::store;false;true;true;false
core_arch::x86::avx512bw::_mm_mask_srlv_epi16;true;true;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_mov_epi8;true;true;false;false
<marker::variance::PhantomContravariant<T> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512bw::_mm512_bslli_epi128::mask;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi16;true;true;true;false
<num::dec2flt::ParseFloatError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
ptr::mut_ptr::<impl *mut T>::offset::runtime_offset_nowrap;false;false;true;false
<u8 as ops::bit::Shr<&usize>>::shr;false;false;false;false
tuple::<impl cmp::PartialEq for (X, W, V, U, T)>::eq;false;false;false;false
<ascii::ascii_char::AsciiChar as iter::range::Step>::steps_between;false;false;false;false
num::niche_types::U64NotAllOnes;true;false;false;false
<i16 as ops::bit::Shl<&u8>>::shl;false;false;false;false
num::dec2flt::pfe_empty;false;false;false;false
<pin::Pin<Ptr> as cmp::PartialOrd<pin::Pin<Q>>>::le;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepu16_ph;true;true;true;false
num::<impl i128>::strict_sub_unsigned;false;false;false;false
<&mut I as iter::traits::iterator::Iterator>::fold;false;false;true;false
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<num::saturating::Saturating<u32> as ops::bit::BitOrAssign<&num::saturating::Saturating<u32>>>::bitor_assign;false;false;true;false
<u128 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<u32 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::avx512fp16::_mm256_reduce_min_ph;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
<marker::variance::PhantomInvariant<T> as cmp::Ord>::cmp;false;false;true;false
<sync::atomic::AtomicBool as default::Default>::default;false;false;false;false
<core_arch::simd::f64x8 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_unpacklo_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_testn_epi64_mask;true;true;false;false
num::<impl i8>::unchecked_add::precondition_check;false;false;false;false
time::TryFromFloatSecsError::description;false;false;false;false
sync::atomic::AtomicUsize::swap;false;true;true;false
net::parser::<impl str::traits::FromStr for net::socket_addr::SocketAddrV6>::from_str;false;false;false;false
tuple::<impl cmp::PartialEq for (U, T)>::eq;false;false;false;false
<&'a i128 as ops::bit::Shr<usize>>::shr;false;false;false;false
convert::num::<impl convert::From<i8> for i128>::from;false;false;false;false
<T as clone::uninit::CopySpec>::clone_one;true;true;true;false
<isize as ops::bit::Shr<&u32>>::shr;false;false;false;false
iter::sources::repeat_n::RepeatN::<A>::element_ref;false;true;true;false
core_arch::x86::avx2::_mm256_srli_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fmul_round_sch;true;true;true;false
<str::iter::CharIndices<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmple_epi16_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_fmadd_pd;true;true;true;false
core_arch::simd::i32x32::splat;false;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_storeu_epi8;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldi_epi16;true;true;false;false
<i16 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_loadu_epi64;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl;false;false;false;false
error::Error::provide;false;false;true;false
<core_arch::simd::m16x16 as clone::Clone>::clone;false;false;false;false
iter::adapters::cycle::Cycle::<I>::new;false;false;false;false
core_arch::x86::avx::_mm256_extractf128_ps;true;true;true;false
<num::nonzero::NonZero<i32> as str::traits::FromStr>::from_str;false;false;false;false
alloc::layout::Layout::for_value_raw;true;true;true;false
core_arch::x86::avx512f::_mm512_getexp_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmpeq_epi64_mask;true;true;false;false
<core_arch::simd::u32x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_store_sd;true;true;true;false
core_arch::x86::avx512ifma::_mm256_madd52lo_avx_epu64;true;true;false;false
char::decode::decode_utf16;false;false;false;false
<core_arch::simd::f32x2::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_simd::masks::Mask::<T, N>::to_bitmask;false;false;true;false
<core_simd::masks::Mask<T, N> as cmp::PartialEq>::eq;false;false;true;false
sync::atomic::AtomicUsize::fetch_and;false;true;true;false
task::wake::Context::<'a>::local_waker;false;false;true;false
core_arch::x86::avx512vnni::_mm_mask_dpwssds_epi32;true;true;false;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_ror_epi32;true;true;false;false
<&num::saturating::Saturating<u64> as ops::bit::Not>::not;false;false;false;false
result::Result::<T, E>::is_ok_and;false;false;true;false
<isize as ops::bit::Shl<&i16>>::shl;false;false;false;false
<f16 as ops::arith::Sub<&f16>>::sub;false;false;true;false
<&f16 as ops::arith::Mul<&f16>>::mul;false;false;true;false
<Iter as iter::traits::collect::TraitA<EA>>::extend;false;false;true;false
<u8 as random::Random>::random;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldi_epi64;true;true;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;false;true;false
num::<impl i16>::unchecked_sub::precondition_check;false;false;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<u64, N>>::mul;false;true;false;false
<isize as ops::arith::RemAssign>::rem_assign;false;false;true;false
net::parser::Parser::<'a>::parse_with;false;false;true;false
num::<impl u16>::strict_rem_euclid;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_fmadd_round_ph;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for u128>::partial_cmp;false;false;false;false
num::nonzero::NonZero::<u32>::saturating_pow;false;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fnmsub_round_sh;true;true;true;false
<&'a u64 as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_test_epi64_mask;true;true;false;false
<num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor;false;false;false;false
convert::num::<impl convert::TryFrom<i128> for i16>::try_from;false;false;false;false
<&mut I as iter::traits::double_ended::DoubleEndedIteratorRefSpec>::spec_try_rfold;false;false;true;true
str::<impl convert::AsRef<[u8]> for str>::as_ref;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_and_epi64;true;true;false;false
num::<impl i128>::strict_shl;false;false;false;false
core_arch::x86::rtm::_xabort;true;true;false;false
cell::once::OnceCell::<T>::get_mut_or_init;false;false;true;false
iter::traits::iterator::Iterator::reduce;false;false;false;true
num::saturating::Saturating::<i16>::swap_bytes;false;false;false;false
<&'a u16 as ops::bit::Shl<u8>>::shl;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::DivAssign<&i128>>::div_assign;false;false;true;false
num::nonzero::NonZero::<u64>::to_be;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_abs_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_div_pd;true;true;true;false
<str::pattern::MultiCharEqSearcher<'a, C> as fmt::Debug>::fmt;false;false;true;false
<char::convert::CharTryFromError as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::aes::_mm_aesdeclast_si128;true;true;false;false
num::<impl u16>::wrapping_neg;false;false;false;false
num::<impl i64>::midpoint;false;false;false;false
num::saturating::Saturating::<i128>::to_be;false;false;false;false
<&num::saturating::Saturating<u16> as ops::bit::Not>::not;false;false;false;false
<u32 as ops::bit::Shl>::shl;false;false;false;false
cell::Cell::<T>::replace;false;true;true;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::find;false;false;true;true
<i32 as ops::bit::Shr<&isize>>::shr;false;false;false;false
num::<impl usize>::overflowing_sub_signed;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu16;true;true;true;false
io::borrowed_buf::BorrowedBuf::<'data>::set_init;true;false;true;false
num::nonzero::NonZero::<usize>::isolate_most_significant_one;false;true;false;false
<&'a num::saturating::Saturating<i16> as ops::arith::Div<num::saturating::Saturating<i16>>>::div;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAnd<&num::wrapping::Wrapping<u8>>>::bitand;false;false;false;false
<str::pattern::Utf8Pattern<'a> as cmp::PartialEq>::eq;false;false;false;false
num::<impl u8>::overflowing_sub_signed;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvtps_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_cvttpd_epu64;true;true;true;false
char::methods::<impl char>::escape_debug;false;false;false;false
num::<impl i64>::is_positive;false;false;false;false
<bstr::ByteStr as borrow::BorrowMut<[u8]>>::borrow_mut;false;false;true;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::last;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::arith::Rem<&num::wrapping::Wrapping<i128>>>::rem;false;false;false;false
<usize as slice::index::SliceIndex<[T]>>::index;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fmaddsub_ph;true;true;true;false
core_arch::x86_64::bmi::_bextr2_u64;true;true;false;false
<char::EscapeUnicode as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<T as clone::uninit::CopySpec>::clone_one;true;true;true;false
<i8 as ops::bit::Shr<&usize>>::shr;false;false;false;false
"array::<impl iter::traits::collect::IntoIterator for &'a [T; N]>::into_iter";false;false;false;false
<u32 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
iter::traits::collect::default_extend_tuple_g::extend;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fmsub_ps;true;true;true;false
num::<impl u8>::overflowing_pow;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_div_round_sd;true;true;true;false
<&i16 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<i32 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
<usize as ops::arith::SubAssign<&usize>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask3_fcmadd_round_sch;true;true;true;false
f128::<impl f128>::recip;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign;false;false;true;false
panicking::panic_const::panic_const_coroutine_resumed_panic;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_slli_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_abs_epi8;true;true;false;false
<&'a num::wrapping::Wrapping<u16> as ops::arith::Rem<num::wrapping::Wrapping<u16>>>::rem;false;false;false;false
<num::flt2dec::Sign as clone::Clone>::clone;false;false;false;false
num::<impl u32>::swap_bytes;false;false;false;false
<iter::adapters::take::Take<I> as clone::Clone>::clone;false;false;true;false
num::nonzero::NonZero::<u64>::rotate_right;false;true;false;false
<i32 as ops::bit::Shr<u8>>::shr;false;false;false;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::fma::_mm256_fnmsub_ps;true;true;true;false
<u64 as ops::bit::Not>::not;false;false;false;false
<u8 as iter::range::Step>::forward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_srav_epi64;true;true;false;false
<num::saturating::Saturating<u128> as ops::bit::BitAnd>::bitand;false;false;false;false
char::methods::<impl char>::to_lowercase;false;false;false;false
<i32 as ops::bit::Shr<&u8>>::shr;false;false;false;false
num::<impl i16>::saturating_add;false;false;false;false
num::<impl u32>::min_value;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
<ascii::EscapeDefault as iter::traits::iterator::Iterator>::count;false;false;true;false
<(J, I, H, G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
num::<impl u128>::overflowing_sub_signed;false;false;false;false
num::<impl u128>::borrowing_sub;false;true;false;false
mem::size_of_val;false;true;false;false
<ffi::c_str::Bytes<'a> as fmt::Debug>::fmt;false;false;true;false
<&net::ip_addr::Ipv4Addr as ops::bit::Not>::not;false;false;false;false
char::methods::<impl char>::make_ascii_lowercase;false;false;true;false
num::nonzero::NonZero::<u64>::to_le;false;true;false;false
<net::ip_addr::Ipv6Addr as ops::bit::BitOr>::bitor;false;false;false;false
sync::atomic::AtomicU8::fetch_sub;false;true;true;false
core_arch::x86::avx512bw::_mm_reduce_add_epi8;true;true;false;false
<u32 as num::dec2flt::float::CastInto<i16>>::cast;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_packus_epi16;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<&num::wrapping::Wrapping<i128>>>::sub_assign;false;false;true;false
intrinsics::volatile_store;true;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_fmadd_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvtph_pd;true;true;true;false
panicking::unreachable_display;false;false;false;false
alloc::global::GlobalAlloc::alloc_zeroed;true;true;false;false
range::iter::IterRangeFrom::<A>::remainder;false;false;true;false
core_arch::x86::avx2::_mm256_srli_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_insertf32x4;true;true;true;false
<isize as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<option::Option<T> as default::Default>::default;false;false;false;false
<&num::wrapping::Wrapping<i8> as ops::bit::Not>::not;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign;false;false;true;false
<&'a i16 as ops::bit::Shl<usize>>::shl;false;false;false;false
f64::<impl f64>::is_infinite;false;false;true;false
<str::iter::EncodeUtf16<'_> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_range_pd;true;true;true;false
<f128 as ops::arith::DivAssign<&f128>>::div_assign;false;false;true;false
num::<impl isize>::overflowing_div_euclid;false;false;false;false
<ops::range::RangeFrom<Idx> as cmp::PartialEq>::eq;false;false;true;false
<i128 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
<&u16 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<i64 as default::Default>::default;false;false;false;false
str::<impl str>::escape_unicode;false;false;false;false
iter::adapters::inspect::Inspect::<I, F>::new;false;false;false;false
<core_arch::simd::m8x32 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_inserti32x4;true;true;false;false
num::nonzero::NonZero::<u64>::swap_bytes;false;true;false;false
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
core_arch::simd::m8x32::splat;false;true;false;false
core_arch::x86::avx512bw::_mm256_cmpneq_epi16_mask;true;true;false;false
core_arch::x86::sse2::_mm_sad_epu8;true;true;false;false
core_arch::x86::avx512bw::_cvtmask32_u32;true;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shrdi_epi32;true;true;false;false
ops::async_function::impls::<impl ops::async_function::AsyncFnOnce<A> for &'a F>::async_call_once;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<u32, N>>::sum;false;false;false;true
f16::<impl f16>::min;false;false;true;false
slice::<impl [T]>::rsplitn;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi16;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shrdv_epi32;true;true;false;false
num::<impl isize>::overflowing_pow;false;false;false;true
cmp::impls::<impl cmp::PartialOrd<&B> for &A>::le;false;false;false;false
core_arch::simd::i8x16::splat;false;true;false;false
<&'a i64 as ops::bit::Shl<i16>>::shl;false;false;false;false
core_arch::simd::i16x16;false;false;false;false
intrinsics::round_ties_even_f16;false;false;true;false
num::<impl i64>::from_ascii;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpneq_epu64_mask;true;true;false;false
num::<impl i64>::from_ne_bytes;false;false;false;false
net::ip_addr::Ipv6Addr::is_multicast;false;false;false;false
core_arch::x86::gfni::_mm_gf2p8affine_epi64_epi8;true;true;false;false
<i8 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
<u32 as ops::arith::Mul>::mul;false;false;false;false
<A as slice::cmp::SliceOrd>::compare;false;false;false;true
num::nonzero::NonZero::<u64>::checked_next_power_of_two;false;true;false;false
num::<impl i128>::cast_unsigned;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Div<&num::wrapping::Wrapping<u128>>>::div;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<u8, N>>::product;false;false;false;true
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::trailing_zeros;false;false;false;false
<i128 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<u16 as iter::range::Step>::steps_between;false;false;false;false
fmt::rt::Argument::<'_>::none;false;false;false;false
<&num::wrapping::Wrapping<u64> as ops::bit::BitOr<&num::wrapping::Wrapping<u64>>>::bitor;false;false;false;false
<num::wrapping::Wrapping<i64> as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512dq::_mm256_mask_cvtps_epi64;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::leading_ones;false;false;false;false
iter::traits::collect::default_extend_tuple_f;false;false;true;true
<marker::variance::PhantomContravariantLifetime<'a> as default::Default>::default;false;false;false;false
num::dec2flt::decimal_seq::DecimalSeq::trim;false;false;true;true
net::display_buffer::DisplayBuffer::<SIZE>::as_str;false;true;false;false
core_arch::x86::avx512f::_mm_mask2_permutex2var_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rsqrt14_ss;true;true;true;false
ptr::mut_ptr::<impl *mut [T]>::len;false;false;true;false
<num::saturating::Saturating<u8> as ops::arith::AddAssign<&num::saturating::Saturating<u8>>>::add_assign;false;false;true;false
num::<impl i64>::from_ascii_radix;false;false;false;true
core_arch::x86::avx::_mm256_setr_pd;true;false;true;false
<(EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
core_arch::x86::avx2::_mm256_mask_i64gather_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sll_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epu32;true;true;true;false
<ops::range::RangeFrom<T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
<ascii::ascii_char::AsciiChar as clone::Clone>::clone;false;false;false;false
slice::<impl [T]>::swap;false;true;true;false
"array::<impl [T; N]>::each_mut";false;false;true;true
<sync::exclusive::Exclusive<T> as convert::From<T>>::from;false;false;false;false
slice::<impl [T]>::split_at_mut;false;false;true;false
core_arch::x86::__m128h::as_mut_array;false;true;true;false
<u64 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_srlv_epi64;true;true;false;false
<f128 as ops::arith::Sub>::sub;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
iter::adapters::take::Take::<I>::new;false;false;false;false
<str::iter::MatchesInternal<'a, P> as clone::Clone>::clone;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<isize>>::from;false;true;false;false
num::saturating::Saturating::<u8>::is_power_of_two;false;false;false;false
core_arch::x86::avx2::_mm256_maskload_epi32;true;true;true;false
<i16 as ops::bit::BitXorAssign<&i16>>::bitxor_assign;false;false;true;false
<u16 as ops::bit::BitXorAssign<&u16>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_sub_ps;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
core_arch::x86::ssse3::_mm_hsub_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_cvtepu8_epi32;true;true;false;false
<u8 as ops::arith::Div<&u8>>::div;false;false;false;false
convert::num::<impl convert::TryFrom<usize> for num::nonzero::NonZero<usize>>::try_from;false;false;false;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask2_permutex2var_epi16;true;true;false;false
str::pattern::Utf8Pattern::CharPattern;false;false;false;false
<core_arch::simd::f16x32 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bf16::_mm256_cvtpbh_ps;true;true;false;false
<u128 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::as_ref_unchecked;true;true;true;false
<&num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem;false;false;false;false
f64::<impl f64>::maximum;false;false;true;false
slice::sort::shared::smallsort::sort9_optimal;false;true;true;false
<u32 as ops::arith::Div<&u32>>::div;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_broadcast_i32x4;true;true;false;false
"<bstr::ByteStr as cmp::PartialEq<[u8; N]>>::eq";false;false;false;false
core_arch::x86::avx512bw::_mm512_broadcastw_epi16;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i16> for core_simd::vector::Simd<i16, N>>::shl;false;false;false;false
intrinsics::simd::simd_fmax;true;false;false;false
num::flt2dec::strategy::dragon::format_exact;false;true;true;true
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::get_mut;false;false;true;false
clone::uninit::InitializingSlice::<'a, T>::from_fully_uninit;false;false;true;false
num::niche_types::NonZeroU32Inner::new_unchecked;true;false;false;false
core_arch::x86::avx512f::_mm_cmplt_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_kortestz_mask32_u8;true;true;false;false
<&num::wrapping::Wrapping<usize> as ops::arith::Sub<&num::wrapping::Wrapping<usize>>>::sub;false;false;false;false
str::pattern::Pattern::is_contained_in;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fmaddsub_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_min_round_sh;true;true;true;false
<iter::sources::from_fn::FromFn<F> as iter::traits::iterator::Iterator>::next;false;false;true;false
<slice::iter::RSplitMut<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
num::<impl i64>::checked_isqrt;false;true;false;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::sse4a::_mm_extracti_si64;true;true;false;false
<&'a u64 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srli_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_movedup_pd;true;true;true;false
core_arch::x86::avx2::_mm256_max_epu8;true;true;false;false
fmt::builders::DebugSet::<'a, 'b>::entry;false;false;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
num::saturating::Saturating::<i128>::from_le;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Div>::div;false;false;false;false
num::<impl usize>::checked_next_power_of_two;false;false;false;false
core_arch::x86::avx512f::_mm_mask_or_epi32;true;true;false;false
core_arch::x86::avx2::_mm256_mul_epi32;true;true;false;false
<i8 as ops::arith::Neg>::neg;false;false;false;false
<u32 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::adapters::SourceIter>::as_inner;true;true;true;false
ptr::non_null::NonNull::<T>::byte_add;true;true;true;false
sync::atomic::AtomicU16::fetch_xor;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_max_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_store_epi64;true;true;true;false
num::<impl u128>::unchecked_shr;true;false;false;false
core_arch::x86::avx512f::_mm512_castsi512_si256;true;true;false;false
<cmp::Reverse<T> as default::Default>::default;false;false;false;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_unpackhi_pd;true;true;true;false
<&'a num::wrapping::Wrapping<u128> as ops::arith::Div<num::wrapping::Wrapping<u128>>>::div;false;false;false;false
<&isize as ops::bit::Shl<&i8>>::shl;false;false;false;false
<usize as ops::bit::Shr>::shr;false;false;false;false
unicode::unicode_data::cc::lookup;false;false;false;false
core_arch::x86::sse::_MM_GET_ROUNDING_MODE;true;true;false;false
<i64 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_srli_epi32;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&isize>>::sub_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_blend_epi8;true;true;false;false
<&'a usize as ops::bit::Shl<isize>>::shl;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::MulAssign<i128>>::mul_assign;false;false;true;false
num::<impl u128>::strict_add_signed;false;false;false;false
<&'a u16 as ops::arith::Div<u16>>::div;false;false;false;false
<u64 as ops::arith::Div<&u64>>::div;false;false;false;false
num::nonzero::NonZero::<u8>::isqrt;false;true;false;false
num::nonzero::NonZero::<i8>::count_ones;false;true;false;false
<num::saturating::Saturating<isize> as ops::arith::DivAssign>::div_assign;false;false;true;false
<usize as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<iter::adapters::step_by::StepBy<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::any;false;false;true;true
f128::<impl f128>::is_finite;false;false;true;false
f64::<impl f64>::classify;false;false;true;false
<core_arch::simd::f64x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::tbm::_blcfill_u32;true;false;false;false
<num::niche_types::NonZeroU128Inner as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_expandloadu_ps;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Mul>::mul;false;false;false;false
num::<impl isize>::saturating_sub_unsigned;false;false;false;false
hash::impls::<impl hash::Hash for (T, B)>::hash;false;false;true;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
"tuple::<impl convert::From<[T; 6]> for (T, T, T, T, T, T)>::from";false;false;false;false
<option::Iter<'a, A> as iter::traits::iterator::Iterator>::next;false;false;true;false
tuple::<impl cmp::PartialEq for (W, V, U, T)>::eq;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_permutevar_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_permutevar_ps;true;true;true;false
num::<impl i16>::from_le;false;false;false;false
core_arch::x86::avx512f::_mm_mask_rcp14_sd;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmple_epi16_mask;true;true;false;false
num::<impl usize>::checked_add;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvtpd_epu64;true;true;true;false
num::<impl i8>::strict_abs;false;false;false;false
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_advance_by;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_fmul_sch;true;true;true;false
<u32 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_roundscale_ph;true;true;true;false
<core_arch::simd::i8x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::simd::i32x2::splat;false;true;false;false
core_arch::x86::avx512f::_mm512_fnmsub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_castps128_ps512;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvt_roundsd_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvt_roundsh_ss;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u16> for core_simd::vector::Simd<u16, N>>::shr;false;false;false;false
ptr::const_ptr::<impl *const T>::sub::precondition_check;false;false;true;false
<Iter as iter::traits::collect::TraitD<ED, EC, EB, EA>>::extend;false;false;true;true
<num::saturating::Saturating<u128> as ops::arith::SubAssign<&num::saturating::Saturating<u128>>>::sub_assign;false;false;true;false
core_arch::x86::avx512bf16::_mm256_cvtneps_pbh;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
<&'a num::wrapping::Wrapping<i16> as ops::bit::BitAnd<num::wrapping::Wrapping<i16>>>::bitand;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::DivAssign>::div_assign;false;false;true;false
num::<impl i64>::widening_mul;false;false;false;false
<&isize as ops::arith::Div<&isize>>::div;false;false;false;false
<ops::range::RangeFrom<T> as ops::range::OneSidedRange<T>>::bound;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_abs_epi32;true;true;false;false
<usize as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_mul_round_sd;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_add_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_fmadd_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_load_epi32;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_broadcast_f64x2;true;true;true;false
<num::saturating::Saturating<T> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm_mask_sub_ss;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_blend_epi16;true;true;false;false
core_arch::simd::f16x32::splat;false;true;true;false
num::nonzero::NonZero::<i32>::rotate_right;false;true;false;false
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
intrinsics::atomic_load_unordered;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi64;true;true;false;false
sync::atomic::AtomicIsize::compare_exchange_weak;false;true;true;false
<net::ip_addr::Ipv6Addr as ops::bit::BitAnd>::bitand;false;false;false;false
<str::BytesIsNotEmpty as ops::function::FnOnce<(&'a &'b [u8],)>>::call_once;false;false;false;false
<i128 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sll_epi32;true;true;false;false
clone::impls::<impl clone::Clone for i32>::clone;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::Sub>::sub;false;false;false;false
<&'a num::wrapping::Wrapping<usize> as ops::bit::BitOr<num::wrapping::Wrapping<usize>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_blend_epi64;true;true;false;false
ptr::non_null::NonNull::<T>::as_ptr;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for char>::ge;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::try_rfold;false;false;true;false
core_arch::x86::avx512dq::_mm_maskz_cvtpd_epu64;true;true;true;false
core_arch::simd::m16x16::splat::JustOne;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::signum;false;false;false;false
<&'a num::wrapping::Wrapping<i128> as ops::bit::Shl<usize>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<i64> for u8>::try_from;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Mul>::mul;false;false;false;false
time::Duration::saturating_add;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvtps_epu64;true;true;true;false
fmt::Formatter::<'a>::alternate;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::RemAssign>::rem_assign;false;false;true;false
convert::num::<impl convert::TryFrom<u64> for u16>::try_from;false;false;false;false
<num::nonzero::NonZero<T> as cmp::Ord>::cmp;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign;false;false;true;false
num::from_ascii_radix_panic::do_panic::runtime;false;false;false;false
<iter::adapters::map::Map<I, F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_advance_back_by;false;false;true;false
<panic::panic_info::PanicMessage<'_> as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_and_ps;true;true;true;false
num::<impl isize>::trailing_ones;false;false;false;false
core_arch::x86::__m512;false;false;true;false
<char as iter::range::Step>::backward_checked;false;true;false;false
core_arch::x86::fma::_mm256_fmsubadd_pd;true;true;true;false
<&'b str as str::pattern::Pattern>::is_contained_in;false;false;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<i8, N>>::div;false;true;false;false
<&num::wrapping::Wrapping<u8> as ops::arith::Add<&num::wrapping::Wrapping<u8>>>::add;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_range_round_pd;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::swap_bytes;false;true;false;false
num::wrapping::Wrapping::<u16>::trailing_zeros;false;false;false;false
<usize as ops::bit::BitOr>::bitor;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked;true;true;true;false
num::<impl u128>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_i32logather_pd;true;true;true;false
<i128 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand;false;false;false;false
<u8 as ops::arith::Sub<&u8>>::sub;false;false;false;false
slice::iter::RChunksMut::<'a, T>::new;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_expand_epi32;true;true;false;false
char::convert::<impl convert::From<u8> for char>::from;false;false;false;false
core_arch::simd::f64x4::extract;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_scalef_ps;true;true;true;false
<u32 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<u8 as ops::bit::Shr<usize>>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
num::nonzero::NonZero::<i64>::trailing_zeros;false;true;false;false
num::<impl u8>::ilog10;false;false;false;false
<Iter as iter::traits::collect::TraitI<EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl;false;false;false;false
<u128 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::avx512cd::_mm256_mask_conflict_epi64;true;true;false;false
"array::equality::<impl cmp::PartialEq<&[U]> for [T; N]>::eq";false;false;false;false
<str::iter::Chars<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_max_epi64;true;true;false;false
num::<impl i8>::strict_sub;false;false;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<u8, N>> for core_simd::vector::Simd<u8, N>>::sum;false;false;false;true
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<&'a i64 as ops::bit::Shl<u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_abs_epi32;true;true;false;false
<i16 as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm256_inserti64x2;true;true;false;false
core_arch::simd::u8x32::extract;false;true;false;false
<ffi::c_str::CStr as convert::AsRef<ffi::c_str::CStr>>::as_ref;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmaddsub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_slli_epi64;true;true;false;false
slice::sort::shared::smallsort::panic_on_ord_violation;false;false;false;false
convert::num::<impl convert::TryFrom<u32> for i8>::try_from;false;false;false;false
<usize as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;false;true;false
"array::<impl [T; N]>::map";false;false;false;false
num::nonzero::NonZero::<i16>::count_ones;false;true;false;false
core_arch::simd::f16x16::splat;false;true;true;false
cmp::impls::<impl cmp::PartialOrd for u64>::ge;false;false;false;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepu16_ph;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<&'a u64 as ops::bit::Shl<i32>>::shl;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::SubAssign<&num::saturating::Saturating<i8>>>::sub_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::runtime;false;false;true;false
<i32 as ops::bit::BitAndAssign<&i32>>::bitand_assign;false;false;true;false
slice::iter::IterMut::<'a, T>::into_slice;false;true;true;false
core_arch::x86::avx512f::_mm512_stream_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_set_pd;true;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::rfind;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_getmant_sd;true;true;true;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
ptr::const_ptr::<impl *const T>::cast;false;false;true;false
core_arch::x86::avx512f::_mm_cmpneq_epu64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_blend_ph;true;true;true;false
<iter::adapters::filter::Filter<I, P> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
net::ip_addr::Ipv4Addr::from_bits;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_shrdv_epi32;true;true;false;false
<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign;false;false;true;false
num::<impl i8>::ilog10;false;false;false;false
core_arch::x86::avx512f::_mm_cvtps_epu32;true;true;true;false
<&num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<u64>>::rem_assign;false;false;true;false
<error::Request<'a> as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_rfold;false;false;true;true
core_arch::x86::avx512f::_mm512_maskz_cvtepu32_ps;true;true;false;false
core_arch::x86::avx512f::_mm_test_epi32_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_max_round_sh;true;true;true;false
core_arch::simd::u8x16::new;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u8> for core_simd::vector::Simd<u8, N>>::shl;false;false;false;false
num::<impl i32>::carrying_mul_add;false;false;false;false
core_arch::x86::avx512f::_mm512_sub_epi64;true;true;false;false
num::<impl usize>::checked_signed_diff;false;false;false;false
core_arch::x86::avx512dq::_mm256_movepi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_max_ph;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_xor;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi8_epi64;true;true;false;false
net::parser::Parser::<'a>::read_socket_addr;false;false;true;false
<num::niche_types::NonZeroIsizeInner as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_and;false;true;false;false
ops::control_flow::ControlFlow::Break;false;false;false;false
char::methods::<impl char>::escape_unicode;false;false;false;false
convert::num::<impl convert::TryFrom<u128> for i16>::try_from;false;false;false;false
core_arch::x86::avx512fp16::_mm256_div_ph;true;true;true;false
str::traits::<impl cmp::PartialOrd for str>::partial_cmp;false;false;false;false
fmt::Formatter::<'a>::debug_struct_field2_finish;false;false;true;false
num::<impl i16>::checked_neg;false;false;false;false
intrinsics::atomic_cxchg_release_seqcst;true;false;true;false
<f64 as slice::cmp::SliceContains>::slice_contains;false;false;true;true
core_arch::x86::avx512f::_mm512_setzero_si512;true;false;false;false
<u128 as iter::range::Step>::backward;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpgt_epu32_mask;true;true;false;false
convert::num::<impl convert::From<u8> for i128>::from;false;false;false;false
core_arch::x86::sse2::_mm_cmpeq_pd;true;true;true;false
cell::Cell::<T>::update;false;false;true;false
<u8 as slice::cmp::SliceContains>::slice_contains;false;false;false;false
fmt::num::<impl fmt::LowerExp for i128>::fmt;false;false;true;false
core_arch::simd::i8x4::new;false;false;false;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
<u16 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvt_roundsd_sh;true;true;true;false
<num::saturating::Saturating<i64> as ops::arith::RemAssign<&i64>>::rem_assign;false;false;true;false
<i16 as ops::arith::Sub<&i16>>::sub;false;false;false;false
ptr::mut_ptr::<impl *mut T>::guaranteed_eq;false;false;true;false
<&num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_andnot_epi64;true;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<isize, 4>>::from;false;false;false;false
core_arch::x86::avx512f::_mm_getmant_round_ss;true;true;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::eq;false;false;false;false
net::ip_addr::Ipv6Addr::to_canonical;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<fmt::Error as fmt::Debug>::fmt;false;false;true;false
slice::<impl [T]>::swap_with_slice;false;true;true;false
<u32 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_or_epi64;true;true;false;false
core_simd::ops::assign::<impl ops::bit::ShlAssign<U> for core_simd::vector::Simd<T, N>>::shl_assign;false;false;true;false
<f128 as convert::num::FloatToInt<isize>>::to_int_unchecked;true;true;true;false
<i128 as ops::arith::Add>::add;false;false;false;false
<core_simd::masks::Mask<i64, N> as convert::From<core_simd::masks::Mask<i8, N>>>::from;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::RemAssign<u64>>::rem_assign;false;false;true;false
<result::Result<T, E> as iter::traits::collect::IntoIterator>::into_iter;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_storeu_epi8;true;true;true;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::extract;false;true;true;false
<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&i64>>::add_assign;false;false;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<usize, N>>::shr;false;true;false;false
<cmp::Ordering as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bf16::_mm256_maskz_cvtne2ps_pbh;true;true;true;false
num::wrapping::Wrapping::<isize>::count_ones;false;false;false;false
<i64 as iter::traits::accum::Sum<&'a i64>>::sum;false;false;false;true
core_arch::x86::sse::_mm_cmplt_ps;true;true;true;false
core_arch::x86::avx512f::_store_mask16;true;true;true;false
<&i128 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<str::pattern::StrSearcherImpl as clone::Clone>::clone;false;false;true;false
slice::<impl [T]>::as_ptr_range;false;true;false;false
sync::atomic::AtomicI8::into_inner;false;false;true;false
core_arch::x86::avx512bw::_mm512_cmpgt_epu16_mask;true;true;false;false
<isize as ops::bit::ShrAssign>::shr_assign;false;false;true;false
sync::atomic::AtomicU32::update;false;false;true;true
f32::<impl f32>::max;false;false;true;false
<i64 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::sse2::_mm_sub_sd;true;true;true;false
num::<impl i32>::cast_unsigned;false;false;false;false
core_arch::x86::fma::_mm_fnmadd_pd;true;true;true;false
num::nonzero::NonZero::<T>::new;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign;false;false;true;false
<usize as ops::bit::Shl<i16>>::shl;false;false;false;false
<option::Option<T> as ops::try_trait::FromResidual<ops::try_trait::Yeet<()>>>::from_residual;false;false;false;false
core_arch::x86::avx512f::_mm_mask_shuffle_epi32;true;true;false;false
<&bool as ops::bit::BitXor<&bool>>::bitxor;false;false;false;false
num::<impl u64>::checked_next_power_of_two;false;false;false;false
<slice::iter::RSplit<'a, T, P> as slice::iter::SplitIter>::finish;false;false;true;false
num::<impl u8>::trailing_ones;false;false;false;false
<i32 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<slice::iter::SplitInclusiveMut<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::f32x16 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_getexp_sh;true;true;true;false
<&num::saturating::Saturating<usize> as ops::arith::Sub<&num::saturating::Saturating<usize>>>::sub;false;false;false;false
f16::<impl f16>::to_ne_bytes;false;false;true;false
<iter::adapters::zip::Zip<A, B> as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicU64::fetch_xor;false;true;true;false
num::wrapping::Wrapping::<i8>::to_be;false;false;false;false
<u128 as fmt::num::DisplayInt>::zero;false;false;false;false
cmp::impls::<impl cmp::PartialEq<&B> for &mut A>::ne;false;false;true;false
<&'a u128 as ops::bit::BitAnd<u128>>::bitand;false;false;false;false
<ffi::c_str::CStr as hash::Hash>::hash;false;false;true;false
<core_arch::simd::f32x16::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_max_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_add_round_sh;true;true;true;false
num::int_log10::i8;false;false;false;false
num::wrapping::Wrapping::<i16>::count_zeros;false;false;false;false
ffi::va_list::va_end;true;false;true;false
<panic::unwind_safe::AssertUnwindSafe<T> as ops::deref::DerefMut>::deref_mut;false;false;true;false
<i64 as ops::arith::MulAssign>::mul_assign;false;false;true;false
str::converts::from_utf8;false;true;false;false
option::Option::<T>::or_else;false;false;true;false
<core_arch::simd::i32x32 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_storeu_pd;true;true;true;false
num::<impl u8>::unchecked_add::precondition_check;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<usize>>::mul_assign;false;false;true;false
intrinsics::mir::Discriminant;false;false;false;false
<i16 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<net::ip_addr::IpAddr as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmple_epi32_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_srl_epi32;true;true;false;false
<f64 as ops::arith::DivAssign>::div_assign;false;false;true;false
<T as any::Any>::type_id;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_alignr_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_ss;true;true;true;false
ptr::mut_ptr::<impl *mut T>::swap;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_sra_epi16;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for i16>::lt;false;false;false;false
core_arch::x86::avx512dq::_mm512_movm_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtusepi32_storeu_epi16;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shrdi_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epu32;true;true;true;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvttph_epi32;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvtxph_ps;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::saturating_add;false;true;false;false
<&'a f16 as ops::arith::Rem<f16>>::rem;false;false;true;false
ptr::mut_ptr::<impl *mut T>::byte_offset_from_unsigned;true;true;true;false
<&'a num::saturating::Saturating<usize> as ops::arith::Rem<num::saturating::Saturating<usize>>>::rem;false;false;false;false
"array::equality::<impl cmp::PartialEq<[U; N]> for &[T]>::eq";false;false;false;false
<u8 as iter::range::Step>::forward_checked;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
tuple::<impl cmp::PartialEq for (T,)>::ne;false;false;false;false
num::nonzero::NonZero::<i8>::abs;false;true;false;false
num::<impl i64>::unsigned_abs;false;false;false;false
core_arch::simd::m8x32::bool_to_internal;false;false;false;false
<i8 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&num::wrapping::Wrapping<isize>>>::div_assign;false;false;true;false
"array::equality::<impl cmp::PartialEq<[U]> for [T; N]>::eq";false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&i16>>::div_assign;false;false;true;false
num::nonzero::NonZero::<i64>::cast_unsigned;false;true;false;false
<&u16 as ops::bit::BitOr<&u16>>::bitor;false;false;false;false
<u8 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpgt_epi64_mask;true;true;false;false
num::<impl i64>::wrapping_abs;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_packus_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_set1_epi8;true;true;false;false
core_arch::x86::sse2::_mm_move_epi64;true;true;false;false
num::<impl i64>::div_floor;false;false;false;false
iter::adapters::step_by::StepBy::<I>::next_back_index;false;false;true;false
<mem::transmutability::Assume as clone::Clone>::clone;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i16>::try_from;false;false;false;false
<result::Result<T, E> as cmp::Ord>::cmp;false;false;true;false
<&usize as ops::bit::Shl<&i64>>::shl;false;false;false;false
f128::<impl f128>::signum;false;false;true;false
fmt::num::imp::<impl fmt::UpperExp for i8>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_load_epi32;true;true;true;false
panicking::panic_const::panic_const_div_by_zero;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fnmsub_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_round_sd;true;true;true;false
slice::<impl [T]>::is_sorted;false;false;false;true
core_arch::x86::avx512dq::_mm512_mask_or_pd;true;true;true;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
num::wrapping::Wrapping::<i64>::pow;false;false;false;false
<i128 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
num::<impl u8>::unchecked_shr;true;false;false;false
slice::sort::stable::drift::DriftsortRun;false;false;false;false
num::<impl i32>::count_zeros;false;false;false;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<usize, N>>::shl;false;true;false;false
result::Result::<T, E>::and;false;false;true;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_sra_epi64;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::SubAssign<&num::saturating::Saturating<isize>>>::sub_assign;false;false;true;false
<&num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg;false;false;false;false
convert::num::<impl convert::TryFrom<i64> for u128>::try_from;false;false;false;false
<i64 as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::sse41::_mm_min_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_max_epi16;true;true;false;false
<u128 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask3_fnmsub_ps;true;true;true;false
intrinsics::fadd_fast;true;false;false;false
num::<impl i8>::saturating_sub_unsigned;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi8_epi32;true;true;false;false
core_simd::vector::Simd::<T, N>::as_mut_array;false;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i64, 8>>::from;false;false;false;false
<f64 as num::dec2flt::float::RawFloat>::from_u64;false;false;false;false
num::wrapping::Wrapping::<isize>::rotate_right;false;false;false;false
<u64 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
fmt::float::<impl fmt::Display for f32>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_getexp_round_ph;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cvtepu8_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_loadu_epi16;true;true;true;false
f128::<impl f128>::next_up;false;false;true;false
ptr::mut_ptr::<impl *mut T>::sub::precondition_check;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitXor<&num::saturating::Saturating<i64>>>::bitxor;false;false;false;false
cmp::impls::<impl cmp::PartialEq for bool>::ne;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::MulAssign<u64>>::mul_assign;false;false;true;false
core_arch::x86::sse2::_mm_storeu_si128;true;true;true;false
core_arch::x86::avx512fp16::_mm256_reduce_ph;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_adds_epi8;true;true;false;false
<num::saturating::Saturating<u32> as ops::arith::Div<&num::saturating::Saturating<u32>>>::div;false;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitAnd>::bitand;false;false;false;false
<&'c &'b str as str::pattern::Pattern>::strip_prefix_of;false;false;false;false
core_arch::x86::sse2::_mm_adds_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_subs_epu8;true;true;false;false
any::TypeId::of;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg;false;false;false;false
num::<impl u16>::strict_div_euclid;false;false;false;false
num::<impl u32>::checked_rem_euclid;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::AddAssign>::add_assign;false;false;true;false
<&u16 as ops::bit::Shl<&u128>>::shl;false;false;false;false
convert::num::<impl convert::From<u32> for i128>::from;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&num::saturating::Saturating<u128>>>::bitxor_assign;false;false;true;false
<&u64 as ops::bit::Shr<&u128>>::shr;false;false;false;false
fmt::num::<impl fmt::UpperExp for i128>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mul_epi32;true;true;false;false
core_arch::x86::avx512bw::_kandn_mask32;true;true;false;false
<sync::atomic::AtomicIsize as convert::From<isize>>::from;false;false;false;false
core_arch::x86::avx512f::_mm_mask_div_round_ss;true;true;true;false
num::<impl i32>::wrapping_rem;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fcmadd_round_sch;true;true;true;false
core_arch::x86::avx512vnni::_mm256_dpbusd_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_epi8;true;true;false;false
num::niche_types::NonZeroU64Inner::new;false;false;false;false
num::<impl i8>::wrapping_pow;false;false;false;true
core_arch::x86::avx512fp16::_mm_mask_cvtph_epu64;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_expandloadu_epi16;true;true;true;false
<isize as iter::traits::accum::Sum<&'a isize>>::sum;false;false;false;true
<&u16 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<u32 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_nan;false;false;true;false
<usize as ops::bit::Shr<u16>>::shr;false;false;false;false
<&'a u32 as ops::bit::Shl<isize>>::shl;false;false;false;false
iter::traits::collect::Extend::extend_one;false;false;true;false
slice::sort::stable::drift::sqrt_approx;false;false;false;false
core_arch::x86::avx2::_mm256_cmpeq_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtph_epi64;true;true;true;false
<str::iter::EscapeUnicode<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl u8>::carrying_add;false;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_sign_negative;false;false;true;false
tuple::<impl cmp::PartialEq for (T,)>::eq;false;false;false;false
f32::<impl f32>::copysign;false;true;true;false
num::<impl u128>::wrapping_mul;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<isize>>::from;false;true;false;false
<I as iter::adapters::copied::SpecNextChunk<'a, N, T>>::spec_next_chunk;false;false;true;false
iter::traits::iterator::Iterator::rev;false;false;false;false
core_arch::simd::u32x4::from_array;false;false;false;false
num::<impl i16>::checked_mul;false;false;false;false
num::<impl i64>::next_multiple_of;false;false;false;false
cmp::minmax_by_key;false;false;false;false
<usize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
sync::atomic::AtomicI32::compare_exchange;false;true;true;false
<&'a u32 as ops::bit::Shl<usize>>::shl;false;false;false;false
<(EA,) as iter::traits::collect::Extend<(A,)>>::extend_one;false;false;true;false
core_arch::x86::avx512f::_mm_mask_sqrt_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm_store_epi64;true;true;true;false
<num::saturating::Saturating<usize> as ops::bit::BitAndAssign<&usize>>::bitand_assign;false;false;true;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::ReverseSearcher<'a>>::next_reject_back;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_max_epu32;true;true;false;false
cmp::Ordering::is_lt;false;false;false;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
"array::<impl convert::TryFrom<&'a [T]> for &'a [T; N]>::try_from";false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
core_arch::x86::avx512f::_mm_mask_getexp_round_sd;true;true;true;false
num::niche_types::U32NotAllOnes::new_unchecked;true;false;false;false
num::<impl u16>::overflowing_rem;false;false;false;false
<i64 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
option::Option::<T>::expect;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_xor_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtph_epu64;true;true;true;false
core_arch::x86::sse2::_mm_mul_sd;true;true;true;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<i16, N>>::mul;false;true;false;false
core_arch::x86::avx512bw::_mm512_shufflehi_epi16;true;true;false;false
num::<impl i32>::wrapping_mul;false;false;false;false
iter::adapters::scan::Scan::<I, St, F>::new;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_abs_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_cvtps_epi32;true;true;true;false
num::<impl i8>::strict_pow;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_sra_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_inserti64x4;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_getmant_ph;true;true;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::valid;false;true;false;false
num::<impl u8>::unchecked_mul::precondition_check;false;false;false;false
<u32 as ops::bit::Shl<u128>>::shl;false;false;false;false
fmt::float::<impl fmt::Display for f64>::fmt;false;false;true;false
intrinsics::write_bytes;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_fmadd_round_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepu64_ph;true;true;false;false
<i128 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
<&i16 as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<isize, N>>::not;false;false;false;false
num::<impl u128>::count_zeros;false;false;false;false
<net::ip_addr::Ipv4Addr as iter::range::Step>::backward_unchecked;true;true;false;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
num::<impl i128>::checked_div;false;false;false;false
<ops::range::Range<Idx> as clone::Clone>::clone;false;false;true;false
<i64 as ops::arith::SubAssign<&i64>>::sub_assign;false;false;true;false
core_arch::x86::__m256i::as_i16x16;false;false;false;false
<str::iter::EscapeDefault<'a> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::Div>::div;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epu64;true;true;true;false
core_arch::x86::avx512bw::_kshiftli_mask64;true;false;false;false
core_arch::x86::fma::_mm256_fmsub_pd;true;true;true;false
<&'a usize as ops::arith::Sub<usize>>::sub;false;false;false;false
<&'a num::wrapping::Wrapping<u8> as ops::arith::Div<num::wrapping::Wrapping<u8>>>::div;false;false;false;false
core_arch::x86::avx512vnni::_mm512_maskz_dpbusd_epi32;true;true;false;false
num::<impl u8>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::reduce_min;false;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::trailing_ones;false;false;false;false
<&'a isize as ops::bit::Shr<u64>>::shr;false;false;false;false
<f128 as convert::num::FloatToInt<usize>>::to_int_unchecked;true;true;true;false
<num::niche_types::U32NotAllOnes as cmp::PartialOrd>::partial_cmp;false;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand;false;false;false;false
<i8 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm_roundscale_round_ss;true;true;true;false
<u8 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::count_zeros;false;false;false;false
core_simd::vector::Simd::<T, N>::load_or;false;false;true;false
task::poll::Poll::<result::Result<T, E>>::map_err;false;false;true;false
core_arch::x86::avx512f::_mm256_min_epu64;true;true;false;false
<i32 as fmt::num::DisplayInt>::to_u64;false;false;false;false
convert::num::<impl convert::TryFrom<i16> for u32>::try_from;false;false;false;false
num::<impl usize>::strict_pow;false;false;false;true
iter::adapters::array_chunks::ArrayChunks::<I, N>::next_back_remainder;false;true;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand;false;false;false;false
<Iter as iter::traits::collect::TraitG<EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
iter::traits::iterator::Iterator::partition::extend;false;false;true;false
<i8 as random::Random>::random;false;false;true;false
core_arch::x86::avx512f::_mm_mask_compressstoreu_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_expand_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_set1_epi32;true;true;false;false
<str::iter::SplitInclusive<'a, P> as fmt::Debug>::fmt;false;false;true;false
<i8 as ops::bit::BitOr>::bitor;false;false;false;false
<&i32 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<&num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand;false;false;false;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
core_arch::x86::sse2::_mm_loadu_si16;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_permutex2var_epi16;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<isize, N>> for core_simd::vector::Simd<isize, N>>::product;false;false;false;true
num::<impl u16>::next_multiple_of;false;false;false;false
num::saturating::Saturating::<usize>::from_le;false;false;false;false
num::nonzero::NonZero::<i128>::saturating_pow;false;true;false;false
<&'a i64 as ops::bit::Shl<isize>>::shl;false;false;false;false
sync::atomic::fence;false;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i32>::max_unsigned;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_compressstoreu_epi8;true;true;true;false
<num::saturating::Saturating<i8> as ops::arith::SubAssign<i8>>::sub_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 4>> for core_arch::x86::__m256i>::from;false;false;true;false
intrinsics::mir::Call::panic_cold_explicit;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvtss_i64;true;true;true;false
<&u16 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<&'a i32 as ops::bit::Shr<isize>>::shr;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::trailing_ones;false;false;false;false
num::<impl i32>::trailing_ones;false;false;false;false
ptr::alignment::_alignment_can_be_structurally_matched;false;false;false;false
<&u8 as ops::arith::Mul<&u8>>::mul;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<&u128 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi16_epi64;true;true;false;false
<marker::variance::PhantomContravariant<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_mask_loadu_epi64;true;true;true;false
net::ip_addr::Ipv4Addr::is_broadcast;false;false;false;false
<&num::saturating::Saturating<i8> as ops::bit::BitOr<&num::saturating::Saturating<i8>>>::bitor;false;false;false;false
intrinsics::atomic_store_seqcst;true;false;true;false
core_arch::x86::gfni::_mm_mask_gf2p8affineinv_epi64_epi8;true;true;false;false
slice::iter::Iter::<'a, T>::pre_dec_end;true;true;true;false
<num::niche_types::NonZeroI128Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_range_ss;true;true;true;false
<slice::ascii::EscapeAscii<'a> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512bw::_mm256_maskz_mulhi_epu16;true;true;false;false
<u16 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
intrinsics::minnumf64;false;false;true;false
sync::atomic::AtomicI32::fetch_max;false;true;true;false
sync::atomic::atomic_min;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_permutex_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_fnmadd_ph;true;true;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u128>>::from;false;true;false;false
<range::RangeInclusive<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<u8 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<net::socket_addr::SocketAddrV6 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_f32x4;true;true;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
num::<impl u32>::checked_add;false;false;false;false
core_arch::x86::sse::_mm_cmpngt_ps;true;true;true;false
<&'a i32 as ops::bit::Shl<u8>>::shl;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
<char::decode::DecodeUtf16Error as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_cvtps_epu64;true;true;true;false
core_arch::x86::avx512vbmi::_mm256_mask_permutexvar_epi8;true;true;false;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::find;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::min;false;false;true;false
fmt::num::imp::<impl fmt::Display for u8>::fmt;false;false;true;false
<iter::adapters::intersperse::Intersperse<I> as clone::Clone>::clone;false;false;true;false
<str::iter::CharIndices<'a> as iter::traits::iterator::Iterator>::count;false;false;true;true
core_simd::swizzle::Swizzle::concat_swizzle::{constant#0}::SimdShuffleIdx;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
<convert::Infallible as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_rol_epi32;true;true;false;false
<i32 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_setr4_epi32;true;true;false;false
core_arch::x86::avx512vnni::_mm_maskz_dpbusd_epi32;true;true;false;false
core_arch::x86::sse::_mm_movehl_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvttps_epi32;true;true;true;false
<&'a isize as ops::bit::Shr<usize>>::shr;false;false;false;false
core_simd::masks::mask_impl::Mask;false;false;true;false
<&'a num::saturating::Saturating<u64> as ops::arith::Mul<num::saturating::Saturating<u64>>>::mul;false;false;false;false
num::<impl i128>::strict_sub;false;false;false;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_try_rfold;false;false;true;false
<num::nonzero::NonZero<u128> as str::traits::FromStr>::from_str;false;false;false;false
core_arch::x86::avx512f::_mm512_min_round_pd;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitOrAssign<bool>>::bitor_assign;false;false;true;false
intrinsics::prefetch_write_instruction;true;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u64, 8>> for core_arch::x86::__m512i>::from;false;false;false;false
<i128 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::count;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Add>::add;false;false;false;false
tuple::<impl cmp::PartialEq for (X, W, V, U, T)>::ne;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_sub_round_sh;true;true;true;false
num::<impl isize>::strict_shl;false;false;false;false
<&net::ip_addr::Ipv4Addr as ops::bit::BitOr<net::ip_addr::Ipv4Addr>>::bitor;false;false;false;false
num::<impl i32>::saturating_mul;false;false;false;false
<&'a isize as ops::bit::Shl<i16>>::shl;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<usize> for &'lhs core_simd::vector::Simd<usize, N>>::shr;false;false;false;false
num::<impl i8>::checked_ilog;false;false;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<u64, N>>::div;false;true;false;false
core_arch::x86::avx512fp16::_mm_comi_sh;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_range_round_sd;true;true;true;false
num::<impl u128>::saturating_add_signed;false;false;false;false
core_arch::x86::avx512fp16::_mm_abs_ph;true;true;true;false
<Iter as iter::traits::collect::TraitE<EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::signum;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_mul_round_ss;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
convert::num::<impl convert::From<u64> for u128>::from;false;false;false;false
<u16 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_max_epu16;true;true;false;false
<&i64 as ops::bit::BitAnd<&i64>>::bitand;false;false;false;false
<u128 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<hash::sip::Hasher<S> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_expand_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_min_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_min_ph;true;true;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitAnd>::bitand;false;false;false;false
marker::variance::PhantomInvariant::<T>::new;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_scalef_round_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi16;true;true;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
cmp::impls::<impl cmp::PartialEq for u32>::eq;false;false;false;false
core_arch::x86_64::bmi::_blsr_u64;true;false;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512f::_mm512_and_si512;true;true;false;false
core_arch::x86::avx512f::_mm_fmsub_round_ss;true;true;true;false
<u8 as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sub_round_ss;true;true;true;false
num::<impl u128>::strict_shr;false;false;false;false
slice::<impl [T]>::last_chunk;false;true;false;false
<mem::manually_drop::ManuallyDrop<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
ptr::non_null::NonNull::<T>::addr;false;true;true;false
core_arch::x86::avx2::_mm256_adds_epu8;true;true;false;false
<iter::adapters::map_windows::MapWindows<I, F, N> as fmt::Debug>::fmt;false;false;true;false
intrinsics::roundf32;true;false;true;false
core_arch::x86::avx::_mm256_testc_si256;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtsepi64_epi8;true;true;false;false
core_arch::x86::avx512vnni::_mm256_dpbuuds_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi64;true;true;false;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_max_epi8;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::AddAssign<i8>>::add_assign;false;false;true;false
num::<impl u32>::checked_next_power_of_two;false;false;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<i64, N>>::sub;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi64;true;true;false;false
core_arch::x86::sse2::_mm_cvtsi128_si32;true;true;false;false
result::Result::<T, E>::unwrap_or_default;false;false;true;false
<i16 as ops::bit::Shl<&i16>>::shl;false;false;false;false
core_arch::x86::sse3::_mm_movedup_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fnmadd_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_max_round_ss;true;true;true;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::<impl i32>::wrapping_div;false;false;false;false
num::<impl usize>::overflowing_div_euclid;false;false;false;false
<f128 as convert::num::FloatToInt<i128>>::to_int_unchecked;true;true;true;false
core_arch::simd::u64x2::splat;false;true;false;false
core_arch::x86::avx512f::_mm512_roundscale_round_pd;true;true;true;false
num::<impl u64>::wrapping_neg;false;false;false;false
<&i16 as ops::bit::BitXor<&i16>>::bitxor;false;false;false;false
<bool as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
option::Option::<T>::insert;false;true;true;false
core_arch::x86::sse42::_mm_crc32_u32;true;true;false;false
<&num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand;false;false;false;false
num::<impl i64>::overflowing_div;false;false;false;false
<&'a i32 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_comige_sd;true;true;true;false
f64::<impl f64>::from_be_bytes;false;false;false;false
<i16 as ops::arith::Add>::add;false;false;false;false
<i128 as ops::arith::AddAssign<&i128>>::add_assign;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
iter::traits::collect::Extend::extend_one_unchecked;true;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_try_fold;false;false;true;true
<net::ip_addr::Ipv4Addr as convert::From<u32>>::from;false;false;false;false
fmt::Formatter::<'a>::options;false;false;true;false
str::<impl str>::lines;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_unpackhi_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_set1_epi32;true;true;false;false
ptr::const_ptr::<impl *const T>::offset_from_unsigned;true;true;true;false
<&u32 as ops::bit::Shr<&u32>>::shr;false;false;false;false
intrinsics::copy_nonoverlapping;true;false;true;false
core_arch::x86::avx512bw::_mm512_abs_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm256_mask_and_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_epi8;true;true;false;false
<i16 as ops::arith::RemAssign<&i16>>::rem_assign;false;false;true;false
future::async_drop::surface_async_drop_in_place;true;false;true;false
core_arch::x86::avx512f::_mm_maskz_fmadd_round_sd;true;true;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
ptr::mut_ptr::<impl *mut T>::offset_from_unsigned;true;true;true;false
<&f128 as ops::arith::Add<&f128>>::add;false;false;true;false
sync::atomic::AtomicU32::compare_exchange_weak;false;true;true;false
clone::Clone::clone_from;false;false;true;false
core_arch::x86::sse2::_mm_srl_epi64;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::arith::SubAssign<&num::wrapping::Wrapping<u64>>>::sub_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_srai_epi16;true;true;false;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<i8> as iter::traits::accum::Product>::product;false;false;false;true
fmt::builders::debug_tuple_new;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::index;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fixupimm_sd;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvtsd_u64;true;true;true;false
<num::dec2flt::ParseFloatError as fmt::Display>::fmt;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_xor;false;true;false;false
num::<impl u16>::wrapping_div;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::RemAssign>::rem_assign;false;false;true;false
sync::atomic::AtomicBool::from_mut;false;true;true;false
core_arch::x86::sse2::_mm_sll_epi64;true;true;false;false
tuple::<impl cmp::PartialOrd for (Y, X, W, V, U, T)>::lt;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_loadu_epi16;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_and_ps;true;true;true;false
str::iter::RMatches;false;false;true;false
f128::<impl f128>::to_bits;false;false;true;false
<&num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::sse41::_mm_blend_epi16;true;true;false;false
num::nonzero::NonZero::<u16>::ilog10;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_extracti32x8_epi32;true;true;false;false
<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&isize>>::bitxor_assign;false;false;true;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_storeu_epi32;true;true;true;false
intrinsics::float_to_int_unchecked;true;false;false;false
<i8 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<result::IntoIter<T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::simd::i64x4::splat;false;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_dbsad_epu8;true;true;false;false
num::<impl i32>::from_le_bytes;false;false;false;false
<cmp::Reverse<T> as clone::Clone>::clone_from;false;false;true;false
"<[T; N] as slice::SlicePattern>::as_slice";false;false;false;false
num::<impl i64>::unchecked_neg;true;false;false;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::__m128bh::splat::JustOne;false;false;false;false
str::validations::next_code_point_reverse;true;true;true;false
iter::traits::iterator::Iterator::max_by_key::key;false;false;false;false
num::nonzero::NonZero::<i16>::leading_zeros;false;true;false;false
<num::wrapping::Wrapping<i64> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtsepi32_epi16;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fnmadd_ph;true;true;true;false
<marker::variance::PhantomCovariant<T> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtepu32_epi64;true;true;false;false
<net::socket_addr::SocketAddr as convert::From<(I, u16)>>::from;false;false;false;false
<isize as fmt::num::DisplayInt>::from_u8;false;false;false;false
core_arch::simd::i64x8::new;false;false;false;false
core_arch::x86::avx512bf16::_mm512_mask_dpbf16_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_fnmadd_ph;true;true;true;false
str::pattern::ReverseSearcher::next_match_back;false;false;true;true
core_arch::x86::avx512f::_mm_mask_i32scatter_epi64;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_subs_epu16;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::abs_diff;false;false;false;false
cmp::impls::<impl cmp::PartialEq for char>::ne;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpunord_ps_mask;true;true;true;false
<&mut T as borrow::BorrowMut<T>>::borrow_mut;false;false;true;false
ptr::mut_ptr::<impl *mut T>::align_offset;false;true;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_unpacklo_epi32;true;true;false;false
<slice::iter::SplitNMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<u64>>::from;false;true;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::x86::avx512f::_mm_maskz_expand_epi64;true;true;false;false
num::<impl i64>::overflowing_neg;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Rem>::rem;false;false;false;false
num::<impl isize>::unchecked_shr::precondition_check;false;false;false;false
num::<impl u16>::to_be;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmplt_epu64_mask;true;true;false;false
ub_checks::maybe_is_aligned_and_not_null::compiletime;false;false;true;false
<&'a isize as ops::bit::BitAnd<isize>>::bitand;false;false;false;false
num::nonzero::NonZero::<u16>::unchecked_add;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtepi16_epi8;true;true;false;false
ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap;false;false;true;false
core_arch::x86::avx512f::_mm256_permutex2var_epi64;true;true;false;false
<&num::saturating::Saturating<i8> as ops::arith::Neg>::neg;false;false;false;false
<num::saturating::Saturating<u32> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mmask_i32gather_ps;true;true;true;false
f32::<impl f32>::is_nan;false;false;true;false
<u16 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
num::<impl i128>::carrying_mul;false;false;false;false
escape::EscapeIterInner::<N>::advance_back_by;false;false;true;false
num::<impl u64>::min_value;false;false;false;false
core_arch::x86::avx512dq::_mm256_cvtepi64_ps;true;true;false;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<&'a isize as ops::bit::Shr<u16>>::shr;false;false;false;false
<core_arch::x86::__m256h as fmt::Debug>::fmt;false;false;true;false
num::<impl isize>::midpoint;false;false;false;false
core_arch::x86::sse41::_mm_blend_pd;true;true;true;false
<usize as ops::bit::Shl<&i32>>::shl;false;false;false;false
<slice::iter::RChunks<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
num::<impl isize>::checked_ilog10;false;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<i8>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_sllv_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_permute_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi16_mask;true;true;false;false
<f128 as ops::arith::Rem>::rem;false;false;true;false
<&i32 as ops::arith::Sub<&i32>>::sub;false;false;false;false
intrinsics::log2f32;true;false;true;false
<u8 as ops::bit::BitAndAssign<&u8>>::bitand_assign;false;false;true;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::RangeFull>>::index_mut;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_rfold::nth_back;false;false;true;false
panic::panic_info::PanicInfo::<'a>::location;false;false;true;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::index_mut;false;true;true;false
intrinsics::rotate_left;false;false;false;false
<&'a i8 as ops::bit::Shr<i128>>::shr;false;false;false;false
tuple::<impl cmp::PartialOrd for (X, W, V, U, T)>::ge;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtpd_epu32;true;true;true;false
net::ip_addr::IpAddr::is_ipv6;false;false;true;false
<task::wake::LocalWaker as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_expand_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtusepi64_epi32;true;true;false;false
num::<impl i8>::checked_div;false;false;false;false
ptr::mut_ptr::<impl *mut T>::guaranteed_ne;false;false;true;false
core_arch::x86::avx512fp16::_mm_move_sh;true;true;true;false
core_simd::ops::<impl ops::index::IndexMut<I> for core_simd::vector::Simd<T, N>>::index_mut;false;false;true;false
core_arch::x86::__m512i;false;false;false;false
<isize as ops::bit::Shr<u16>>::shr;false;false;false;false
num::saturating::Saturating::<isize>::is_negative;false;false;false;false
str::<impl str>::split_at_unchecked;true;true;false;false
intrinsics::frem_fast;true;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_min_epi16;true;true;false;false
<&T as convert::AsRef<U>>::as_ref;false;false;false;false
tuple::<impl cmp::Ord for (U, T)>::cmp;false;false;false;false
<u32 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_set_epi64x;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmp_epu32_mask;true;true;false;false
bstr::<impl cmp::PartialEq<bstr::ByteStr> for str>::eq;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i8> for core_simd::vector::Simd<i8, N>>::shr;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u8> for &'lhs core_simd::vector::Simd<u8, N>>::shr;false;false;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 2>> for core_arch::x86::__m128i>::from;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_max_epu8;true;true;false;false
task::wake::Waker::new;true;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_sign_positive;false;false;true;false
<sync::atomic::AtomicI16 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_unpacklo_ps;true;true;true;false
core_arch::x86::bmi2::_pext_u32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cmple_epu32_mask;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_min_epi64;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<usize, N>>::sum;false;false;false;true
<(ED, EC, EB, EA) as iter::traits::collect::Extend<(D, C, B, A)>>::extend_one_unchecked;true;true;true;false
ptr::dangling;false;false;false;false
core_arch::x86::avx::_mm256_round_ps;true;true;true;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::nonzero::NonZero::<u64>::saturating_mul;false;true;false;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u32>> for u32>::div;false;false;false;false
<u16 as ops::arith::Rem<&u16>>::rem;false;false;false;false
num::<impl i8>::checked_mul;false;false;false;false
<&'a u64 as ops::bit::Shr<i8>>::shr;false;false;false;false
<fmt::FormattingOptions as clone::Clone>::clone;false;false;true;false
num::<impl i8>::checked_add_unsigned;false;false;false;false
sync::atomic::AtomicI64::swap;false;true;true;false
core_arch::simd::u16x32::extract;false;true;false;false
<&u16 as ops::arith::Sub<&u16>>::sub;false;false;false;false
core_arch::x86::sse2::_mm_store_sd;true;true;true;false
<isize as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_div_sd;true;true;true;false
<u8 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_ucomilt_sh;true;true;true;false
ptr::const_ptr::<impl *const T>::expose_provenance;false;false;true;false
<i16 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_loadu_epi8;true;true;true;false
<u16 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<isize> for &'lhs core_simd::vector::Simd<isize, N>>::shr;false;false;false;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_rorv_epi32;true;true;false;false
core_arch::x86::avx::_mm256_castpd128_pd256;true;true;true;false
num::saturating::Saturating::<isize>::rotate_right;false;false;false;false
core_arch::x86::__m128i::as_u32x4;false;false;false;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get;false;false;false;false
cmp::impls::<impl cmp::PartialEq for u16>::ne;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmpeq_epu8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_set_ph;true;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::bit::BitAnd<num::wrapping::Wrapping<u16>>>::bitand;false;false;false;false
<u16 as ops::arith::Div>::div;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::get_unchecked_mut;true;false;true;false
num::<impl u16>::from_le;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_inserti64x4;true;true;false;false
ops::try_trait::NeverShortCircuit::<T>::wrap_mut_2;false;false;false;false
core_arch::x86::avx512dq::_mm_cvtpd_epi64;true;true;true;false
num::nonzero::NonZero::<u128>::to_be;false;true;false;false
<num::saturating::Saturating<u8> as ops::arith::AddAssign>::add_assign;false;false;true;false
num::saturating::Saturating::<i8>::abs;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign;false;false;true;false
net::parser::Parser::<'a>::read_ip_addr;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_rcp14_pd;true;true;true;false
tuple::<impl default::Default for (A, Z, Y, X, W, V, U, T)>::default;false;false;false;false
<i8 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
sync::atomic::AtomicI32::as_ptr;false;false;true;false
slice::<impl [T]>::first_mut;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Mul<&num::wrapping::Wrapping<u32>>>::mul;false;false;false;false
slice::<impl [T]>::split_at_mut_checked;false;true;true;false
<core_arch::simd::u32x32 as cmp::PartialEq>::eq;false;false;false;false
<&'a num::wrapping::Wrapping<i32> as ops::arith::Add<num::wrapping::Wrapping<i32>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_max_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mmask_i32gather_ps;true;true;true;false
core_simd::ops::deref::<impl ops::arith::Rem<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::rem;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr;false;false;false;false
num::nonzero::NonZero::<u16>::count_ones;false;true;false;false
core_arch::x86::avx::_mm256_castsi256_ps;true;false;false;false
core_arch::x86::avx512bw::_kxnor_mask64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_min_ps;true;true;true;false
<&u64 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<&num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvt_roundps_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_mullo_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_cmplt_epu16_mask;true;true;false;false
iter::traits::iterator::Iterator::ne;false;false;false;false
num::<impl i8>::max_value;false;false;false;false
<num::niche_types::NonZeroI64Inner as cmp::Ord>::cmp;false;false;false;false
<i64 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
<core_arch::simd::u32x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<u32, N>>::bitor;false;true;false;false
num::<impl u16>::from_str_radix;false;false;false;false
<usize as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_sll_epi16;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_srlv_epi32;true;true;false;false
core_arch::simd::i8x8::splat::JustOne;false;false;false;false
fmt::num::<impl fmt::Debug for i32>::fmt;false;false;true;false
core_arch::simd::u8x32::splat::JustOne;false;false;false;false
hash::impls::<impl hash::Hash for u16>::hash_slice;false;true;true;false
num::nonzero::NonZero::<u64>::checked_mul;false;true;false;false
num::nonzero::NonZero::<u32>::midpoint;false;true;false;false
num::nonzero::NonZero::<usize>::checked_next_power_of_two;false;true;false;false
num::nonzero::NonZero::<i64>::wrapping_neg;false;true;false;false
num::saturating::Saturating::<i8>::count_zeros;false;false;false;false
num::saturating::Saturating::<i32>::abs;false;false;false;false
<str::pattern::CharSearcher<'a> as str::pattern::Searcher<'a>>::next;false;true;true;false
<&i64 as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_srl_epi64;true;true;false;false
num::saturating::Saturating;false;false;false;false
<core_arch::simd::i8x16 as fmt::Debug>::fmt;false;false;true;false
<A as slice::cmp::SlicePartialOrd>::partial_compare;false;false;false;true
core_arch::x86::avx512bw::_mm512_mask_max_epi8;true;true;false;false
<i16 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<num::dec2flt::common::BiasedFp as default::Default>::default;false;false;false;false
convert::num::<impl convert::From<bool> for i32>::from;false;false;false;false
<&usize as ops::arith::Rem<&usize>>::rem;false;false;false;false
<&u8 as ops::bit::Shr<&i16>>::shr;false;false;false;false
fmt::Formatter::<'a>::pad_formatted_parts;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_max_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cmul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi64;true;true;true;false
<mem::maybe_uninit::Guard<'a, T> as ops::drop::Drop>::drop;false;true;true;false
<&'a f16 as ops::arith::Mul<f16>>::mul;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_mut;false;true;true;false
"<core_simd::vector::Simd<T, N> as convert::AsMut<[T; N]>>::as_mut";false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::RemAssign<&num::saturating::Saturating<i16>>>::rem_assign;false;false;true;false
<core_arch::simd::u8x32 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512cd::_mm_mask_conflict_epi32;true;true;false;false
<num::niche_types::NonZeroI64Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_add_ps;true;true;true;false
<&u64 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<option::Option<V> as iter::traits::collect::FromIterator<option::Option<A>>>::from_iter;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::SubAssign<&num::wrapping::Wrapping<u16>>>::sub_assign;false;false;true;false
<iter::sources::repeat::Repeat<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
fmt::FormattingOptions::get_fill;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmsubadd_ph;true;true;true;false
<&num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul;false;false;false;false
<&'a i16 as ops::arith::Sub<i16>>::sub;false;false;false;false
<u8 as ops::bit::Shr<&u16>>::shr;false;false;false;false
slice::sort::stable::AlignedStorage::<T, N>::new;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmsubadd_ph;true;true;true;false
<&num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div;false;false;false;false
core_arch::x86::avx512ifma::_mm_maskz_madd52lo_epu64;true;true;false;false
num::nonzero::NonZero::<usize>::unchecked_mul;true;true;false;false
<&num::saturating::Saturating<i16> as ops::bit::Not>::not;false;false;false;false
num::<impl u32>::checked_pow;false;false;false;true
sync::atomic::AtomicU8::fetch_max;false;true;true;false
<&i128 as ops::bit::Shr<&u64>>::shr;false;false;false;false
marker::variance::PhantomInvariant;false;false;true;false
<u128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
fmt::FormattingOptions::width;false;false;true;false
<(EB, EA) as iter::traits::collect::Extend<(B, A)>>::extend_one_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_rolv_epi32;true;true;false;false
<i32 as ops::bit::Shl>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpeq_epi16_mask;true;true;false;false
<isize as ops::bit::Shl<&i32>>::shl;false;false;false;false
iter::sources::from_coroutine::FromCoroutine;false;false;false;false
num::<impl u64>::strict_neg;false;false;false;false
num::<impl u64>::checked_shr;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::fold;false;true;true;true
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;false;true;false
core_arch::x86::avx512f::_mm_cmpge_epi32_mask;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi32;true;true;false;false
<u8 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
<option::Option<T> as hash::Hash>::hash;false;false;true;false
core_arch::simd::f16x16::from_array;false;false;true;false
slice::index::slice_start_index_len_fail::do_panic::compiletime;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512> for core_simd::vector::Simd<f32, 16>>::from;false;false;true;false
num::wrapping::Wrapping::<i8>::from_be;false;false;false;false
ptr::unique::Unique::<T>::as_ptr;false;false;true;false
<u128 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
core_simd::ops::deref::<impl ops::bit::Shl<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::shl;false;false;false;false
num::<impl i8>::overflowing_add;false;false;false;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg;false;false;false;false
<char::decode::DecodeUtf16Error as error::Error>::description;false;false;false;false
<&'a u128 as ops::bit::BitOr<u128>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi32_pd;true;true;false;false
num::<impl u32>::from_ne_bytes;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&num::saturating::Saturating<u8>>>::bitand_assign;false;false;true;false
core_arch::x86::avx::_mm256_setr_ps;true;false;true;false
<usize as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<&'a usize as ops::bit::Shl<u128>>::shl;false;false;false;false
panicking::panic_const::panic_const_gen_fn_none;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign;false;false;true;false
intrinsics::expf64;true;false;true;false
core_arch::x86::rdrand::_rdseed16_step;true;true;true;false
core_arch::x86::avx512f::_mm_mask_i32scatter_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_roundscale_pd;true;true;true;false
<i64 as pat::RangePattern>::sub_one;false;false;false;false
num::<impl isize>::saturating_mul;false;false;false;false
<ops::range::RangeFull as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
<[mem::maybe_uninit::MaybeUninit<T>]>::as_bytes;false;true;false;false
time::Duration::mul_f64;false;false;true;false
core_arch::x86::sse2::_mm_srli_si128_impl;true;true;false;false
core_arch::x86::avx512dq::_mm256_mask_range_pd;true;true;true;false
iter::traits::iterator::Iterator::min;false;false;false;false
num::<impl u32>::strict_shr;false;false;false;false
<num::nonzero::NonZero<i16> as str::traits::FromStr>::from_str;false;false;false;false
slice::sort::stable::drift::DriftsortRun::len;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
core_arch::x86::avx512fp16::_mm256_mul_pch;true;true;true;false
<&'a i128 as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::Not>::not;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::AddAssign>::add_assign;false;false;true;false
ffi::c_str::CStr::as_ptr;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::Div>::div;false;false;false;false
ptr::non_null::NonNull::<[T]>::as_uninit_slice;true;true;true;false
slice::ascii::<impl [u8]>::eq_ignore_ascii_case;false;false;false;true
core_arch::x86::sse::_mm_load_ss;true;true;true;false
core_arch::x86::avx512dq::_store_mask8;true;true;true;false
num::overflow_panic::neg;false;false;false;false
core_arch::x86::avx::_mm256_testnzc_ps;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpge_epu64_mask;true;true;false;false
num::<impl usize>::count_zeros;false;false;false;false
core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi8;true;true;false;false
<str::iter::SplitN<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512bw::_mm512_avg_epu16;true;true;false;false
core_arch::x86::avx512fp16::_mm_fnmadd_round_sh;true;true;true;false
<(ops::range::Bound<&'a T>, ops::range::Bound<&'a T>) as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
core_arch::simd::i32x8::splat;false;true;false;false
fmt::builders::DebugList::<'a, 'b>::finish;false;false;true;false
core_arch::x86::sse2::_mm_cmplt_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_abs_ps;true;true;true;false
num::<impl u16>::carrying_mul_add;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_i32logather_epi64;true;true;true;false
<f64 as ops::arith::SubAssign>::sub_assign;false;false;true;false
iter::traits::collect::default_extend_tuple_h;false;false;true;true
<i8 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_scalef_ph;true;true;true;false
num::<impl u8>::overflowing_sub;false;false;false;false
<u8 as iter::traits::accum::Sum>::sum;false;false;false;true
<u32 as ops::arith::DivAssign<&u32>>::div_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem;false;false;false;false
num::niche_types::NonZeroI32Inner::as_inner;false;false;false;false
core_arch::x86::sse2::_mm_cmpeq_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_insertf64x4;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_cvtepu8_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_cvtpd_epu64;true;true;true;false
<T as array::equality::SpecArrayEq<U, N>>::spec_ne;false;false;false;false
<range::RangeInclusive<T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub;false;false;false;false
fmt::num::<impl fmt::UpperHex for i64>::fmt;false;false;true;false
<marker::variance::PhantomInvariant<T> as hash::Hash>::hash;false;false;true;false
num::<impl i128>::count_ones;false;false;false;false
<cell::once::OnceCell<T> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86_64::abm::_popcnt64;true;false;false;false
core_arch::x86::avx512cd::_mm512_broadcastmw_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shrdi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_permutex2var_pd;true;true;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
<num::nonzero::NonZero<i128> as ops::arith::Neg>::neg;false;true;false;false
core_simd::masks::Mask::<T, N>::any;false;false;true;false
fmt::num::imp::<impl fmt::UpperExp for i64>::fmt;false;false;true;false
core_arch::x86::tbm::_tzmsk_u32;true;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::saturating_sub;false;true;false;false
<pin::Pin<Ptr> as cmp::PartialOrd<pin::Pin<Q>>>::partial_cmp;false;false;true;false
core_arch::x86::sse2::_mm_cmpgt_pd;true;true;true;false
num::<impl u32>::ilog2;false;false;false;false
core_arch::x86::avx512f::_mm256_cmple_epi64_mask;true;true;false;false
convert::num::<impl convert::From<u16> for usize>::from;false;false;false;false
core_simd::swizzle_dyn::transize;true;true;true;false
core_arch::x86_64::bmi2::_mulx_u64;true;false;true;false
num::<impl i8>::ilog2;false;false;false;false
iter::traits::collect::default_extend_tuple_l;false;false;true;true
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u8, 16>>::from;false;false;false;false
core_arch::simd::u32x8::extract;false;true;false;false
<slice::iter::RSplit<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::adapters::array_chunks::SpecFold>::fold;false;false;true;true
core_arch::x86::avx512f::_mm512_mask_cvt_roundepi32_ps;true;true;true;false
<i64 as iter::traits::accum::Product>::product;false;false;false;true
<iter::sources::repeat_n::RepeatN<A> as fmt::Debug>::fmt;false;false;true;false
sync::atomic::atomic_store;true;true;true;false
<time::TryFromFloatSecsErrorKind as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i64x4::from_array;false;false;false;false
ptr::mut_ptr::<impl *mut [T]>::as_uninit_slice;true;true;true;false
num::<impl str::traits::FromStr for i128>::from_str;false;false;false;false
<(L, K, J, I, H, G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
core_arch::x86::avx512vbmi::_mm512_mask_permutexvar_epi8;true;true;false;false
num::<impl u16>::ilog10;false;false;false;false
pin::Pin::<Ptr>::as_mut;false;true;true;false
<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
core_arch::simd::u16x32::new;false;false;false;false
core_arch::x86::avx512f::_mm512_kmov;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_ps;true;true;true;false
core_arch::x86_64::avx512fp16::_mm_cvtsh_u64;true;true;true;false
<&num::wrapping::Wrapping<i128> as ops::arith::Div<&num::wrapping::Wrapping<i128>>>::div;false;false;false;false
core_arch::x86::avx2::_mm256_sllv_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_srli_epi32;true;true;false;false
core_arch::x86::sse2::_mm_extract_epi16;true;true;false;false
core_arch::x86::avx512bw::_kadd_mask64;true;false;false;false
char::methods::<impl char>::is_numeric;false;false;false;false
sync::atomic::AtomicU32::fetch_max;false;true;true;false
cell::SyncUnsafeCell::<T>::get_mut;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpeq_epi8_mask;true;true;false;false
num::<impl i128>::strict_abs;false;false;false;false
<cmp::Reverse<T> as cmp::Ord>::cmp;false;false;true;false
<f128 as convert::num::FloatToInt<i64>>::to_int_unchecked;true;true;true;false
unicode::unicode_data::lowercase::lookup;false;false;false;false
core_arch::x86::avx2::_mm256_cmpeq_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_permutexvar_ph;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<isize, N>> for core_simd::vector::Simd<isize, N>>::sum;false;false;false;true
num::<impl i8>::is_negative;false;false;false;false
<bstr::ByteStr as cmp::PartialEq>::eq;false;false;false;false
<core_arch::simd::f64x1 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepu32_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_min_round_ss;true;true;true;false
num::<impl u128>::checked_sub;false;false;false;false
core_arch::x86::avx512bw::_mm_movm_epi16;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cmp_round_ph_mask;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_scalef_round_sh;true;true;true;false
<ops::range::RangeFrom<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
intrinsics::round_ties_even_f64;false;false;true;false
core_arch::simd::i32x4::from_array;false;false;false;false
<T as slice::sort::shared::smallsort::UnstableSmallSortTypeImpl>::small_sort;false;false;true;false
<&'a isize as ops::bit::Shr<i128>>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<u64 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as clone::Clone>::clone;false;false;true;false
f128::<impl f128>::from_bits;false;false;false;false
<u8 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_shuffle_pd;true;true;true;false
num::<impl i128>::div_ceil;false;false;false;false
str::<impl str>::trim_start_matches;false;true;false;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<i8, N>>::bitor;false;true;false;false
convert::num::<impl convert::From<u32> for f64>::from;false;false;false;false
<fmt::Error as clone::Clone>::clone;false;false;false;false
<usize as ops::arith::RemAssign<&usize>>::rem_assign;false;false;true;false
intrinsics::atomic_and_relaxed;true;false;true;false
<iter::adapters::take_while::TakeWhile<I, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_setr_pd;true;true;true;false
num::<impl i128>::overflowing_add;false;false;false;false
intrinsics::atomic_umin_release;true;false;true;false
<&num::wrapping::Wrapping<u64> as ops::arith::Rem<&num::wrapping::Wrapping<u64>>>::rem;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::abs_diff;false;false;false;false
<i32 as ops::arith::SubAssign>::sub_assign;false;false;true;false
ops::index_range::IndexRange::next_back_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm_mask_permutex2var_epi64;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::nth;false;false;true;true
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_insertf32x4;true;true;true;false
core_arch::x86::avx512f::_kortestz_mask16_u8;true;true;false;false
alloc::global::GlobalAlloc::realloc;true;true;true;false
core_arch::x86::avx512f::_mm_mask_storeu_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepi16_ph;true;true;true;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<u128>>::from;false;true;false;false
<num::saturating::Saturating<i128> as ops::bit::BitOrAssign<&i128>>::bitor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_cvtpd_epi64;true;true;true;false
cmp::impls::<impl cmp::PartialOrd<&mut B> for &mut A>::ge;false;false;true;false
f64::<impl f64>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::size_hint;false;false;true;false
slice::cmp::SlicePartialEq::not_equal;false;false;false;false
<&i32 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<isize as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<u8>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<&num::wrapping::Wrapping<isize>>>::mul_assign;false;false;true;false
cmp::Ordering::is_eq;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_pch;true;true;true;false
<str::iter::EscapeDebug<'a> as iter::traits::iterator::Iterator>::fold;false;false;true;true
<sync::exclusive::Exclusive<T> as default::Default>::default;false;false;false;false
net::ip_addr::IpAddr::is_ipv4;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_moveldup_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_permutex2var_epi16;true;true;false;false
core_arch::x86::avx2::_mm256_unpacklo_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtpd_ph;true;true;true;false
<num::niche_types::NonZeroI16Inner as clone::Clone>::clone;false;false;false;false
num::nonzero::NonZero::<u16>::checked_mul;false;true;false;false
<char::EscapeDefault as clone::Clone>::clone;false;false;true;false
<&'a num::wrapping::Wrapping<i32> as ops::bit::BitOr<num::wrapping::Wrapping<i32>>>::bitor;false;false;false;false
num::<impl isize>::leading_zeros;false;false;false;false
intrinsics::simd::simd_reduce_mul_ordered;true;false;false;false
core_simd::ops::deref::<impl ops::arith::Sub<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::sub;false;false;false;false
<&i32 as ops::bit::Not>::not;false;false;false;false
<i32 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
num::<impl isize>::checked_neg;false;false;false;false
num::<impl u32>::checked_ilog;false;false;false;true
core_arch::x86::avx512f::_mm512_reduce_and_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_srav_epi16;true;true;false;false
<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&num::wrapping::Wrapping<u128>>>::sub_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_and_ps;true;true;true;false
sync::atomic::atomic_add;true;true;true;false
<num::dec2flt::FloatErrorKind as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_i64gather_epi64;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_shuffle_epi8;true;true;false;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_expand_pd;true;true;true;false
<&num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<num::niche_types::NonZeroU8Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
<isize as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
num::<impl usize>::from_str_radix;false;false;false;false
num::<impl i128>::from_str_radix;false;false;false;false
<option::Option<&'a T> as convert::From<&'a option::Option<T>>>::from;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::Searcher<'a>>::next_reject;false;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::rfind;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtps_epi32;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_compress_pd;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_andnot_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_reduce_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_loadu_epi64;true;true;true;false
<str::IsAsciiWhitespace as ops::function::FnOnce<(&u8,)>>::call_once;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_srav_epi16;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for isize>::partial_cmp;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXor>::bitxor;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::x86::avx512fp16::_mm_mask3_fnmadd_round_sh;true;true;true;false
core_arch::simd::f64x4::splat;false;true;true;false
<&num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::reborrow;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtpd_ph;true;true;true;false
core_arch::x86_64::amx::_tile_dpbssd;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::saturating_abs;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_max_epu8;true;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
<num::wrapping::Wrapping<u32> as ops::arith::Div>::div;false;false;false;false
fmt::num::<impl fmt::Octal for i64>::fmt;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_compressstoreu_epi8;true;true;true;false
iter::traits::iterator::Iterator::find;false;false;true;true
<num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx2::_mm256_sub_epi8;true;true;false;false
<fmt::num::Binary as cmp::PartialEq>::eq;false;false;false;false
num::<impl i16>::unchecked_mul::precondition_check;false;false;false;false
num::<impl u8>::checked_add_signed;false;false;false;false
num::saturating::Saturating::<i8>::from_be;false;false;false;false
<sync::atomic::AtomicI32 as fmt::Debug>::fmt;false;false;true;false
<char::ToUppercase as clone::Clone>::clone;false;false;true;false
<isize as ops::bit::Shl<&i128>>::shl;false;false;false;false
<&'a usize as ops::arith::Mul<usize>>::mul;false;false;false;false
num::nonzero::NonZero::<isize>::reverse_bits;false;true;false;false
<&'a i32 as ops::bit::Shl<i8>>::shl;false;false;false;false
num::<impl i128>::unchecked_add::precondition_check;false;false;false;false
<u16 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
<array::TryFromSliceError as fmt::Display>::fmt;false;false;true;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::Searcher<'a>>::next;false;false;true;false
core_arch::x86::avx512f::_mm_mask_mov_pd;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_rcp14_ps;true;true;true;false
<[mem::maybe_uninit::MaybeUninit<T>]>::assume_init_drop;true;true;true;false
<u128 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvtph_epu16;true;true;true;false
<&'a num::saturating::Saturating<i16> as ops::bit::BitOr<num::saturating::Saturating<i16>>>::bitor;false;false;false;false
num::saturating::Saturating::<i8>::to_le;false;false;false;false
<u128 as ops::arith::SubAssign>::sub_assign;false;false;true;false
intrinsics::mir::Discriminant::panic_cold_explicit;false;false;false;false
num::<impl i64>::unchecked_sub::precondition_check;false;false;false;false
slice::<impl [T]>::copy_from_slice::len_mismatch_fail;false;false;false;false
char::methods::<impl char>::escape_default;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
core_arch::x86::avx::_mm256_maskstore_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_max_epu32;true;true;false;false
<&i64 as ops::arith::Add<&i64>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_load_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epu64;true;true;true;false
<time::TryFromFloatSecsErrorKind as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_subs_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_range_round_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_permutex2var_epi16;true;true;false;false
<isize as ops::bit::Shr<u32>>::shr;false;false;false;false
<&'a num::saturating::Saturating<isize> as ops::bit::BitOr<num::saturating::Saturating<isize>>>::bitor;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::count;false;false;true;true
<u16 as ops::bit::Shl<u128>>::shl;false;false;false;false
core_simd::masks::mask_impl::Mask::<T, N>::convert;false;true;true;false
<num::niche_types::NonZeroU8Inner as clone::Clone>::clone;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::DivAssign<u8>>::div_assign;false;false;true;false
<i128 as ops::bit::Shl<u64>>::shl;false;false;false;false
<core_arch::x86::__m256d as fmt::Debug>::fmt;false;false;true;false
<str::iter::MatchIndicesInternal<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi8;true;true;false;false
fmt::builders::DebugMap::<'a, 'b>::is_pretty;false;false;true;false
core_arch::x86::avx512f::_mm512_srli_epi64;true;true;false;false
<net::ip_addr::IpAddr as cmp::PartialOrd<net::ip_addr::Ipv4Addr>>::partial_cmp;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<i64, N>>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm_set_sh;true;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor;false;false;false;false
<&'a usize as ops::bit::Shr<u16>>::shr;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_sll_epi32;true;true;false;false
fmt::builders::DebugMap::<'a, 'b>::entry;false;false;true;false
num::<impl i64>::rotate_right;false;false;false;false
<usize as ops::arith::AddAssign>::add_assign;false;false;true;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Sub<&num::wrapping::Wrapping<isize>>>::sub;false;false;false;false
core_arch::x86::avx512bw::_kor_mask32;true;false;false;false
<Iter as iter::traits::collect::TraitD<ED, EC, EB, EA>>::extend;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmpgt_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtpd_ph;true;true;true;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::index;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu16;true;true;true;false
core_arch::x86::avx512vnni::_mm_dpwusd_epi32;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::get_unchecked;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm_reduce_add_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epu16;true;true;true;false
core_arch::x86::avx512fp16::_mm_fpclass_sh_mask;true;true;true;false
<f32 as num::dec2flt::float::RawFloat>::to_bits;false;false;true;false
<&'a num::saturating::Saturating<u16> as ops::arith::Div<num::saturating::Saturating<u16>>>::div;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<&num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div;false;false;false;false
num::<impl u64>::checked_div_euclid;false;false;false;false
num::nonzero::NonZero::<u128>::midpoint;false;true;false;false
core_arch::x86::avx::_mm256_xor_ps;true;true;true;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_or_epi32;true;true;false;false
intrinsics::pref_align_of;true;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<isize>>::bitxor_assign;false;false;true;false
core_arch::x86::__m128h::splat::JustOne;false;false;true;false
clone::impls::<impl clone::Clone for u128>::clone;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as fmt::Debug>::fmt;false;false;true;false
<&usize as ops::arith::Add<&usize>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_fmaddsub_ps;true;true;true;false
<&'a num::wrapping::Wrapping<usize> as ops::arith::Rem<num::wrapping::Wrapping<usize>>>::rem;false;false;false;false
num::<impl usize>::borrowing_sub;false;true;false;false
core_arch::simd::i16x16::splat::JustOne;false;false;false;false
<&'a num::saturating::Saturating<u64> as ops::bit::BitOr<num::saturating::Saturating<u64>>>::bitor;false;false;false;false
num::<impl u8>::from_ascii_radix;false;false;false;true
core_simd::masks::Mask::<T, N>::from_int_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_max_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_expandloadu_pd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg;false;false;false;false
num::int_sqrt::u16;false;false;false;false
<core_arch::simd::i8x16 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_min_epu16;true;true;false;false
num::nonzero::NonZero::<u8>::div_ceil;false;true;false;false
<i16 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
<u8 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&num::saturating::Saturating<i16>>>::bitand_assign;false;false;true;false
<i128 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_stream_pd;true;true;true;false
core_arch::simd::u8x64::splat::JustOne;false;false;false;false
<(EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(G, F, E, D, C, B, A)>>::extend;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_mov_epi8;true;true;false;false
<i8 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_fnmsub_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_cmplt_epu16_mask;true;true;false;false
core_arch::x86::avx512f::_mm_mask_blend_ps;true;true;true;false
<isize as ops::arith::AddAssign>::add_assign;false;false;true;false
<&i64 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_round_ph;true;true;true;false
pin::Pin::<&'static T>::static_ref;false;true;false;false
num::dec2flt::float::pow2_to_pow10;false;false;false;false
num::<impl i32>::signum;false;false;false;false
error::TaggedOption;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmsub_ph;true;true;true;false
<&isize as ops::arith::Neg>::neg;false;false;false;false
<f128 as ops::arith::Neg>::neg;false;false;true;false
core_arch::x86::avx512f::_mm256_mmask_i64gather_epi32;true;true;true;false
<&T as fmt::Octal>::fmt;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::RemAssign<i32>>::rem_assign;false;false;true;false
num::<impl isize>::signum;false;false;false;false
num::<impl u16>::overflowing_mul;false;false;false;false
num::nonzero::NonZero::<isize>::checked_mul;false;true;false;false
<i64 as ops::bit::Shl<&u16>>::shl;false;false;false;false
num::<impl i16>::to_be_bytes;false;false;false;false
<ops::index_range::IndexRange as cmp::PartialEq>::eq;false;false;true;false
<marker::variance::PhantomContravariantLifetime<'a> as cmp::Ord>::cmp;false;false;true;false
<ops::range::Range<T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
<bstr::ByteStr as cmp::PartialEq<&str>>::eq;false;false;false;false
<usize as iter::range::Step>::forward;false;false;false;false
core_arch::x86::__m512i::as_u8x64;false;false;false;false
core_arch::x86::avx512f::_mm_mask_div_round_sd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 8>> for core_arch::x86::__m512d>::from;false;false;true;false
<i16 as fmt::num::DisplayInt>::from_u8;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_mov_pd;true;true;true;false
ops::control_flow::ControlFlow::<B, C>::map_break;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_max_epi64;true;true;false;false
<&'a i16 as ops::bit::Shl<u128>>::shl;false;false;false;false
num::<impl u16>::wrapping_sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cmul_pch;true;true;true;false
core_arch::x86::avx512f::_mm512_rcp14_pd;true;true;true;false
sync::atomic::AtomicIsize::fetch_and;false;true;true;false
<&'a num::wrapping::Wrapping<isize> as ops::arith::Div<num::wrapping::Wrapping<isize>>>::div;false;false;false;false
num::<impl i128>::wrapping_div_euclid;false;false;false;false
core_arch::x86::avx512cd::_mm256_mask_conflict_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundpd_epu64;true;true;true;false
core_arch::simd::i16x2::from_array;false;false;false;false
<pin::Pin<P> as async_iter::async_iter::AsyncIterator>::poll_next;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::RemAssign<i128>>::rem_assign;false;false;true;false
<core_arch::simd::i16x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::simd::f16x32::from_array;false;false;true;false
<iter::adapters::intersperse::Intersperse<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::<impl u64>::wrapping_add_signed;false;false;false;false
core_arch::x86::avx512f::_mm_max_epi64;true;true;false;false
hash::impls::<impl hash::Hash for (T, B, C, D)>::hash;false;false;true;false
<slice::iter::SplitMut<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
range::<impl convert::From<range::RangeInclusive<T>> for ops::range::RangeInclusive<T>>::from;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_scalef_pd;true;true;true;false
<num::saturating::Saturating<i8> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<u64 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::AddAssign>::add_assign;false;false;true;false
"<core_simd::masks::Mask<T, N> as convert::From<[bool; N]>>::from";false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_rcp_ph;true;true;true;false
f32::<impl f32>::to_le_bytes;false;false;true;false
<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&u64>>::bitor_assign;false;false;true;false
num::<impl u64>::unchecked_shr;true;false;false;false
num::<impl usize>::checked_neg;false;false;false;false
<Iter as iter::traits::collect::TraitA<EA>>::extend::extend;false;false;true;false
intrinsics::simd::simd_reduce_add_unordered;true;false;false;false
<i64 as iter::range::Step>::forward;false;false;false;false
<&u128 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<usize as pat::RangePattern>::sub_one;false;false;false;false
<core_arch::simd::i16x4 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_move_ss;true;true;true;false
<num::saturating::Saturating<u8> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm256_permutex2var_epi32;true;true;false;false
core_arch::simd::m16x8::splat::JustOne;false;false;false;false
<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&num::saturating::Saturating<i32>>>::bitxor_assign;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for usize>::try_from;false;false;false;false
num::<impl i128>::strict_mul;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::DivAssign<u128>>::div_assign;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next_back;false;true;true;true
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::count;false;false;true;true
num::saturating::Saturating::<u32>::from_le;false;false;false;false
cmp::Ord::max;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for bool>::partial_cmp;false;false;false;false
<char::TryFromCharError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
iter::traits::iterator::Iterator::fuse;false;false;false;false
tuple::<impl cmp::PartialOrd for (U, T)>::ge;false;false;false;false
<&'a u8 as ops::bit::Shl<u64>>::shl;false;false;false;false
core_simd::vector::Simd::<T, N>::gather_ptr;true;true;true;false
core_arch::x86::avx512f::_mm512_fmaddsub_pd;true;true;true;false
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<i16 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
"array::<impl [T; N]>::split_array_ref";false;false;false;false
<i16 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
<result::Result<T, E> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512bw::_mm_reduce_and_epi8;true;true;false;false
<u8 as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpneq_epu8_mask;true;true;false;false
num::<impl u16>::rotate_right;false;false;false;false
num::<impl u128>::strict_shl;false;false;false;false
f64::<impl f64>::is_normal;false;false;true;false
<i64 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<i16 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
tuple::<impl cmp::PartialOrd for (B, A, Z, Y, X, W, V, U, T)>::lt;false;false;false;false
<&'a num::wrapping::Wrapping<u32> as ops::bit::BitXor<num::wrapping::Wrapping<u32>>>::bitxor;false;false;false;false
intrinsics::mir::Return;false;false;false;false
num::<impl i16>::overflowing_mul;false;false;false;false
core_simd::vector::Simd::<T, N>::len;false;false;true;false
<usize as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<f16 as ops::arith::Add<&f16>>::add;false;false;true;false
sync::atomic::AtomicIsize::from_mut_slice;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epi16;true;true;true;false
num::<impl u64>::rotate_left;false;false;false;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl i128>::rotate_left;false;false;false;false
<slice::iter::ChunkByMut<'a, T, P> as iter::traits::iterator::Iterator>::last;false;false;true;false
time::Duration::subsec_millis;false;false;false;false
num::nonzero::NonZero::<isize>::checked_neg;false;true;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdi_epi16;true;true;false;false
ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap::compiletime;false;false;true;false
sync::atomic::AtomicBool::fetch_update;false;false;true;true
intrinsics::atomic_max_relaxed;true;false;true;false
str::pattern::Searcher::next_reject;false;false;true;true
core_arch::x86::avx512fp16::_mm512_maskz_cvtx_roundph_ps;true;true;true;false
<cell::RefMut<'_, T> as fmt::Display>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_srai_epi16;true;true;false;false
cell::lazy::LazyCell::<T, F>::force;false;true;true;false
core_arch::x86_64::sse2::_mm_cvtsd_si64x;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_min;false;true;false;false
fmt::Formatter::<'a>::sign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_srlv_epi64;true;true;false;false
<u8 as ops::bit::BitOrAssign<&u8>>::bitor_assign;false;false;true;false
pin::Pin::<&'a mut T>::into_ref;false;false;true;false
<&'a u8 as ops::bit::Shl<i64>>::shl;false;false;false;false
<u8 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits;false;false;false;false
<&i128 as ops::bit::Shl<&u16>>::shl;false;false;false;false
num::wrapping::Wrapping::<i16>::count_ones;false;false;false;false
<T as convert::TryInto<U>>::try_into;false;false;false;false
<i128 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::cast_const;false;false;true;false
<u32 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<char::convert::ParseCharError as fmt::Display>::fmt;false;false;true;false
iter::traits::iterator::Iterator::collect;false;false;false;false
<i128 as ops::arith::MulAssign>::mul_assign;false;false;true;false
<cell::Cell<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm512_extracti32x8_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdi_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_storeu_epi8;true;true;true;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpge_epi8_mask;true;true;false;false
<usize as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<&u32 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<num::nonzero::NonZero<u8> as str::traits::FromStr>::from_str;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cmul_round_sch;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvt_roundps_epu64;true;true;true;false
<core_arch::x86::cpuid::CpuidResult as cmp::PartialOrd>::partial_cmp;false;false;true;false
core_arch::x86::avx512bw::_mm256_reduce_mul_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm256_cmpgt_epi16_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_broadcastss_ps;true;true;true;false
<i16 as iter::range::Step>::backward_checked;false;false;false;false
slice::<impl default::Default for &mut [T]>::default;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_mullo_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epu16;true;true;true;false
<&i64 as ops::bit::Shr<&u16>>::shr;false;false;false;false
num::<impl i16>::overflowing_rem_euclid;false;false;false;false
<u8 as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::avx512f::_mm256_min_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_reduce_round_pd;true;true;true;false
"tuple::<impl convert::From<[T; 2]> for (T, T)>::from";false;false;false;false
cmp::Reverse;false;false;false;false
<range::iter::IterRangeInclusive<A> as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<u8>::unchecked_add;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
<cell::Cell<T> as cmp::PartialOrd>::le;false;false;true;false
slice::sort::stable::drift::merge_tree_scale_factor;false;false;false;false
num::int_log10::u32;false;false;false;false
convert::num::<impl convert::From<f32> for f128>::from;false;false;true;false
<isize as ops::arith::Add>::add;false;false;false;false
num::wrapping::Wrapping::<i32>::from_le;false;false;false;false
<&i64 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<&i128 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<(D, C, B, A) as iter::traits::collect::FromIterator<(ED, EC, EB, EA)>>::from_iter;false;false;false;false
sync::atomic::AtomicI16::compare_exchange_weak;false;true;true;false
core_arch::x86::avx2::_mm256_max_epi32;true;true;false;false
core_arch::x86::ssse3::_mm_abs_epi32;true;true;false;false
core_arch::x86::avx::_mm256_sub_pd;true;true;true;false
<&'a num::wrapping::Wrapping<i64> as ops::arith::Rem<num::wrapping::Wrapping<i64>>>::rem;false;false;false;false
<&'a u64 as ops::arith::Add<u64>>::add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_shuffle_i32x4;true;true;false;false
num::<impl i16>::max_value;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask3_fmsubadd_ph;true;true;true;false
ptr::mut_ptr::<impl *mut [T]>::is_empty;false;false;true;false
core_arch::x86_64::xsave::_xsaveopt64;true;true;true;false
core_arch::x86_64::avx::_mm256_insert_epi64;true;true;false;false
fmt::num::<impl fmt::Debug for usize>::fmt;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::swap_bytes;false;true;false;false
<&'a i128 as ops::bit::Shl<u16>>::shl;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i8>>>::bitand_assign;false;false;true;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
f16::<impl f16>::clamp;false;false;true;false
<&u16 as ops::bit::Shr<&u8>>::shr;false;false;false;false
slice::sort::unstable::heapsort::heapsort;false;true;true;true
time::Duration::try_from_secs_f64;false;false;true;false
core_arch::x86::avx512f::_mm512_mul_round_pd;true;true;true;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_or_epi32;true;true;false;false
<char::EscapeDefault as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<u16 as ops::bit::BitXor>::bitxor;false;false;false;false
<num::fmt::Part<'a> as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmpneq_ps_mask;true;true;true;false
<i16 as random::Random>::random;false;false;true;false
<&'a u8 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_storeu_epi32;true;true;true;false
ptr::const_ptr::<impl *const T>::add::runtime_add_nowrap::compiletime;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_adds_epi16;true;true;false;false
<str as clone::CloneToUninit>::clone_to_uninit;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_rsqrt_sh;true;true;true;false
<usize as ops::bit::Shl<u128>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::SubAssign<&num::saturating::Saturating<i16>>>::sub_assign;false;false;true;false
num::<impl u8>::pow;false;false;false;true
num::<impl i64>::saturating_sub_unsigned;false;false;false;false
net::socket_addr::SocketAddr::V6;false;false;true;false
mem::replace;false;true;true;false
core_arch::x86::avx512f::_mm_cmp_epu64_mask;true;true;false;false
<num::flt2dec::decoder::Decoded as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::simd::u32x32::new;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_storeu_epi16;true;true;true;false
ops::range::Range::<Idx>::is_empty;false;false;true;false
num::saturating::Saturating::<u16>::pow;false;false;false;false
<&num::saturating::Saturating<i32> as ops::arith::Add<&num::saturating::Saturating<i32>>>::add;false;false;false;false
core_arch::simd::f64x2::from_array;false;false;true;false
<&'a num::wrapping::Wrapping<i16> as ops::arith::Mul<num::wrapping::Wrapping<i16>>>::mul;false;false;false;false
ptr::const_ptr::<impl *const T>::as_ref;true;true;true;false
num::<impl i32>::overflowing_shr;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_sub_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundps_epu64;true;true;true;false
core_arch::x86::avx512f::_kshiftli_mask16;true;false;false;false
convert::num::<impl convert::From<u32> for u128>::from;false;false;false;false
<iter::adapters::map_while::MapWhile<I, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<isize as iter::range::Step>::backward_checked;false;false;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<u16, N>>::sub;false;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::try_fold;false;false;true;false
<u32 as num::bignum::FullOps>::full_mul_add;false;false;false;false
core_arch::x86::avx512dq::_mm_reduce_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi8_epi32;true;true;false;false
iter::traits::exact_size::ExactSizeIterator::is_empty;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_max_sd;true;true;true;false
intrinsics::fmuladdf64;true;false;true;false
<num::nonzero::NonZero<i16> as ops::arith::Neg>::neg;false;true;false;false
convert::num::<impl convert::TryFrom<isize> for num::nonzero::NonZero<isize>>::try_from;false;false;false;false
<str::iter::RSplitN<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cmp_epi32_mask;true;true;false;false
mem::maybe_uninit::MaybeUninit::<T>::slice_assume_init_ref;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitXor>::bitxor;false;false;false;false
<core_simd::masks::Mask<isize, N> as convert::From<core_simd::masks::Mask<i64, N>>>::from;false;false;true;false
num::<impl i64>::checked_div_euclid;false;false;false;false
<num::niche_types::NonZeroI16Inner as hash::Hash>::hash;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::size_hint;false;false;true;false
<&'a num::saturating::Saturating<i8> as ops::arith::Add<num::saturating::Saturating<i8>>>::add;false;false;false;false
core_arch::x86::avx512fp16::_mm_ucomile_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtxps_ph;true;true;true;false
num::<impl isize>::strict_abs;false;false;false;false
intrinsics::powif32;true;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u32> for core_simd::vector::Simd<u32, N>>::shl;false;false;false;false
iter::adapters::map_windows::MapWindowsInner::<I, N>::next_window;false;false;true;false
convert::num::<impl convert::From<u8> for u16>::from;false;false;false;false
<f16 as ops::arith::Rem>::rem;false;false;true;false
net::socket_addr::SocketAddrV6::port;false;false;true;false
core_arch::x86::avx512f::_mm512_broadcast_i64x4;true;true;false;false
core_arch::x86::avx512f::_mm_fnmsub_round_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm_reduce_sh;true;true;true;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_advance_by;false;true;true;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldi_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<i128> for u16>::try_from;false;false;false;false
ptr::with_exposed_provenance_mut;false;false;false;false
<i8 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
intrinsics::atomic_umax_acquire;true;false;true;false
core_arch::simd::i8x64::extract;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_move_sd;true;true;true;false
<bstr::ByteStr as convert::AsRef<bstr::ByteStr>>::as_ref;false;false;false;false
core_arch::x86::avx512f::_mm512_i32gather_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_div_round_ps;true;true;true;false
<f64 as convert::num::FloatToInt<usize>>::to_int_unchecked;true;true;true;false
<convert::Infallible as cmp::PartialOrd>::partial_cmp;false;false;false;false
<&num::saturating::Saturating<i64> as ops::arith::Sub<&num::saturating::Saturating<i64>>>::sub;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::last;false;false;true;false
str::<impl str>::trim_end;false;false;false;false
<usize as ops::arith::Mul<&usize>>::mul;false;false;false;false
core_arch::simd::m8x32;false;false;false;false
num::<impl u16>::wrapping_shr;false;true;false;false
intrinsics::fdiv_fast;true;false;false;false
slice::<impl [T]>::split_last_chunk;false;true;false;false
fmt::FormattingOptions::get_alternate;false;false;true;false
num::<impl isize>::checked_shl;false;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
<&isize as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx2::_mm256_i32gather_pd;true;true;true;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
core_simd::masks::<impl ops::bit::BitAnd<core_simd::masks::Mask<T, N>> for bool>::bitand;false;false;true;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<i64, N>>::div;false;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu32;true;true;true;false
panic::panic_info::PanicInfo::<'a>::payload;false;false;true;false
core_arch::x86::avx512cd::_mm_lzcnt_epi64;true;true;false;false
<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&num::saturating::Saturating<i64>>>::bitand_assign;false;false;true;false
intrinsics::log10f16;true;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
core_arch::x86::sse2::_mm_storer_pd;true;true;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
num::<impl u16>::from_le_bytes;false;false;false;false
str::pattern::TwoWaySearcher::byteset_contains;false;false;true;false
core_arch::x86::avx2::_mm256_broadcastw_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtps_epu32;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
num::<impl u32>::unchecked_shr;true;false;false;false
<str::iter::Matches<'a, P> as clone::Clone>::clone;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::bit::BitAnd<&num::wrapping::Wrapping<u128>>>::bitand;false;false;false;false
<&'a i128 as ops::bit::Shr<i16>>::shr;false;false;false;false
<&mut S as async_iter::async_iter::AsyncIterator>::poll_next;false;false;true;false
result::Result::<T, E>::map;false;false;true;false
core_arch::x86::avx512f::_mm512_min_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_and_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_reduce_max_epu16;true;true;false;false
<num::saturating::Saturating<u32> as ops::arith::AddAssign<&num::saturating::Saturating<u32>>>::add_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_broadcastb_epi8;true;true;false;false
<&'a num::saturating::Saturating<i128> as ops::arith::Sub<num::saturating::Saturating<i128>>>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_div_ph;true;true;true;false
fmt::num::<impl fmt::Octal for u32>::fmt;false;false;true;false
<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign;false;false;true;false
num::<impl u128>::isolate_least_significant_one;false;false;false;false
intrinsics::simd::simd_fma;true;false;false;false
<u32 as ops::bit::Shl<i16>>::shl;false;false;false;false
iter::traits::collect::default_extend_tuple_b::extend;false;false;true;false
<u8 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
f32::<impl f32>::signum;false;false;true;false
<usize as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<core_arch::simd::u64x4 as clone::Clone>::clone;false;false;false;false
num::<impl u64>::unchecked_sub::precondition_check;false;false;false;false
core_arch::x86_64::rdrand::_rdrand64_step;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutexvar_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_add_sh;true;true;true;false
slice::<impl [T]>::get_disjoint_mut;false;true;true;false
num::nonzero::NonZero::<i32>::reverse_bits;false;true;false;false
num::wrapping::Wrapping::<i32>::count_ones;false;false;false;false
<i32 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
num::<impl u64>::wrapping_pow;false;false;false;true
fmt::rt::Argument::<'_>::new_lower_hex;false;false;false;false
<sync::atomic::AtomicI32 as convert::From<i32>>::from;false;false;false;false
core_arch::x86::sse::_mm_ucomilt_ss;true;true;true;false
<u32 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<str::iter::EscapeDefault<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<i128 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
<i64 as fmt::num::DisplayInt>::zero;false;false;false;false
task::poll::Poll::<T>::map;false;false;true;false
clone::impls::<impl clone::Clone for &T>::clone;false;false;false;false
core_arch::x86::sse2::_mm_add_epi32;true;true;false;false
<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&num::saturating::Saturating<u8>>>::bitor_assign;false;false;true;false
slice::<impl [T]>::array_windows;false;false;false;false
core_arch::simd::u16x16::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fmsub_round_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_shufflehi_epi16;true;true;false;false
<bstr::ByteStr as ops::index::Index<ops::range::RangeFull>>::index;false;false;false;false
<u16 as num::bignum::FullOps>::full_mul_add;false;false;false;false
<f32 as ops::arith::AddAssign<&f32>>::add_assign;false;false;true;false
<u128 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_unchecked;true;true;false;false
slice::sort::select::ninther;false;false;true;false
num::int_log10::usize;false;false;false;false
core_arch::x86::avx512fp16::_mm_fmadd_pch;true;true;true;false
core_simd::swizzle_dyn::avx2_pshufb;true;true;false;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::saturating_abs;false;false;false;false
num::saturating::Saturating::<i128>::is_positive;false;false;false;false
f32::<impl f32>::midpoint;false;false;true;false
num::<impl usize>::pow;false;false;false;true
<i16 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_cvt_roundps_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_expandloadu_ps;true;true;true;false
<&'a i64 as ops::bit::Shr<i64>>::shr;false;false;false;false
<u64 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_mul_pd;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm256_fpclass_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_fnmsub_round_ps;true;true;true;false
cmp::PartialOrd::lt;false;false;false;false
num::<impl u16>::checked_rem_euclid;false;false;false;false
core_arch::x86::avx512f::_mm_mask_store_pd;true;true;true;false
<num::saturating::Saturating<i64> as ops::bit::Not>::not;false;false;false;false
<num::niche_types::Nanoseconds as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor;false;false;false;false
hint::black_box;false;false;false;false
char::methods::<impl char>::to_ascii_uppercase;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_abs_epi64;true;true;false;false
ffi::c_str::CStr::from_bytes_with_nul;false;true;false;false
sync::atomic::AtomicBool::fetch_and;false;true;true;false
char::methods::encode_utf8_raw::do_panic::runtime;false;true;false;false
num::<impl i64>::checked_shr;false;true;false;false
intrinsics::atomic_nand_acquire;true;false;true;false
<slice::sort::stable::drift::DriftsortRun as clone::Clone>::clone;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<str::pattern::SearchStep as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_getmant_round_sh;true;true;true;false
num::<impl u8>::overflowing_shl;false;false;false;false
char::methods::<impl char>::is_digit;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&i8>>::bitor_assign;false;false;true;false
core_arch::x86::__m512d::as_array;false;true;true;false
core_arch::x86::avx512f::_mm_mask_cmp_epi32_mask;true;true;false;false
core_arch::simd::u32x2::splat::JustOne;false;false;false;false
num::<impl i32>::overflowing_shl;false;false;false;false
<&isize as ops::bit::BitOr<&isize>>::bitor;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u8>>>::bitxor_assign;false;false;true;false
<&i16 as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmple_epi8_mask;true;true;false;false
num::niche_types::NonZeroU64Inner::new_unchecked;true;false;false;false
num::nonzero::NonZero::<i16>::checked_mul;false;true;false;false
<usize as ops::bit::Shl<i8>>::shl;false;false;false;false
<marker::variance::PhantomCovariant<T> as default::Default>::default;false;false;false;false
ptr::read;true;true;true;false
num::dec2flt::parse::try_parse_digits;false;false;false;true
<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&u64>>::mul_assign;false;false;true;false
<num::niche_types::I64NotAllOnes as cmp::PartialOrd>::partial_cmp;false;false;false;false
<&'a u16 as ops::bit::Shl<isize>>::shl;false;false;false;false
<&i128 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_add_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_i32scatter_pd;true;true;true;false
num::wrapping::Wrapping::<u16>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpgt_epi32_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_expandloadu_ps;true;true;true;false
<i32 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<iter::adapters::intersperse::Intersperse<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_packs_epi32;true;true;false;false
core_arch::x86::avx512vbmi::_mm_mask_permutexvar_epi8;true;true;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<i16, N>>::sub;false;true;false;false
num::fmt::Part::Num;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_alignr_epi8;true;true;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
ptr::<impl hash::Hash for F>::hash;false;false;true;false
<&'a f16 as ops::arith::Sub<f16>>::sub;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_test_epi16_mask;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::DivAssign<i8>>::div_assign;false;false;true;false
<u16 as iter::range::Step>::backward;false;false;false;false
<range::RangeFrom<Idx> as cmp::PartialEq>::eq;false;false;true;false
<u16 as ops::arith::RemAssign<&u16>>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_ror_epi64;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::copysign;false;false;true;false
<i16 as ops::bit::Shl<&i8>>::shl;false;false;false;false
option::Option::<T>::as_deref_mut;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_unpackhi_epi16;true;true;false;false
<(EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(F, E, D, C, B, A)>>::extend_one;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_alignr_epi32;true;true;false;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<u32, N>> for core_simd::vector::Simd<u32, N>>::sum;false;false;false;true
core_arch::x86::avx512vbmi2::_mm_mask_expand_epi8;true;true;false;false
<&'a i8 as ops::bit::BitOr<i8>>::bitor;false;false;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<usize, N>>::sub;false;true;false;false
<net::ip_addr::Ipv4Addr as fmt::Debug>::fmt;false;false;true;false
<str::pattern::Utf8Pattern<'a> as clone::Clone>::clone;false;false;false;false
escape::EscapeIterInner::<N>::as_ascii;false;true;true;false
num::<impl i128>::checked_add_unsigned;false;false;false;false
core_arch::x86::avx2::_mm256_blend_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm256_castph256_ph128;true;true;true;false
<&num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_rfold;false;false;true;true
num::saturating::Saturating::<u32>::rotate_right;false;false;false;false
num::wrapping::Wrapping::<isize>::reverse_bits;false;false;false;false
<ascii::EscapeDefault as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
fmt::Arguments::<'a>::new_v1_formatted;false;false;true;false
<slice::iter::ChunkBy<'a, T, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_mul_epi32;true;true;false;false
core_arch::x86::avx512cd::_mm256_conflict_epi64;true;true;false;false
<&num::wrapping::Wrapping<i128> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<core_arch::simd::u8x8 as clone::Clone>::clone;false;false;false;false
num::<impl i64>::unchecked_shl::precondition_check;false;false;false;false
slice::<impl [T]>::clone_from_slice;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::Div>::div;false;false;false;false
<&i16 as ops::bit::BitAnd<&i16>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm512_extractf32x4_ps;true;true;true;false
<u64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
<&usize as ops::bit::BitOr<&usize>>::bitor;false;false;false;false
<F as str::pattern::Pattern>::into_searcher;false;false;false;false
core_arch::x86::avx512dq::_mm512_broadcast_f32x2;true;true;true;false
num::<impl u32>::widening_mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_expand_pd;true;true;true;false
iter::traits::iterator::Iterator::eq;false;false;false;false
slice::rotate::ptr_rotate_gcd;true;true;true;true
core_arch::x86::avx512f::_mm512_ternarylogic_epi32;true;true;false;false
intrinsics::atomic_cxchgweak_relaxed_seqcst;true;false;true;false
slice::iter::SplitNMut::<'a, T, P>::new;false;false;true;false
core_simd::ops::deref::<impl ops::bit::BitAnd<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::bitand;false;false;false;false
core_simd::ops::deref::<impl ops::arith::Add<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::add;false;false;false;false
<cell::RefMut<'_, T> as fmt::Debug>::fmt;false;false;true;false
<&'a i8 as ops::bit::Shl<isize>>::shl;false;false;false;false
core_arch::x86::sse::_mm_cmpneq_ss;true;true;true;false
<u8 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
intrinsics::truncf16;true;false;true;false
core_arch::x86::avx512f::_mm256_cvtepi64_epi16;true;true;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<&'a num::saturating::Saturating<u16> as ops::arith::Add<num::saturating::Saturating<u16>>>::add;false;false;false;false
core_arch::x86_64::amx::_tile_release;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_inserti32x8;true;true;false;false
<num::niche_types::Nanoseconds as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_zextpd256_pd512;true;true;true;false
core_arch::x86::avx512bw::_mm_cmp_epi8_mask;true;true;false;false
sync::atomic::AtomicI64::try_update;false;false;true;false
<&u32 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<i32 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
str::pattern::SearchStep::Reject;false;false;false;false
num::<impl i8>::wrapping_shr;false;true;false;false
num::nonzero::NonZero::<u8>::isolate_least_significant_one;false;true;false;false
ptr::mut_ptr::<impl *mut T>::as_mut;true;true;true;false
<&'a i16 as ops::bit::Shr<u16>>::shr;false;false;false;false
iter::sources::once::once;false;false;false;false
iter::adapters::cloned::Cloned::<I>::new;false;false;false;false
str::<impl str>::trim_ascii_end;false;true;false;false
num::overflow_panic::rem;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign;false;false;true;false
net::ip_addr::Ipv4Addr::to_bits;false;false;false;false
<&'a num::wrapping::Wrapping<u8> as ops::bit::BitXor<num::wrapping::Wrapping<u8>>>::bitxor;false;false;false;false
<core_arch::simd::f16x32 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_fmsubadd_ph;true;true;true;false
sync::atomic::AtomicBool::as_ptr;false;false;true;false
<u64 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::Div>::div;false;false;false;false
str::iter::LinesAny;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_broadcastq_epi64;true;true;false;false
slice::iter::<impl iter::traits::collect::IntoIterator for &'a mut [T]>::into_iter;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for f32>::gt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtpd_epi32;true;true;true;false
core_arch::x86::sse2::_mm_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_max_ps;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi32;true;true;false;false
ptr::const_ptr::<impl *const T>::wrapping_byte_add;false;false;true;false
<&'a num::wrapping::Wrapping<i128> as ops::bit::BitAnd<num::wrapping::Wrapping<i128>>>::bitand;false;false;false;false
num::saturating::Saturating::<u32>::trailing_zeros;false;false;false;false
num::<impl i128>::unchecked_mul;true;false;false;false
<&'a num::wrapping::Wrapping<u32> as ops::bit::Shl<usize>>::shl;false;false;false;false
<u64 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<usize>>>::spec_try_rfold;false;false;true;true
<num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpneq_epi64_mask;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_sllv_epi32;true;true;false;false
core_arch::x86::sse2::_mm_sub_epi64;true;true;false;false
<&mut I as iter::traits::iterator::IteratorRefSpec>::spec_try_fold;false;false;true;true
<i32 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtxph_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fcmul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fmaddsub_ph;true;true;true;false
option::Option::<T>::and;false;false;true;false
core_arch::x86::avx::_mm_maskload_pd;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_insertf64x2;true;true;true;false
<i128 as ops::bit::Shr<i64>>::shr;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&num::wrapping::Wrapping<isize>>>::add_assign;false;false;true;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512fp16::_mm256_undefined_ph;true;false;false;false
ops::control_flow::ControlFlow::Continue;false;false;false;false
num::nonzero::NonZero::<isize>::to_le;false;true;false;false
<num::saturating::Saturating<i128> as ops::arith::SubAssign<&num::saturating::Saturating<i128>>>::sub_assign;false;false;true;false
iter::adapters::inspect::Inspect::<I, F>::do_inspect;false;false;true;false
<iter::adapters::map_windows::Buffer<T, N> as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicIsize::fetch_add;false;true;true;false
core_arch::x86::sse::_mm_add_ss;true;true;true;false
<hash::sip::SipHasher as hash::Hasher>::finish;false;false;true;false
<&'a num::saturating::Saturating<i128> as ops::arith::Mul<num::saturating::Saturating<i128>>>::mul;false;false;false;false
<f64 as convert::num::FloatToInt<i128>>::to_int_unchecked;true;true;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi8;true;true;false;false
<&'a i16 as ops::bit::Shl<i8>>::shl;false;false;false;false
panic::location::Location::<'a>::caller;false;false;false;false
<&num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add;false;false;false;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::nonzero::NonZero::<u8>::checked_next_power_of_two;false;true;false;false
<&num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor;false;false;false;false
core_simd::ops::assign::<impl ops::arith::DivAssign<U> for core_simd::vector::Simd<T, N>>::div_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<&u128>>::bitand_assign;false;false;true;false
num::wrapping::Wrapping::<i128>::to_le;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_test_epi64_mask;true;true;false;false
iter::traits::iterator::Iterator::any;false;false;true;true
<i16 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<i8 as ops::bit::Shr<u32>>::shr;false;false;false;false
<ops::range::RangeInclusive<T> as iter::range::RangeInclusiveIteratorImpl>::spec_try_rfold;false;true;true;true
<f16 as ops::arith::Div<&f16>>::div;false;false;true;false
num::nonzero::NonZero::<i8>::unchecked_mul;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldi_epi64;true;true;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reverse_bits;false;true;false;false
core_arch::simd::u8x32;false;false;false;false
<&'a bstr::ByteStr as default::Default>::default;false;false;false;false
fmt::write;false;true;true;true
num::nonzero::NonZero::<u8>::rotate_left;false;true;false;false
num::<impl u8>::div_ceil;false;false;false;false
<&i64 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<u8 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::find_map;false;false;true;true
num::<impl u32>::saturating_pow;false;false;false;false
<&num::wrapping::Wrapping<isize> as ops::bit::Not>::not;false;false;false;false
core_arch::simd::u8x64::extract;false;true;false;false
num::<impl i16>::from_ascii_radix;false;false;false;true
num::<impl u64>::from_ascii;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_sqrt_pd;true;true;true;false
num::<impl u128>::wrapping_rem_euclid;false;false;false;false
core_arch::x86::avx512bw::_store_mask64;true;true;true;false
alloc::Allocator::shrink;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_expand_epi8;true;true;false;false
core_arch::x86::sse2::_mm_store_pd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epi16;true;true;true;false
core_arch::x86_64::tbm::_bextri_u64;true;true;false;false
num::<impl u8>::carrying_mul;false;false;false;false
num::<impl u64>::unbounded_shl;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_set1_epi64;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shldv_epi64;true;true;false;false
fmt::rt::Argument::<'_>::new_binary;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epu16;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fnmsub_ph;true;true;true;false
<u128 as ops::bit::BitAnd>::bitand;false;false;false;false
<&'a isize as ops::bit::Shl<usize>>::shl;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
mem::manually_drop::ManuallyDrop::<T>::take;true;true;true;false
num::nonzero::NonZero::<isize>::wrapping_neg;false;true;false;false
num::<impl i64>::leading_ones;false;false;false;false
<Iter as iter::traits::collect::TraitC<EC, EB, EA>>::extend::extend;false;false;true;false
num::<impl i32>::saturating_pow;false;false;false;false
num::<impl i128>::carrying_add;false;false;false;false
<&num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub;false;false;false;false
core_arch::x86::avx::_mm256_sub_ps;true;true;true;false
num::<impl usize>::unchecked_sub::precondition_check;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_subs_epu16;true;true;false;false
num::<impl i128>::saturating_mul;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
num::saturating::Saturating::<u64>::pow;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_fmsub_round_ph;true;true;true;false
<u128 as ops::bit::Shl<i64>>::shl;false;false;false;false
num::niche_types::Nanoseconds::new;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAnd>::bitand;false;false;false;false
char::methods::<impl char>::to_digit;false;false;false;false
core_arch::simd::m8x16::splat;false;true;false;false
ptr::const_ptr::<impl *const T>::is_aligned_to;false;false;true;false
core_arch::x86_64::tbm::_blsfill_u64;true;false;false;false
num::<impl i32>::checked_shl;false;true;false;false
num::<impl u64>::isqrt;false;true;false;false
core_arch::x86::avx512fp16::_mm_roundscale_sh;true;true;true;false
num::saturating::Saturating::<usize>::from_be;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_mask_expandloadu_epi64;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::Rem<&num::saturating::Saturating<i32>>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srai_epi64;true;true;false;false
num::saturating::Saturating::<u16>::count_ones;false;false;false;false
core_arch::x86::avx512f::_mm256_cvttps_epu32;true;true;true;false
core_arch::simd::u32x32;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::f16c::_mm256_cvtph_ps;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_abs_epi16;true;true;false;false
time::Duration::saturating_mul;false;false;false;false
<num::nonzero::NonZero<T> as ops::bit::BitOrAssign<T>>::bitor_assign;false;false;true;false
convert::num::<impl convert::From<u16> for u64>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_insertf64x4;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_insertf32x8;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmsub_sh;true;true;true;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::next_chunk;false;true;true;true
num::<impl u16>::strict_mul;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_mul_ph;true;true;true;false
num::<impl i16>::wrapping_pow;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_min_sd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_roundscale_pd;true;true;true;false
<&'a num::wrapping::Wrapping<i16> as ops::arith::Div<num::wrapping::Wrapping<i16>>>::div;false;false;false;false
num::<impl u16>::wrapping_rem_euclid;false;false;false;false
fmt::num::imp::<impl u64>::_fmt;false;true;true;true
core_arch::x86::avx512bw::_mm256_cvtusepi16_epi8;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&num::wrapping::Wrapping<u64>>>::div_assign;false;false;true;false
num::<impl usize>::is_multiple_of;false;false;false;false
ptr::<impl cmp::Ord for F>::cmp;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
num::<impl i64>::strict_shl;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::Sub>::sub;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::xsave::_xsaveopt;true;true;true;false
core_arch::x86::avx512f::_mm_i64scatter_pd;true;true;true;false
<core_arch::simd::i16x16 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmpeq_epi8_mask;true;true;false;false
sync::atomic::AtomicU8::from_mut;false;true;true;false
core_arch::simd::i32x4::splat::JustOne;false;false;false;false
<i128 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtps_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_sch;true;true;true;false
core_simd::vector::Simd::<T, N>::store_select_ptr;true;true;true;false
<&'a i16 as ops::arith::Rem<i16>>::rem;false;false;false;false
core_arch::x86::sse2::_mm_or_si128;true;true;false;false
<u16 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
num::flt2dec::strategy::grisu::format_shortest;false;true;true;false
num::<impl isize>::wrapping_sub;false;false;false;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::__m256d;false;false;true;false
<i8 as ops::arith::AddAssign<&i8>>::add_assign;false;false;true;false
<str::iter::CharIndices<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi64;true;true;false;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G)>::hash;false;false;true;false
num::bignum::tests::Big8x3::from_small;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_roundscale_sh;true;true;true;false
sync::atomic::AtomicUsize::from_mut_slice;false;true;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<u32, N>> for core_simd::vector::Simd<u32, N>>::product;false;false;false;true
pin::Pin::<Ptr>::into_inner;false;false;true;false
net::parser::Parser::<'a>::read_socket_addr_v4;false;false;true;false
core_arch::simd::i8x2::splat;false;true;false;false
<str::pattern::MultiCharEqSearcher<'a, C> as str::pattern::Searcher<'a>>::haystack;false;false;true;false
<&T as fmt::Binary>::fmt;false;false;true;false
<core_arch::x86::__m512d as clone::Clone>::clone;false;false;true;false
<u32 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_abs_epi16;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::sse2::_mm_srl_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_storeu_pd;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::leading_zeros;false;true;false;false
<num::niche_types::NonZeroI32Inner as cmp::PartialEq>::eq;false;false;false;false
num::<impl i64>::overflowing_rem;false;false;false;false
<&usize as ops::bit::Shl<&i16>>::shl;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvtxps_ph;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::leading_ones;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::DivAssign>::div_assign;false;false;true;false
num::<impl i64>::overflowing_sub;false;false;false;false
core_arch::x86::__m256d::splat;false;true;true;false
<&'a u8 as ops::bit::Shr<i128>>::shr;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::init_mut;false;true;true;false
<num::saturating::Saturating<u128> as ops::arith::Rem>::rem;false;false;false;false
slice::<impl [T]>::align_to_offsets::gcd;false;false;false;false
<core_arch::simd::f32x2 as cmp::PartialEq>::eq;false;false;true;false
<num::flt2dec::decoder::FullDecoded as clone::Clone>::clone;false;false;true;false
<u16 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<usize as ops::bit::Shr<&u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_loadu_epi64;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::DivAssign>::div_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::Add>::add;false;false;false;false
pin::Pin::<Ptr>::as_deref_mut;false;true;true;false
num::<impl u128>::unchecked_mul::precondition_check;false;false;false;false
<str::pattern::TwoWaySearcher as clone::Clone>::clone;false;false;true;false
<mem::transmutability::Assume as cmp::PartialEq>::eq;false;false;true;false
<&u8 as ops::bit::BitXor<&u8>>::bitxor;false;false;false;false
sync::exclusive::Exclusive::<T>::from_mut;false;true;true;false
num::<impl isize>::unchecked_shl::precondition_check;false;false;false;false
<slice::iter::GenericSplitN<I> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_comineq_sd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_storeu_epi8;true;true;true;false
core_arch::x86::avx512dq::_ktestz_mask8_u8;true;true;false;false
<i32 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm_mask_add_round_sd;true;true;true;false
num::wrapping::Wrapping;false;false;false;false
<num::niche_types::U64NotAllOnes as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::RemAssign<isize>>::rem_assign;false;false;true;false
num::<impl i32>::unbounded_shl;false;true;false;false
intrinsics::ctlz;false;false;false;false
<escape::EscapeIterInner<N> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_reduce_round_ss;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::MulAssign<&i32>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_sllv_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_add_epi16;true;true;false;false
<isize as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
ptr::non_null::NonNull::<[T]>::as_non_null_ptr;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::fill_from;false;true;true;true
core_arch::x86::avx512f::_mm256_mask_cmpgt_epi32_mask;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fnmadd_round_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_fmadd_round_sch;true;true;true;false
<iter::adapters::scan::Scan<I, St, F> as fmt::Debug>::fmt;false;false;true;false
num::wrapping::Wrapping::<u64>::from_le;false;false;false;false
<bstr::ByteStr as ops::index::IndexMut<usize>>::index_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_div_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_cmplt_epu64_mask;true;true;false;false
<&bool as ops::bit::BitAnd<&bool>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_fnmadd_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fmadd_ps;true;true;true;false
core_arch::x86::sse::_mm_div_ps;true;true;true;false
ptr::non_null::NonNull::<T>::map_addr;false;false;true;false
<&u32 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<&'a i32 as ops::bit::Shl<u16>>::shl;false;false;false;false
<&usize as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_f64x2;true;true;true;false
str::iter::RSplitTerminator::<'a, P>::remainder;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvttph_epi16;true;true;true;false
cell::RefCell::<T>::new;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<i8 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_cvtepi64_ps;true;true;true;false
<bool as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtepu16_ph;true;true;false;false
sync::atomic::AtomicPtr::<T>::update;false;false;true;true
mem::maybe_uninit::MaybeUninit::<T>::new;false;false;false;false
intrinsics::simd::simd_cast;true;false;false;false
intrinsics::assume;true;false;false;false
sync::atomic::AtomicIsize::from_ptr;true;true;true;false
slice::iter::RSplitMut::<'a, T, P>::new;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_mulhi_epi16;true;true;false;false
<f16 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fmsubadd_round_pd;true;true;true;false
intrinsics::simd::simd_rem;true;false;false;false
async_iter::async_iter::AsyncIterator::size_hint;false;false;false;false
<u64 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<u64 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_fcmul_sch;true;true;true;false
<core_arch::simd::f16x16::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bf16::_mm_maskz_dpbf16_ps;true;true;true;false
ptr::write_volatile::precondition_check;false;false;true;false
core_arch::x86::avx512bw::_kxnor_mask32;true;true;false;false
num::<impl u128>::unchecked_mul;true;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitAnd>::bitand;false;false;false;false
<u8 as ops::arith::MulAssign<&u8>>::mul_assign;false;false;true;false
fmt::Formatter::<'a>::flags;false;false;true;false
<u8 as ops::arith::Add<&u8>>::add;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_min_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvtt_roundps_epi64;true;true;true;false
core_arch::x86::avx::_mm256_loadu_pd;true;true;true;false
num::bignum::tests::Big8x3::digits;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::traits::iterator::Iterator>::nth;false;false;true;false
iter::traits::iterator::Iterator::position;false;false;true;true
core_arch::x86::sse2::_mm_unpacklo_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_permutex2var_epi16;true;true;false;false
core_arch::x86::sse2::_mm_slli_si128_impl::mask;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_dbsad_epu8;true;true;false;false
<&'a num::wrapping::Wrapping<u8> as ops::arith::Rem<num::wrapping::Wrapping<u8>>>::rem;false;false;false;false
sync::atomic::AtomicI16::fetch_nand;false;true;true;false
core_arch::x86::avx512f::_mm_cvtss_u32;true;true;true;false
num::<impl u128>::to_le;false;false;false;false
<usize as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
<u128 as ops::bit::Shl<&i16>>::shl;false;false;false;false
marker::variance::PhantomInvariantLifetime::<'_>::new;false;false;false;false
<i32 as ops::bit::Shl<isize>>::shl;false;false;false;false
<iter::sources::once_with::OnceWith<F> as fmt::Debug>::fmt;false;false;true;false
<net::socket_addr::SocketAddrV6 as cmp::Ord>::cmp;false;false;true;false
<(EC, EB, EA) as iter::traits::collect::Extend<(C, B, A)>>::extend;false;false;true;false
core_arch::x86::avx2::_mm256_srlv_epi64;true;true;false;false
<&num::nonzero::NonZero<i8> as ops::arith::Neg>::neg;false;false;false;false
num::nonzero::NonZero::<i32>::checked_abs;false;true;false;false
num::nonzero::NonZero::<i128>::checked_abs;false;true;false;false
num::niche_types::NonZeroU8Inner::new;false;false;false;false
cmp::Ordering::reverse;false;false;false;false
sync::atomic::AtomicU8::compare_exchange_weak;false;true;true;false
<&mut H as hash::Hasher>::write_i32;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
core_arch::x86::sse::_mm_movemask_ps;true;true;true;false
num::wrapping::Wrapping::<i8>::leading_zeros;false;false;false;false
core_arch::x86::avx512vnni::_mm256_maskz_dpbusd_epi32;true;true;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<u16, N>>::div;false;true;false;false
num::<impl usize>::overflowing_pow;false;false;false;true
core_arch::x86::avx512f::_mm_mask_cmple_epu64_mask;true;true;false;false
<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign>::bitor_assign;false;false;true;true
cmp::impls::<impl cmp::PartialEq for i16>::ne;false;false;false;false
f16::<impl f16>::to_radians;false;false;true;false
<ffi::c_void as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
ptr::mut_ptr::<impl *mut T>::is_aligned;false;false;true;false
<u32 as ops::bit::Shr<i8>>::shr;false;false;false;false
ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap::runtime;false;false;true;false
num::<impl i8>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_slli_epi32;true;true;false;false
num::<impl i8>::unchecked_neg;true;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_extractf32x8_ps;true;true;true;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundi32_sh;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::arith::Rem>::rem;false;false;false;false
escape::verbatim;false;false;false;false
num::<impl u128>::rotate_right;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::sse2::_mm_set_epi32;true;false;false;false
core_arch::x86::avx512fp16::_mm256_cvttph_epi16;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::Rem<&num::wrapping::Wrapping<u16>>>::rem;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpeq_epu64_mask;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_rsqrt14_sd;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
num::<impl isize>::abs_diff;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::MulAssign>::mul_assign;false;false;true;false
num::nonzero::NonZero::<u64>::unchecked_add;true;true;false;false
str::<impl str>::starts_with;false;false;false;false
num::<impl u32>::unchecked_disjoint_bitor;true;true;false;false
num::<impl i128>::strict_add;false;false;false;false
num::<impl u8>::max_value;false;false;false;false
<str::lossy::Utf8Chunks<'a> as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_rsqrt14_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_i32scatter_epi32;true;true;true;false
core_arch::x86::avx512f::_mm_cvt_roundsd_ss;true;true;true;false
num::<impl i32>::saturating_div;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_cvtsepi16_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_zextph256_ph512;true;true;true;false
<cell::UnsafeCell<T> as convert::From<T>>::from;false;false;false;false
<num::niche_types::NonZeroUsizeInner as cmp::PartialEq>::eq;false;false;false;false
<&'a f128 as ops::arith::Sub<f128>>::sub;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvttph_epi32;true;true;true;false
<num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem;false;false;false;false
num::<impl usize>::wrapping_add_signed;false;false;false;false
<u32 as ops::bit::BitAnd<&u32>>::bitand;false;false;false;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<i8, N>>::rem;false;true;false;false
<core_simd::vector::Simd<T, N> as convert::TryFrom<&[T]>>::try_from;false;false;false;false
<u32 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_mul_epu32;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 8>> for core_arch::x86::__m256i>::from;false;false;false;false
num::<impl i64>::saturating_mul;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_shufflehi_epi16;true;true;false;false
str::iter::MatchIndices;false;false;true;false
num::nonzero::NonZero::<u32>::swap_bytes;false;true;false;false
<&'a bool as ops::bit::BitAnd<bool>>::bitand;false;false;false;false
num::<impl usize>::strict_add_signed;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtsepi32_epi16;true;true;false;false
<str::iter::SplitAsciiWhitespace<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mul_ph;true;true;true;false
<core_arch::simd::f16x4 as cmp::PartialEq>::eq;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
<&'a u64 as ops::bit::Shr<u64>>::shr;false;false;false;false
<convert::Infallible as clone::Clone>::clone;false;false;false;false
<iter::adapters::intersperse::IntersperseWith<I, G> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<&num::saturating::Saturating<u16> as ops::bit::BitOr<&num::saturating::Saturating<u16>>>::bitor;false;false;false;false
<pin::Pin<Ptr> as fmt::Pointer>::fmt;false;false;true;false
<hash::BuildHasherDefault<H> as default::Default>::default;false;false;false;false
result::Result::<T, E>::is_err_and;false;false;true;false
core_arch::x86::avx512f::_mm256_cvtusepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_sub_sd;true;true;true;false
<&'a i32 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_madd_epi16;true;true;false;false
cmp::impls::<impl cmp::PartialEq<&B> for &mut A>::eq;false;false;true;false
slice::index::slice_end_index_len_fail::do_panic::runtime;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
sync::atomic::AtomicI8::update;false;false;true;true
<num::wrapping::Wrapping<i16> as ops::arith::AddAssign<&num::wrapping::Wrapping<i16>>>::add_assign;false;false;true;false
<char::ToLowercase as iter::traits::iterator::Iterator>::count;false;false;true;true
core_arch::x86::avx512fp16::_mm_maskz_conj_pch;true;true;true;false
num::nonzero::NonZero::<u64>::count_ones;false;true;false;false
<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv4Addr>>::from;false;false;false;false
<u8 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
core_arch::simd::u64x8;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvti64_sd;true;true;true;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<num::wrapping::Wrapping<u16> as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512dq::_mm256_range_ps;true;true;true;false
<num::saturating::Saturating<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_slli_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_broadcastd_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_subs_epi8;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::fold;false;false;true;false
iter::adapters::fuse::and_then_or_clear;false;false;true;false
<num::niche_types::NonZeroI8Inner as clone::Clone>::clone;false;false;false;false
tuple::<impl cmp::PartialEq for (A, Z, Y, X, W, V, U, T)>::eq;false;false;false;false
core_arch::x86::gfni::_mm512_maskz_gf2p8affineinv_epi64_epi8;true;true;false;false
core_arch::x86::f16c::_mm256_cvtps_ph;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_min_epu16;true;true;false;false
num::nonzero::NonZero::<u32>::isqrt;false;true;false;false
num::wrapping::Wrapping::<u64>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_mask_movehdup_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtss_sh;true;true;true;false
<isize as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::niche_types::NonZeroI128Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<any::TypeId as fmt::Debug>::fmt;false;true;true;false
core_arch::x86::avx2::_mm256_sub_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_fmadd_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_pd;true;true;true;false
<&isize as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::simd::u8x8::extract;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_add_pd;true;true;true;false
sync::atomic::AtomicU16::compare_exchange_weak;false;true;true;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T, T, T, T, T)> for [T; 11]>::from";false;false;true;false
num::saturating::Saturating::<u64>::to_be;false;false;false;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<f32, N>>::add;false;true;true;false
<&num::wrapping::Wrapping<i8> as ops::arith::Rem<&num::wrapping::Wrapping<i8>>>::rem;false;false;false;false
<ops::range::RangeTo<T> as ops::range::OneSidedRange<T>>::bound;false;false;false;false
num::<impl u64>::leading_ones;false;false;false;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
<range::iter::IterRange<A> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx2::_mm256_cvtepi16_epi64;true;true;false;false
num::<impl u64>::wrapping_rem;false;false;false;false
core_arch::x86::avx512f::_mm256_max_epu64;true;true;false;false
str::<impl str>::trim_end_matches;false;true;false;false
<isize as ops::bit::Shl>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_packs_epi16;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_infinite;false;false;true;false
num::nonzero::NonZero::<isize>::abs;false;true;false;false
core_arch::x86::avx512f::_mm512_mask3_fnmsub_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvtph_epu16;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvt_roundpd_epu64;true;true;true;false
intrinsics::sinf128;true;false;true;false
core_arch::x86::sse::_mm_max_ss;true;true;true;false
fmt::num::imp::<impl fmt::UpperExp for u32>::fmt;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::Mul>::mul;false;false;false;false
<iter::sources::once::Once<T> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<&'a mut I as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<core_arch::simd::u8x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
<num::niche_types::NonZeroIsizeInner as clone::Clone>::clone;false;false;false;false
ptr::mut_ptr::<impl *mut T>::byte_offset_from;true;true;true;false
<sync::atomic::AtomicU64 as convert::From<u64>>::from;false;false;false;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T)> for [T; 7]>::from";false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu16;true;true;true;false
core_arch::x86::avx512fp16::_mm_fpclass_ph_mask;true;true;true;false
num::nonzero::NonZero::<u128>::isolate_least_significant_one;false;true;false;false
convert::num::<impl convert::From<i8> for f32>::from;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpgt_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_reduce_and_epi16;true;true;false;false
fmt::builders::DebugInner::<'a, 'b>::is_pretty;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_fpclass_ps_mask;true;true;true;false
<str::CharEscapeDefault as ops::function::FnMut<(char,)>>::call_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_sqrt_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_rorv_epi64;true;true;false;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
ptr::const_ptr::<impl *const T>::read_volatile;true;true;true;false
char::methods::<impl char>::len_utf16;false;false;false;false
<core_arch::simd::m16x8 as fmt::Debug>::fmt;false;false;true;false
<u16 as num::bignum::FullOps>::full_div_rem;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg;false;false;false;false
num::<impl i128>::isqrt;false;false;false;false
intrinsics::round_ties_even_f32;false;false;true;false
num::<impl i8>::from_ascii_radix;false;false;false;true
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i8> for core_simd::vector::Simd<i8, N>>::shl;false;false;false;false
<&'a num::wrapping::Wrapping<isize> as ops::arith::Rem<num::wrapping::Wrapping<isize>>>::rem;false;false;false;false
core_arch::x86::sse::_mm_getcsr;true;true;false;false
core_arch::x86::avx512dq::_mm256_mask_range_ps;true;true;true;false
panicking::panic_display;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpwssd_epi32;true;true;false;false
core_arch::x86::__m512i::as_i16x32;false;false;false;false
<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx::_mm_broadcast_ss;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_fpclass_pd_mask;true;true;true;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::shift_elements_left;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi16_mask;true;true;false;false
array::Guard::<'_, T>::push_unchecked;true;true;true;false
slice::sort::stable::merge::merge;false;true;true;false
tuple::<impl cmp::PartialOrd for (D, C, B, A, Z, Y, X, W, V, U, T)>::le;false;false;false;false
core_arch::x86::avx512f::_mm256_cmple_epu64_mask;true;true;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
num::<impl i16>::trailing_zeros;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepu16_ph;true;true;false;false
core_arch::x86::sse42::_mm_cmpgt_epi64;true;true;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::all;false;false;true;true
str::iter::SplitInternal::<'a, P>::get_end;false;true;true;false
num::<impl u16>::overflowing_add_signed;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<u128 as ops::bit::Not>::not;false;false;false;false
num::<impl i64>::abs_diff;false;false;false;false
<time::Duration as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86::avx2::_mm256_extracti128_si256;true;true;false;false
<i128 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512bf16::_mm_mask_dpbf16_ps;true;true;true;false
core_simd::vector::Simd::<T, N>::copy_to_slice;false;true;true;false
alloc::layout::Layout::array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_and_epi64;true;true;false;false
<&i16 as ops::arith::Sub<&i16>>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_set1_ph;true;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmpgt_epu16_mask;true;true;false;false
<(EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(K, J, I, H, G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
<u16 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<range::Range<T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
core_arch::x86::__m256i::as_i64x4;false;false;false;false
core_arch::x86::avx512dq::_mm256_maskz_xor_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_unpacklo_epi16;true;true;false;false
ptr::read_unaligned;true;true;true;false
core_arch::x86::avx512dq::_mm256_insertf64x2;true;true;true;false
<bstr::ByteStr as cmp::Ord>::cmp;false;false;false;false
<isize as ops::arith::Sub<&isize>>::sub;false;false;false;false
<ops::index_range::IndexRange as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_epu32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_conj_pch;true;true;true;false
intrinsics::simd::simd_extract;true;false;false;false
num::nonzero::NonZero::<u128>::saturating_add;false;true;false;false
<range::RangeFrom<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;false;false
<&mut W as fmt::Write>::write_fmt;false;false;true;false
<f32 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_reduce_ph;true;true;true;false
<&'a u128 as ops::bit::BitXor<u128>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmple_epi32_mask;true;true;false;false
convert::num::<impl convert::From<i8> for isize>::from;false;false;false;false
<&num::saturating::Saturating<u32> as ops::arith::Sub<&num::saturating::Saturating<u32>>>::sub;false;false;false;false
intrinsics::unchecked_div;true;false;false;false
core_arch::simd::i8x8;false;false;false;false
iter::adapters::rev::Rev::<T>::new;false;false;false;false
convert::num::<impl convert::From<f32> for f64>::from;false;false;true;false
<marker::PhantomData<T> as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_adds_epu8;true;true;false;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
core_arch::x86::avx512bw::_mm512_mask_subs_epi8;true;true;false;false
num::<impl u64>::div_floor;false;false;false;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<i16, N>>::add;false;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_alignr_epi8;true;true;false;false
<u8 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitXor>::bitxor;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::simd::m32x8;false;false;false;false
iter::traits::collect::default_extend_tuple_k;false;false;true;true
fmt::num::imp::<impl fmt::LowerExp for i16>::fmt;false;false;true;false
<num::saturating::Saturating<T> as fmt::Binary>::fmt;false;false;true;false
num::<impl i8>::strict_div_euclid;false;false;false;false
<i32 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
<slice::iter::ChunkByMut<'a, T, P> as fmt::Debug>::fmt;false;false;true;false
<core_arch::x86::__m256h::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_getmant_ps;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::arith::DivAssign<usize>>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepi64_ph;true;true;false;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_arch::x86::__m128i as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::simd::m64x2::splat;false;true;false;false
core_arch::x86::avx512f::_mm256_cvtusepi64_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_reduce_round_ps;true;true;true;false
core_arch::x86::avx512bf16::_mm_mask_cvtne2ps_pbh;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_broadcastw_epi16;true;true;false;false
<u64 as iter::range::Step>::forward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi16;true;true;false;false
num::<impl u32>::checked_add_signed;false;false;false;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::next;false;false;true;true
<usize as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::x86::sse41::_mm_cmpeq_epi64;true;true;false;false
core_arch::x86::avx2::_mm256_extract_epi16;true;true;false;false
<num::wrapping::Wrapping<i64> as ops::bit::Not>::not;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::DivAssign<&num::saturating::Saturating<usize>>>::div_assign;false;false;true;false
<F as str::pattern::Pattern>::is_suffix_of;false;false;false;false
<char::EscapeUnicode as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
<fmt::num::Binary as fmt::num::GenericRadix>::digit;false;false;false;false
intrinsics::mir::StorageLive;false;false;false;false
iter::traits::iterator::Iterator::min_by::fold;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmp_pd_mask;true;true;true;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::count::to_usize;false;false;false;false
<i32 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_getexp_round_sd;true;true;true;false
num::<impl u8>::is_ascii_hexdigit;false;false;false;false
core_arch::x86::avx512dq::_mm_fpclass_ps_mask;true;true;true;false
core_arch::simd::m8x16;false;false;false;false
cmp::impls::<impl cmp::PartialEq<&mut B> for &mut A>::ne;false;false;true;false
<u64 as ops::bit::Shl<i16>>::shl;false;false;false;false
tuple::<impl cmp::PartialOrd for (U, T)>::le;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i64, 4>>::from;false;false;false;false
num::<impl u64>::unchecked_shl;true;false;false;false
<u128 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
iter::traits::iterator::Iterator::eq_by;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi32_storeu_epi16;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi32;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u8> for core_simd::vector::Simd<u8, N>>::shr;false;false;false;false
<&'a num::saturating::Saturating<i64> as ops::bit::BitXor<num::saturating::Saturating<i64>>>::bitxor;false;false;false;false
<&'a i128 as ops::bit::Shr<i32>>::shr;false;false;false;false
sync::atomic::AtomicBool::from_ptr;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<u16>>::add_assign;false;false;true;false
fmt::float::<impl fmt::Debug for f64>::fmt;false;false;true;false
<ops::range::RangeTo<Idx> as clone::Clone>::clone;false;false;true;false
core_arch::x86::sse42::_mm_cmpistrz;true;true;false;false
num::niche_types::NonZeroUsizeInner;true;false;false;false
<async_iter::from_iter::FromIter<I> as async_iter::async_iter::AsyncIterator>::poll_next;false;false;true;false
<u8 as iter::range::Step>::backward;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_roundscale_ps;true;true;true;false
<&isize as ops::arith::Mul<&isize>>::mul;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fcmadd_round_sch;true;true;true;false
core_arch::x86::avx512fp16::_mm_fmaddsub_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_fmsubadd_pd;true;true;true;false
<num::niche_types::NonZeroU128Inner as cmp::Ord>::cmp;false;false;false;false
net::ip_addr::IpAddr::is_global;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_storeu_epi8;true;true;true;false
<&num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul;false;false;false;false
num::<impl i16>::strict_neg;false;false;false;false
core_arch::x86::avx2::_mm256_adds_epi16;true;true;false;false
num::niche_types::UsizeNoHighBit;true;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::sse::_mm_cvtss_si32;true;true;true;false
<i8 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_max_epi32;true;true;false;false
clone::impls::<impl clone::Clone for f32>::clone;false;false;true;false
<Iter as iter::traits::collect::TraitF<EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
num::<impl i8>::saturating_neg;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::next;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::get_mut;false;true;true;false
core_arch::x86::sse41::_mm_blendv_ps;true;true;true;false
<slice::iter::RChunksExact<'a, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
num::saturating::Saturating::<i64>::to_be;false;false;false;false
ptr::mut_ptr::<impl *mut T>::sub::runtime_sub_nowrap::compiletime;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i64, 4>> for core_arch::x86::__m256i>::from;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_sll_epi64;true;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i32>>::from;false;true;false;false
num::<impl i32>::unchecked_sub::precondition_check;false;false;false;false
<f16 as convert::num::FloatToInt<i16>>::to_int_unchecked;true;true;true;false
core_simd::masks::Mask::<T, N>::set;false;true;true;false
core_arch::x86::avx512bw::_mm256_mask_testn_epi16_mask;true;true;false;false
<u64 as ops::arith::Sub<&u64>>::sub;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_madd_epi16;true;true;false;false
num::wrapping::Wrapping::<usize>::reverse_bits;false;false;false;false
core_arch::x86::avx512f::_mm_mask_add_pd;true;true;true;false
<&num::wrapping::Wrapping<u16> as ops::bit::BitXor<&num::wrapping::Wrapping<u16>>>::bitxor;false;false;false;false
<char::decode::DecodeUtf16<I> as iter::traits::iterator::Iterator>::next;false;true;true;false
<f32 as num::dec2flt::float::RawFloat>::from_u64;false;false;false;false
<time::Duration as ops::arith::Mul<u32>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_ternarylogic_epi32;true;true;false;false
core_arch::x86::avx::_mm_maskstore_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_roundscale_round_ss;true;true;true;false
ptr::mut_ptr::<impl *mut T>::add;true;false;true;false
core_arch::x86::avx512f::_mm256_mask_sra_epi32;true;true;false;false
num::<impl i8>::count_ones;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::MulAssign<&num::saturating::Saturating<i32>>>::mul_assign;false;false;true;false
intrinsics::atomic_cxchgweak_release_relaxed;true;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_packus_epi16;true;true;false;false
<i64 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_storeu_epi64;true;true;true;false
intrinsics::volatile_set_memory;true;false;true;false
f64::<impl f64>::from_le_bytes;false;false;false;false
<u64 as ops::bit::Shl>::shl;false;false;false;false
<&'a u16 as ops::bit::Shl<u16>>::shl;false;false;false;false
num::niche_types::NonZeroUsizeInner::as_inner;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmpge_epi32_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepu16_ph;true;true;false;false
core_arch::x86::avx512fp16::_mm512_castph_ps;true;false;true;false
core_arch::x86::avx512f::_mm_mask_getexp_pd;true;true;true;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u16>> for u16>::rem;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmplt_pd_mask;true;true;true;false
net::socket_addr::SocketAddr::ip;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_rcp14_sd;true;true;true;false
<fmt::num::Octal as clone::Clone>::clone;false;false;false;false
num::<impl i8>::unchecked_mul::precondition_check;false;false;false;false
num::bignum::Big32x40::digits;false;false;true;false
<future::async_drop::AsyncDropOwning<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_sub_epi64;true;true;false;false
<u128 as iter::range::Step>::backward_unchecked;true;true;false;false
<i128 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_kand_mask32;true;false;false;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;false;true;false
<isize as ops::bit::Shl<i16>>::shl;false;false;false;false
<num::niche_types::Nanoseconds as clone::Clone>::clone;false;false;false;false
num::nonzero::NonZero::<i32>::from_be;false;true;false;false
ptr::mut_ptr::<impl *mut T>::offset::runtime_offset_nowrap::compiletime;false;false;true;false
<cell::Ref<'_, T> as fmt::Debug>::fmt;false;false;true;false
clone::impls::<impl clone::Clone for u8>::clone;false;false;false;false
iter::traits::iterator::Iterator::size_hint;false;false;false;false
slice::sort::shared::smallsort::bidirectional_merge;true;true;true;true
num::<impl u128>::trailing_ones;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cvtusepi16_storeu_epi8;true;true;true;false
core_arch::x86::avx512vnni::_mm256_maskz_dpbusds_epi32;true;true;false;false
iter::adapters::zip::zip;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fnmsub_sh;true;true;true;false
ptr::const_ptr::<impl *const T>::read;true;true;true;false
num::<impl u8>::strict_sub;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
<u64 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_fixupimm_round_ps;true;true;true;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_getexp_pd;true;true;true;false
num::nonzero::NonZero::<u32>::from_le;false;true;false;false
<&'a num::saturating::Saturating<i128> as ops::arith::Div<num::saturating::Saturating<i128>>>::div;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&num::wrapping::Wrapping<u128>>>::rem_assign;false;false;true;false
num::niche_types::NonZeroU16Inner::new;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::Not>::not;false;false;false;false
f16::<impl f16>::midpoint;false;false;true;false
core_arch::x86::avx512bitalg::_mm_maskz_popcnt_epi16;true;true;false;false
num::<impl i8>::leading_ones;false;false;false;false
<ops::index_range::IndexRange as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_add_epi16;true;true;false;false
num::<impl i64>::strict_neg;false;false;false;false
<&'a u32 as ops::arith::Add<u32>>::add;false;false;false;false
num::<impl i8>::from_be;false;false;false;false
num::nonzero::NonZero::<u8>::to_be;false;true;false;false
<i64 as ops::bit::Shl<u128>>::shl;false;false;false;false
<array::iter::IntoIter<T, N> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i32> for &'lhs core_simd::vector::Simd<i32, N>>::shl;false;false;false;false
<str::iter::Lines<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_avg_epu8;true;true;false;false
core_simd::ops::assign::<impl ops::arith::SubAssign<U> for core_simd::vector::Simd<T, N>>::sub_assign;false;false;true;false
intrinsics::expf128;true;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next;false;true;true;false
<&'a num::wrapping::Wrapping<i32> as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mul_round_sd;true;true;true;false
mem::manually_drop::ManuallyDrop::<T>::drop;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundph_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_permutexvar_epi32;true;true;false;false
num::<impl i8>::trailing_ones;false;false;false;false
num::<impl i32>::count_ones;false;false;false;false
num::<impl i16>::checked_ilog10;false;false;false;false
<cmp::Ordering as cmp::Ord>::cmp;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
num::<impl u16>::div_ceil;false;false;false;false
<&'a u128 as ops::arith::Mul<u128>>::mul;false;false;false;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::count;false;false;true;true
core_arch::x86::sse::_mm_set_ps;true;false;true;false
num::<impl u128>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_rorv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_add_epi16;true;true;false;false
num::<impl i64>::checked_rem;false;false;false;false
<(EC, EB, EA) as iter::traits::collect::Extend<(C, B, A)>>::extend_one_unchecked;true;true;true;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_expand_epi32;true;true;false;false
<u64 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
tuple::<impl cmp::PartialEq for (Z, Y, X, W, V, U, T)>::eq;false;false;false;false
<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign;false;false;true;false
slice::<impl [T]>::get;false;false;false;false
num::<impl u128>::ilog2;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::MulAssign<&num::saturating::Saturating<u32>>>::mul_assign;false;false;true;false
core_arch::simd::u8x32::from_array;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fixupimm_ps;true;true;true;false
core_simd::ops::assign::<impl ops::bit::BitOrAssign<U> for core_simd::vector::Simd<T, N>>::bitor_assign;false;false;true;false
num::niche_types::I32NotAllOnes;true;false;false;false
slice::iter::Iter::<'a, T>::as_slice;false;false;true;false
char::convert::<impl convert::TryFrom<u32> for char>::try_from;false;false;false;false
<&'b [char] as str::pattern::Pattern>::into_searcher;false;false;false;false
<(dyn any::Any + marker::Send + marker::Sync + 'static)>::downcast_mut;false;false;true;false
core_arch::x86::avx512dq::_mm256_range_pd;true;true;true;false
<usize as iter::range::Step>::backward_unchecked;true;true;false;false
<&f16 as ops::arith::Div<&f16>>::div;false;false;true;false
fmt::rt::Argument::<'_>::new_octal;false;false;false;false
core_arch::x86::avx::_mm256_cvttpd_epi32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_srlv_epi32;true;true;false;false
slice::raw::from_raw_parts_mut;true;true;true;false
core_arch::x86::sse2::_mm_srai_epi32;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for f64>::lt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask3_fnmsub_round_ps;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::signum;false;false;false;false
<i8 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
alloc::Allocator::grow;true;true;true;false
<str::iter::Bytes<'_> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fmsub_pd;true;true;true;false
num::<impl isize>::isqrt;false;false;false;false
<&u32 as ops::bit::Shr<&isize>>::shr;false;false;false;false
num::<impl i8>::borrowing_sub;false;false;false;false
fmt::Write::write_fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_mov_epi32;true;true;false;false
ptr::const_ptr::<impl *const T>::sub;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_subs_epu8;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu16;true;true;true;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
intrinsics::simd::simd_div;true;false;false;false
<u64 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
<u16 as ops::arith::Add<&u16>>::add;false;false;false;false
<i64 as iter::range::Step>::backward_checked;false;false;false;false
<&isize as ops::bit::Shl<&isize>>::shl;false;false;false;false
<iter::sources::repeat_with::RepeatWith<F> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
iter::adapters::intersperse::IntersperseWith::<I, G>::new;false;false;false;false
num::wrapping::Wrapping::<i16>::from_le;false;false;false;false
core_arch::x86::sse2::_mm_load_si128;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_srli_epi64;true;true;false;false
<ptr::alignment::Alignment as cmp::Ord>::cmp;false;false;false;false
<iter::adapters::GenericShunt<'_, I, R> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_normal;false;false;true;false
<&i8 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<T as array::equality::SpecArrayEq<U, N>>::spec_eq;false;true;false;false
panicking::panic_nounwind_nobacktrace;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fnmadd_sh;true;true;true;false
<iter::adapters::map_windows::MapWindowsInner<I, N> as clone::Clone>::clone;false;false;true;false
<u8 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<iter::sources::from_coroutine::FromCoroutine<G> as fmt::Debug>::fmt;false;false;true;false
<u32 as fmt::num::DisplayInt>::to_u64;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
hash::impls::<impl hash::Hash for usize>::hash_slice;false;true;true;false
<i64 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::simd::u32x8;false;false;false;false
num::<impl i8>::checked_add;false;false;false;false
<i32 as ops::arith::Sub>::sub;false;false;false;false
<u64 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::sse2::_mm_cmpunord_pd;true;true;true;false
<num::saturating::Saturating<u32> as ops::bit::BitXor>::bitxor;false;false;false;false
<i128 as fmt::num::DisplayInt>::zero;false;false;false;false
cmp::Ordering::then;false;false;false;false
<&mut I as iter::traits::double_ended::DoubleEndedIteratorRefSpec>::spec_rfold;false;false;true;false
slice::split_point_of;false;false;false;false
core_arch::x86::avx512bw::_mm_cmpge_epi16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_mul_ph;true;true;true;false
core_arch::x86::avx2::_mm256_packs_epi16;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvtu64_sh;true;true;true;false
<core_simd::masks::Mask<T, N> as cmp::PartialOrd>::partial_cmp;false;false;true;false
num::saturating::Saturating::<usize>::pow;false;false;false;false
num::nonzero::NonZero::<i16>::rotate_left;false;true;false;false
core_arch::x86::sse2::_mm_storel_epi64;true;true;true;false
<ops::range::RangeFull as cmp::PartialEq>::eq;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
<num::saturating::Saturating<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign;false;false;true;false
<&mut T as ops::deref::DerefMut>::deref_mut;false;false;true;false
core_arch::x86::sse::_mm_cmple_ps;true;true;true;false
<i16 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<ops::range::RangeInclusive<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
num::<impl i64>::strict_add_unsigned;false;false;false;false
core_simd::ops::deref::<impl ops::arith::Div<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::div;false;false;false;false
num::saturating::Saturating::<u128>::from_be;false;false;false;false
f64::<impl f64>::to_ne_bytes;false;false;true;false
num::saturating::Saturating::<i32>::count_zeros;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvttps_epi64;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<u16, N>> for core_simd::vector::Simd<u16, N>>::sum;false;false;false;true
num::<impl i8>::wrapping_rem;false;false;false;false
num::nonzero::NonZero::<u128>::checked_pow;false;true;false;false
<isize as ops::bit::Shr<&u128>>::shr;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::rposition;false;true;true;true
<num::saturating::Saturating<u64> as ops::bit::BitOrAssign<&num::saturating::Saturating<u64>>>::bitor_assign;false;false;true;false
num::<impl i64>::wrapping_div;false;false;false;false
<&'a i8 as ops::bit::Shr<u64>>::shr;false;false;false;false
<f128 as ops::arith::AddAssign<&f128>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_mov_epi32;true;true;false;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<i8, N>>::shr;false;true;false;false
core_arch::x86::sse::_mm_cmpnlt_ps;true;true;true;false
<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_abs_ps;true;true;true;false
num::<impl usize>::checked_pow;false;false;false;true
<u32 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::niche_types::NonZeroU32Inner as clone::Clone>::clone;false;false;false;false
<&i32 as ops::bit::Shl<&i32>>::shl;false;false;false;false
intrinsics::atomic_max_acquire;true;false;true;false
<i8 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
<isize as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
num::<impl u64>::checked_div;false;false;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;true
sync::atomic::AtomicU16::try_update;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_insertf32x4;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fmsub_round_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_testn_epi8_mask;true;true;false;false
intrinsics::simd::simd_shuffle;true;false;false;false
core_arch::simd::i64x4::splat::JustOne;false;false;false;false
<&'a num::saturating::Saturating<i8> as ops::bit::BitOr<num::saturating::Saturating<i8>>>::bitor;false;false;false;false
<option::IntoIter<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
<&'a num::saturating::Saturating<u32> as ops::arith::Sub<num::saturating::Saturating<u32>>>::sub;false;false;false;false
<fmt::Arguments<'_> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_cvtepi64_ps;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
<&'a num::saturating::Saturating<i16> as ops::bit::BitAnd<num::saturating::Saturating<i16>>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_cmpgt_epi16_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_mullo_epi16;true;true;false;false
num::<impl u64>::overflowing_mul;false;false;false;false
<u64 as ops::bit::Shr<i8>>::shr;false;false;false;false
<fmt::Sign as cmp::PartialEq>::eq;false;false;false;false
num::nonzero::NonZero::<T>::new_unchecked;true;false;false;false
<i16 as ops::bit::Shr<&i128>>::shr;false;false;false;false
iter::adapters::step_by::StepBy::<I>::original_step;false;true;true;false
core_arch::x86::avx512f::_mm512_maskz_max_epu64;true;true;false;false
core_arch::x86::avx512f::_mm_mask_mul_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_castpd128_pd512;true;true;true;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<isize, N>>::neg;false;true;false;false
num::wrapping::Wrapping::<isize>::abs;false;false;false;false
num::<impl u128>::strict_sub;false;false;false;false
convert::num::<impl convert::From<u16> for f32>::from;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::get_unchecked;true;true;true;false
net::parser::Parser::<'a>::read_scope_id;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<&u32 as ops::bit::Shl<&i32>>::shl;false;false;false;false
str::<impl str>::ceil_char_boundary;false;false;false;true
<&'a num::wrapping::Wrapping<i8> as ops::bit::BitAnd<num::wrapping::Wrapping<i8>>>::bitand;false;false;false;false
ptr::mut_ptr::<impl *mut [T]>::as_mut_array;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign;false;false;true;false
time::Duration::from_secs_f32;false;false;true;false
<&'a u32 as ops::bit::Shl<u128>>::shl;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512fp16::_mm256_mask3_fmadd_pch;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rsqrt14_pd;true;true;true;false
core_arch::x86::avx::_mm256_cvtpd_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvttph_epi32;true;true;true;false
mem::maybe_uninit::MaybeUninit::<T>::uninit;false;false;false;false
<core_arch::simd::i16x4 as fmt::Debug>::fmt;false;false;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_broadcast_i64x2;true;true;false;false
<isize as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<i64 as ops::bit::Shl<i128>>::shl;false;false;false;false
<&u32 as ops::bit::BitAnd<&u32>>::bitand;false;false;false;false
num::<impl u32>::rem_euclid;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm_mmask_i64gather_ps;true;true;true;false
<&mut T as fmt::LowerExp>::fmt;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::AddAssign>::add_assign;false;false;true;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::count;false;false;true;false
slice::sort::select::max_index;false;false;true;true
core_arch::x86::avx::_mm_testc_ps;true;true;true;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::iterator::Iterator>::fold;false;false;true;true
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
<num::saturating::Saturating<usize> as ops::bit::BitXor<&num::saturating::Saturating<usize>>>::bitxor;false;false;false;false
num::wrapping::Wrapping::<i128>::trailing_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_mov_epi64;true;true;false;false
intrinsics::atomic_xchg_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm_mask_cvttpd_epu32;true;true;true;false
<u128 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
iter::adapters::flatten::into_item;false;false;false;false
<usize as ops::bit::ShrAssign>::shr_assign;false;false;true;false
str::error::Utf8Error::valid_up_to;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_ss;true;true;true;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::cast;false;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_and;false;true;false;false
<core_arch::x86::__m256 as clone::Clone>::clone;false;false;true;false
f32::<impl f32>::is_subnormal;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::arith::Add>::add;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::AddAssign<i16>>::add_assign;false;false;true;false
num::<impl u64>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
num::nonzero::NonZero::<i8>::leading_zeros;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_rcp14_ps;true;true;true;false
<core_arch::simd::i16x16 as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i64>>>::bitand_assign;false;false;true;false
<(dyn any::Any + marker::Send + marker::Sync + 'static)>::downcast_ref_unchecked;true;true;false;false
<core_arch::simd::m32x8 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_rol_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_shufflehi_epi16;true;true;false;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<&num::saturating::Saturating<i128> as ops::arith::Add<&num::saturating::Saturating<i128>>>::add;false;false;false;false
num::<impl isize>::carrying_add;false;false;false;false
"bstr::<impl cmp::PartialEq<bstr::ByteStr> for &[u8; N]>::eq";false;false;false;false
num::niche_types::NonZeroI8Inner;true;false;false;false
<T as slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl>::small_sort;false;false;true;false
num::<impl i64>::div_ceil;false;false;false;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::advance_by;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
fmt::num::<impl fmt::UpperHex for u16>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_round_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtxph_ps;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::cast;false;true;true;false
<isize as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
<u8 as ops::arith::DivAssign>::div_assign;false;false;true;false
intrinsics::maxnumf128;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_fnmadd_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm_fnmadd_round_ss;true;true;true;false
num::<impl u8>::strict_pow;false;false;false;true
core_arch::x86::avx512f::_mm_mask_i32scatter_epi32;true;true;true;false
<num::saturating::Saturating<usize> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_sll_epi16;true;true;false;false
num::nonzero::NonZero::<isize>::from_be;false;true;false;false
<u32 as ops::bit::Shl<&i64>>::shl;false;false;false;false
num::<impl usize>::strict_rem;false;false;false;false
<u16 as iter::traits::accum::Product<&'a u16>>::product;false;false;false;true
<num::saturating::Saturating<i32> as ops::arith::RemAssign<&i32>>::rem_assign;false;false;true;false
<net::display_buffer::DisplayBuffer<SIZE> as fmt::Write>::write_str;false;false;true;false
<range::RangeFrom<T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
<slice::iter::RSplitNMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::simd::f64x1::from_array;false;false;true;false
core_arch::x86::avx512f::_mm_cmple_epi32_mask;true;true;false;false
core_arch::x86::avx512vnni::_mm512_maskz_dpwssd_epi32;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::signum;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAnd>::bitand;false;false;false;false
cmp::impls::<impl cmp::PartialEq for isize>::eq;false;false;false;false
<&'a isize as ops::arith::Add<isize>>::add;false;false;false;false
<isize as iter::range::Step>::backward;false;false;false;false
fmt::num::<impl fmt::LowerHex for u16>::fmt;false;false;true;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::Searcher<'a>>::next_match;false;false;true;false
intrinsics::fdiv_algebraic;false;false;false;false
<&num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub;false;false;false;false
ub_checks::check_language_ub;false;false;false;false
convert::num::<impl convert::TryFrom<u32> for i16>::try_from;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::Not>::not;false;false;false;false
<num::niche_types::NonZeroU32Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
num::<impl u8>::make_ascii_lowercase;false;false;true;false
<(EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
core_arch::x86::avx::_mm_permutevar_pd;true;true;true;false
<char as str::pattern::Pattern>::is_prefix_of;false;false;false;false
num::<impl i64>::to_be_bytes;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for usize>::try_from;false;false;false;false
core_arch::x86::__m128i::as_mut_array;false;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_and;false;true;false;false
num::wrapping::Wrapping::<i64>::from_be;false;false;false;false
<i128 as ops::bit::Shl<&u8>>::shl;false;false;false;false
num::nonzero::NonZero;false;false;false;false
<i128 as ops::bit::BitAnd>::bitand;false;false;false;false
<core_arch::simd::i64x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
<u8 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
slice::<impl [T]>::align_to_offsets;false;false;false;false
core_arch::x86::avx512cd::_mm_maskz_conflict_epi64;true;true;false;false
core_arch::x86::avx512bitalg::_mm256_popcnt_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mul_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi64;true;true;false;false
<(dyn any::Any + marker::Send + 'static)>::downcast_mut_unchecked;true;true;true;false
num::<impl i32>::unsigned_abs;false;false;false;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_expand_epi64;true;true;false;false
mem::transmutability::TransmuteFrom::transmute;true;false;false;false
core_arch::x86::sse2::_mm_set_pd;true;false;true;false
<u64 as ops::arith::Mul<&u64>>::mul;false;false;false;false
slice::<impl [T]>::reverse::revswap;false;false;true;true
net::ip_addr::Ipv6Addr::is_unicast_link_local;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepi32_ph;true;true;false;false
<&'a u16 as ops::bit::Shl<u32>>::shl;false;false;false;false
<sync::atomic::AtomicU32 as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
iter::sources::repeat_n::RepeatN::<A>::take_element;false;true;true;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
num::<impl u32>::from_ascii_radix;false;false;false;true
<u8 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<u32 as iter::range::Step>::backward;false;false;false;false
slice::index::slice_end_index_overflow_fail;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i16>>>::bitor_assign;false;false;true;false
<num::dec2flt::decimal::Decimal as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
ptr::mut_ptr::<impl *mut T>::wrapping_byte_sub;false;false;true;false
any::type_name;false;false;false;false
core_arch::simd::u8x8::splat;false;true;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<i128>>::bitand_assign;false;false;true;false
<option::Option<T> as convert::From<T>>::from;false;false;false;false
<&'a num::saturating::Saturating<u128> as ops::bit::BitXor<num::saturating::Saturating<u128>>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_i32gather_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fnmsub_round_ph;true;true;true;false
core_arch::x86::kl::_mm_aesdec128kl_u8;true;true;true;false
<&u128 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<ptr::unique::Unique<T> as convert::From<&mut T>>::from;false;false;true;false
slice::index::into_range_unchecked;false;false;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<usize, N>>::not;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&num::wrapping::Wrapping<i8>>>::add_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr;false;false;false;false
num::<impl u8>::wrapping_shl;false;true;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::iterator::Iterator>::next_chunk;false;false;true;false
<u16 as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_expand_ps;true;true;true;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<u32, N>>::div;false;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 8>> for core_arch::x86::__m512i>::from;false;false;false;false
<num::niche_types::Nanoseconds as default::Default>::default;false;false;false;false
slice::iter::Chunks::<'a, T>::new;false;false;false;false
core_arch::simd::f64x8::splat;false;true;true;false
<&'a num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_epi64_mask;true;true;false;false
ptr::unique::Unique::<T>::new;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepu64_ph;true;true;true;false
cmp::Ordering::is_ne;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
num::nonzero::NonZero::<u128>::isolate_most_significant_one;false;true;false;false
<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign;false;false;true;false
num::<impl u8>::from_le;false;false;false;false
core_arch::x86::sse2::_mm_set_epi64x;true;false;false;false
core_arch::x86::avx512dq::_kshiftli_mask8;true;false;false;false
<&'a u64 as ops::bit::Shl<i64>>::shl;false;false;false;false
<str::pattern::Utf8Pattern<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::sse2::_mm_unpackhi_pd;true;true;true;false
<u128 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
num::<impl u32>::div_ceil;false;false;false;false
iter::adapters::filter::filter_try_fold;false;false;true;false
sync::atomic::AtomicU8::fetch_or;false;true;true;false
intrinsics::prefetch_write_data;true;false;true;false
<&'c &'b str as str::pattern::Pattern>::is_prefix_of;false;false;false;false
alloc::layout::Layout::align;false;false;false;false
num::<impl u128>::wrapping_sub_signed;false;false;false;false
ops::function::impls::<impl ops::function::FnMut<A> for &mut F>::call_mut;false;false;true;false
<any::TypeId as cmp::PartialOrd>::partial_cmp;false;false;true;false
char::convert::<impl convert::TryFrom<char> for u16>::try_from;false;false;false;false
<core_arch::simd::u64x4 as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicU32::fetch_or;false;true;true;false
slice::<impl [T]>::get_unchecked;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<&i128>>::mul_assign;false;false;true;false
core_arch::simd::u64x4::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fmadd_pd;true;true;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<i8, N>>::add;false;true;false;false
<num::niche_types::NonZeroU128Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
intrinsics::atomic_xadd_acqrel;true;false;true;false
<ptr::metadata::DynMetadata<Dyn> as cmp::Ord>::cmp;false;false;true;false
<ptr::unique::Unique<T> as clone::Clone>::clone;false;false;true;false
<bstr::ByteStr as convert::AsMut<[u8]>>::as_mut;false;false;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::count_ones;false;true;false;false
num::saturating::Saturating::<i128>::rotate_right;false;false;false;false
num::nonzero::NonZero::<u64>::trailing_zeros;false;true;false;false
<num::niche_types::NonZeroU64Inner as cmp::Ord>::cmp;false;false;false;false
<i32 as ops::bit::Shl<u64>>::shl;false;false;false;false
<i16 as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmple_epu16_mask;true;true;false;false
ptr::const_ptr::<impl *const [T]>::as_ptr;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_xor_ps;true;true;true;false
core_arch::simd::u16x4::splat::JustOne;false;false;false;false
<task::wake::RawWakerVTable as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_sub_round_ph;true;true;true;false
<&'a option::Option<T> as iter::traits::collect::IntoIterator>::into_iter;false;false;false;false
panicking::assert_matches_failed;false;false;true;false
<str::iter::EscapeUnicode<'a> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
num::nonzero::NonZero::<isize>::unchecked_mul;true;true;false;false
core_arch::x86::avx512dq::_mm_cvtps_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_cmul_pch;true;true;true;false
num::nonzero::NonZero::<i16>::checked_neg;false;true;false;false
<isize as iter::traits::accum::Sum>::sum;false;false;false;true
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_max;false;true;false;false
core_arch::simd::u16x2;false;false;false;false
slice::iter::IterMut::<'a, T>::post_inc_start;true;true;true;false
<ascii::ascii_char::AsciiChar as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtsepi64_epi32;true;true;false;false
core_arch::x86::avx512bw::_store_mask32;true;true;true;false
num::nonzero::NonZero::<u128>::checked_next_power_of_two;false;true;false;false
core_arch::simd::u16x4::new;false;false;false;false
core_arch::x86::avx::_mm256_zextps128_ps256;true;true;true;false
num::wrapping::Wrapping::<u8>::pow;false;false;false;false
intrinsics::atomic_cxchg_acqrel_seqcst;true;false;true;false
<(V, U, T) as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fmsub_sd;true;true;true;false
num::<impl u128>::checked_add_signed;false;false;false;false
intrinsics::atomic_xadd_release;true;false;true;false
num::<impl i32>::overflowing_pow;false;false;false;true
num::<impl u8>::is_ascii_octdigit;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::size_hint;false;false;true;false
<net::ip_addr::Ipv4Addr as clone::Clone>::clone;false;false;false;false
<net::socket_addr::SocketAddrV4 as cmp::PartialEq>::eq;false;false;false;false
fmt::Formatter::<'a>::precision;false;false;true;false
num::<impl i128>::swap_bytes;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::count;false;false;true;true
num::saturating::Saturating::<i128>::leading_zeros;false;false;false;false
core_arch::simd::i8x64::splat;false;true;false;false
core_arch::x86::sse2::_mm_cvttsd_si32;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_broadcastb_epi8;true;true;false;false
<u8 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<i64 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_loadu_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm_set1_ph;true;false;true;false
num::<impl i8>::widening_mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fmul_round_pch;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_permutex2var_epi16;true;true;false;false
core_arch::x86::avx::_mm256_loadu_ps;true;true;true;false
<u64 as ops::arith::DivAssign<&u64>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_roundscale_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi32;true;true;false;false
<&num::nonzero::NonZero<i128> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_permutexvar_pd;true;true;true;false
intrinsics::simd::simd_reduce_add_ordered;true;false;false;false
core_arch::x86::sse2::_mm_subs_epu8;true;true;false;false
num::<impl u16>::strict_add;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpeq_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_load_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_mul_pd;true;true;true;false
core_arch::x86::avx512bitalg::_mm_popcnt_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_testn_epi8_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_castsi512_ps;true;false;false;false
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<ffi::c_str::Bytes<'_> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::simd::i16x16::extract;false;true;false;false
num::<impl isize>::unbounded_shr;false;true;false;false
sync::atomic::AtomicU64::store;false;true;true;false
<&num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::sse41::_mm_cvtepi8_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_add_round_ps;true;true;true;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
num::<impl i32>::to_le;false;false;false;false
<i128 as ops::arith::SubAssign<&i128>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundepi32_ps;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fcmul_pch;true;true;true;false
<num::saturating::Saturating<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&u16>>::bitand_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epu32;true;true;true;false
fmt::num::<impl fmt::UpperHex for i128>::fmt;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::trailing_ones;false;false;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
core_arch::simd::i8x16::splat::JustOne;false;false;false;false
num::<impl i128>::checked_pow;false;false;false;true
<i64 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
core_arch::x86::__m128::as_array;false;true;true;false
slice::ascii::<impl [u8]>::as_ascii_unchecked;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::index_mut;false;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<f32, N>>::sum;false;false;false;true
<&'a f128 as ops::arith::Rem<f128>>::rem;false;false;true;false
num::nonzero::NonZero::<usize>::ilog10;false;false;false;false
<core_arch::x86::__m512i as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm512_cmp_epu8_mask;true;true;false;false
<&A as alloc::Allocator>::allocate_zeroed;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&num::wrapping::Wrapping<u128>>>::add_assign;false;false;true;false
intrinsics::size_of;false;false;false;false
core_arch::x86::avx512f::_mm256_rorv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_getexp_ph;true;true;true;false
<num::saturating::Saturating<i128> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_div_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_load_ss;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitAnd>::bitand;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::Rem<&num::wrapping::Wrapping<i64>>>::rem;false;false;false;false
<f32 as ops::arith::Div>::div;false;false;true;false
<u128 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
num::<impl i8>::to_le_bytes;false;false;false;false
<&'a i32 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_madd_epi16;true;true;false;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
char::methods::encode_utf16_raw::do_panic::compiletime;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_and;false;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_max;false;true;false;false
core_arch::x86::avx2::_mm256_unpackhi_epi16;true;true;false;false
<i8 as ops::bit::Shr<&i128>>::shr;false;false;false;false
sync::atomic::AtomicU8::as_ptr;false;false;true;false
num::<impl i8>::strict_shr;false;false;false;false
num::<impl i32>::checked_rem_euclid;false;false;false;false
"ptr::mut_ptr::<impl *mut [T; N]>::as_mut_slice";false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i64>::le;false;false;false;false
num::nonzero::NonZero::<u8>::from_le;false;true;false;false
core_arch::x86::avx2::_mm256_mask_i32gather_epi64;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul;false;false;false;false
<option::Iter<'_, A> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_shuffle_i32x4;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_loadu_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmpneq_epi8_mask;true;true;false;false
core_arch::x86::avx512dq::_kandn_mask8;true;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u128>>::from;false;true;false;false
<i128 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
core_arch::x86::avx2::_mm256_inserti128_si256;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<iter::sources::repeat::Repeat<A> as fmt::Debug>::fmt;false;false;true;false
num::<impl u64>::checked_sub_signed;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_andnot_pd;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtps_epu64;true;true;true;false
num::<impl u8>::unbounded_shr;false;true;false;false
alloc::layout::Layout::size_rounded_up_to_custom_align;false;false;false;false
<u8 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmadd_pd;true;true;true;false
<i64 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<i16 as ops::bit::Shl<i8>>::shl;false;false;false;false
intrinsics::fmuladdf16;true;false;true;false
<u8 as ops::bit::BitOr<&u8>>::bitor;false;false;false;false
<mem::transmutability::Assume as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_cvt_roundsd_u32;true;true;true;false
core_arch::x86::avx512bw::_mm512_kunpackw;true;false;false;false
intrinsics::atomic_or_seqcst;true;false;true;false
<str::CharEscapeDebugContinue as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpeq_epu64_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_i64x2;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_sqrt_ph;true;true;true;false
"<net::ip_addr::Ipv6Addr as convert::From<[u8; 16]>>::from";false;false;false;false
num::<impl i32>::saturating_add;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u32>>>::spec_try_rfold;false;false;true;true
fmt::Formatter::<'a>::debug_map;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_broadcast_i32x2;true;true;false;false
<ops::coroutine::CoroutineState<Y, R> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_srav_epi32;true;true;false;false
option::Option::<T>::is_none;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::count_ones;false;false;false;false
<i16 as ops::bit::BitOr>::bitor;false;false;false;false
<T as array::equality::SpecArrayEq<Other, N>>::spec_eq;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg;false;false;false;false
<usize as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
<u64 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
tuple::<impl cmp::PartialOrd for (C, B, A, Z, Y, X, W, V, U, T)>::ge;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
slice::<impl [T]>::is_sorted_by_key;false;false;false;false
num::<impl i128>::next_multiple_of;false;false;false;false
intrinsics::typed_swap_nonoverlapping;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutex_epi64;true;true;false;false
<num::wrapping::Wrapping<u128> as ops::bit::Shr<usize>>::shr;false;false;false;false
num::<impl u128>::is_power_of_two;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_shrdv_epi16;true;true;false;false
<f32 as convert::num::FloatToInt<i64>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmple_epi16_mask;true;true;false;false
hash::sip::SipHasher;false;false;true;false
iter::traits::collect::default_extend_tuple_c::extend;false;false;true;false
<&'a num::saturating::Saturating<u16> as ops::arith::Sub<num::saturating::Saturating<u16>>>::sub;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<usize>> as iter::adapters::step_by::StepByImpl<ops::range::Range<usize>>>::spec_fold;false;false;true;true
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtusepi32_epi8;true;true;false;false
<&'a num::saturating::Saturating<u32> as ops::bit::BitOr<num::saturating::Saturating<u32>>>::bitor;false;false;false;false
<&'a u128 as ops::bit::Shl<i16>>::shl;false;false;false;false
<sync::atomic::AtomicUsize as default::Default>::default;false;false;false;false
core_arch::x86::avx512dq::_mm512_movepi64_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_sra_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<u16> for u8>::try_from;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::SubAssign>::sub_assign;false;false;true;false
str::iter::Bytes;false;false;true;false
<u32 as ops::bit::Shr<u64>>::shr;false;false;false;false
<i16 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_min_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_moveldup_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtph_epu64;true;true;true;false
<&'a mut I as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<num::dec2flt::ParseFloatError as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_mul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_sqrt_sh;true;true;true;false
f32::<impl f32>::to_be_bytes;false;false;true;false
num::nonzero::NonZero::<isize>::rotate_left;false;true;false;false
<i128 as ops::bit::BitOr>::bitor;false;false;false;false
panicking::panic_const::panic_const_async_fn_resumed_panic;false;false;false;false
num::nonzero::NonZero::<i32>::unchecked_mul;true;true;false;false
<f128 as ops::arith::AddAssign>::add_assign;false;false;true;false
intrinsics::atomic_cxchg_acqrel_relaxed;true;false;true;false
<&'a num::wrapping::Wrapping<u32> as ops::arith::Rem<num::wrapping::Wrapping<u32>>>::rem;false;false;false;false
core_arch::x86::avx::_mm256_dp_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_permutexvar_pd;true;true;true;false
<bool as ops::bit::BitOr>::bitor;false;false;false;false
<usize as ops::bit::Shr<&u128>>::shr;false;false;false;false
num::<impl i64>::strict_pow;false;false;false;true
<marker::variance::PhantomInvariantLifetime<'a> as default::Default>::default;false;false;false;false
core_arch::x86::avx512bw::_mm256_reduce_add_epi16;true;true;false;false
<marker::variance::PhantomInvariantLifetime<'a> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_epi32;true;true;true;false
num::saturating::Saturating::<usize>::to_be;false;false;false;false
<&num::saturating::Saturating<u64> as ops::arith::Rem<&num::saturating::Saturating<u64>>>::rem;false;false;false;false
<str::pattern::StrSearcherImpl as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_roundscale_ps;true;true;true;false
panicking::panic_const::panic_const_mul_overflow;false;false;false;false
num::<impl i32>::checked_sub;false;false;false;false
num::<impl u16>::carrying_add;false;true;false;false
intrinsics::simd::simd_insert;true;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign;false;false;true;false
iter::adapters::map_windows::Buffer::<T, N>::push;false;true;true;false
core_arch::x86::avx2::_mm256_sra_epi32;true;true;false;false
sync::atomic::AtomicPtr::<T>::as_ptr;false;false;true;false
core_arch::x86::avx512f::_mm_sqrt_round_sd;true;true;true;false
<isize as ops::arith::AddAssign<&isize>>::add_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<u128>>::sub_assign;false;false;true;false
<&asserting::Wrapper<&E> as asserting::TryCaptureGeneric<E, asserting::TryCaptureWithoutDebug>>::try_capture;false;false;true;false
<bstr::ByteStr as fmt::Display>::fmt::fmt_nopad;false;false;true;true
<i32 as iter::range::Step>::forward_unchecked;true;true;false;false
<&'a num::saturating::Saturating<i32> as ops::arith::Add<num::saturating::Saturating<i32>>>::add;false;false;false;false
slice::iter::RChunksExactMut::<'a, T>::new;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_fixupimm_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_compressstoreu_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_mul_epi8;true;true;false;false
str::<impl str>::rfind;false;false;false;false
core_arch::x86::avx512dq::_mm512_insertf32x8;true;true;true;false
<u64 as ops::bit::Shr<i32>>::shr;false;false;false;false
ops::index_range::IndexRange::take_suffix;false;false;true;false
<result::Iter<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epu64;true;true;true;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
unicode::unicode_data::bitset_search;false;false;true;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<isize, 4>> for core_arch::x86::__m256i>::from;false;false;false;false
<fmt::Alignment as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permutex2var_ps;true;true;true;false
ptr::alignment::Alignment::new_unchecked;true;false;false;false
cell::panic_already_borrowed;false;false;false;false
slice::<impl [T]>::rsplit;false;false;false;false
num::<impl i8>::checked_next_multiple_of;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_cvtepu64_pd;true;true;true;false
<&'a i64 as ops::bit::BitAnd<i64>>::bitand;false;false;false;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_shrdi_epi16;true;true;false;false
num::wrapping::Wrapping::<u8>::is_power_of_two;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_loadu_epi64;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::Mul>::mul;false;false;false;false
<ops::coroutine::CoroutineState<Y, R> as cmp::PartialOrd>::partial_cmp;false;false;true;false
cell::RefCell::<T>::into_inner;false;false;true;false
convert::num::<impl convert::TryFrom<u128> for i128>::try_from;false;false;false;false
cell::SyncUnsafeCell::<T>::new;false;false;false;false
str::<impl str>::split_whitespace;false;false;false;false
core_arch::simd::u32x16::splat;false;true;false;false
core_arch::x86::avx512f::_mm512_fmadd_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mmask_i32gather_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmadd_ph;true;true;true;false
<i128 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
<&mut T as convert::AsRef<U>>::as_ref;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::fill;false;true;true;false
<char as iter::range::Step>::forward_checked;false;true;false;false
core_arch::x86::sse::_MM_GET_FLUSH_ZERO_MODE;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_getmant_round_ss;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_reduce_ps;true;true;true;false
<ffi::va_list::VaListImpl<'f> as ops::drop::Drop>::drop;false;false;true;false
core_arch::x86::avx512vbmi::_mm256_mask_permutex2var_epi8;true;true;false;false
<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&isize>>::bitor_assign;false;false;true;false
intrinsics::atomic_nand_release;true;false;true;false
<f32 as num::dec2flt::float::RawFloat>::pow10_fast_path;false;false;false;false
sync::atomic::AtomicUsize::store;false;true;true;false
tuple::<impl cmp::PartialEq for (U, T)>::ne;false;false;false;false
num::<impl i16>::overflowing_add_unsigned;false;false;false;false
sync::atomic::AtomicPtr::<T>::fetch_update;false;false;true;true
num::<impl i8>::saturating_div;false;false;false;false
<i32 as ops::bit::Shl<&i8>>::shl;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T, T, T)> for [T; 9]>::from";false;false;true;false
<slice::iter::ArrayWindows<'a, T, N> as clone::Clone>::clone;false;false;true;false
time::Duration::as_micros;false;false;false;false
<&u8 as ops::arith::Sub<&u8>>::sub;false;false;false;false
<iter::adapters::chain::Chain<A, B> as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_fmadd_round_pd;true;true;true;false
num::<impl i64>::unchecked_sub;true;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::rotate_elements_left;false;true;true;false
<num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor;false;false;false;false
<&u32 as ops::bit::Shl<&isize>>::shl;false;false;false;false
str::<impl str>::as_ascii;false;false;false;false
alloc::Allocator::grow_zeroed;true;true;true;false
core_arch::x86::avx512f::_mm_mask_i32scatter_pd;true;true;true;false
<num::niche_types::NonZeroI32Inner as cmp::Ord>::cmp;false;false;false;false
num::<impl u32>::checked_shr;false;true;false;false
fmt::rt::Argument::<'_>::new_upper_hex;false;false;false;false
core_arch::x86::avx512bw::_mm_reduce_min_epi8;true;true;false;false
num::saturating::Saturating::<u8>::rotate_left;false;false;false;false
num::saturating::Saturating::<u32>::to_be;false;false;false;false
num::<impl u8>::is_ascii_digit;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::nth_back;false;false;true;false
num::<impl u32>::unchecked_mul;true;false;false;false
<Iter as iter::traits::collect::TraitI<EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu64;true;true;true;false
<f64 as convert::num::FloatToInt<i8>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_permutevar_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cmpge_epu64_mask;true;true;false;false
sync::atomic::AtomicU16::fetch_max;false;true;true;false
core_arch::x86::avx512f::_mm_mask_srl_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi64;true;true;false;false
<ops::index_range::IndexRange as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
core_arch::x86::avx512f::_mm_cmplt_epi64_mask;true;true;false;false
num::<impl i16>::saturating_sub;false;false;false;false
time::Duration::from_secs_f32::panic_cold_display;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpneq_epu32_mask;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i64>>::try_from;false;true;false;false
<i32 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
<core_arch::simd::u32x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
<&'a num::saturating::Saturating<u32> as ops::arith::Rem<num::saturating::Saturating<u32>>>::rem;false;false;false;false
core_arch::x86::__m512h::as_mut_array;false;true;true;false
slice::iter::ArrayChunksMut::<'a, T, N>::into_remainder;false;false;true;false
num::nonzero::NonZero::<i16>::unchecked_mul;true;true;false;false
any::type_name_of_val;false;false;false;false
char::methods::len_utf8;false;false;false;false
fmt::builders::DebugSet::<'a, 'b>::entry_with;false;false;true;false
<&'a num::wrapping::Wrapping<u128> as ops::bit::BitXor<num::wrapping::Wrapping<u128>>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::DivAssign>::div_assign;false;false;true;false
<i32 as ops::arith::MulAssign<&i32>>::mul_assign;false;false;true;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<core_arch::simd::i16x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::sse2::_mm_andnot_pd;true;true;true;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<num::wrapping::Wrapping<u32> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<u32>>>::product;false;false;false;true
<usize as slice::index::SliceIndex<[T]>>::get_mut;false;true;true;false
<() as unit::IsUnit>::is_unit;false;false;false;false
<core_simd::masks::mask_impl::Mask<T, N> as ops::bit::BitXor>::bitxor;false;true;true;false
slice::<impl [T]>::element_offset;false;false;false;false
<<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::iterator::Iterator>::next_chunk::Guard<'_, T> as ops::drop::Drop>::drop;false;true;true;false
<num::dec2flt::decimal_seq::DecimalSeq as default::Default>::default;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<u16>>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::saturating::Saturating::<u16>::rotate_right;false;false;false;false
num::<impl isize>::unchecked_sub;true;false;false;false
intrinsics::mir::Checked;false;false;false;false
<&i128 as ops::arith::Rem<&i128>>::rem;false;false;false;false
<&'a i8 as ops::bit::BitAnd<i8>>::bitand;false;false;false;false
<u8 as ops::bit::Shr<u16>>::shr;false;false;false;false
<ffi::va_list::VaList<'a, 'f> as fmt::Debug>::fmt;false;false;true;false
<str::iter::EscapeDebug<'a> as fmt::Debug>::fmt;false;false;true;false
<net::socket_addr::SocketAddr as fmt::Debug>::fmt;false;false;true;false
<slice::iter::Split<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i64x2::splat;false;true;false;false
<iter::adapters::cycle::Cycle<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::sse2::_mm_set_epi16;true;false;false;false
core_arch::x86::avx512f::_mm_max_epu64;true;true;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOrAssign<i32>>::bitor_assign;false;false;true;false
num::<impl usize>::checked_div;false;false;false;false
core_arch::simd::u64x8::from_array;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_fixupimm_ps;true;true;true;false
core_arch::x86::avx512ifma::_mm512_mask_madd52lo_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fcmul_pch;true;true;true;false
num::<impl isize>::from_le_bytes;false;false;false;false
hash::BuildHasher::hash_one;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epi16;true;true;true;false
iter::traits::iterator::Iterator::cmp_by;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu16;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 16>> for core_arch::x86::__m256i>::from;false;false;false;false
<u8 as default::Default>::default;false;false;false;false
num::wrapping::Wrapping::<i32>::leading_zeros;false;false;false;false
cell::RefCell::<T>::as_ptr;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<u64>>::bitxor_assign;false;false;true;false
<bstr::ByteStr as cmp::PartialEq<str>>::eq;false;false;false;false
result::Result::<T, E>::map_or_else;false;false;true;false
<&'a num::wrapping::Wrapping<i64> as ops::arith::Div<num::wrapping::Wrapping<i64>>>::div;false;false;false;false
core_arch::x86::bmi2::_pdep_u32;true;true;false;false
ptr::mut_ptr::<impl *mut T>::as_uninit_mut;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_loadu_ps;true;true;true;false
core_arch::x86::avx512f::_mm_roundscale_sd;true;true;true;false
core_arch::simd::f32x16::splat::JustOne;false;false;true;false
<str::iter::SplitInclusive<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::sse42::_mm_cmpistro;true;true;false;false
<usize as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtph_epu32;true;true;true;false
<&isize as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_adds_epu8;true;true;false;false
<&f128 as ops::arith::Mul<&f128>>::mul;false;false;true;false
core_simd::masks::mask_impl::Mask::<T, N>::from_bitmask_impl;true;true;false;false
<isize as ops::arith::Div>::div;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::MulAssign<i32>>::mul_assign;false;false;true;false
cmp::PartialOrd::ge;false;false;false;false
core_arch::x86::avx512f::_mm_max_round_sd;true;true;true;false
<&'a u64 as ops::bit::Shl<u8>>::shl;false;false;false;false
num::nonzero::NonZero::<i8>::saturating_pow;false;true;false;false
<(ops::range::Bound<T>, ops::range::Bound<T>) as ops::range::IntoBounds<T>>::into_bounds;false;false;true;false
core_arch::x86::avx512bw::_mm_reduce_max_epu8;true;true;false;false
num::<impl i128>::unbounded_shl;false;true;false;false
core_arch::simd::u32x2::splat;false;true;false;false
<isize as ops::arith::Mul>::mul;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign<u8>>::bitand_assign;false;false;true;false
<num::niche_types::NonZeroI128Inner as fmt::Debug>::fmt;false;false;true;false
<i32 as ops::bit::BitOr<&i32>>::bitor;false;false;false;false
num::saturating::Saturating::<u16>::to_le;false;false;false;false
core_arch::x86::sse2::_mm_unpackhi_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_getexp_ps;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<&i16 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<ops::range::Range<T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_mul_pd;true;true;true;false
<num::niche_types::NonZeroUsizeInner as cmp::Ord>::cmp;false;false;false;false
range::Range::<Idx>::iter;false;false;true;false
core_arch::x86::kl::_mm_aesdec256kl_u8;true;true;true;false
num::<impl u32>::wrapping_rem_euclid;false;false;false;false
<&num::wrapping::Wrapping<usize> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<isize as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
num::dec2flt::<impl str::traits::FromStr for f64>::from_str;false;false;false;false
<ops::range::Range<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdv_epi16;true;true;false;false
num::<impl isize>::unchecked_add::precondition_check;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<&u32>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_set1_epi8;true;true;false;false
intrinsics::mir::StorageLive::panic_cold_explicit;false;false;false;false
<ptr::non_null::NonNull<T> as fmt::Pointer>::fmt;false;false;true;false
iter::traits::iterator::Iterator::scan;false;false;false;false
<&'a i128 as ops::bit::BitOr<i128>>::bitor;false;false;false;false
<num::error::IntErrorKind as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::sse::_mm_cmpunord_ss;true;true;true;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
fmt::num::<impl fmt::Debug for u16>::fmt;false;false;true;false
<core_arch::simd::i32x16 as clone::Clone>::clone;false;false;false;false
cell::BorrowRef::<'b>::new;false;false;true;false
core_arch::simd::u16x64::splat;false;true;false;false
core_arch::x86::avx512f::_mm512_setzero_pd;true;false;false;false
core_arch::x86::avx512bw::_mm_maskz_cvtepi8_epi16;true;true;false;false
core_arch::x86::avx512vnni::_mm_dpwssds_epi32;true;true;false;false
<num::error::TryFromIntError as error::Error>::description;false;false;false;false
iter::traits::iterator::Iterator::next_chunk;false;false;true;false
<option::Option<T> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_alignr_epi32;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
num::<impl i32>::swap_bytes;false;false;false;false
core_arch::x86::__m128i::as_u16x8;false;false;false;false
num::bignum::tests::Big8x3::get_bit;false;false;true;false
core_arch::x86::sse2::_mm_cvttpd_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_min_epi16;true;true;false;false
<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&num::saturating::Saturating<u8>>>::bitxor_assign;false;false;true;false
<&'a num::saturating::Saturating<i8> as ops::arith::Rem<num::saturating::Saturating<i8>>>::rem;false;false;false;false
<isize as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_load_ss;true;true;true;false
core_arch::x86::kl::_mm_aesencwide256kl_u8;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x8;true;true;true;false
iter::traits::iterator::Iterator::intersperse_with;false;false;false;false
intrinsics::simd::simd_reduce_xor;true;false;false;false
core_arch::x86::avx512f::_mm_maskz_rsqrt14_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_loadu_epi8;true;true;true;false
<usize as ops::arith::Sub<&usize>>::sub;false;false;false;false
<usize as ops::bit::Shl<&i16>>::shl;false;false;false;false
num::<impl isize>::unchecked_add;true;false;false;false
core_arch::x86::avx512f::_mm256_mask_expand_pd;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_normal;false;false;true;false
<&'a num::wrapping::Wrapping<i8> as ops::bit::BitXor<num::wrapping::Wrapping<i8>>>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_srlv_epi16;true;true;false;false
<fmt::Alignment as clone::Clone>::clone;false;false;false;false
<isize as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::__m128i::as_i16x8;false;false;false;false
core_arch::x86::avx512f::_mm256_cvttpd_epu32;true;true;true;false
<i64 as ops::bit::BitAndAssign<&i64>>::bitand_assign;false;false;true;false
num::<impl u8>::rotate_right;false;false;false;false
<convert::Infallible as hash::Hash>::hash;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&num::saturating::Saturating<i64>>>::bitor_assign;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::next_back;false;false;true;true
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
str::validations::utf8_acc_cont_byte;false;false;false;false
tuple::<impl default::Default for (C, B, A, Z, Y, X, W, V, U, T)>::default;false;false;false;false
num::<impl usize>::next_multiple_of;false;false;false;false
<&num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div;false;false;false;false
<&mut W as fmt::Write>::write_str;false;false;true;false
<num::nonzero::NonZero<T> as cmp::PartialOrd>::le;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_sll_epi16;true;true;false;false
num::<impl u128>::abs_diff;false;false;false;false
intrinsics::simd::simd_sub;true;false;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_min_epi16;true;true;false;false
core_arch::x86::avx512vnni::_mm512_mask_dpwssds_epi32;true;true;false;false
<f64 as ops::arith::AddAssign>::add_assign;false;false;true;false
<u64 as ops::bit::Shr<u16>>::shr;false;false;false;false
iter::traits::iterator::Iterator::copied;false;false;false;false
<u16 as ops::bit::Shr<&u16>>::shr;false;false;false;false
bool::<impl bool>::then;false;false;false;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
tuple::<impl cmp::PartialOrd for (T,)>::partial_cmp;false;false;false;false
str::<impl str>::trim_right_matches;false;false;false;false
core_arch::x86::avx::_mm256_castpd256_pd128;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rolv_epi64;true;true;false;false
core_arch::simd::u32x4::extract;false;true;false;false
sync::atomic::AtomicU64::load;false;true;true;false
num::<impl i16>::isolate_least_significant_one;false;false;false;false
<net::ip_addr::Ipv6Addr as cmp::PartialEq<net::ip_addr::IpAddr>>::eq;false;false;true;false
ffi::c_str::CStr::from_bytes_with_nul_unchecked;true;false;false;false
<&'a num::saturating::Saturating<u64> as ops::arith::Rem<num::saturating::Saturating<u64>>>::rem;false;false;false;false
<u8 as ops::bit::BitOr>::bitor;false;false;false;false
<u16 as ops::bit::Shr<isize>>::shr;false;false;false;false
iter::range::Step::forward_unchecked;true;false;false;false
core_arch::x86::sse41::_mm_floor_ss;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for char>::le;false;false;false;false
<&'a u64 as ops::arith::Rem<u64>>::rem;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::MulAssign<u32>>::mul_assign;false;false;true;false
core_arch::x86::avx2::_mm256_cmpeq_epi32;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&isize> for core_simd::vector::Simd<isize, N>>::shl;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::Not>::not;false;false;false;false
intrinsics::simd::simd_eq;true;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::signum;false;false;false;false
<u32 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fmsub_round_sd;true;true;true;false
core_arch::simd::u32x8::new;false;false;false;false
<task::wake::RawWakerVTable as fmt::Debug>::fmt;false;false;true;false
ops::range::IntoBounds::intersect;false;false;false;false
<&'a u128 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_packus_epi32;true;true;false;false
num::<impl i128>::overflowing_abs;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::to_degrees;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_mul_pd;true;true;true;false
hash::Hasher::write_i8;false;false;true;false
core_arch::x86::avx512fp16::_mm256_cvttph_epu32;true;true;true;false
<str::error::ParseBoolError as clone::Clone>::clone;false;false;false;false
<&'a i16 as ops::bit::Shr<usize>>::shr;false;false;false;false
<(EB, EA) as iter::traits::collect::Extend<(B, A)>>::extend_reserve;false;false;true;false
num::<impl i32>::wrapping_shl;false;true;false;false
<&'a num::wrapping::Wrapping<i32> as ops::arith::Sub<num::wrapping::Wrapping<i32>>>::sub;false;false;false;false
num::<impl u16>::saturating_mul;false;false;false;false
mem::size_of;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOr>::bitor;false;false;false;false
<str::iter::RMatchIndices<'a, P> as fmt::Debug>::fmt;false;false;true;false
ptr::const_ptr::<impl *const T>::as_uninit_ref;true;true;true;false
<&isize as ops::bit::Not>::not;false;false;false;false
<&u128 as ops::bit::Shr<&usize>>::shr;false;false;false;false
option::Option::<T>::iter_mut;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u32>::gt;false;false;false;false
num::<impl isize>::carrying_mul_add;false;false;false;false
<core_arch::simd::i8x8 as clone::Clone>::clone;false;false;false;false
<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&usize>>::bitxor_assign;false;false;true;false
slice::iter::IterMut::<'a, T>::as_slice;false;false;true;false
"tuple::<impl convert::From<[T; 4]> for (T, T, T, T)>::from";false;false;false;false
<i16 as iter::traits::accum::Sum>::sum;false;false;false;true
<i32 as fmt::num::DisplayInt>::to_u128;false;false;false;false
<num::nonzero::NonZero<i8> as ops::arith::Neg>::neg;false;true;false;false
<u8 as ops::arith::Add>::add;false;false;false;false
<iter::sources::repeat::Repeat<A> as clone::Clone>::clone;false;false;true;false
<panicking::assert_matches_failed::Pattern<'_> as fmt::Debug>::fmt;false;false;true;false
<u128 as ops::arith::Mul<&u128>>::mul;false;false;false;false
<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::matching;false;false;false;false
result::Result::<T, E>::unwrap_or_else;false;false;true;false
escape::EscapeIterInner::<N>::as_str;false;false;true;false
num::nonzero::NonZero::<i128>::to_be;false;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_and;false;true;false;false
<Iter as iter::traits::collect::TraitK<EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
char::ToUppercase;false;false;true;false
char::from_digit;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::get;false;false;false;false
<&'a u32 as ops::arith::Rem<u32>>::rem;false;false;false;false
<num::wrapping::Wrapping<i8> as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512fp16::_mm512_mask_conj_pch;true;true;true;false
<num::saturating::Saturating<u128> as ops::arith::DivAssign<&u128>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_broadcast_f32x4;true;true;true;false
<(EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(K, J, I, H, G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_unpackhi_ps;true;true;true;false
sync::atomic::AtomicI16::compare_and_swap;false;false;true;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::Searcher<'a>>::next;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_sub_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_load_epi64;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_extractf32x4_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u8> for &'lhs core_simd::vector::Simd<u8, N>>::shl;false;false;false;false
cmp::impls::<impl cmp::Ord for &A>::cmp;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::Shr<usize>>::shr;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<i64 as ops::arith::MulAssign<&i64>>::mul_assign;false;false;true;false
<slice::ascii::EscapeByte as ops::function::FnMut<(&u8,)>>::call_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_shuffle_i32x4;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_loadu_epi32;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvtu64_sd;true;true;true;false
sync::atomic::AtomicI64::from_ptr;true;true;true;false
core_arch::x86::sse2::_mm_cmplt_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_rorv_epi64;true;true;false;false
iter::adapters::peekable::Peekable::<I>::next_if_eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cmp_ph_mask;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::find;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi64;true;true;false;false
core_arch::x86::sse2::_mm_sqrt_pd;true;true;true;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u32>::from;false;false;false;false
f16::<impl f16>::to_degrees;false;false;true;false
"<[char; N] as str::pattern::Pattern>::strip_prefix_of";false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::RemAssign>::rem_assign;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::leading_ones;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked::precondition_check;false;false;false;false
slice::<impl [T]>::as_chunks_unchecked_mut;true;true;true;false
core_arch::x86::fma::_mm_fmadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_div_sd;true;true;true;false
core_arch::x86::fma::_mm_fnmsub_ss;true;true;true;false
<num::wrapping::Wrapping<u64> as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi16;true;true;false;false
core_arch::simd::u16x64::new;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_broadcast_i64x2;true;true;false;false
core_arch::x86::avx512bw::_kadd_mask32;true;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i8>::try_from;false;false;false;false
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
num::<impl isize>::widening_mul;false;false;false;false
fmt::num::imp::<impl fmt::Display for u16>::fmt;false;false;true;false
intrinsics::assert_zero_valid;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f32>::partial_cmp;false;false;true;false
char::EscapeDefault::printable;false;false;false;false
<hash::BuildHasherDefault<H> as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicPtr::<T>::from_ptr;true;true;true;false
<core_arch::simd::f32x8 as clone::Clone>::clone;false;false;true;false
convert::num::<impl convert::From<u16> for i64>::from;false;false;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cvttpd_epi32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_i32scatter_ps;true;true;true;false
<slice::iter::ChunkBy<'a, T, P> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_storeu_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_roundscale_round_ph;true;true;true;false
<core_simd::vector::Simd<T, N> as default::Default>::default;false;false;false;false
mem::needs_drop;false;false;false;false
<i128 as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512bw::_mm512_mask_cmpgt_epu8_mask;true;true;false;false
<u32 as ops::bit::Shl<i128>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<I> as fmt::Debug>::fmt;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::count;false;false;true;false
core_arch::x86::sse::_MM_GET_EXCEPTION_MASK;true;true;false;false
<bstr::ByteStr as ops::index::Index<ops::range::RangeFrom<usize>>>::index;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvt_roundss_sd;true;true;true;false
convert::num::<impl convert::From<bool> for f64>::from;false;false;false;false
<&num::saturating::Saturating<u16> as ops::bit::BitXor<&num::saturating::Saturating<u16>>>::bitxor;false;false;false;false
<&'a i8 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_packus_epi32;true;true;false;false
str::iter::SplitAsciiWhitespace::<'a>::remainder;false;true;true;false
core_arch::x86::__m512::as_mut_array;false;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_ps;true;true;false;false
<&i8 as ops::bit::BitOr<&i8>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm_setr_ph;true;false;true;false
core_arch::x86::avx2::_mm256_slli_si256;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<u8 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmsub_round_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_cvtepu8_epi16;true;true;false;false
core_simd::vector::lane_indices;false;false;false;true
num::saturating::Saturating::<isize>::rotate_left;false;false;false;false
core_arch::simd::u16x2::new;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 16>> for core_arch::x86::__m512i>::from;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_range_ps;true;true;true;false
f128::<impl f128>::to_le_bytes;false;false;true;false
num::<impl i16>::count_ones;false;false;false;false
num::<impl i16>::overflowing_sub_unsigned;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Mul>::mul;false;false;false;false
<cmp::Ordering as fmt::Debug>::fmt;false;false;true;false
<i8 as iter::traits::accum::Sum>::sum;false;false;false;true
<iter::sources::repeat_n::RepeatN<A> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::get_unchecked;true;true;true;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::fold;false;false;true;false
<num::bignum::Big32x40 as cmp::Ord>::cmp;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Mul<&num::wrapping::Wrapping<u8>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepi8_epi32;true;true;false;false
slice::<impl [T]>::split_first;false;false;false;false
core_arch::x86::avx512f::_mm512_cvt_roundepi32_ps;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_srai_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_sllv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_adds_epu8;true;true;false;false
num::<impl i128>::widening_mul;false;false;false;false
<cell::RefCell<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<iter::adapters::flatten::Flatten<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
<slice::iter::SplitInclusiveMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_i32x8;true;true;false;false
<core_simd::vector::Simd<T, N> as convert::TryFrom<&mut [T]>>::try_from;false;false;true;false
num::<impl i8>::signum;false;false;false;false
hash::impls::<impl hash::Hash for i16>::hash;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::abs;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_insertf32x4;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_broadcast_i32x4;true;true;false;false
core_arch::x86::gfni::_mm256_mask_gf2p8affineinv_epi64_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_mulhrs_epi16;true;true;false;false
<&i8 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<u64 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx2::_mm256_min_epu16;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u32>>>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_cmpgt_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_mov_ps;true;true;true;false
core_arch::x86::avx512vnni::_mm_dpbusd_epi32;true;true;false;false
core_arch::x86::avx2::_mm256_srav_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_shufflehi_epi16;true;true;false;false
<&num::wrapping::Wrapping<u8> as ops::bit::BitXor<&num::wrapping::Wrapping<u8>>>::bitxor;false;false;false;false
<char::CaseMappingIter as clone::Clone>::clone;false;false;true;false
<range::iter::IterRange<A> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::ssse3::_mm_sign_epi32;true;true;false;false
sync::atomic::AtomicU16::swap;false;true;true;false
net::ip_addr::Ipv4Addr::as_octets;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::index;false;false;true;false
core_arch::x86::avx2::_mm256_andnot_si256;true;true;false;false
<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign;false;false;true;false
num::<impl i32>::wrapping_sub_unsigned;false;false;false;false
cell::SyncUnsafeCell::<T>::get;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_rsqrt14_ps;true;true;true;false
tuple::<impl cmp::PartialOrd for (D, C, B, A, Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpbsuds_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtsd_ss;true;true;true;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::count;false;false;true;false
iter::sources::once_with::once_with;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_permutexvar_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_subs_epi16;true;true;false;false
num::<impl usize>::strict_shl;false;false;false;false
<[A] as slice::cmp::SlicePartialEq<B>>::equal;false;false;false;true
<[T] as slice::SlicePattern>::as_slice;false;false;false;false
core_arch::x86::avx512dq::_mm512_extractf32x8_ps;true;true;true;false
num::nonzero::NonZero::<isize>::leading_zeros;false;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i64> for core_simd::vector::Simd<i64, N>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvttps_epu32;true;true;true;false
num::wrapping::Wrapping::<u32>::from_be;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_rcp_ph;true;true;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtps_epi32;true;true;true;false
option::Option::<T>::or;false;false;true;false
<&usize as ops::arith::Sub<&usize>>::sub;false;false;false;false
num::<impl i16>::checked_ilog;false;false;false;false
num::nonzero::NonZero::<u16>::midpoint;false;true;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u16>>>::bitxor_assign;false;false;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<&u16 as ops::bit::Shl<&u64>>::shl;false;false;false;false
num::<impl i64>::borrowing_sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_mul_round_pch;true;true;true;false
<i64 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx::_mm256_storeu_si256;true;true;true;false
ptr::metadata::DynMetadata::<Dyn>::layout;false;true;true;false
<usize as iter::range::Step>::forward_unchecked;true;true;false;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<&'a i8 as ops::arith::Div<i8>>::div;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmple_epu16_mask;true;true;false;false
core_arch::x86::kl::_mm_encodekey128_u32;true;true;true;false
<i8 as ops::bit::Shl>::shl;false;false;false;false
core_arch::x86::avx512ifma::_mm256_maskz_madd52hi_epu64;true;true;false;false
<&'a num::saturating::Saturating<isize> as ops::arith::Mul<num::saturating::Saturating<isize>>>::mul;false;false;false;false
<i128 as ops::arith::Rem>::rem;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_sub_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_getexp_pd;true;true;true;false
intrinsics::atomic_min_acquire;true;false;true;false
<str::iter::SplitAsciiWhitespace<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::<impl u8>::escape_ascii;false;false;false;false
iter::adapters::filter_map::filter_map_fold;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::bit::Not>::not;false;false;false;false
num::<impl i16>::abs_diff;false;false;false;false
<(ops::range::Bound<T>, ops::range::Bound<T>) as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_extracti32x4_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_packus_epi32;true;true;false;false
core_simd::vector::Simd::<T, N>::scatter_ptr;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epi64;true;true;true;false
num::<impl u16>::unchecked_mul;true;false;false;false
<i16 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<num::niche_types::NonZeroU16Inner as hash::Hash>::hash;false;false;true;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
num::<impl i16>::checked_sub;false;false;false;false
<&'a i128 as ops::arith::Rem<i128>>::rem;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm_alignr_epi32;true;true;false;false
<slice::iter::ChunkBy<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
core_simd::masks::mask_impl::Mask::<T, N>::to_bitmask_integer;false;true;true;false
num::<impl i128>::trailing_ones;false;false;false;false
any::TypeId::as_u128;false;false;true;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
num::<impl i64>::wrapping_add;false;false;false;false
<u64 as iter::traits::accum::Product<&'a u64>>::product;false;false;false;true
result::Result::<&mut T, E>::copied;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_ss;true;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reverse_bits;false;true;false;false
<u32 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
<num::nonzero::NonZero<T> as fmt::LowerHex>::fmt;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi32;true;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::count_zeros;false;false;false;false
tuple::<impl default::Default for (X, W, V, U, T)>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_permutexvar_epi16;true;true;false;false
tuple::<impl cmp::PartialOrd for (Y, X, W, V, U, T)>::le;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_sll_epi16;true;true;false;false
<option::IterMut<'a, A> as iter::traits::iterator::Iterator>::next;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
num::bignum::Big32x40::mul_digits;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::RemAssign<&num::wrapping::Wrapping<u64>>>::rem_assign;false;false;true;false
array::from_fn;false;false;false;false
<slice::iter::Split<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;true
<num::wrapping::Wrapping<i128> as iter::traits::accum::Sum>::sum;false;false;false;true
<core_arch::simd::m8x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
<num::flt2dec::decoder::FullDecoded as fmt::Debug>::fmt;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
sync::atomic::AtomicUsize::fetch_update;false;false;true;true
mem::maybe_uninit::MaybeUninit::<T>::slice_assume_init_mut;true;true;true;false
<&'a num::saturating::Saturating<i64> as ops::bit::BitOr<num::saturating::Saturating<i64>>>::bitor;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<iter::sources::empty::Empty<T> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<core_arch::simd::u16x64 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm512_sub_epi16;true;true;false;false
num::nonzero::NonZero::<u32>::rotate_left;false;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cmpge_epu16_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_andnot_ps;true;true;true;false
slice::index::into_range;false;false;true;false
core_arch::x86::avx::_mm256_setr_m128i;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cmplt_epi8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_reduce_round_sd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldi_epi64;true;true;false;false
<&'a num::saturating::Saturating<u8> as ops::arith::Div<num::saturating::Saturating<u8>>>::div;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::BitOr>::bitor;false;false;false;false
<ffi::c_str::CStr as clone::CloneToUninit>::clone_to_uninit;true;true;true;false
core_arch::x86::avx512bw::_mm_sllv_epi16;true;true;false;false
<num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul;false;false;false;false
<num::dec2flt::decimal_seq::DecimalSeq as cmp::PartialEq>::eq;false;false;false;false
<usize as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_rcp14_ps;true;true;true;false
slice::raw::from_ref;false;false;false;false
panic::panic_info::PanicInfo::<'a>::message;false;false;true;false
<Iter as iter::traits::collect::TraitC<EC, EB, EA>>::extend;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_max_epu64;true;true;false;false
num::nonzero::NonZero::<usize>::midpoint;false;true;false;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::Searcher<'a>>::next_reject;false;false;true;false
num::flt2dec::to_shortest_exp_str;false;true;true;false
<isize as ops::bit::Shr<&u64>>::shr;false;false;false;false
sync::atomic::AtomicI16::into_inner;false;false;true;false
core_arch::simd::u8x2::splat::JustOne;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
num::<impl u8>::from_be;false;false;false;false
num::<impl i32>::unchecked_shl;true;false;false;false
<&u64 as ops::arith::Mul<&u64>>::mul;false;false;false;false
<i8 as ops::bit::BitAnd<&i8>>::bitand;false;false;false;false
<&u64 as ops::bit::BitOr<&u64>>::bitor;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f16>::le;false;false;true;false
<u16 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
slice::sort::select::median_of_ninthers;false;false;true;true
<u16 as iter::range::Step>::forward_checked;false;false;false;false
core_arch::x86::sse2::_mm_castps_si128;true;false;true;false
<&i16 as ops::bit::Shr<&u32>>::shr;false;false;false;false
fmt::num::<impl fmt::LowerHex for usize>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512f::_mm_cmplt_epi32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_loadu_epi8;true;true;true;false
sync::atomic::AtomicI64::as_ptr;false;false;true;false
<fmt::Error as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512bw::_mm512_unpacklo_epi16;true;true;false;false
core_arch::x86::fma::_mm_fmsub_sd;true;true;true;false
<&num::wrapping::Wrapping<i16> as ops::bit::BitOr<&num::wrapping::Wrapping<i16>>>::bitor;false;false;false;false
char::methods::<impl char>::from_u32;false;false;false;false
core_arch::x86::avx2::_mm256_cvtepi8_epi64;true;true;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::next;false;false;true;false
<&'a num::saturating::Saturating<i16> as ops::arith::Mul<num::saturating::Saturating<i16>>>::mul;false;false;false;false
fmt::num::imp::<impl fmt::LowerExp for isize>::fmt;false;false;true;false
<fmt::Alignment as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86_64::abm::_lzcnt_u64;true;false;false;false
<&'a i64 as ops::bit::Shl<u128>>::shl;false;false;false;false
<sync::atomic::AtomicBool as fmt::Debug>::fmt;false;false;true;false
num::<impl usize>::from_be_bytes;false;false;false;false
clone::impls::<impl clone::Clone for f64>::clone;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<i16>>::from;false;true;false;false
f64::<impl f64>::recip;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::MulAssign<&num::wrapping::Wrapping<u64>>>::mul_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u128> as ops::arith::Sub<num::wrapping::Wrapping<u128>>>::sub;false;false;false;false
<option::Item<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvttsd_u64;true;true;true;false
num::<impl u32>::strict_neg;false;false;false;false
mem::discriminant;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add;false;false;false;false
num::nonzero::NonZero::<u128>::is_power_of_two;false;false;false;false
<core_simd::vector::Simd<T, N> as convert::AsMut<[T]>>::as_mut;false;false;true;false
core_arch::x86::avx2::_mm256_mask_i64gather_epi32;true;true;true;false
cmp::impls::<impl cmp::Ord for u128>::cmp;false;false;false;false
bool::<impl bool>::select_unpredictable;false;false;false;false
core_arch::x86::avx512f::_mm_cmp_epu32_mask;true;true;false;false
num::<impl u128>::unbounded_shr;false;true;false;false
clone::impls::<impl clone::Clone for i64>::clone;false;false;false;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::fold;false;false;true;true
<num::wrapping::Wrapping<i32> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx2::_mm_i64gather_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_and_epi16;true;true;false;false
num::<impl usize>::unchecked_add;true;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_scalef_ph;true;true;true;false
num::fmt::Part::<'a>::len;false;false;false;false
core_arch::x86::avx512f::_mm_xor_epi32;true;true;false;false
<(dyn any::Any + 'static)>::downcast_mut_unchecked;true;true;true;false
core_arch::x86::avx::_mm256_set1_epi64x;true;true;false;false
num::nonzero::NonZero::<isize>::checked_abs;false;true;false;false
<net::parser::AddrParseError as error::Error>::description;false;false;false;false
core_arch::x86::__m512d::splat::JustOne;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cmp_epu64_mask;true;true;false;false
num::<impl u128>::checked_rem;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u16>::try_from;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXor>::bitxor;false;false;false;false
<&'a num::wrapping::Wrapping<i8> as ops::arith::Sub<num::wrapping::Wrapping<i8>>>::sub;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;true
core_arch::simd::i8x2::extract;false;true;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shrdi_epi64;true;true;false;false
array::iter::IntoIter::<T, N>::empty;false;true;false;false
intrinsics::saturating_add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fmadd_ps;true;true;true;false
ptr::fn_addr_eq;false;false;false;false
<i128 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepu32_ph;true;true;false;false
num::nonzero::NonZero::<u8>::cast_signed;false;true;false;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
<sync::atomic::AtomicPtr<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_shuffle_epi8;true;true;false;false
core_arch::x86::__m512bh::as_array;false;true;false;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<f32 as num::dec2flt::float::RawFloat>::classify;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_div_sh;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u8> for &'lhs core_simd::vector::Simd<u8, N>>::shr;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::Shr<&usize>>::shr;false;false;false;false
num::<impl i64>::unchecked_shl;true;false;false;false
<&'a num::saturating::Saturating<i32> as ops::bit::BitOr<num::saturating::Saturating<i32>>>::bitor;false;false;false;false
<i16 as ops::bit::Shr<u8>>::shr;false;false;false;false
<slice::ascii::EscapeAscii<'a> as clone::Clone>::clone;false;false;true;false
ptr::alignment::Alignment::max;false;false;false;false
<str::lossy::Utf8Chunks<'a> as iter::traits::iterator::Iterator>::next;false;true;true;true
core_arch::x86::avx512fp16::_mm_maskz_cvtxps_ph;true;true;true;false
<iter::adapters::rev::Rev<I> as default::Default>::default;false;false;false;false
<&'a u32 as ops::bit::BitAnd<u32>>::bitand;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_shufflelo_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvttph_epu64;true;true;true;false
num::nonzero::NonZero::<u128>::from_le;false;true;false;false
<fmt::rt::Alignment as clone::Clone>::clone;false;false;false;false
<f32 as convert::num::FloatToInt<usize>>::to_int_unchecked;true;true;true;false
"array::equality::<impl cmp::PartialEq<&mut [U]> for [T; N]>::eq";false;false;true;false
sync::atomic::AtomicI64::into_inner;false;false;true;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<i32, N>>::shl;false;true;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::count_ones;false;false;false;false
<i16 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtps_ph;true;true;true;false
num::<impl u32>::wrapping_pow;false;false;false;true
core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi16;true;true;false;false
num::<impl u8>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
core_arch::x86::sse2::_mm_unpacklo_pd;true;true;true;false
core_arch::x86::avx::_mm256_store_si256;true;true;true;false
num::<impl u16>::checked_rem;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fixupimm_round_sd;true;true;true;false
<alloc::layout::Layout as fmt::Debug>::fmt;false;false;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitOr<bool>>::bitor;false;false;true;false
core_arch::simd::u64x1::splat;false;true;false;false
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
ptr::alignment::Alignment::mask;false;true;false;false
sync::atomic::AtomicUsize::from_ptr;true;true;true;false
iter::adapters::copied::copy_fold;false;false;false;false
tuple::<impl cmp::Ord for (A, Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
"mem::maybe_uninit::MaybeUninit::<[T; N]>::transpose";false;false;false;false
cell::Cell::<T>::swap;false;true;true;false
<num::wrapping::Wrapping<u16> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<u16>>>::sum;false;false;false;true
<&u16 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvtt_roundsd_u64;true;true;true;false
time::Duration::subsec_nanos;false;false;false;false
mem::maybe_uninit::MaybeUninit::<T>::slice_as_bytes;false;false;false;false
core_arch::x86::avx2::_mm256_broadcastsd_pd;true;true;true;false
core_arch::x86::gfni::_mm512_gf2p8mul_epi8;true;true;false;false
cmp::Ord::clamp;false;false;false;false
core_arch::x86::avx512f::_mm256_cmplt_epi32_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_xor_epi64;true;true;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
core_arch::x86::avx512fp16::_mm_mask_getexp_ph;true;true;true;false
core_arch::x86::sse41::_mm_extract_epi32;true;true;false;false
<&'a f16 as ops::arith::Add<f16>>::add;false;false;true;false
num::nonzero::NonZero::<u16>::leading_zeros;false;true;false;false
core_arch::x86::avx512f::_mm512_cvtsepi64_epi8;true;true;false;false
<u16 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_subs_epu8;true;true;false;false
num::<impl usize>::ilog2;false;false;false;false
<&'a u32 as ops::arith::Mul<u32>>::mul;false;false;false;false
num::<impl u128>::strict_pow;false;false;false;true
ptr::const_ptr::<impl *const T>::offset_from;true;true;true;false
<char as iter::range::Step>::forward_unchecked;true;true;false;false
f32::<impl f32>::clamp;false;false;true;false
<alloc::AllocError as clone::Clone>::clone;false;false;false;false
sync::atomic::AtomicI16::fetch_max;false;true;true;false
ptr::non_null::NonNull::<T>::from_raw_parts;false;true;true;false
<ffi::c_str::FromBytesUntilNulError as clone::Clone>::clone;false;false;false;false
num::<impl u8>::is_ascii_control;false;false;false;false
core_arch::x86::avx512f::_mm_rolv_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_permutexvar_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_min_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu32_epi64;true;true;false;false
<u128 as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_reduce_round_sd;true;true;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
num::<impl u8>::one_less_than_next_power_of_two;false;true;false;false
core_arch::x86::sse::_mm_mul_ss;true;true;true;false
num::<impl i16>::reverse_bits;false;false;false;false
num::<impl u16>::checked_add;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i64> for &'lhs core_simd::vector::Simd<i64, N>>::shl;false;false;false;false
<u64 as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_add_epi64;true;true;false;false
<&num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div;false;false;false;false
<u32 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<bool as fmt::Debug>::fmt;false;false;true;false
iter::adapters::cloned::clone_try_fold;false;false;false;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<i16 as iter::range::Step>::forward_unchecked;true;true;false;false
<u32 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
core_arch::x86::avx::_mm256_undefined_ps;true;false;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_maddubs_epi16;true;true;false;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_i64scatter_epi64;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::DivAssign<u32>>::div_assign;false;false;true;false
<&f128 as ops::arith::Neg>::neg;false;false;true;false
<option::IntoIter<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<task::poll::Poll<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm256_setr_ph;true;false;true;false
core_simd::vector::Simd::<T, N>::store;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_sub_round_ss;true;true;true;false
core_arch::x86::bmi1::_bextr_u32;true;true;false;false
core_arch::x86::avx512vpopcntdq::_mm_mask_popcnt_epi64;true;true;false;false
<ops::range::RangeToInclusive<Idx> as fmt::Debug>::fmt;false;false;true;false
cmp::impls::<impl cmp::PartialEq for f16>::ne;false;false;true;false
cell::BorrowRefMut::<'b>::clone;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::RemAssign<&num::saturating::Saturating<isize>>>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_permutex_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_abs_epi16;true;true;false;false
core_arch::simd::i8x2;false;false;false;false
core_arch::x86::avx512f::_mm_mask_max_epi32;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_i64scatter_epi64;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_xor;false;true;false;false
str::<impl str>::split_at_checked;false;true;false;false
<f64 as default::Default>::default;false;false;false;false
<&f32 as ops::arith::Add<&f32>>::add;false;false;true;false
intrinsics::atomic_xsub_seqcst;true;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_broadcastw_epi16;true;true;false;false
core_arch::x86::avx::_mm256_set1_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_alignr_epi64;true;true;false;false
num::nonzero::NonZero::<u16>::reverse_bits;false;true;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
sync::atomic::AtomicI64::fetch_update;false;false;true;true
core_arch::x86_64::avx512fp16::_mm_cvttsh_u64;true;true;true;false
core_arch::x86::avx::_mm256_testnzc_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_scalef_round_sh;true;true;true;false
<f32 as ops::arith::Add<&f32>>::add;false;false;true;false
core_arch::x86::avx512f::_mm512_srl_epi64;true;true;false;false
core_arch::x86::avx::_mm256_set_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cmpneq_epi64_mask;true;true;false;false
slice::<impl [T]>::copy_from_slice;false;true;true;false
<iter::adapters::peekable::Peekable<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
<num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_i64gather_pd;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::MulAssign<&num::saturating::Saturating<u8>>>::mul_assign;false;false;true;false
num::saturating::Saturating::<u32>::count_ones;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_reduce_sd;true;true;true;false
<str::iter::MatchesInternal<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpneq_pd_mask;true;true;true;false
<num::saturating::Saturating<T> as fmt::Display>::fmt;false;false;true;false
<str::iter::RSplitN<'a, P> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fmsub_pd;true;true;true;false
cell::once::OnceCell::<T>::take;false;false;true;false
<char::ToLowercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<result::IntoIter<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_mullox_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_kortestz;true;false;false;false
<iter::sources::empty::Empty<T> as default::Default>::default;false;false;false;false
num::dec2flt::lemire::full_multiplication;false;false;false;false
<iter::sources::empty::Empty<T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
sync::atomic::AtomicI8::load;false;true;true;false
iter::traits::collect::default_extend_tuple_l::extend;false;false;true;false
tuple::<impl cmp::PartialOrd for (V, U, T)>::ge;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::AddAssign<&num::saturating::Saturating<u64>>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mul_ps;true;true;true;false
<num::saturating::Saturating<u128> as ops::arith::RemAssign<&num::saturating::Saturating<u128>>>::rem_assign;false;false;true;false
num::niche_types::NonZeroU16Inner::as_inner;false;false;false;false
panicking::panic_in_cleanup;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi32lo_pd;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi32_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_max_epu8;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i64, 2>>::from;false;false;false;false
str::slice_error_fail_rt;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_ternarylogic_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_fpclass_pd_mask;true;true;true;false
num::<impl i8>::overflowing_neg;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cmul_pch;true;true;true;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx::_mm256_permute2f128_pd;true;true;true;false
<net::ip_addr::Ipv6Addr as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm_sqrt_round_ss;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
iter::traits::iterator::Iterator::array_chunks;false;false;false;false
fmt::float::<impl fmt::Debug for f32>::fmt;false;false;true;false
<str::iter::LinesAny<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_srav_epi16;true;true;false;false
str::<impl str>::floor_char_boundary;false;true;false;true
str::pattern::Pattern::is_prefix_of;false;false;false;false
<cell::Ref<'_, T> as ops::deref::Deref>::deref;false;true;true;false
core_arch::x86::avx512f::_mm_mask_scalef_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpeq_epi32_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepi16_ph;true;true;false;false
<i16 as ops::arith::Div>::div;false;false;false;false
<mem::Discriminant<T> as hash::Hash>::hash;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<u64>>::div_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<isize>>::bitor_assign;false;false;true;false
sync::atomic::AtomicBool::new;false;false;false;false
core_arch::x86::avx512f::_mm_cvtt_roundsd_si32;true;true;true;false
num::<impl i32>::unchecked_add;true;false;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdi_epi32;true;true;false;false
<&u32 as ops::bit::Shl<&u32>>::shl;false;false;false;false
sync::atomic::AtomicI16::from_mut;false;true;true;false
core_arch::x86::avx::_mm256_movemask_ps;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpgt_epi32_mask;true;true;false;false
<num::saturating::Saturating<u8> as ops::arith::RemAssign<u8>>::rem_assign;false;false;true;false
str::validations::utf8_is_cont_byte;false;false;false;false
num::<impl u8>::wrapping_rem_euclid;false;false;false;false
tuple::<impl cmp::PartialOrd for (D, C, B, A, Z, Y, X, W, V, U, T)>::ge;false;false;false;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
num::<impl u64>::checked_mul;false;false;false;false
"<[char; N] as str::pattern::Pattern>::is_suffix_of";false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi32_pd;true;true;false;false
char::decode_utf16;false;false;false;false
<&'a num::wrapping::Wrapping<u128> as ops::bit::BitOr<num::wrapping::Wrapping<u128>>>::bitor;false;false;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
cell::once::OnceCell::<T>::try_insert;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_shuffle_f32x4;true;true;true;false
core_arch::x86::avx512vbmi::_mm512_mask_multishift_epi64_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_sqrt_sh;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_pd;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvt_roundi64_sh;true;true;true;false
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_next;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_div_ps;true;true;true;false
num::<impl i8>::overflowing_shr;false;false;false;false
core_simd::vector::mask_up_to;false;false;false;false
<i16 as iter::traits::accum::Product<&'a i16>>::product;false;false;false;true
core_arch::x86::gfni::_mm256_gf2p8affineinv_epi64_epi8;true;true;false;false
iter::adapters::map_windows::MapWindowsInner::<I, N>::size_hint;false;false;true;false
<u32 as ops::bit::Shl<isize>>::shl;false;false;false;false
net::socket_addr::SocketAddrV4::port;false;false;false;false
<core_arch::simd::u8x4 as cmp::PartialEq>::eq;false;false;false;false
tuple::<impl cmp::PartialOrd for (Z, Y, X, W, V, U, T)>::le;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_add_ph;true;true;true;false
num::nonzero::NonZero::<i8>::from_be;false;true;false;false
slice::<impl [T]>::select_nth_unstable;false;false;true;false
<char as pat::RangePattern>::sub_one;false;false;false;false
tuple::<impl cmp::Ord for (Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
<core_arch::simd::m8x16 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::bmi2::_bzhi_u32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_srav_epi64;true;true;false;false
num::int_sqrt::u64;false;false;false;false
<f128 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<&'a num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::all;false;false;true;true
core_arch::x86::avx512f::_mm512_maskz_srli_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_mask_load_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtepu64_pd;true;true;false;false
sync::atomic::AtomicI16::fetch_add;false;true;true;false
<&num::wrapping::Wrapping<usize> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr;false;false;false;false
num::nonzero::NonZero::<u128>::rotate_left;false;true;false;false
num::nonzero::NonZero::<i8>::wrapping_neg;false;true;false;false
<marker::variance::PhantomCovariantLifetime<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cmul_pch;true;true;true;false
core_arch::x86::avx512f::_mm_mask_ror_epi64;true;true;false;false
<i64 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<&'a f128 as ops::arith::Div<f128>>::div;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_and_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_epu32;true;true;true;false
<u16 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
sync::atomic::AtomicPtr::<T>::fetch_byte_add;false;true;true;false
<slice::iter::SplitNMut<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
num::<impl i16>::strict_pow;false;false;false;true
num::nonzero::NonZero::<i32>::wrapping_neg;false;true;false;false
<num::saturating::Saturating<i32> as ops::arith::Sub<&num::saturating::Saturating<i32>>>::sub;false;false;false;false
<&'b str as str::pattern::Pattern>::is_prefix_of;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u8>::try_from;false;false;false;false
tuple::<impl cmp::PartialOrd for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::le;false;false;false;false
intrinsics::offset;true;false;false;false
core_arch::x86::avx512f::_mm512_cmpgt_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_div_round_sh;true;true;true;false
num::<impl i32>::to_be;false;false;false;false
cmp::impls::<impl cmp::PartialEq for u8>::ne;false;false;false;false
slice::sort::stable::drift::DriftsortRun::new_unsorted;false;false;false;false
core_arch::x86::__m128i::as_i32x4;false;false;false;false
core_arch::simd::m8x32::splat::JustOne;false;false;false;false
sync::atomic::AtomicIsize::from_mut;false;true;true;false
num::saturating::Saturating::<i16>::reverse_bits;false;false;false;false
core_arch::x86::avx512vbmi::_mm_maskz_multishift_epi64_epi8;true;true;false;false
intrinsics::cttz;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srai_epi32;true;true;false;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<i32 as ops::arith::Rem<&i32>>::rem;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::Add>::add;false;false;false;false
<i32 as ops::bit::Shr<&usize>>::shr;false;false;false;false
num::<impl u8>::strict_neg;false;false;false;false
num::<impl usize>::isolate_most_significant_one;false;false;false;false
ffi::c_str::CStr::from_bytes_until_nul;false;true;false;false
panicking::assert_failed;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_getmant_ss;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_mullo_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_getmant_ph;true;true;true;false
<i8 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_fnmsub_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi16;true;true;true;false
ops::coroutine::CoroutineState::Yielded;false;false;false;false
num::flt2dec::strategy::dragon::format_shortest;false;true;true;true
<&A as alloc::Allocator>::deallocate;true;true;true;false
char::convert::CharTryFromError;false;false;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<i16, N>>::div;false;true;false;false
tuple::<impl default::Default for (U, T)>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_store_epi64;true;true;true;false
<char::ToUppercase as iter::traits::iterator::Iterator>::last;false;false;true;true
f16::<impl f16>::classify;false;false;true;false
num::nonzero::NonZero::<i32>::from_le;false;true;false;false
core_arch::x86::avx512f::_mm_mul_round_ss;true;true;true;false
f64::<impl f64>::is_finite;false;false;true;false
convert::num::<impl convert::TryFrom<i128> for i8>::try_from;false;false;false;false
<isize as ops::arith::DivAssign<&isize>>::div_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_mov_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvttps_epi32;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtt_roundpd_epu64;true;true;true;false
result::Result::Err;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvttpd_epu64;true;true;true;false
<&num::saturating::Saturating<usize> as ops::arith::Mul<&num::saturating::Saturating<usize>>>::mul;false;false;false;false
intrinsics::logf64;true;false;true;false
<u16 as ops::bit::Shl<u32>>::shl;false;false;false;false
<&'a u128 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::__m256h::splat;false;true;true;false
<i8 as ops::bit::Shr<usize>>::shr;false;false;false;false
intrinsics::mir::Static;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepi16_ph;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Sub>::sub;false;false;false;false
num::<impl u8>::cast_signed;false;false;false;false
num::saturating::Saturating::<i32>::count_ones;false;false;false;false
ptr::addr_eq;false;false;true;false
ptr::mut_ptr::<impl *mut T>::write_volatile;true;true;true;false
<slice::iter::Split<'a, T, P> as iter::traits::iterator::Iterator>::next;false;true;true;true
sync::atomic::AtomicI16::new;false;false;false;false
sync::atomic::AtomicI64::fetch_or;false;true;true;false
<slice::iter::SplitN<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<str::iter::Split<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<char as slice::cmp::SliceContains>::slice_contains;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_fnmadd_pd;true;true;true;false
<core_arch::simd::i8x2 as fmt::Debug>::fmt;false;false;true;false
<u64 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<core_simd::masks::Mask<T, N> as ops::bit::BitXor<bool>>::bitxor;false;false;true;false
<i32 as ops::bit::Shl<&i128>>::shl;false;false;false;false
cell::assert_coerce_unsized;false;false;true;false
<fmt::DebugAsHex as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_shuffle_epi8;true;true;false;false
num::<impl u128>::reverse_bits;false;false;false;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<&'a num::saturating::Saturating<i8> as ops::arith::Sub<num::saturating::Saturating<i8>>>::sub;false;false;false;false
<I as async_iter::async_iter::IntoAsyncIterator>::into_async_iter;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::Shr<usize>>::shr;false;false;false;false
<iter::adapters::peekable::Peekable<I> as fmt::Debug>::fmt;false;false;true;false
<str::pattern::MultiCharEqPattern<C> as str::pattern::Pattern>::into_searcher;false;false;true;false
core_arch::x86::avx512f::_mm512_sub_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epi32;true;true;true;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_try_rfold::nth_back;false;false;true;false
core_arch::x86_64::adx::_addcarryx_u64;true;true;true;false
core_arch::x86::avx512f::_mm512_fnmadd_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_rcp14_ss;true;true;true;false
core_arch::simd::i32x16::splat;false;true;false;false
intrinsics::drop_in_place;true;true;true;false
ffi::c_str::CStr::to_bytes_with_nul;false;true;false;false
<core_arch::simd::u64x1 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epi32;true;true;true;false
fmt::num::<impl fmt::UpperHex for u128>::fmt;false;false;true;false
<core_simd::masks::Mask<T, N> as ops::bit::Not>::not;false;false;true;false
core_arch::x86::avx512f::_mm512_inserti64x4;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_max_epi16;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::valid;false;true;false;false
<core_simd::masks::Mask<T, N> as clone::Clone>::clone;false;false;true;false
tuple::<impl cmp::Ord for (W, V, U, T)>::cmp;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::AddAssign>::add_assign;false;false;true;false
mem::take;false;false;true;false
hash::impls::<impl hash::Hash for i32>::hash_slice;false;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::index;false;false;false;false
num::int_log10::less_than_5;false;false;false;false
<slice::iter::RSplitNMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Div<&num::wrapping::Wrapping<u64>>>::div;false;false;false;false
num::wrapping::Wrapping::<u16>::pow;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpge_epu16_mask;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i32> for &'lhs core_simd::vector::Simd<i32, N>>::shr;false;false;false;false
<u32 as ops::bit::BitOr<&u32>>::bitor;false;false;false;false
<task::poll::Poll<T> as hash::Hash>::hash;false;false;true;false
<num::niche_types::I32NotAllOnes as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_scalef_round_sd;true;true;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::simd::i32x2::new;false;false;false;false
num::saturating::Saturating::<usize>::count_zeros;false;false;false;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_storeu_epi32;true;true;true;false
intrinsics::sqrtf128;true;false;true;false
num::wrapping::Wrapping::<i8>::swap_bytes;false;false;false;false
unicode::unicode_data::white_space::lookup;false;false;false;false
<usize as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_storeu_epi8;true;true;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeFrom<A>>::next;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmp_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cmul_pch;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_storeu_epi16;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&num::wrapping::Wrapping<usize>>>::mul_assign;false;false;true;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Mul>::mul;false;false;false;false
<num::wrapping::Wrapping<i8> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<i8>>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm256_maskz_cvt_roundps_ph;true;true;true;false
fmt::float::float_to_decimal_display;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmplt_epi16_mask;true;true;false;false
core_arch::x86::avx2::_mm_mask_i32gather_ps;true;true;true;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
char::EscapeDebug::printable;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<usize>>>::bitxor_assign;false;false;true;false
<u16 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
num::<impl i8>::overflowing_shl;false;false;false;false
<u32 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
core_arch::x86::sse2::_mm_set1_epi64x;true;true;false;false
num::niche_types::NonZeroI16Inner::new_unchecked;true;false;false;false
core_arch::x86::avx2::_mm256_unpackhi_epi64;true;true;false;false
<hash::sip::Hasher<S> as hash::Hasher>::finish;false;false;true;false
char::convert::char_try_from_u32;false;false;false;false
convert::num::<impl convert::TryFrom<i64> for i8>::try_from;false;false;false;false
num::nonzero::NonZero::<i8>::wrapping_abs;false;true;false;false
sync::atomic::strongest_failure_ordering;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_shuffle_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cvtepi16_epi8;true;true;false;false
num::<impl u16>::overflowing_shr;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<u32>>::rem_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_movm_epi16;true;true;false;false
core_arch::x86::avx512ifma::_mm_madd52lo_epu64;true;true;false;false
num::<impl u8>::overflowing_mul;false;false;false;false
<iter::adapters::filter::Filter<I, P> as clone::Clone>::clone;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign;false;false;true;false
num::<impl u64>::count_ones;false;false;false;false
<i32 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<u8 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldi_epi32;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_range_ps;true;true;true;false
<i32 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
fmt::Arguments::<'a>::new_v1;false;false;true;false
num::<impl u128>::unbounded_shl;false;true;false;false
<num::saturating::Saturating<u64> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
intrinsics::atomic_singlethreadfence_seqcst;true;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_fnmsub_ps;true;true;true;false
core_arch::x86_64::bmi2::_pdep_u64;true;true;false;false
<ptr::metadata::DynMetadata<Dyn> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse3::_mm_moveldup_ps;true;true;true;false
<ops::range::RangeTo<Idx> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_srlv_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<i128> for num::nonzero::NonZero<i128>>::try_from;false;false;false;false
<hash::sip::State as clone::Clone>::clone;false;false;true;false
<num::saturating::Saturating<u8> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::simd::u64x2::splat::JustOne;false;false;false;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_xor_si512;true;true;false;false
num::<impl u64>::checked_rem;false;false;false;false
num::<impl u32>::midpoint;false;false;false;false
intrinsics::minnumf16;false;false;true;false
sync::atomic::AtomicI16::swap;false;true;true;false
num::<impl i32>::wrapping_shr;false;true;false;false
<net::socket_addr::SocketAddrV6 as fmt::Debug>::fmt;false;false;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::last;false;false;true;true
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<&'a u16 as ops::bit::BitXor<u16>>::bitxor;false;false;false;false
<i64 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
<ffi::c_str::CStr as ops::index::Index<ops::range::RangeFrom<usize>>>::index;false;true;false;false
hash::Hasher::write_i64;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::bit::BitOr<&num::wrapping::Wrapping<u128>>>::bitor;false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_sum;false;true;false;false
intrinsics::atomic_xchg_acquire;true;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for usize>::try_from;false;false;false;false
core_arch::x86::avxneconvert::_mm_cvtneoph_ps;true;true;true;false
core_arch::x86_64::amx::_tile_dpbuud;true;true;false;false
ffi::c_str::CStr::from_bytes_with_nul_unchecked::compiletime;false;true;false;true
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu16;true;true;true;false
core_arch::x86::sse2::_mm_cvtsd_f64;true;true;true;false
iter::traits::collect::default_extend_tuple_a;false;false;true;true
<num::wrapping::Wrapping<isize> as iter::traits::accum::Sum>::sum;false;false;false;true
str::iter::RSplitN;false;false;true;false
core_arch::simd::u64x4::splat;false;true;false;false
core_arch::x86::avx512f::_mm_i64scatter_ps;true;true;true;false
core_simd::ops::deref::<impl ops::bit::BitXor<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::bitxor;false;false;false;false
<i32 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<&'a isize as ops::arith::Mul<isize>>::mul;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvttph_epi16;true;true;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
ops::index_range::IndexRange::end;false;false;true;false
<i16 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::is_aligned;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitXorAssign<&num::saturating::Saturating<isize>>>::bitxor_assign;false;false;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<u64, N>>::not;false;false;false;false
core_arch::x86::tbm::_blsfill_u32;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_store_ps;true;true;true;false
<&u128 as ops::bit::Shl<&u8>>::shl;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i16>::le;false;false;false;false
fmt::FormattingOptions::fill;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundsd_i64;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_broadcastsd_pd;true;true;true;false
<&isize as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_add_round_ss;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<usize> for core_simd::vector::Simd<usize, N>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_castph512_ph256;true;true;true;false
<array::iter::IntoIter<T, N> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<ops::range::RangeFrom<Idx> as fmt::Debug>::fmt;false;false;true;false
num::<impl isize>::to_le;false;false;false;false
<i64 as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
num::<impl str::traits::FromStr for i64>::from_str;false;false;false;false
<isize as ops::bit::Shr<u8>>::shr;false;false;false;false
ptr::const_ptr::<impl cmp::Ord for *const T>::cmp;false;false;true;false
<net::parser::AddrParseError as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmsub_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_max_epu64;true;true;false;false
num::<impl i16>::overflowing_neg;false;false;false;false
<&u8 as ops::arith::Rem<&u8>>::rem;false;false;false;false
<i128 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_fixupimm_pd;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_reduce_pd;true;true;true;false
core_arch::x86::aes::_mm_aesimc_si128;true;true;false;false
<isize as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::arith::DivAssign>::div_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::addr;false;false;true;false
<&u16 as ops::bit::Shl<&i32>>::shl;false;false;false;false
num::<impl u16>::checked_add_signed;false;false;false;false
<&i128 as ops::arith::Div<&i128>>::div;false;false;false;false
io::borrowed_buf::BorrowedBuf::<'data>::filled;false;true;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_roundscale_pd;true;true;true;false
<num::saturating::Saturating<u16> as ops::arith::MulAssign<&u16>>::mul_assign;false;false;true;false
num::saturating::Saturating::<i128>::reverse_bits;false;false;false;false
num::nonzero::NonZero::<u32>::from_be;false;true;false;false
num::niche_types::NonZeroI8Inner::new;false;false;false;false
ptr::non_null::NonNull::<T>::copy_from_nonoverlapping;true;true;true;false
<iter::adapters::cloned::Cloned<I> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
num::<impl i128>::from_le;false;false;false;false
time::Duration::mul_f32;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtps_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm512_mullo_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_cmp_round_sh_mask;true;true;true;false
<core_arch::simd::u32x32 as clone::Clone>::clone;false;false;false;false
<bstr::ByteStr as fmt::Debug>::fmt;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_getmant_round_sd;true;true;true;false
num::int_log10::i32;false;false;false;false
<u64 as ops::bit::BitXorAssign<&u64>>::bitxor_assign;false;false;true;false
num::flt2dec::strategy::grisu::format_exact_opt;false;true;true;true
<&mut T as fmt::Binary>::fmt;false;false;true;false
<core_arch::simd::f64x1::splat::JustOne as clone::Clone>::clone;false;false;true;false
<ops::range::RangeToInclusive<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
result::Result::<T, E>::iter_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmple_epu32_mask;true;true;false;false
ops::range::Range::<Idx>::contains;false;false;true;false
<pin::Pin<Ptr> as cmp::PartialOrd<pin::Pin<Q>>>::ge;false;false;true;false
<i16 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
intrinsics::transmute;true;false;false;false
num::dec2flt::<impl str::traits::FromStr for f32>::from_str;false;false;false;false
core_arch::x86::avx512dq::_mm256_broadcast_i64x2;true;true;false;false
iter::sources::successors::successors;false;false;true;false
cmp::impls::<impl cmp::PartialEq for u16>::eq;false;false;false;false
<i32 as ops::arith::Add<&i32>>::add;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign;false;false;true;false
core_arch::simd::i64x4::extract;false;true;false;false
<&'a num::saturating::Saturating<isize> as ops::arith::Rem<num::saturating::Saturating<isize>>>::rem;false;false;false;false
<slice::iter::RChunks<'_, T> as clone::Clone>::clone;false;false;true;false
<task::poll::Poll<option::Option<result::Result<T, E>>> as ops::try_trait::Try>::from_output;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512f::_mm_testn_epi64_mask;true;true;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_round_sd;true;true;true;false
<u16 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
num::nonzero::NonZero::<u128>::isqrt;false;true;false;false
core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm512_cvtepu64_pd;true;true;false;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::leading_ones;false;false;false;false
<&num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub;false;false;false;false
num::<impl usize>::wrapping_rem_euclid;false;false;false;false
num::niche_types::NonZeroU128Inner;true;false;false;false
<&num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor;false;false;false;false
fmt::Formatter::<'a>::write_fmt;false;false;true;false
<&i8 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<i8 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
<&'a i8 as ops::arith::Sub<i8>>::sub;false;false;false;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::last;false;false;true;false
fmt::float::<impl fmt::UpperExp for f32>::fmt;false;false;true;false
char::convert::<impl convert::From<char> for u32>::from;false;false;false;false
<&i128 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<T as slice::sort::shared::smallsort::StableSmallSortTypeImpl>::small_sort_threshold;false;false;false;false
<&'a f128 as ops::arith::Add<f128>>::add;false;false;true;false
iter::traits::iterator::Iterator::flat_map;false;false;false;false
core_arch::x86::__m128i::as_array;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_getexp_ps;true;true;true;false
<num::niche_types::NonZeroU64Inner as cmp::PartialEq>::eq;false;false;false;false
num::<impl u64>::midpoint;false;false;false;false
convert::num::<impl convert::TryFrom<u128> for u16>::try_from;false;false;false;false
<i32 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_epi16;true;true;false;false
<i64 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpneq_epi16_mask;true;true;false;false
num::<impl i128>::overflowing_div_euclid;false;false;false;false
convert::num::<impl convert::TryFrom<i8> for u16>::try_from;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_set1_epi16;true;true;false;false
cmp::max;false;false;false;false
<&u16 as ops::bit::BitAnd<&u16>>::bitand;false;false;false;false
core_arch::x86::avx512bw::_mm256_movepi16_mask;true;true;false;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::DivAssign<i128>>::div_assign;false;false;true;false
num::<impl i8>::carrying_mul;false;false;false;false
intrinsics::atomic_cxchg_seqcst_acquire;true;false;true;false
<u64 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits;false;false;false;false
num::<impl u8>::saturating_div;false;false;false;false
core_arch::simd::i32x16::splat::JustOne;false;false;false;false
<&'a u64 as ops::bit::Shr<isize>>::shr;false;false;false;false
<ascii::ascii_char::AsciiChar as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm_mask_store_epi64;true;true;true;false
<ptr::non_null::NonNull<T> as hash::Hash>::hash;false;false;true;false
mem::transmute_copy;true;true;false;false
panicking::panic_const::panic_const_sub_overflow;false;false;false;false
ptr::metadata::DynMetadata::<Dyn>::size_of;false;true;true;false
<i8 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
num::nonzero::NonZero::<i32>::checked_pow;false;true;false;false
<usize as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx2::_mm256_mpsadbw_epu8;true;true;false;false
core_arch::x86::avx512dq::_mm_reduce_ps;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_mask_shrdv_epi32;true;true;false;false
core_simd::ops::deref::<impl ops::bit::BitOr<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::bitor;false;false;false;false
num::<impl isize>::checked_ilog;false;false;false;false
num::<impl i16>::carrying_mul_add;false;false;false;false
<&'a i64 as ops::bit::Shr<u8>>::shr;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitOr>::bitor;false;false;false;false
sync::exclusive::Exclusive::<T>::get_mut;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtepu64_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvttps_epi32;true;true;true;false
<u16 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<&i8 as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmadd_round_ps;true;true;true;false
<u32 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvt_roundsd_ss;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldi_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_adds_epu16;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<i32, N>>::product;false;false;false;true
num::<impl i64>::saturating_div;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<isize>>::div_assign;false;false;true;false
core_arch::x86::sse2::_mm_loadl_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_min_sh;true;true;true;false
num::nonzero::NonZero::<u16>::ilog2;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_permute_pd;true;true;true;false
str::pattern::TwoWaySearcher::maximal_suffix;false;false;false;true
core_arch::x86::avx512f::_mm256_cvtps_epu32;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_div_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi32;true;true;false;false
<usize as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::aes::_mm_aesenclast_si128;true;true;false;false
core_arch::x86::avx512f::_mm_mmask_i64gather_pd;true;true;true;false
<i8 as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_scalef_ss;true;true;true;false
core_arch::x86::avx512bw::_kortestc_mask32_u8;true;true;false;false
core_arch::x86_64::avx512f::_mm_cvtt_roundsd_i64;true;true;true;false
core_arch::x86::avx512f::_mm_mask_testn_epi32_mask;true;true;false;false
intrinsics::atomic_cxchg_seqcst_relaxed;true;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_pd;true;true;true;false
num::<impl i8>::div_euclid;false;false;false;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<f64, N>>::neg;false;true;true;false
core_arch::x86::avx512bw::_mm_mask_mulhi_epi16;true;true;false;false
<alloc::AllocError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<ops::range::RangeFrom<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;false;false
slice::<impl [T]>::align_to_mut;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvtepu32_ph;true;true;false;false
<&mut H as hash::Hasher>::write_u128;false;false;true;false
<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<usize>>::bitor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_mullo_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_ternarylogic_epi32;true;true;false;false
<&'a i64 as ops::bit::BitOr<i64>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_sqrt_round_ph;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for i32>::le;false;false;false;false
num::<impl isize>::pow;false;false;false;true
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_rfold;false;false;true;true
core_arch::x86::avx512f::_mm_mask_compressstoreu_epi32;true;true;true;false
<&'a num::saturating::Saturating<i16> as ops::bit::BitXor<num::saturating::Saturating<i16>>>::bitxor;false;false;false;false
<ops::range::RangeInclusive<A> as iter::range::RangeInclusiveIteratorImpl>::spec_try_rfold;false;false;true;true
num::nonzero::NonZero::<T>::get;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
str::<impl str>::as_bytes;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_cvttps_epi64;true;true;true;false
intrinsics::atomic_xadd_relaxed;true;false;true;false
num::<impl u64>::next_power_of_two;false;false;false;false
<f16 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_add_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_fmul_round_sch;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask3_fcmadd_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi16;true;true;true;false
<[u8] as num::dec2flt::common::ByteSlice>::write_u64;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_sll_epi32;true;true;false;false
iter::traits::iterator::Iterator::try_collect;false;false;true;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
<u32 as ops::bit::Shr<u8>>::shr;false;false;false;false
num::<impl u32>::ilog;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;false;true;false
<u32 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<array::iter::IntoIter<T, N> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
num::<impl i32>::wrapping_rem_euclid;false;false;false;false
<f128 as default::Default>::default;false;false;false;false
<slice::iter::RChunksExact<'a, T> as fmt::Debug>::fmt;false;false;true;false
num::<impl i16>::strict_rem_euclid;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::SourceIter>::as_inner;true;true;true;false
<num::niche_types::I32NotAllOnes as clone::Clone>::clone;false;false;false;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<slice::ascii::EscapeByte as ops::function::FnOnce<(&u8,)>>::call_once;false;false;false;false
core_arch::simd::u16x2::from_array;false;false;false;false
core_arch::x86::sse2::_mm_cmpord_pd;true;true;true;false
<str::iter::Bytes<'a> as clone::Clone>::clone;false;false;true;false
f32::<impl f32>::is_sign_negative;false;false;true;false
sync::atomic::AtomicU32::get_mut;false;false;true;false
core_arch::x86::fma::_mm256_fmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_sub_pd;true;true;true;false
core_arch::simd::u64x2::from_array;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_broadcast_f64x4;true;true;true;false
iter::traits::iterator::Iterator::last;false;false;false;true
<&'a i64 as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl i128>::overflowing_sub;false;false;false;false
<str::pattern::CharSearcher<'a> as str::pattern::ReverseSearcher<'a>>::next_back;false;true;true;false
core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi32;true;true;false;false
<&u128 as ops::bit::BitXor<&u128>>::bitxor;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::with_addr;false;false;true;false
core_arch::x86::__m256::splat::JustOne;false;false;true;false
core_arch::x86::avx512f::_mm_cvtusepi32_epi8;true;true;false;false
num::bignum::Big32x40::is_zero;false;false;true;true
<iter::sources::repeat_with::RepeatWith<F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::sse2::_mm_ucomige_sd;true;true;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i16> for usize>::try_from;false;false;false;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<u16, N>>::bitor;false;true;false;false
intrinsics::ptr_guaranteed_cmp;false;false;true;false
<&i16 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_cvtps_pd;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign<u64>>::bitor_assign;false;false;true;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<u32 as ops::bit::Shl<&i8>>::shl;false;false;false;false
iter::sources::repeat_n::repeat_n;false;false;false;false
<num::wrapping::Wrapping<u16> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<u16>>>::product;false;false;false;true
num::wrapping::Wrapping::<i128>::to_be;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::AddAssign<&num::saturating::Saturating<u16>>>::add_assign;false;false;true;false
<&usize as ops::bit::Shl<&usize>>::shl;false;false;false;false
num::wrapping::Wrapping::<i8>::is_positive;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOr>::bitor;false;false;false;false
<iter::sources::successors::Successors<T, F> as fmt::Debug>::fmt;false;false;true;false
<slice::sort::stable::merge::MergeState<T> as ops::drop::Drop>::drop;false;true;true;false
<char::convert::CharErrorKind as fmt::Debug>::fmt;false;false;true;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::get;false;false;false;false
num::saturating::Saturating::<i32>::leading_zeros;false;false;false;false
core_arch::x86::sse2::_mm_cmplt_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_max_epu16;true;true;false;false
intrinsics::mir::CopyForDeref::panic_cold_explicit;false;false;false;false
intrinsics::mir::Variant::panic_cold_explicit;false;false;false;false
<u8 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
sync::atomic::AtomicU64::new;false;false;false;false
core_arch::x86::avx512f::_mm512_i32scatter_epi64;true;true;true;false
num::<impl i8>::wrapping_rem_euclid;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<&'a u128 as ops::bit::Shr<u32>>::shr;false;false;false;false
num::saturating::Saturating::<i64>::trailing_zeros;false;false;false;false
iter::traits::double_ended::DoubleEndedIterator::try_rfold;false;false;true;true
core_arch::simd::u64x1::new;false;false;false;false
slice::<impl [T]>::len;false;false;false;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<u64, N>>::bitxor;false;true;false;false
ptr::const_ptr::<impl *const T>::offset_from_unsigned::precondition_check;false;false;true;false
num::<impl usize>::saturating_mul;false;false;false;false
<u8 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<&num::wrapping::Wrapping<u128> as ops::arith::Rem<&num::wrapping::Wrapping<u128>>>::rem;false;false;false;false
core_arch::x86::avx512dq::_mm256_maskz_cvttps_epu64;true;true;true;false
core_arch::x86::avx512f::_mm_cmp_ss_mask;true;true;true;false
core_arch::x86::avx512f::_mm_mask_i64scatter_ps;true;true;true;false
<isize as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmul_round_pch;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 8>> for core_arch::x86::__m256i>::from;false;false;false;false
core_simd::vector::Simd::<T, N>::splat::splat_const;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpwusd_epi32;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
core_arch::x86::avx512bw::_mm_cmplt_epu8_mask;true;true;false;false
tuple::<impl default::Default for (D, C, B, A, Z, Y, X, W, V, U, T)>::default;false;false;false;false
<&mut H as hash::Hasher>::write_str;false;false;true;false
tuple::<impl cmp::Ord for (T,)>::cmp;false;false;false;false
<num::bignum::Big32x40 as cmp::PartialOrd>::partial_cmp;false;false;true;false
<&num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand;false;false;false;false
<i64 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
fmt::num::<impl fmt::UpperHex for i32>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_sra_epi32;true;true;false;false
<&u16 as ops::arith::Mul<&u16>>::mul;false;false;false;false
num::<impl u64>::strict_rem_euclid;false;false;false;false
<fmt::rt::Argument<'a> as clone::Clone>::clone;false;false;true;false
intrinsics::disjoint_bitor;true;true;false;false
<u32 as ops::bit::Shr<&u64>>::shr;false;false;false;false
num::saturating::Saturating::<i64>::rotate_right;false;false;false;false
<num::wrapping::Wrapping<i128> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<i128>>>::product;false;false;false;true
core_arch::x86::avx2::_mm256_sign_epi32;true;true;false;false
<&'a i16 as ops::bit::BitAnd<i16>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi32;true;true;false;false
<&u8 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<u8 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<&num::saturating::Saturating<i128> as ops::arith::Neg>::neg;false;false;false;false
<i128 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<range::Range<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<result::Result<T, E> as cmp::PartialEq>::eq;false;false;true;false
intrinsics::atomic_and_release;true;false;true;false
<i32 as iter::range::Step>::forward_checked;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign<&u16>>::bitxor_assign;false;false;true;false
num::<impl usize>::wrapping_mul;false;false;false;false
<fmt::Error as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_arch::x86::__m128h as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_mul_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_srli_epi16;true;true;false;false
num::wrapping::Wrapping::<usize>::trailing_zeros;false;false;false;false
num::nonzero::NonZero::<i32>::saturating_neg;false;false;false;false
<usize as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
core_arch::x86::avx::_mm256_set1_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_sub_pd;true;true;true;false
cmp::impls::<impl cmp::PartialOrd<&mut B> for &mut A>::partial_cmp;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi32_ps;true;true;false;false
ptr::mut_ptr::<impl *mut [T]>::get_unchecked_mut;true;true;true;false
convert::num::<impl convert::From<i8> for i64>::from;false;false;false;false
core_arch::x86::avx512ifma::_mm_madd52lo_avx_epu64;true;true;false;false
<&u128 as ops::bit::Shl<&u16>>::shl;false;false;false;false
ptr::mut_ptr::<impl *mut T>::read_volatile;true;true;true;false
num::nonzero::NonZero::<i8>::saturating_abs;false;true;false;false
cmp::impls::<impl cmp::PartialOrd for isize>::ge;false;false;false;false
slice::rotate::ptr_rotate_memmove;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_andnot_pd;true;true;true;false
<num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor;false;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitXor>::bitxor;false;false;false;false
num::wrapping::Wrapping::<u64>::next_power_of_two;false;false;false;false
core_arch::x86::avx512bw::_mm_storeu_epi16;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_or;false;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_loadu_epi16;true;true;true;false
num::<impl i8>::checked_abs;false;false;false;false
<i128 as ops::bit::Shl<isize>>::shl;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::fold;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_ternarylogic_epi64;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<&isize>>::bitand_assign;false;false;true;false
num::<impl i16>::checked_isqrt;false;true;false;false
ptr::metadata::DynMetadata::<Dyn>::align_of;false;true;true;false
<num::saturating::Saturating<usize> as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_or_epi16;true;true;false;false
num::<impl i128>::carrying_mul_add;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitAnd<&num::saturating::Saturating<isize>>>::bitand;false;false;false;false
num::<impl isize>::rotate_right;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_getexp_round_sh;true;true;true;false
core_arch::x86::sse2::_mm_unpackhi_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_mask_getmant_ps;true;true;true;false
core_arch::simd::i64x2;false;false;false;false
<&i8 as ops::arith::Div<&i8>>::div;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::fold;false;false;true;true
iter::traits::iterator::Iterator::try_find::check;false;false;false;false
<&'a i64 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_avg_epu8;true;true;false;false
str::pattern::StrSearcherImpl::Empty;false;false;true;false
core_arch::x86::avx512bw::_mm512_max_epu8;true;true;false;false
fmt::builders::DebugMap::<'a, 'b>::value;false;false;true;false
slice::<impl [T]>::reverse;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_expand_pd;true;true;true;false
core_arch::x86::avx2::_mm256_alignr_epi8;true;true;false;false
<u32 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<char::TryFromCharError as cmp::PartialEq>::eq;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::max;false;false;true;false
<str::UnsafeBytesToStr as ops::function::Fn<(&'a [u8],)>>::call;false;true;false;false
<core_arch::simd::i32x4 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_cvtusepi64_epi16;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for f64>::le;false;false;true;false
core_arch::x86::avx512fp16::_mm512_fmadd_round_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi64;true;true;true;false
num::<impl u32>::isqrt;false;true;false;false
<core_arch::simd::i8x8 as cmp::PartialEq>::eq;false;false;false;false
<core_arch::simd::i16x8 as clone::Clone>::clone;false;false;false;false
<&num::wrapping::Wrapping<usize> as ops::arith::Rem<&num::wrapping::Wrapping<usize>>>::rem;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_madd_epi16;true;true;false;false
<isize as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
core_arch::simd::u16x8::extract;false;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_broadcast_f32x2;true;true;true;false
<u128 as random::Random>::random;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_simd::vector::Simd::<T, N>::load_or_default;false;false;false;false
num::<impl i16>::wrapping_rem_euclid;false;false;false;false
intrinsics::exp2f64;true;false;true;false
<char::EscapeDebug as iter::traits::iterator::Iterator>::next;false;false;true;false
<&num::saturating::Saturating<u16> as ops::arith::Rem<&num::saturating::Saturating<u16>>>::rem;false;false;false;false
iter::adapters::map_windows::Buffer::<T, N>::try_from_iter;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmp_epu16_mask;true;true;false;false
<num::dec2flt::common::BiasedFp as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512dq::_mm256_cvttpd_epi64;true;true;true;false
<u8 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
<i8 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand;false;false;false;false
<ptr::metadata::DynMetadata<Dyn> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_rsqrt_sh;true;true;true;false
<u16 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<char::convert::CharTryFromError as clone::Clone>::clone;false;false;false;false
<option::IterMut<'a, A> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvtph_epi64;true;true;true;false
num::wrapping::Wrapping::<u16>::to_le;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<i128 as iter::range::Step>::backward_checked;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fmsub_ps;true;true;true;false
intrinsics::unreachable;true;false;false;false
num::wrapping::Wrapping::<u32>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepu16_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm_cmplt_epi8_mask;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::MulAssign<&isize>>::mul_assign;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::AddAssign<&num::saturating::Saturating<i128>>>::add_assign;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::simd_max;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_permutex2var_epi64;true;true;false;false
<&i16 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<result::Result<V, E> as iter::traits::collect::FromIterator<result::Result<A, E>>>::from_iter;false;false;false;false
core_arch::x86::avx512vbmi::_mm_mask_multishift_epi64_epi8;true;true;false;false
<core_arch::simd::m32x8 as cmp::PartialEq>::eq;false;false;false;false
num::<impl i32>::isolate_most_significant_one;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_roundscale_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmp_epi8_mask;true;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::saturating_add;false;true;false;false
<cmp::Reverse<T> as cmp::PartialEq>::eq;false;false;true;false
<i8 as ops::arith::Add<&i8>>::add;false;false;false;false
hint::assert_unchecked::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_inserti32x4;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl i64>::abs;false;false;false;false
ptr::swap;true;true;true;false
<usize as ops::bit::Shl<u8>>::shl;false;false;false;false
num::int_sqrt::i32;true;false;false;false
<&'a u8 as ops::bit::Shr<u16>>::shr;false;false;false;false
<net::ip_addr::IpAddr as cmp::Ord>::cmp;false;false;true;false
fmt::float::<impl fmt::LowerExp for f32>::fmt;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm512_rsqrt14_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_set_epi16;true;false;false;false
core_arch::x86::avx512f::_mm_srav_epi64;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shldi_epi32;true;true;false;false
convert::num::<impl convert::From<bool> for usize>::from;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::AddAssign<u8>>::add_assign;false;false;true;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::iterator::Iterator>::next;false;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepi16_ph;true;true;false;false
f32::<impl f32>::from_bits;false;false;false;false
<usize as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<isize, N>>::sum;false;false;false;true
<core_simd::masks::mask_impl::Mask<T, N> as ops::bit::Not>::not;false;false;true;false
<i64 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<i64 as ops::arith::SubAssign>::sub_assign;false;false;true;false
"<&'b [char; N] as str::pattern::Pattern>::strip_prefix_of";false;false;false;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr;false;false;false;false
num::niche_types::U64NotAllOnes::as_inner;false;false;false;false
core_arch::x86::avx512dq::_mm_cvttpd_epu64;true;true;true;false
num::<impl u8>::saturating_add;false;false;false;false
<slice::iter::RChunksExactMut<'_, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<iter::adapters::map::Map<I, F> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::x86::sse41::_mm_mullo_epi32;true;true;false;false
<isize as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
core_arch::x86::avxneconvert::_mm256_cvtneps_avx_pbh;true;true;true;false
<num::saturating::Saturating<i64> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdi_epi16;true;true;false;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl isize>::wrapping_abs;false;false;false;false
<num::wrapping::Wrapping<i32> as iter::traits::accum::Product>::product;false;false;false;true
fmt::FormattingOptions::flags;false;false;true;false
hash::Hasher::write_length_prefix;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_reduce_ph;true;true;true;false
num::nonzero::NonZero::<i16>::isolate_least_significant_one;false;true;false;false
sync::atomic::AtomicUsize::fetch_sub;false;true;true;false
slice::sort::stable::quicksort::PartitionState::<T>::new;true;true;true;false
<str::pattern::MultiCharEqSearcher<'a, C> as clone::Clone>::clone;false;false;true;false
num::<impl u16>::wrapping_sub_signed;false;false;false;false
core_arch::x86::avx512f::_mm512_i64scatter_epi64;true;true;true;false
num::<impl usize>::isqrt;false;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_avg_epu8;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::DivAssign<&u16>>::div_assign;false;false;true;false
<&'a num::saturating::Saturating<u64> as ops::arith::Sub<num::saturating::Saturating<u64>>>::sub;false;false;false;false
core_arch::x86_64::amx::_tile_stream_loadd;true;true;true;false
<i8 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
<str::pattern::StrSearcher<'a, 'b> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;true
<num::wrapping::Wrapping<u8> as ops::arith::RemAssign<&num::wrapping::Wrapping<u8>>>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_cvtepi64_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_castps_ph;true;false;true;false
ops::range::RangeInclusive::<Idx>::contains;false;false;true;false
<i16 as ops::bit::BitXor<&i16>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm256_broadcast_i32x4;true;true;false;false
<u32 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
intrinsics::const_deallocate;true;false;true;false
hash::Hash::hash_slice;false;false;true;true
<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cvtepi16_storeu_epi8;true;true;true;false
<u64 as ops::arith::Sub>::sub;false;false;false;false
<u8 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::gfni::_mm512_maskz_gf2p8mul_epi8;true;true;false;false
<i128 as ops::bit::Shr<i16>>::shr;false;false;false;false
<&f64 as ops::arith::Div<&f64>>::div;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div;false;false;false;false
core_arch::x86::sse2::_mm_shufflelo_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_or_ps;true;true;true;false
num::<impl i64>::rotate_left;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::fold;false;false;true;true
num::<impl i16>::strict_sub;false;false;false;false
cell::UnsafeCell::<T>::raw_get;false;false;true;false
tuple::<impl cmp::PartialOrd for (A, Z, Y, X, W, V, U, T)>::lt;false;false;false;false
f128::<impl f128>::is_sign_positive;false;false;true;false
num::saturating::Saturating::<u128>::count_ones;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::get;false;false;false;false
"<core_simd::vector::Simd<T, N> as convert::From<[T; N]>>::from";false;false;false;false
<[mem::maybe_uninit::MaybeUninit<T>]>::write_copy_of_slice;false;true;true;false
intrinsics::fmul_algebraic;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::MulAssign<&num::saturating::Saturating<i64>>>::mul_assign;false;false;true;false
<i64 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
<&num::wrapping::Wrapping<u64> as ops::arith::Add<&num::wrapping::Wrapping<u64>>>::add;false;false;false;false
sync::atomic::AtomicIsize::get_mut_slice;false;true;true;false
core_arch::x86::avx512f::_mm_i32scatter_epi32;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i64> for &'lhs core_simd::vector::Simd<i64, N>>::shr;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
core_arch::x86::avx512f::_mm_mask2_permutex2var_epi32;true;true;false;false
core_arch::x86::avx512cd::_mm_conflict_epi64;true;true;false;false
<(EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(L, K, J, I, H, G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
<ops::range::RangeFull as hash::Hash>::hash;false;false;true;false
<ops::control_flow::ControlFlow<B, C> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_i64gather_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_kand;true;false;false;false
core_arch::x86::avx512f::_mm_mask_getexp_sd;true;true;true;false
<pin::Pin<Ptr> as hash::Hash>::hash;false;false;true;false
num::saturating::Saturating::<i16>::is_negative;false;false;false;false
num::<impl i16>::overflowing_shl;false;false;false;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::advance_by;false;true;true;false
core_arch::x86::avx512f::_mm512_cmpeq_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm256_mask_cvttps_epi64;true;true;true;false
core_arch::simd::u8x32::splat;false;true;false;false
core_arch::x86::avx512dq::_kshiftri_mask8;true;false;false;false
<u64 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
"slice::<impl [[T; N]]>::as_flattened_mut";false;true;true;false
str::<impl str>::trim;false;false;false;false
num::<impl i64>::count_ones;false;false;false;false
<error::tags::Value<T> as fmt::Debug>::fmt;false;false;true;false
iter::traits::iterator::Iterator::le;false;false;false;false
num::nonzero::NonZero::<i128>::abs;false;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_mul_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_ps;true;true;true;false
<&u128 as ops::bit::Shr<&i64>>::shr;false;false;false;false
num::<impl i128>::max_value;false;false;false;false
<u64 as ops::bit::Shl<i64>>::shl;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::MulAssign<&u128>>::mul_assign;false;false;true;false
str::pattern::TwoWaySearcher::byteset_create;false;false;false;true
num::flt2dec::strategy::grisu::format_exact_opt::possibly_round;true;true;true;false
core_arch::x86::sse41::_mm_insert_ps;true;true;true;false
ffi::c_str::CStr::as_non_null_ptr;false;true;false;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
fmt::num::imp::<impl fmt::LowerExp for u16>::fmt;false;false;true;false
<&'a i16 as ops::bit::Shr<u32>>::shr;false;false;false;false
hash::impls::<impl hash::Hash for (T, B, C, D, E)>::hash;false;false;true;false
core_arch::x86::avx::_mm256_setr_epi64x;true;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_broadcastb_epi8;true;true;false;false
<iter::adapters::copied::Copied<I> as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<usize> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<u64 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<u64 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<ops::range::RangeTo<Idx> as hash::Hash>::hash;false;false;true;false
<u128 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
sync::atomic::AtomicI32::from_ptr;true;true;true;false
core_arch::x86::__m512i::as_i32x16;false;false;false;false
num::<impl u16>::checked_next_multiple_of;false;false;false;false
num::<impl i128>::div_floor;false;false;false;false
<char::decode::DecodeUtf16Error as fmt::Display>::fmt;false;false;true;false
<&num::saturating::Saturating<isize> as ops::arith::Add<&num::saturating::Saturating<isize>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sqrt_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_ternarylogic_epi32;true;true;false;false
str::<impl str>::trim_matches;false;true;false;false
<u128 as ops::bit::BitAndAssign<&u128>>::bitand_assign;false;false;true;false
iter::traits::collect::default_extend_tuple_e::extend;false;false;true;false
intrinsics::atomic_cxchgweak_acquire_relaxed;true;false;true;false
core_arch::x86::avx512f::_mm512_set1_pd;true;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm256_cvtepu64_pd;true;true;false;false
result::Result::<T, E>::unwrap_unchecked;true;true;true;false
marker::variance::PhantomCovariantLifetime;false;false;true;false
<&num::wrapping::Wrapping<i16> as ops::arith::Add<&num::wrapping::Wrapping<i16>>>::add;false;false;false;false
<&'a num::wrapping::Wrapping<i32> as ops::bit::BitXor<num::wrapping::Wrapping<i32>>>::bitxor;false;false;false;false
num::wrapping::Wrapping::<u32>::count_ones;false;false;false;false
<usize as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_blend_epi8;true;true;false;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::SubAssign>::sub_assign;false;false;true;false
cmp::impls::<impl cmp::PartialEq for u64>::ne;false;false;false;false
<u32 as ops::arith::Div>::div;false;false;false;false
<u16 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi8;true;true;false;false
<&u64 as ops::bit::Shl<&i16>>::shl;false;false;false;false
fmt::builders::DebugMap::<'a, 'b>::entries;false;false;true;true
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::abs_diff;false;false;false;false
<bool as ops::bit::BitAnd>::bitand;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOr>::bitor;false;false;false;false
<u32 as ops::bit::Shr<u128>>::shr;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
iter::traits::iterator::Iterator::min_by;false;false;false;true
num::<impl i64>::checked_abs;false;false;false;false
char::methods::<impl char>::to_ascii_lowercase;false;false;false;false
sync::atomic::AtomicU16::fetch_sub;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_broadcastd_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_load_pd;true;true;true;false
<usize as ops::bit::Shr<u64>>::shr;false;false;false;false
<iter::adapters::intersperse::Intersperse<I> as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cvtepu8_epi16;true;true;false;false
<u8 as iter::range::Step>::forward;false;false;false;false
<core_arch::simd::m32x4 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::__m128::as_f32x4;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i32gather_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_cmpgt_epu16_mask;true;true;false;false
num::<impl i64>::strict_mul;false;false;false;false
core_arch::x86::avx512vnni::_mm512_mask_dpbusd_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epu64;true;true;true;false
<u32 as ops::bit::Shl<&i32>>::shl;false;false;false;false
sync::atomic::AtomicI8::fetch_sub;false;true;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<&num::saturating::Saturating<u64> as ops::arith::Add<&num::saturating::Saturating<u64>>>::add;false;false;false;false
slice::raw::from_mut_ptr_range;true;true;true;false
unicode::unicode_data::conversions::to_lower;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_mullo_epi64;true;true;false;false
num::<impl i32>::overflowing_add_unsigned;false;false;false;false
num::<impl u32>::cast_signed;false;false;false;false
core_arch::x86::fma::_mm256_fmaddsub_pd;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::trailing_ones;false;false;false;false
intrinsics::cosf128;true;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvttps_epi64;true;true;true;false
num::<impl u64>::overflowing_div;false;false;false;false
cell::lazy::LazyCell::<T, F>::force_mut::really_init_mut::PoisonOnPanic;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<&i16>>::bitand_assign;false;false;true;false
char::convert::<impl str::traits::FromStr for char>::from_str;false;false;false;false
alloc::layout::Layout::padding_needed_for;false;false;false;false
core_arch::x86::avxneconvert::_mm256_cvtneobf16_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i32> for core_simd::vector::Simd<i32, N>>::shr;false;false;false;false
core_arch::x86::sse2::_mm_srli_epi64;true;true;false;false
slice::<impl [T]>::partition_dedup;false;false;true;false
core_arch::x86::avx512f::_mm_mask_alignr_epi64;true;true;false;false
num::saturating::Saturating::<i128>::abs;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::DivAssign<&usize>>::div_assign;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::arith::Neg>::neg;false;false;false;false
<u128 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<&u8 as ops::bit::Shr<&u16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpneq_epu32_mask;true;true;false;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_round_ph;true;true;true;false
sync::atomic::atomic_load;true;true;true;false
"array::equality::<impl cmp::PartialEq<&mut [U]> for [T; N]>::ne";false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reverse_bits;false;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
f64::<impl f64>::to_be_bytes;false;false;true;false
num::<impl u16>::swap_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_avg_epu8;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_broadcast_i32x2;true;true;false;false
ptr::swap_nonoverlapping;true;false;true;false
sync::atomic::AtomicI8::compare_exchange;false;true;true;false
core_arch::x86::avx512f::_mm256_mask3_fmsubadd_ps;true;true;true;false
num::<impl usize>::checked_ilog2;false;false;false;false
<u128 as ops::bit::Shl<&u64>>::shl;false;false;false;false
fmt::builders::DebugInner::<'a, 'b>::entry_with;false;false;true;false
<hash::sip::SipHasher13 as default::Default>::default;false;false;false;false
core_arch::x86_64::tbm::_blcic_u64;true;false;false;false
<num::niche_types::NonZeroU8Inner as fmt::Debug>::fmt;false;false;true;false
iter::traits::collect::default_extend_tuple_h::extend;false;false;true;false
<i32 as ops::bit::Shl<i16>>::shl;false;false;false;false
intrinsics::ptr_metadata;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i32, 8>>::from;false;false;false;false
<cell::Cell<T> as cmp::PartialEq>::eq;false;false;true;false
"<&[T; N] as iter::adapters::flatten::ConstSizeIntoIterator>::size";false;false;false;false
fmt::num::<impl fmt::Debug for i64>::fmt;false;false;true;false
num::<impl i16>::leading_zeros;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_loadu_epi8;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtepu16_ph;true;true;false;false
<sync::atomic::AtomicI16 as convert::From<i16>>::from;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::SubAssign<&u128>>::sub_assign;false;false;true;false
num::<impl u8>::checked_next_multiple_of;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_max_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_roundscale_ph;true;true;true;false
str::<impl str>::splitn;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fixupimm_pd;true;true;true;false
<&u128 as ops::arith::Add<&u128>>::add;false;false;false;false
<i64 as ops::bit::BitAnd>::bitand;false;false;false;false
sync::atomic::AtomicIsize::load;false;true;true;false
core_arch::x86::avx512bw::_mm_mask_dbsad_epu8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvttph_epu64;true;true;true;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_div_round_ph;true;true;true;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<&'a num::wrapping::Wrapping<u8> as ops::arith::Sub<num::wrapping::Wrapping<u8>>>::sub;false;false;false;false
num::<impl i64>::isolate_most_significant_one;false;false;false;false
<ptr::alignment::AlignmentEnum as clone::Clone>::clone;false;false;false;false
ffi::c_str::CStr::to_bytes;false;true;false;false
core_arch::x86::avx512bw::_mm512_cmp_epi8_mask;true;true;false;false
core_arch::x86::avx512f::_mm_comi_round_ss;true;true;true;false
<&'a u64 as ops::bit::Shr<usize>>::shr;false;false;false;false
<net::socket_addr::SocketAddrV4 as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
intrinsics::unchecked_sub;true;false;false;false
num::<impl i16>::unchecked_add;true;false;false;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<u64, N>>::bitor;false;true;false;false
fmt::Arguments::<'a>::as_str;false;false;true;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::index;false;false;false;false
core_arch::x86::avx2::_mm256_add_epi16;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u8, 64>>::from;false;false;false;false
num::<impl i128>::leading_ones;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_or;false;true;false;false
sync::atomic::AtomicI8::store;false;true;true;false
<num::saturating::Saturating<i64> as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::sse41::_mm_max_epu32;true;true;false;false
num::wrapping::Wrapping::<i8>::rotate_right;false;false;false;false
core_arch::x86::avx512f::_mm512_sub_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_rcp14_ps;true;true;true;false
num::nonzero::NonZero::<isize>::rotate_right;false;true;false;false
<i8 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_mov_epi32;true;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_and_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_getexp_ph;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_extracti32x8_epi32;true;true;false;false
slice::<impl [T]>::copy_from_slice::len_mismatch_fail::do_panic::compiletime;false;false;false;false
tuple::<impl cmp::PartialOrd for (A, Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
<num::niche_types::NonZeroIsizeInner as hash::Hash>::hash;false;false;true;false
<i32 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<u16, N>>::shr;false;true;false;false
<i16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
slice::sort::shared::find_existing_run;false;true;true;true
<num::saturating::Saturating<u128> as ops::arith::Rem<&num::saturating::Saturating<u128>>>::rem;false;false;false;false
<bstr::ByteStr as clone::CloneToUninit>::clone_to_uninit;true;true;true;false
<u8 as ops::arith::AddAssign<&u8>>::add_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_getexp_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepu32_pd;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::arith::Div<&num::wrapping::Wrapping<u8>>>::div;false;false;false;false
<sync::atomic::AtomicU64 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu32;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::SubAssign<u8>>::sub_assign;false;false;true;false
slice::sort::unstable::quicksort::partition;false;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_min;false;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_fcmadd_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepu32_ph;true;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Rem>::rem;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<&num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Mul>::mul;false;false;false;false
num::dec2flt::float::RawFloat::integer_decode;false;false;false;false
char::methods::<impl char>::is_ascii_digit;false;false;false;false
array::repeat;false;false;false;false
<iter::adapters::filter::Filter<I, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::bswap::_bswap;true;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epi64;true;true;true;false
<&usize as ops::bit::BitAnd<&usize>>::bitand;false;false;false;false
<num::niche_types::NonZeroUsizeInner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::AddAssign<usize>>::add_assign;false;false;true;false
num::nonzero::NonZero::<u32>::checked_next_power_of_two;false;true;false;false
<char::EscapeDebugInner as fmt::Debug>::fmt;false;false;true;false
<num::niche_types::NonZeroI64Inner as cmp::PartialEq>::eq;false;false;false;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
num::wrapping::Wrapping::<u8>::count_ones;false;false;false;false
num::<impl u16>::overflowing_pow;false;false;false;true
<u128 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<usize as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
<i8 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
slice::<impl [T]>::as_mut_ptr;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtt_roundps_epi32;true;true;true;false
num::<impl i128>::unchecked_shr;true;false;false;false
<&i32 as ops::arith::Mul<&i32>>::mul;false;false;false;false
<num::niche_types::NonZeroI8Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
fmt::rt::Count::Is;false;false;false;false
<&u16 as ops::arith::Rem<&u16>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_srai_epi32;true;true;false;false
num::<impl usize>::from_ascii_radix;false;false;false;true
<&'a num::saturating::Saturating<i32> as ops::bit::BitXor<num::saturating::Saturating<i32>>>::bitxor;false;false;false;false
<ops::range::RangeToInclusive<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpeq_epu8_mask;true;true;false;false
slice::sort::shared::pivot::median3;false;false;true;false
<u32 as ops::arith::MulAssign>::mul_assign;false;false;true;false
f16::<impl f16>::clamp::do_panic;false;false;true;false
<u32 as ops::bit::BitAndAssign<&u32>>::bitand_assign;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitAnd<&num::saturating::Saturating<i64>>>::bitand;false;false;false;false
fmt::builders::DebugList::<'a, 'b>::finish_non_exhaustive;false;false;true;false
num::<impl i64>::wrapping_div_euclid;false;false;false;false
sync::atomic::AtomicU64::compare_exchange;false;true;true;false
<num::wrapping::Wrapping<u32> as iter::traits::accum::Product>::product;false;false;false;true
slice::<impl [T]>::split_first_chunk;false;true;false;false
slice::iter::ChunkBy::<'a, T, P>::new;false;false;false;false
<str::CharEscapeDefault as ops::function::FnOnce<(char,)>>::call_once;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_rolv_epi64;true;true;false;false
<num::saturating::Saturating<i128> as ops::arith::Sub>::sub;false;false;false;false
num::<impl u16>::saturating_sub_signed;false;false;false;false
slice::<impl [T]>::as_rchunks;false;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::MulAssign<i32>>::mul_assign;false;false;true;false
<cmp::Reverse<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<&f64 as ops::arith::Rem<&f64>>::rem;false;false;true;false
core_arch::x86::avx2::_mm256_and_si256;true;true;false;false
core_arch::x86::avx512vnni::_mm_dpwsuds_epi32;true;true;false;false
<panic::panic_info::PanicMessage<'_> as fmt::Debug>::fmt;false;false;true;false
num::<impl u8>::unchecked_mul;true;false;false;false
num::saturating::Saturating::<u16>::reverse_bits;false;false;false;false
num::saturating::Saturating::<i128>::is_negative;false;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitXor<&num::saturating::Saturating<i8>>>::bitxor;false;false;false;false
<i8 as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::sse::_mm_ucomieq_ss;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_madd_epi16;true;true;false;false
num::<impl i16>::ilog10;false;false;false;false
intrinsics::simd::simd_fabs;true;false;false;false
core_arch::x86::avx::_mm256_shuffle_ps;true;true;true;false
<str::iter::RMatchIndices<'a, P> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepi32_ph;true;true;true;false
num::<impl isize>::checked_sub_unsigned;false;false;false;false
<&u8 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<time::Duration as default::Default>::default;false;false;false;false
intrinsics::fabsf128;true;false;true;false
core_arch::x86::avx512fp16::_mm512_reduce_max_ph;true;true;true;false
core_arch::x86::avx2::_mm256_cmpgt_epi8;true;true;false;false
<i64 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
core_arch::x86::avx2::_mm256_packus_epi32;true;true;false;false
<&'a num::saturating::Saturating<usize> as ops::bit::BitXor<num::saturating::Saturating<usize>>>::bitxor;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtph_epu64;true;true;true;false
<u64 as ops::bit::BitAnd<&u64>>::bitand;false;false;false;false
num::<impl u32>::checked_shl;false;true;false;false
<marker::variance::PhantomInvariantLifetime<'a> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<&i64 as ops::arith::Neg>::neg;false;false;false;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G, H)>::hash;false;false;true;false
<slice::iter::ChunksExactMut<'a, T> as fmt::Debug>::fmt;false;false;true;false
<str::iter::RSplit<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::sse42::_mm_crc32_u16;true;true;false;false
<i128 as ops::bit::Shl<&i32>>::shl;false;false;false;false
num::<impl i64>::wrapping_add_unsigned;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x8;true;true;false;false
<time::Duration as ops::arith::Div<u32>>::div;false;false;false;false
num::<impl i8>::overflowing_sub;false;false;false;false
<&u32 as ops::bit::Shl<&i128>>::shl;false;false;false;false
escape::escape_unicode;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_permutevar_pd;true;true;true;false
core_arch::x86_64::sse2::_mm_cvtsi64x_sd;true;true;true;false
<num::niche_types::NonZeroU32Inner as hash::Hash>::hash;false;false;true;false
<i128 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_loadu_epi64;true;true;true;false
core_arch::x86::avx512f::_mm_min_round_sd;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_sub_epi16;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::valid;false;true;false;false
<&f64 as ops::arith::Mul<&f64>>::mul;false;false;true;false
slice::<impl [T]>::subslice_range;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fnmsub_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_comi_round_sh;true;true;true;false
ptr::const_ptr::<impl cmp::PartialOrd for *const T>::ge;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtps_ph;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::Shr<usize>>::shr;false;false;false;false
error::Request::<'a>::provide_value;false;false;true;false
core_arch::simd::f32x8;false;false;true;false
iter::sources::from_fn::from_fn;false;false;false;false
iter::adapters::enumerate::Enumerate::<I>::new;false;false;false;false
<&'a i128 as ops::bit::Shl<i16>>::shl;false;false;false;false
sync::atomic::AtomicUsize::from_mut;false;true;true;false
core_arch::x86::avx512bw::_ktestz_mask64_u8;true;true;false;false
core_arch::x86::avx512f::_mm_fixupimm_round_ss;true;true;true;false
<sync::atomic::AtomicIsize as default::Default>::default;false;false;false;false
core_arch::x86::sha::_mm_sha256msg1_epu32;true;true;false;false
core_arch::simd::u64x1::splat::JustOne;false;false;false;false
char::methods::<impl char>::from_digit;false;false;false;false
intrinsics::copysignf16;true;false;true;false
<array::iter::IntoIter<T, N> as iter::traits::iterator::Iterator>::fold;false;false;true;true
<char::ToUppercase as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm_test_epi8_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_scalef_round_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldv_epi32;true;true;false;false
<u16 as ops::arith::Mul<&u16>>::mul;false;false;false;false
<i128 as ops::bit::BitAnd<&i128>>::bitand;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::Sub>::sub;false;false;false;false
intrinsics::ceilf16;true;false;true;false
<&u8 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<i128 as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi64;true;true;false;false
cell::Cell::<T>::from_mut;false;true;true;false
<f32 as ops::arith::Rem<&f32>>::rem;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_max_round_ph;true;true;true;false
<i16 as ops::arith::Div<&i16>>::div;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOr>::bitor;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
num::dec2flt::parse::parse_inf_nan;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::Not>::not;false;false;false;false
fmt::Formatter::<'a>::pad_integral::write_prefix;false;false;true;false
core_arch::x86::avx512bw::_mm256_dbsad_epu8;true;true;false;false
core_arch::x86::avx512f::_mm_mmask_i64gather_epi32;true;true;true;false
num::wrapping::Wrapping::<u16>::from_be;false;false;false;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<f128 as convert::num::FloatToInt<u64>>::to_int_unchecked;true;true;true;false
num::<impl u64>::strict_div_euclid;false;false;false;false
num::<impl i32>::is_positive;false;false;false;false
<ops::coroutine::CoroutineState<Y, R> as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::Mul>::mul;false;false;false;false
<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&num::saturating::Saturating<i32>>>::bitor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_i64x2;true;true;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
<i16 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundps_epu64;true;true;true;false
<core_arch::simd::i8x4 as fmt::Debug>::fmt;false;false;true;false
num::<impl u64>::from_le_bytes;false;false;false;false
<u8 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
slice::<impl [T]>::sort_unstable_by;false;false;true;false
core_arch::x86::avx512fp16::_mm512_reduce_ph;true;true;true;false
core_arch::simd::i16x32::splat::JustOne;false;false;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::rotate_elements_left;false;false;true;false
core_arch::x86::avx2::_mm_srlv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvttsh_i32;true;true;true;false
<num::niche_types::I32NotAllOnes as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::SubAssign>::sub_assign;false;false;true;false
array::iter::IntoIter::<T, N>::as_slice;false;true;true;false
<num::saturating::Saturating<u128> as ops::arith::MulAssign<&num::saturating::Saturating<u128>>>::mul_assign;false;false;true;false
fmt::Formatter::<'a>::padding;false;false;true;true
core_arch::x86::avx512fp16::_mm512_mask_fnmadd_round_ph;true;true;true;false
<u64 as ops::bit::BitAnd>::bitand;false;false;false;false
<i128 as ops::bit::Shl<u128>>::shl;false;false;false;false
intrinsics::maxnumf32;false;false;true;false
<u64 as ops::arith::Mul>::mul;false;false;false;false
fmt::num::imp::<impl fmt::LowerExp for u8>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmplt_epi32_mask;true;true;false;false
<net::ip_addr::IpAddr as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fmadd_ps;true;true;true;false
time::Duration::from_mins;false;false;false;false
<i64 as ops::bit::Shl<isize>>::shl;false;false;false;false
<core_arch::simd::m16x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
slice::ascii::is_ascii_simple;false;false;false;true
"array::equality::<impl cmp::PartialEq<[U; N]> for [T]>::eq";false;false;false;false
num::<impl usize>::carrying_add;false;true;false;false
f64::<impl f64>::signum;false;false;true;false
<isize as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_reduce_sh;true;true;true;false
num::nonzero::NonZero::<usize>::saturating_add;false;true;false;false
core_arch::x86::avx512bw::_mm_maskz_subs_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_scalef_pd;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<i8, N>> for core_simd::vector::Simd<i8, N>>::sum;false;false;false;true
<&i64 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fmadd_ph;true;true;true;false
str::pattern::CharSearcher::<'_>::utf8_size;false;false;true;false
ptr::const_ptr::<impl *const T>::offset_from_unsigned::runtime_ptr_ge::compiletime;false;false;true;false
<str::CharEscapeDefault as ops::function::Fn<(char,)>>::call;false;false;false;false
<i32 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmplt_epu16_mask;true;true;false;false
num::<impl i64>::leading_zeros;false;false;false;false
<u8 as ops::bit::Shl>::shl;false;false;false;false
<i128 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&i8>>::mul_assign;false;false;true;false
core_arch::x86::avx512bitalg::_mm_mask_popcnt_epi8;true;true;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_xor;false;true;false;false
slice::iter::ChunksExact::<'a, T>::new;false;true;false;false
<i8 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<&T as ops::deref::Deref>::deref;false;false;false;false
<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<&net::ip_addr::Ipv6Addr>>::bitand;false;false;false;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
ptr::metadata::DynMetadata::<Dyn>::vtable_ptr;false;false;true;false
<&u32 as ops::arith::Add<&u32>>::add;false;false;false;false
core_arch::x86::sse::_MM_SET_FLUSH_ZERO_MODE;true;true;false;false
core_simd::ops::deref::<impl ops::arith::Rem<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::rem;false;false;false;false
core_arch::x86::sse42::_mm_cmpistri;true;true;false;false
intrinsics::prefetch_read_instruction;true;false;true;false
num::nonzero::NonZero::<u8>::isolate_most_significant_one;false;true;false;false
num::overflow_panic::add;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::DivAssign<&i8>>::div_assign;false;false;true;false
num::<impl i32>::leading_zeros;false;false;false;false
<&'a u8 as ops::bit::Shl<i16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_rol_epi32;true;true;false;false
<&u8 as ops::bit::Shr<&i64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_kxor;true;false;false;false
sync::atomic::AtomicI32::fetch_or;false;true;true;false
num::fmt::Formatted::<'a>::write;false;false;true;true
num::<impl u64>::overflowing_add_signed;false;false;false;false
<marker::variance::PhantomCovariant<T> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512f::_mm_rcp14_sd;true;true;true;false
time::Duration::new;false;true;false;false
<core_arch::simd::f16x32::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx::_mm256_cvtps_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_shldv_epi16;true;true;false;false
ops::range::Bound::<&T>::cloned;false;false;true;false
<&'a u16 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_cvtsepi64_epi16;true;true;false;false
<&u32 as ops::bit::Shl<&i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_move_ss;true;true;true;false
core_arch::x86::avx512bf16::_mm_maskz_cvtne2ps_pbh;true;true;true;false
core_arch::x86::sse2::_mm_cvtss_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_round_sh;true;true;true;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
num::<impl i128>::wrapping_add_unsigned;false;false;false;false
num::wrapping::Wrapping::<u32>::from_le;false;false;false;false
<&'a num::saturating::Saturating<u32> as ops::arith::Div<num::saturating::Saturating<u32>>>::div;false;false;false;false
<(dyn error::Error + marker::Send + 'static)>::is;false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::leading_zeros;false;true;false;false
<char::CaseMappingIter as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fmadd_ss;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_min_epu8;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u64>::try_from;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmplt_epi8_mask;true;true;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
<num::wrapping::Wrapping<i8> as ops::arith::SubAssign<&num::wrapping::Wrapping<i8>>>::sub_assign;false;false;true;false
num::<impl u64>::strict_div;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtph_epu64;true;true;true;false
<ops::range::RangeInclusive<A> as iter::range::RangeInclusiveIteratorImpl>::spec_next;false;false;true;false
slice::iter::RChunks::<'a, T>::new;false;false;false;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::RemAssign<&u128>>::rem_assign;false;false;true;false
<str::error::Utf8Error as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx::_mm256_min_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cmp_ps_mask;true;true;true;false
fmt::Formatter::<'a>::align;false;false;true;false
core_arch::x86::avx512f::_mm512_int2mask;true;false;false;false
num::<impl i8>::checked_sub_unsigned;false;false;false;false
<mem::transmutability::Assume as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
<task::poll::Poll<result::Result<T, E>> as ops::try_trait::Try>::from_output;false;false;true;false
intrinsics::simd::simd_fsin;true;false;false;false
<&'a i128 as ops::bit::BitAnd<i128>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm512_roundscale_ph;true;true;true;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<char as fmt::Debug>::fmt;false;false;true;false
<str::pattern::MultiCharEqSearcher<'a, C> as str::pattern::Searcher<'a>>::next;false;false;true;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<i64, N>>::bitxor;false;true;false;false
core_arch::simd::i32x8::extract;false;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_rsqrt_ph;true;true;true;false
<num::saturating::Saturating<u64> as ops::arith::RemAssign<&u64>>::rem_assign;false;false;true;false
num::<impl i32>::overflowing_div_euclid;false;false;false;false
hash::impls::<impl hash::Hash for i8>::hash;false;false;true;false
cmp::impls::<impl cmp::PartialEq<&mut B> for &mut A>::eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_fcmul_pch;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 8>> for core_arch::x86::__m128i>::from;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAnd<&num::saturating::Saturating<i128>>>::bitand;false;false;false;false
convert::num::<impl convert::From<bool> for u8>::from;false;false;false;false
core_arch::x86::avx::_mm256_set_epi16;true;true;false;false
iter::traits::iterator::Iterator::peekable;false;false;false;false
num::<impl u64>::to_le;false;false;false;false
fmt::num::imp::<impl fmt::UpperExp for i32>::fmt;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<i16, N>> for core_simd::vector::Simd<i16, N>>::sum;false;false;false;true
cmp::min_by_key;false;false;false;false
<u32 as iter::traits::accum::Product<&'a u32>>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm_maskz_fcmul_round_sch;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<i64, N>>::sum;false;false;false;true
<num::wrapping::Wrapping<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign;false;false;true;false
option::Option::Some;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::AddAssign<&num::saturating::Saturating<i8>>>::add_assign;false;false;true;false
core_arch::x86::avx::_mm256_add_ps;true;true;true;false
<iter::adapters::flatten::FlatMap<I, U, F> as clone::Clone>::clone;false;false;true;false
core_arch::x86::sse2::_mm_storel_pd;true;true;true;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
<slice::iter::RSplitMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512fp16::_mm256_rcp_ph;true;true;true;false
<i64 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<&u128 as ops::bit::BitAnd<&u128>>::bitand;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::is_sorted_by;false;false;true;false
str::pattern::CharArraySearcher;false;false;false;false
<&isize as ops::bit::Shl<&i32>>::shl;false;false;false;false
<iter::adapters::copied::Copied<I> as clone::Clone>::clone;false;false;true;false
result::Result::<T, E>::expect_err;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_cvtepi16_epi8;true;true;false;false
<u128 as iter::range::Step>::forward_unchecked;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u8> for core_simd::vector::Simd<u8, N>>::shl;false;false;false;false
core_arch::x86::gfni::_mm256_maskz_gf2p8affineinv_epi64_epi8;true;true;false;false
num::<impl u128>::overflowing_sub;false;false;false;false
<ops::range::Bound<T> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_srli_epi32;true;true;false;false
<&'c &'b str as str::pattern::Pattern>::is_suffix_of;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_abs_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_roundscale_round_ph;true;true;true;false
<ffi::c_str::CStr as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
num::nonzero::NonZero::<i8>::overflowing_abs;false;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
<i128 as ops::bit::Shl<u8>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepu64_ph;true;true;false;false
<&'a usize as ops::bit::Shr<i16>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_or_pd;true;true;true;false
<&'a u64 as ops::bit::Shl<i128>>::shl;false;false;false;false
num::saturating::Saturating::<i64>::count_ones;false;false;false;false
<&'a u32 as ops::bit::Shr<i128>>::shr;false;false;false;false
<core_arch::simd::u64x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
<i8 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<usize as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<T> as fmt::Binary>::fmt;false;false;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::next;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
<ops::range::RangeToInclusive<Idx> as hash::Hash>::hash;false;false;true;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<u32, N>>::bitand;false;true;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fnmadd_sd;true;true;true;false
<num::saturating::Saturating<usize> as ops::arith::AddAssign<&usize>>::add_assign;false;false;true;false
<u16 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_arch::x86::sse::_mm_set1_ps;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fnmsub_round_ps;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_andnot_pd;true;true;true;false
<num::niche_types::NonZeroU64Inner as hash::Hash>::hash;false;false;true;false
core_arch::x86::sse42::_mm_cmpestrc;true;true;false;false
num::nonzero::<impl ops::bit::BitOr<num::nonzero::NonZero<T>> for T>::bitor;false;true;true;false
hash::impls::<impl hash::Hash for *mut T>::hash;false;false;true;false
<(dyn error::Error + 'static)>::sources;false;false;false;false
num::<impl str::traits::FromStr for u8>::from_str;false;false;false;false
<char::decode::DecodeUtf16Error as fmt::Debug>::fmt;false;false;true;false
<&'a f32 as ops::arith::Rem<f32>>::rem;false;false;true;false
core_arch::x86::avx2::_mm256_maddubs_epi16;true;true;false;false
core_arch::x86::avx512cd::_mm_maskz_conflict_epi32;true;true;false;false
num::int_sqrt::u128_stages;false;true;false;false
core_arch::x86::avx512f::_mm_permutex2var_pd;true;true;true;false
core_arch::x86::avx512f::_mm_getexp_ss;true;true;true;false
num::<impl i128>::wrapping_mul;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for usize>::lt;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_mul_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_range_round_ps;true;true;true;false
<u64 as ops::arith::Rem>::rem;false;false;false;false
num::<impl u16>::wrapping_shl;false;true;false;false
core_arch::x86::tbm::_blcmsk_u32;true;false;false;false
<result::Result<T, E> as clone::Clone>::clone;false;false;true;false
<usize as ops::bit::Shr<u8>>::shr;false;false;false;false
option::Option::<&mut T>::cloned;false;false;true;false
intrinsics::mir::UnwindResume;false;false;false;false
iter::traits::iterator::Iterator::advance_by;false;true;true;true
core_arch::x86::avx512bf16::_mm_dpbf16_ps;true;true;true;false
<core_arch::simd::u16x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx2::_mm256_maskstore_epi32;true;true;true;false
<num::saturating::Saturating<i16> as ops::arith::SubAssign<i16>>::sub_assign;false;false;true;false
iter::traits::iterator::Iterator::chain;false;false;false;false
core_arch::x86::avx2::_mm256_unpacklo_epi32;true;true;false;false
<marker::variance::PhantomContravariant<T> as default::Default>::default;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<i128>>::rem_assign;false;false;true;false
<bstr::ByteStr as ops::index::Index<ops::range::RangeToInclusive<usize>>>::index;false;false;false;false
mem::forget;false;false;false;false
num::<impl i64>::wrapping_shr;false;true;false;false
num::<impl usize>::from_ascii;false;false;false;false
num::<impl i16>::trailing_ones;false;false;false;false
slice::sort::shared::smallsort::merge_down;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_range_round_sd;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u16> for core_simd::vector::Simd<u16, N>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_rsqrt_ph;true;true;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<i32, N>>::not;false;false;false;false
<u8 as ops::bit::Shr<&u32>>::shr;false;false;false;false
intrinsics::size_of_val;true;false;true;false
<T as iter::adapters::step_by::SpecRangeSetup<T>>::setup;false;false;false;false
num::bignum::tests::Big8x3::sub;false;false;true;true
sync::atomic::AtomicPtr::<T>::new;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::min;false;false;true;false
fmt::num::udiv_1e19;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi64;true;true;false;false
core_arch::x86::avx512vnni::_mm256_maskz_dpwssds_epi32;true;true;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtepi8_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_mul_ps;true;true;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<u32, N>>::not;false;false;false;false
cell::Cell::<T>::get_mut;false;false;true;false
<f32 as ops::arith::Add>::add;false;false;true;false
hash::impls::<impl hash::Hash for u128>::hash;false;false;true;false
<f32 as ops::arith::Neg>::neg;false;false;true;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<&i32 as ops::bit::BitAnd<&i32>>::bitand;false;false;false;false
<u32 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::Shl<usize>>::shl;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu8_epi32;true;true;false;false
fmt::num::imp::<impl fmt::Display for i64>::fmt;false;false;true;false
core_arch::x86_64::avx512fp16::_mm_cvt_roundu64_sh;true;true;true;false
num::nonzero::NonZero::<i32>::is_positive;false;false;false;false
core_arch::x86_64::amx::_tile_cmmrlfp16ps;true;true;false;false
num::saturating::Saturating::<u32>::rotate_left;false;false;false;false
<&num::wrapping::Wrapping<i8> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<option::IntoIter<A> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_permutex2var_pd;true;true;true;false
core_arch::x86::sse2::_mm_cmpgt_sd;true;true;true;false
num::nonzero::NonZero::<i16>::wrapping_neg;false;true;false;false
<&num::wrapping::Wrapping<isize> as ops::bit::BitOr<&num::wrapping::Wrapping<isize>>>::bitor;false;false;false;false
num::<impl u8>::strict_div_euclid;false;false;false;false
ptr::const_ptr::<impl *const T>::mask;false;false;true;false
<i32 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
<usize as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_inserti32x4;true;true;false;false
<T as convert::Into<U>>::into;false;false;false;false
fmt::Formatter::<'a>::with_options;false;false;true;false
core_arch::x86::avx512f::_mm_mask_rcp14_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_cmpge_epu8_mask;true;true;false;false
<i64 as ops::bit::BitOr>::bitor;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Mul<&num::saturating::Saturating<i128>>>::mul;false;false;false;false
<ops::range::RangeInclusive<A> as iter::range::RangeInclusiveIteratorImpl>::spec_next_back;false;false;true;false
<str::iter::EncodeUtf16<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::sources::once::Once<T> as fmt::Debug>::fmt;false;false;true;false
<&'a u128 as ops::arith::Sub<u128>>::sub;false;false;false;false
<num::niche_types::NonZeroI16Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<T as slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl>::small_sort_threshold;false;false;false;false
tuple::<impl cmp::PartialEq for (C, B, A, Z, Y, X, W, V, U, T)>::ne;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtpslo_pd;true;true;true;false
core_arch::x86::avx::_mm256_zeroupper;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmaddsub_ph;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u16> for &'lhs core_simd::vector::Simd<u16, N>>::shl;false;false;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
<num::nonzero::NonZero<i64> as ops::arith::Neg>::neg;false;true;false;false
core_arch::x86::sse2::_mm_add_epi8;true;true;false;false
num::nonzero::NonZero::<i128>::from_le;false;true;false;false
panic::location::Location::<'a>::column;false;false;true;false
<i128 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
sync::atomic::AtomicI64::get_mut_slice;false;true;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi64;true;true;false;false
num::<impl i64>::checked_add;false;false;false;false
core_arch::x86::sse2::_mm_movemask_pd;true;true;true;false
num::<impl u8>::wrapping_next_power_of_two;false;false;false;false
num::<impl u16>::unchecked_disjoint_bitor;true;true;false;false
<i32 as ops::arith::RemAssign<&i32>>::rem_assign;false;false;true;false
<&'a isize as ops::bit::Shl<u8>>::shl;false;false;false;false
<slice::iter::IterMut<'_, T> as convert::AsRef<[T]>>::as_ref;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_adds_epi16;true;true;false;false
<u8 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<&'a num::saturating::Saturating<u32> as ops::bit::BitAnd<num::saturating::Saturating<u32>>>::bitand;false;false;false;false
<() as fmt::Debug>::fmt;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<usize, N>> for core_simd::vector::Simd<usize, N>>::product;false;false;false;true
core_arch::simd::f16x8;false;false;true;false
array::iter_next_chunk;false;true;true;false
sync::atomic::AtomicBool::fetch_or;false;true;true;false
core_arch::x86::avx512bf16::_mm_cvtne2ps_pbh;true;true;true;false
num::niche_types::UsizeNoHighBit::as_inner;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::AddAssign<u64>>::add_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_permutexvar_epi16;true;true;false;false
sync::atomic::AtomicU16::load;false;true;true;false
sync::atomic::AtomicPtr::<T>::into_inner;false;false;true;false
ptr::mut_ptr::<impl *mut T>::drop_in_place;true;true;true;false
ops::range::RangeToInclusive::<Idx>::contains;false;false;true;false
core_arch::simd::f16x8::new;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_epi8;true;true;false;false
num::<impl usize>::wrapping_shl;false;true;false;false
<num::wrapping::Wrapping<T> as default::Default>::default;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Sub<&num::wrapping::Wrapping<u128>>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_min_epu32;true;true;false;false
core_arch::x86::avx::_mm256_undefined_si256;true;false;false;false
<cell::once::OnceCell<T> as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_max_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_roundscale_round_sd;true;true;true;false
<u128 as ops::bit::Shl<i8>>::shl;false;false;false;false
<bool as ops::bit::BitXor>::bitxor;false;false;false;false
intrinsics::copysignf32;true;false;true;false
<mem::manually_drop::ManuallyDrop<T> as ops::deref::DerefMut>::deref_mut;false;false;true;false
sync::atomic::atomic_compare_exchange;true;true;true;false
<T as slice::sort::shared::smallsort::UnstableSmallSortTypeImpl>::small_sort;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtepi64_epi8;true;true;false;false
<fmt::Sign as clone::Clone>::clone;false;false;false;false
<bstr::ByteStr as cmp::PartialEq<[u8]>>::eq;false;false;false;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::last;false;false;true;true
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_compress_epi32;true;true;false;false
num::int_log10::u64;false;false;false;false
intrinsics::fallback::wide_mul_u128::scalar_mul;false;false;false;false
core_arch::x86::avx512fp16::_mm_reduce_min_ph;true;true;true;false
num::<impl i16>::unchecked_shl;true;false;false;false
<core_simd::masks::mask_impl::Mask<T, N> as cmp::PartialEq>::eq;false;false;true;false
net::ip_addr::Ipv4Addr::is_link_local;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_try_rfold;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_compress_epi64;true;true;false;false
tuple::<impl cmp::PartialOrd for (Y, X, W, V, U, T)>::ge;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::rfind;false;false;true;false
<hash::sip::Sip13Rounds as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm_ucomieq_sh;true;true;true;false
core_arch::x86::sse2::_mm_castsi128_ps;true;false;false;false
core_arch::x86::gfni::_mm512_gf2p8affineinv_epi64_epi8;true;true;false;false
<slice::iter::ChunkByMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_fold;false;false;true;true
core_arch::x86::sse41::_mm_round_ps;true;true;true;false
num::wrapping::Wrapping::<i8>::count_ones;false;false;false;false
num::flt2dec::strategy::grisu::cached_power;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
<T as borrow::BorrowMut<T>>::borrow_mut;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&num::saturating::Saturating<i32>>>::bitand_assign;false;false;true;false
<u64 as ops::bit::Shl<u128>>::shl;false;false;false;false
<core_simd::vector::Simd<i16, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::<impl u8>::wrapping_shr;false;true;false;false
core_arch::simd::f32x2::splat;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_rol_epi32;true;true;false;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<isize, N>>::add;false;true;false;false
<str::iter::Bytes<'_> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<f32 as default::Default>::default;false;false;false;false
core_arch::x86::avx512bw::_mm512_srav_epi16;true;true;false;false
<num::saturating::Saturating<usize> as ops::arith::Add>::add;false;false;false;false
<&f32 as ops::arith::Sub<&f32>>::sub;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_compressstoreu_epi32;true;true;true;false
mem::Discriminant;false;false;false;false
<f128 as convert::num::FloatToInt<u8>>::to_int_unchecked;true;true;true;false
<u8 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
core_arch::simd::m8x16::bool_to_internal;false;false;false;false
<&num::wrapping::Wrapping<u8> as ops::arith::Rem<&num::wrapping::Wrapping<u8>>>::rem;false;false;false;false
num::nonzero::NonZero::<usize>::checked_add;false;true;false;false
<isize as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_mul_epu32;true;true;false;false
num::<impl u128>::leading_zeros;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_subs_epi16;true;true;false;false
core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi64;true;true;false;false
<bstr::ByteStr as ops::index::Index<ops::range::Range<usize>>>::index;false;false;true;false
<iter::adapters::skip::Skip<I> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::bmi1::_andn_u32;true;false;false;false
core_arch::x86::avx512f::_mm512_srai_epi32;true;true;false;false
<i8 as ops::bit::Shr>::shr;false;false;false;false
num::wrapping::Wrapping::<i16>::to_le;false;false;false;false
<i8 as ops::bit::Shl<&i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_permutevar_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmp_ps_mask;true;true;true;false
<num::saturating::Saturating<u16> as ops::arith::SubAssign>::sub_assign;false;false;true;false
slice::sort::shared::smallsort::sort13_optimal;false;true;true;false
num::nonzero::NonZero::<u32>::checked_pow;false;true;false;false
num::<impl u32>::abs_diff;false;false;false;false
core_arch::x86::avx512f::_mm512_shuffle_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_reduce_sd;true;true;true;false
<num::wrapping::Wrapping<u32> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<u32>>>::sum;false;false;false;true
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_sllv_epi16;true;true;false;false
intrinsics::mir::Assume::panic_cold_explicit;false;false;false;false
core_arch::x86::avx512fp16::_mm_load_ph;true;true;true;false
num::<impl u8>::isolate_most_significant_one;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_max;false;true;false;false
core_arch::simd::u32x2::new;false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::AddAssign<&u16>>::add_assign;false;false;true;false
num::<impl u8>::wrapping_mul;false;false;false;false
intrinsics::atomic_xor_relaxed;true;false;true;false
num::<impl u8>::to_ascii_lowercase;false;false;false;false
num::saturating::Saturating::<u16>::from_le;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_ternarylogic_epi32;true;true;false;false
slice::<impl [T]>::strip_suffix;false;false;false;false
core_arch::x86::__m128::splat::JustOne;false;false;true;false
<&usize as ops::bit::Not>::not;false;false;false;false
<&'a u64 as ops::arith::Div<u64>>::div;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::saturating_abs;false;false;false;false
num::<impl i8>::strict_neg;false;false;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::wrapping_neg;false;false;false;false
<num::wrapping::Wrapping<i64> as iter::traits::accum::Sum>::sum;false;false;false;true
<num::saturating::Saturating<u32> as ops::bit::BitAnd>::bitand;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i64>>>::bitor_assign;false;false;true;false
cell::UnsafeCell::<T>::into_inner;false;false;true;false
core_arch::x86::avx512dq::_mm512_mullo_epi64;true;true;false;false
num::saturating::Saturating::<u8>::leading_zeros;false;false;false;false
num::<impl usize>::wrapping_rem;false;false;false;false
core_arch::x86::sse2::_mm_storeu_si32;true;true;true;false
<&usize as ops::bit::Shr<&u16>>::shr;false;false;false;false
num::<impl usize>::carrying_mul_add;false;false;false;false
core_arch::x86::avx512f::_mm_cvt_roundu32_ss;true;true;true;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm256_reduce_min_epi8;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i8> for core_simd::vector::Simd<i8, N>>::shr;false;false;false;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<isize as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
num::<impl i16>::checked_sub_unsigned;false;false;false;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmsub_ps;true;true;true;false
num::int_sqrt::u128;false;false;false;false
num::<impl u64>::unchecked_add;true;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtss_sd;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_add_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_add_epi64;true;true;false;false
num::wrapping::Wrapping::<i16>::trailing_zeros;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i64>>>::bitxor_assign;false;false;true;false
num::<impl u32>::overflowing_shr;false;false;false;false
intrinsics::simd::simd_shl;true;false;false;false
intrinsics::cosf32;true;false;true;false
<iter::sources::once::Once<T> as iter::traits::iterator::Iterator>::next;false;false;true;false
<u128 as ops::arith::Rem>::rem;false;false;false;false
num::wrapping::Wrapping::<u16>::rotate_left;false;false;false;false
<f64 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential;false;false;true;false
slice::memchr::memchr_naive;false;false;false;true
<i128 as ops::bit::Shl<&isize>>::shl;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u64> for isize>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm_mask_broadcastd_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_loadu_ps;true;true;true;false
core_arch::x86::avx512dq::_mm_cvttps_epu64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmsub_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_min_round_ph;true;true;true;false
core_arch::x86::sse2::_mm_unpacklo_epi16;true;true;false;false
<&'a num::saturating::Saturating<i8> as ops::bit::BitAnd<num::saturating::Saturating<i8>>>::bitand;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_mullo_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_expandloadu_epi64;true;true;true;false
<[ascii::ascii_char::AsciiChar]>::as_str;false;true;false;false
net::parser::Parser::<'a>::read_number;false;false;true;false
core_arch::simd::u16x32;false;false;false;false
<range::RangeInclusive<Idx> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&i64>>::mul_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<usize as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_min_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtepu16_ph;true;true;false;false
<i8 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_nth;false;false;true;true
<&num::wrapping::Wrapping<i64> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_avg_epu16;true;true;false;false
core_arch::x86::avx512dq::_mm256_movm_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_insertf32x4;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_max;false;true;false;false
core_arch::simd::u32x4::new;false;false;false;false
num::<impl u64>::cast_signed;false;false;false;false
char::methods::encode_utf8_raw::do_panic::compiletime;false;false;false;false
alloc::layout::Layout::size;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_srav_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_cvtps_epi64;true;true;true;false
core_arch::x86::avx512vbmi::_mm_maskz_permutexvar_epi8;true;true;false;false
<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&num::wrapping::Wrapping<u8>>>::mul_assign;false;false;true;false
fmt::FormattingOptions::get_debug_as_hex;false;false;true;false
<u8 as ops::bit::Shr<&u8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvtsh_sd;true;true;true;false
core_simd::ops::deref::<impl ops::bit::Shr<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::shr;false;false;false;false
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<&'a u16 as ops::bit::Shl<u128>>::shl;false;false;false;false
<i64 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
core_arch::x86::avx2::_mm256_sign_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_subs_epu16;true;true;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpge_epi16_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_shldv_epi32;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
intrinsics::fallback::wide_mul_u128::to_low_high;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_blend_pd;true;true;true;false
core_arch::simd::u32x8::splat;false;true;false;false
<i16 as iter::traits::accum::Sum<&'a i16>>::sum;false;false;false;true
core_arch::x86::avx512bw::_mm512_mask_abs_epi16;true;true;false;false
<num::flt2dec::decoder::Decoded as clone::Clone>::clone;false;false;true;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<i32, N>>::mul;false;true;false;false
num::<impl i16>::div_floor;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::SubAssign<&u128>>::sub_assign;false;false;true;false
num::<impl isize>::wrapping_rem_euclid;false;false;false;false
intrinsics::logf16;true;false;true;false
<usize as ops::bit::Shr<&u32>>::shr;false;false;false;false
<i32 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm256_getexp_ps;true;true;true;false
num::<impl u16>::overflowing_sub;false;false;false;false
<u16 as ops::bit::Shr<u64>>::shr;false;false;false;false
<(EC, EB, EA) as iter::traits::collect::Extend<(C, B, A)>>::extend_one;false;false;true;false
<num::nonzero::NonZero<T> as fmt::UpperExp>::fmt;false;false;true;false
slice::iter::Iter::<'a, T>::post_inc_start;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_movedup_pd;true;true;true;false
str::<impl str>::substr_range;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_sub_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_packus_epi32;true;true;false;false
<num::niche_types::NonZeroI8Inner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx2::_mm256_sad_epu8;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_permutex2var_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_reduce_min_epu32;true;true;false;false
num::<impl i32>::abs_diff;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_storeu_epi8;true;true;true;false
core_arch::x86::avx512cd::_mm512_conflict_epi32;true;true;false;false
core_arch::x86::avx512bf16::_mm512_dpbf16_ps;true;true;true;false
<T as slice::cmp::SliceContains>::slice_contains;false;false;false;true
intrinsics::simd::simd_flog;true;false;false;false
<bool as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
sync::atomic::AtomicU64::compare_and_swap;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_min_epu16;true;true;false;false
num::<impl i32>::overflowing_div;false;false;false;false
<i64 as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::__m256bh::splat::JustOne;false;false;false;false
<isize as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<&u8 as ops::bit::Shl<&isize>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmple_epi8_mask;true;true;false;false
panicking::panic_nounwind_fmt;false;false;true;false
f32::<impl f32>::is_finite;false;false;true;false
num::wrapping::Wrapping::<u64>::trailing_zeros;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::count;false;false;true;true
iter::traits::collect::default_extend_tuple_a::extend;false;false;true;false
<net::ip_addr::Ipv6Addr as ops::bit::BitOrAssign<&net::ip_addr::Ipv6Addr>>::bitor_assign;false;false;true;false
num::wrapping::Wrapping::<isize>::leading_zeros;false;false;false;false
fmt::Formatter::<'a>::pad;false;true;true;true
<slice::iter::IterMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_sqrt_ss;true;true;true;false
core_arch::x86::avx512dq::_mm_cvtps_epu64;true;true;true;false
core_arch::x86::avxneconvert::_mm_cvtneebf16_ps;true;true;true;false
core_arch::simd::f64x8::from_array;false;false;true;false
core_arch::x86::avx::_mm256_unpacklo_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_cvtps_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_conj_pch;true;true;true;false
ops::index_range::IndexRange::zero_to;false;false;false;false
num::nonzero::NonZero::<i64>::overflowing_abs;false;true;false;false
<error::Source<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
sync::atomic::AtomicBool::fetch_xor;false;true;true;false
num::nonzero::NonZero::<u128>::cast_signed;false;true;false;false
<&i8 as ops::bit::BitXor<&i8>>::bitxor;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fmsub_ph;true;true;true;false
num::<impl u64>::strict_mul;false;false;false;false
<u16 as ops::bit::Shr<u8>>::shr;false;false;false;false
iter::adapters::inspect::inspect_try_fold;false;false;true;false
num::<impl u8>::checked_ilog2;false;false;false;false
<num::wrapping::Wrapping<u64> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<u64>>>::sum;false;false;false;true
ptr::unique::Unique::<T>::as_non_null_ptr;false;false;true;false
convert::num::<impl convert::From<u16> for u128>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm256_loadu_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_rsqrt_ph;true;true;true;false
<i8 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
fmt::num::<impl fmt::Debug for u32>::fmt;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_or;false;true;false;false
<core_arch::simd::i32x8 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_maskload_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_cvttps_epu64;true;true;true;false
<&i64 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<usize as ops::bit::Shl<&u16>>::shl;false;false;false;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;true
str::<impl str>::split_at;false;false;false;false
num::nonzero::NonZero::<i32>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sllv_epi32;true;true;false;false
<char::convert::ParseCharError as clone::Clone>::clone;false;false;false;false
core_arch::x86::avxneconvert::_mm256_cvtneoph_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cmpgt_epu64_mask;true;true;false;false
net::socket_addr::SocketAddrV4::ip;false;false;false;false
<num::niche_types::NonZeroU32Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&'a usize as ops::bit::Shl<i128>>::shl;false;false;false;false
pin::Pin::<Ptr>::new;false;true;false;false
num::<impl i32>::isqrt;false;false;false;false
<range::RangeInclusive<Idx> as cmp::PartialEq>::eq;false;false;true;false
option::expect_failed;false;false;false;false
hash::impls::<impl hash::Hash for i16>::hash_slice;false;true;true;false
core_arch::x86::avx512bw::_mm256_cmpgt_epi8_mask;true;true;false;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<&'a num::saturating::Saturating<i32> as ops::arith::Div<num::saturating::Saturating<i32>>>::div;false;false;false;false
ptr::const_ptr::<impl *const T>::addr;false;false;true;false
convert::num::<impl convert::TryFrom<i32> for u64>::try_from;false;false;false;false
core_arch::x86::xsave::_xsave;true;true;true;false
core_arch::x86::avx512f::_mm_mask_div_pd;true;true;true;false
<usize as fmt::num::DisplayInt>::to_u8;false;false;false;false
<u8 as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_i64gather_pd;true;true;true;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u128>::from;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_min_epu32;true;true;false;false
<num::nonzero::NonZero<T> as fmt::Display>::fmt;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
num::<impl u8>::strict_shl;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::Sub>::sub;false;false;false;false
char::methods::<impl char>::is_ascii_punctuation;false;false;false;false
slice::iter::ChunksExactMut::<'a, T>::into_remainder;false;false;true;false
core_arch::x86::fma::_mm_fnmadd_ps;true;true;true;false
num::saturating::Saturating::<i128>::swap_bytes;false;false;false;false
core_arch::simd::u32x16::splat::JustOne;false;false;false;false
<usize as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_castpd_si512;true;false;true;false
core_simd::ops::deref::<impl ops::arith::Mul<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm_mask_expandloadu_epi32;true;true;true;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_subs_epu16;true;true;false;false
core_arch::x86::__m512h::splat::JustOne;false;false;true;false
core_arch::x86::avx512vnni::_mm256_dpbsud_epi32;true;true;false;false
num::nonzero::NonZero::<u16>::saturating_add;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_scalef_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_blend_ph;true;true;true;false
slice::ascii::<impl [u8]>::trim_ascii_end;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_andnot_epi32;true;true;false;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<usize>> for usize>::rem;false;false;false;false
num::<impl u16>::unchecked_add::precondition_check;false;false;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::deinterleave;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_mul_epu32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shrdv_epi64;true;true;false;false
<&'a num::wrapping::Wrapping<i32> as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::simd::f16x8::extract;false;true;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAnd>::bitand;false;false;false;false
num::<impl i32>::carrying_add;false;false;false;false
<u128 as ops::bit::Shr>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epu32;true;true;true;false
num::<impl u16>::wrapping_add_signed;false;false;false;false
<u32 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<f32 as convert::num::FloatToInt<u32>>::to_int_unchecked;true;true;true;false
tuple::<impl cmp::PartialEq for (Y, X, W, V, U, T)>::eq;false;false;false;false
<&u64 as ops::bit::Not>::not;false;false;false;false
num::niche_types::Nanoseconds;true;false;false;false
<slice::iter::SplitInclusiveMut<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
num::<impl i64>::checked_sub_unsigned;false;false;false;false
iter::traits::iterator::Iterator::zip;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_blend_ph;true;true;true;false
str::<impl str>::lines_any;false;false;false;false
<str::pattern::StrSearcher<'a, 'b> as str::pattern::Searcher<'a>>::next_match;false;false;true;true
core_arch::x86::avx512bw::_mm_maskz_add_epi16;true;true;false;false
<i8 as ops::bit::Shr<u128>>::shr;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_and;false;true;false;false
str::<impl str>::ends_with;false;false;false;false
core_arch::x86::avx512vpopcntdq::_mm512_popcnt_epi64;true;true;false;false
num::saturating::Saturating::<u8>::count_ones;false;false;false;false
<i64 as ops::arith::Div<&i64>>::div;false;false;false;false
iter::traits::iterator::Iterator::find_map::check;false;false;false;false
fmt::Write::write_char;false;false;true;false
"<&mut [T; N] as iter::adapters::flatten::ConstSizeIntoIterator>::size";false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtepi16_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_ror_epi64;true;true;false;false
<core_arch::simd::u16x32 as clone::Clone>::clone;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<isize>>>::bitor_assign;false;false;true;false
core_arch::x86::avx512cd::_mm512_maskz_conflict_epi32;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
<u32 as ops::bit::Shl<i32>>::shl;false;false;false;false
net::ip_addr::IpAddr::V4;false;false;false;false
asserting::Capture::<M, T>::new;false;false;false;false
num::<impl i64>::wrapping_shl;false;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u32> for &'lhs core_simd::vector::Simd<u32, N>>::shr;false;false;false;false
<&'a u16 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi32;true;true;false;false
intrinsics::mir::StorageDead::panic_cold_explicit;false;false;false;false
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
ops::try_trait::NeverShortCircuit;false;false;false;false
fmt::num::imp::<impl fmt::UpperExp for usize>::fmt;false;false;true;false
<str::iter::SplitAsciiWhitespace<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<&'a i16 as ops::bit::Shl<u8>>::shl;false;false;false;false
sync::atomic::AtomicI32::new;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<&num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_load_epi32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_max_epu32;true;true;false;false
task::wake::Waker::will_wake;false;false;true;false
iter::traits::iterator::Iterator::rposition;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<u8 as net::parser::ReadNumberHelper>::checked_mul;false;false;false;false
<f64 as num::dec2flt::float::RawFloat>::from_u64_bits;false;false;false;false
num::<impl u16>::next_power_of_two;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtpd_ph;true;true;true;false
<ops::range::Bound<T> as hash::Hash>::hash;false;false;true;false
str::<impl str>::encode_utf16;false;false;false;false
core_simd::masks::mask_impl::Mask::<T, N>::test_unchecked;true;false;true;false
<num::saturating::Saturating<u128> as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86::sse::_mm_sfence;true;true;false;false
num::<impl i8>::strict_shl;false;false;false;false
<option::Option<&'a mut T> as convert::From<&'a mut option::Option<T>>>::from;false;false;true;false
core_arch::x86::avx512bw::_mm512_cmpgt_epu8_mask;true;true;false;false
num::<impl u128>::overflowing_div_euclid;false;false;false;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_shldv_epi32;true;true;false;false
<&'a i128 as ops::bit::Shr<isize>>::shr;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<i32 as ops::arith::Sub<&i32>>::sub;false;false;false;false
num::<impl isize>::unchecked_shr;true;false;false;false
slice::ascii::<impl [u8]>::make_ascii_uppercase;false;false;true;true
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<str::iter::RSplitTerminator<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_getmant_pd;true;true;true;false
<(EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(I, H, G, F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
num::<impl i16>::checked_next_multiple_of;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cvtsepi32_storeu_epi16;true;true;true;false
sync::atomic::AtomicU16::store;false;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_add_ph;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for f128>::le;false;false;true;false
<num::niche_types::NonZeroIsizeInner as cmp::PartialOrd>::partial_cmp;false;false;false;false
<marker::variance::PhantomContravariant<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<iter::adapters::rev::Rev<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_rsqrt14_ss;true;true;true;false
<num::saturating::Saturating<usize> as ops::arith::MulAssign<&num::saturating::Saturating<usize>>>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_compress_ps;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitXorAssign<bool>>::bitxor_assign;false;false;true;false
<hash::BuildHasherDefault<H> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_fmaddsub_ph;true;true;true;false
core_arch::x86::sha::_mm_sha1rnds4_epu32;true;true;false;false
ptr::non_null::NonNull::<T>::align_offset;false;true;true;false
<u128 as ops::bit::Shl<i16>>::shl;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<u32>>::add_assign;false;false;true;false
<u128 as ops::arith::Rem<&u128>>::rem;false;false;false;false
panicking::panic_const::panic_const_async_gen_fn_resumed;false;false;false;false
core_arch::x86::avx512f::_mm512_store_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_roundscale_ph;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_shldi_epi16;true;true;false;false
<i16 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<Iter as iter::traits::collect::TraitE<EE, ED, EC, EB, EA>>::extend;false;false;true;true
core_arch::x86::avx512bw::_mm_mask_mov_epi8;true;true;false;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::saturating_add;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi32_ps;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u16, 32>> for core_arch::x86::__m512i>::from;false;false;false;false
<u32 as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvttpd_epi64;true;true;true;false
<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_permutexvar_pd;true;true;true;false
core_arch::x86::avx512vbmi::_mm_maskz_permutex2var_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_rcp14_ss;true;true;true;false
core_arch::x86::avx512f::_mm_mask_compressstoreu_epi64;true;true;true;false
num::<impl u64>::overflowing_rem_euclid;false;false;false;false
<ascii::EscapeDefault as clone::Clone>::clone;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::index;false;false;false;false
<usize as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvtph_pd;true;true;true;false
num::<impl i32>::strict_rem_euclid;false;false;false;false
num::<impl u16>::unchecked_shr;true;false;false;false
time::Duration::checked_sub;false;false;false;false
core_arch::x86::avx512fp16::_mm256_storeu_ph;true;true;true;false
<i128 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_expand_epi16;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for i32>::lt;false;false;false;false
fmt::Formatter::<'a>::debug_struct_field3_finish;false;false;true;false
<num::saturating::Saturating<u32> as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cmpneq_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_cvtsepi16_epi8;true;true;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::try_fold;false;false;true;true
core_arch::x86::avx512fp16::_mm_maskz_fcmul_pch;true;true;true;false
num::<impl usize>::strict_div;false;false;false;false
slice::sort::shared::smallsort::small_sort_network;false;true;true;true
<&'a num::saturating::Saturating<u16> as ops::arith::Mul<num::saturating::Saturating<u16>>>::mul;false;false;false;false
num::<impl i128>::unchecked_neg;true;false;false;false
num::wrapping::Wrapping::<u128>::next_power_of_two;false;false;false;false
<&'a i16 as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_loadu_pd;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<u64>>::add_assign;false;false;true;false
core_simd::ops::deref::<impl ops::bit::BitAnd<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::bitand;false;false;false;false
mem::uninitialized;true;true;false;false
<i8 as ops::arith::DivAssign<&i8>>::div_assign;false;false;true;false
num::<impl i32>::min_value;false;false;false;false
<num::niche_types::I64NotAllOnes as clone::Clone>::clone;false;false;false;false
<u128 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<u64 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
<fmt::FormattingOptions as cmp::PartialEq>::eq;false;false;true;false
fmt::Formatter::<'a>::new;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<i16>>::sub_assign;false;false;true;false
slice::sort::stable::drift::logical_merge;false;false;true;false
core_arch::x86::avx512f::_mm_or_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_rsqrt14_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_cvtsepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_rol_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_fmsub_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_roundscale_sd;true;true;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<num::saturating::Saturating<i64> as ops::bit::BitXor>::bitxor;false;false;false;false
<core_arch::simd::u64x1 as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::cast;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_fnmadd_round_sd;true;true;true;false
num::<impl u32>::leading_zeros;false;false;false;false
result::Result::<T, E>::unwrap_or;false;false;true;false
<u128 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_castps_si512;true;false;true;false
<iter::sources::successors::Successors<T, F> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
slice::<impl [T]>::strip_prefix;false;false;false;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<i16> as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::sse41::_mm_ceil_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fnmsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_blend_ps;true;true;true;false
core_arch::simd::u8x64;false;false;false;false
<isize as iter::range::Step>::forward;false;false;false;false
core_arch::x86::sse2::_mm_max_sd;true;true;true;false
core_arch::x86::sse3::_mm_hsub_pd;true;true;true;false
<&isize as ops::bit::Shr<&u16>>::shr;false;false;false;false
"array::<impl convert::AsMut<[T]> for [T; N]>::as_mut";false;false;true;false
num::<impl i32>::checked_add_unsigned;false;false;false;false
core_arch::x86::rdtsc::__rdtscp;true;true;true;false
<num::saturating::Saturating<i16> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::sse41::_mm_floor_ps;true;true;true;false
num::wrapping::Wrapping::<i16>::pow;false;false;false;false
num::wrapping::Wrapping::<i64>::is_negative;false;false;false;false
option::Option::<T>::ok_or_else;false;false;true;false
core_arch::x86::avx512bw::_mm_cmp_epu16_mask;true;true;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_max;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi32;true;true;false;false
num::<impl u8>::wrapping_add_signed;false;false;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::trailing_zeros;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<usize>>>::bitor_assign;false;false;true;false
<net::ip_addr::Ipv6Addr as iter::range::Step>::steps_between;false;false;false;false
num::<impl i64>::isolate_least_significant_one;false;false;false;false
<u16 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<iter::adapters::chain::Chain<A, B> as fmt::Debug>::fmt;false;false;true;false
<A as slice::cmp::SlicePartialOrd>::partial_compare;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_alignr_epi8;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::MulAssign<i8>>::mul_assign;false;false;true;false
<usize as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_rol_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_max_sh;true;true;true;false
"core_simd::vector::<impl convert::From<core_simd::vector::Simd<T, N>> for [T; N]>::from";false;false;true;false
num::<impl i32>::leading_ones;false;false;false;false
ptr::non_null::NonNull::<T>::offset_from_unsigned;true;true;true;false
<i32 as ops::arith::Add>::add;false;false;false;false
f64::<impl f64>::next_down;false;false;true;false
<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_checked;false;false;false;false
<str::iter::SplitTerminator<'a, P> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_i32gather_epi64;true;true;true;false
num::<impl i64>::strict_div;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::saturating_neg;false;false;false;false
<core_simd::vector::Simd<u8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmp_epu32_mask;true;true;false;false
core_arch::x86::sse41::_mm_min_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_set1_epi8;true;true;false;false
cmp::impls::<impl cmp::PartialEq for usize>::eq;false;false;false;false
num::<impl u16>::checked_ilog2;false;false;false;false
core_arch::x86::avx::_mm256_cvtss_f32;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_reduce_ss;true;true;true;false
core_arch::x86_64::sse2::_mm_cvtsi128_si64;true;true;false;false
core_arch::x86::avx2::_mm_i32gather_ps;true;true;true;false
<num::saturating::Saturating<i16> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
slice::<impl [T]>::chunks_mut;false;false;true;false
str::converts::from_raw_parts;true;true;true;false
<future::join::MaybeDone<F> as future::future::Future>::poll;false;true;true;false
core_arch::x86::avx512bw::_mm_maskz_unpackhi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_roundscale_round_sd;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u16> for &'lhs core_simd::vector::Simd<u16, N>>::shr;false;false;false;false
intrinsics::min_align_of_val;true;false;true;false
num::<impl i32>::strict_mul;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::AddAssign<&num::saturating::Saturating<u128>>>::add_assign;false;false;true;false
<&isize as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmsub_ph;true;true;true;false
<&'a num::saturating::Saturating<i64> as ops::arith::Add<num::saturating::Saturating<i64>>>::add;false;false;false;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
num::nonzero::NonZero::<i8>::saturating_neg;false;false;false;false
num::<impl u8>::rotate_left;false;false;false;false
num::<impl u128>::overflowing_mul;false;false;false;false
slice::<impl [T]>::splitn_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_expandloadu_pd;true;true;true;false
<i32 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_cvtsepi16_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpgt_epi64_mask;true;true;false;false
<&'a u8 as ops::bit::Shl<i32>>::shl;false;false;false;false
<&isize as ops::bit::Shr<&i8>>::shr;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::last;false;false;true;false
tuple::<impl cmp::PartialOrd for (V, U, T)>::lt;false;false;false;false
core_arch::x86::avx512f::_mm_mask_permutex2var_ps;true;true;true;false
fmt::num::imp::<impl fmt::LowerExp for usize>::fmt;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::arith::Mul<&num::wrapping::Wrapping<i128>>>::mul;false;false;false;false
<usize as ops::arith::Add>::add;false;false;false;false
core_arch::simd::i64x4::new;false;false;false;false
<i32 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
core_arch::x86::__m256d::as_f64x4;false;false;true;false
core_arch::x86::avx512f::_mm_mask_max_epu64;true;true;false;false
num::niche_types::I64NotAllOnes;true;false;false;false
fmt::builders::DebugList::<'a, 'b>::entry_with;false;false;true;false
"array::equality::<impl cmp::PartialEq<[U; N]> for [T; N]>::ne";false;false;false;false
<num::dec2flt::FloatErrorKind as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u8>::ge;false;false;false;false
<&mut H as hash::Hasher>::write_i16;false;false;true;false
tuple::<impl cmp::PartialEq for (Y, X, W, V, U, T)>::ne;false;false;false;false
<num::niche_types::NonZeroU128Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
num::nonzero::NonZero::<i8>::checked_neg;false;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
f64::<impl f64>::copysign;false;true;true;false
<num::dec2flt::decimal::Decimal as clone::Clone>::clone;false;false;true;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
<u128 as iter::traits::accum::Product<&'a u128>>::product;false;false;false;true
core_arch::x86::avx512bw::_mm512_mask_cmp_epu8_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_test_epi16_mask;true;true;false;false
<&u128 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<f32 as ops::arith::Div<&f32>>::div;false;false;true;false
convert::num::<impl convert::TryFrom<i8> for u8>::try_from;false;false;false;false
<u64 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<i64>>::bitor_assign;false;false;true;false
sync::atomic::AtomicI64::fetch_min;false;true;true;false
num::<impl u8>::overflowing_div_euclid;false;false;false;false
core_arch::simd::u16x4::extract;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_getmant_ps;true;true;true;false
<u16 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::bit::Not>::not;false;false;false;false
<marker::variance::PhantomCovariantLifetime<'a> as default::Default>::default;false;false;false;false
<i32 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cmpeq_epu32_mask;true;true;false;false
sync::atomic::AtomicI16::load;false;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_packs_epi32;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::AddAssign<&num::wrapping::Wrapping<i32>>>::add_assign;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::fold::flatten;false;false;false;false
<core_arch::simd::f16x16 as clone::Clone>::clone;false;false;true;false
num::<impl i8>::to_ne_bytes;false;false;false;false
core_arch::simd::i32x32::from_array;false;false;false;false
<num::niche_types::I32NotAllOnes as hash::Hash>::hash;false;false;true;false
<&num::saturating::Saturating<i8> as ops::arith::Div<&num::saturating::Saturating<i8>>>::div;false;false;false;false
core_arch::x86::avx512f::_mm256_permutex_pd;true;true;true;false
<i64 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_stream_ps;true;true;true;false
num::<impl i8>::to_be;false;false;false;false
intrinsics::atomic_xsub_acquire;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_min_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_compress_epi16;true;true;false;false
<f128 as ops::arith::MulAssign>::mul_assign;false;false;true;false
<&'a num::wrapping::Wrapping<usize> as ops::arith::Div<num::wrapping::Wrapping<usize>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtepi16_ph;true;true;false;false
<&'a i8 as ops::bit::BitXor<i8>>::bitxor;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epu16;true;true;true;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fmadd_pch;true;true;true;false
<&num::saturating::Saturating<i16> as ops::arith::Mul<&num::saturating::Saturating<i16>>>::mul;false;false;false;false
ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap;false;false;true;false
<u16 as ops::bit::Shr<u32>>::shr;false;false;false;false
<slice::iter::Chunks<'a, T> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_or;false;true;false;false
<i32 as ops::arith::DivAssign<&i32>>::div_assign;false;false;true;false
core_arch::x86::__m512::splat::JustOne;false;false;true;false
core_arch::x86::avx512fp16::_mm_max_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtxph_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_andnot_epi32;true;true;false;false
core_simd::vector::Simd::<T, N>::from_slice;false;true;false;false
<cell::RefCell<T> as cmp::Ord>::cmp;false;false;true;false
num::<impl u16>::unchecked_shr::precondition_check;false;false;false;false
core_arch::x86::aes::_mm_aesdec_si128;true;true;false;false
core_arch::x86::avx512bitalg::_mm256_mask_bitshuffle_epi64_mask;true;true;false;false
<i8 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::expose_provenance;false;true;true;false
cmp::impls::<impl cmp::PartialEq for i128>::eq;false;false;false;false
<u64 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
<cell::SyncUnsafeCell<T> as default::Default>::default;false;false;false;false
num::wrapping::Wrapping::<u8>::from_be;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Add<&num::wrapping::Wrapping<isize>>>::add;false;false;false;false
core_arch::simd::f32x4::new;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_permutexvar_epi16;true;true;false;false
num::saturating::Saturating::<i8>::swap_bytes;false;false;false;false
num::<impl u64>::from_ascii_radix;false;false;false;true
<core_arch::simd::i16x32 as cmp::PartialEq>::eq;false;false;false;false
<&'a i8 as ops::bit::Shl<u8>>::shl;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::SubAssign<&i64>>::sub_assign;false;false;true;false
<&i128 as ops::bit::Shl<&u8>>::shl;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Mul>::mul;false;false;false;false
intrinsics::mir::UnwindContinue;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtepi16_storeu_epi8;true;true;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<&'a i128 as ops::bit::Shl<isize>>::shl;false;false;false;false
<num::saturating::Saturating<u32> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
slice::sort::unstable::quicksort::partition_lomuto_branchless_cyclic;false;true;true;true
num::nonzero::NonZero::<usize>::checked_mul;false;true;false;false
num::nonzero::NonZero::<i128>::saturating_mul;false;true;false;false
num::<impl u32>::unchecked_shr::precondition_check;false;false;false;false
num::<impl u64>::is_multiple_of;false;false;false;false
num::<impl i64>::div_euclid;false;false;false;false
num::<impl isize>::checked_sub;false;false;false;false
"array::<impl [T; N]>::as_mut_slice";false;false;true;false
<f32 as slice::cmp::SliceContains>::slice_contains;false;false;true;true
core_arch::x86::sse4a::_mm_inserti_si64;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_compress_epi64;true;true;false;false
<core_arch::simd::i8x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512dq::_mm512_reduce_ps;true;true;true;false
core_arch::x86::tbm::_blsic_u32;true;false;false;false
core_arch::x86::avx512dq::_mm512_fpclass_ps_mask;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<u128>>::add_assign;false;false;true;false
<i64 as iter::range::Step>::forward_unchecked;true;true;false;false
iter::traits::iterator::Iterator::partial_cmp_by;false;false;false;false
sync::atomic::AtomicUsize::fetch_xor;false;true;true;false
<u64 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<u128 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::sources::successors::Successors<T, F> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_infinite;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtsh_ss;true;true;true;false
<str::pattern::StrSearcher<'a, 'b> as str::pattern::Searcher<'a>>::haystack;false;false;true;false
<&'a num::wrapping::Wrapping<u8> as ops::arith::Add<num::wrapping::Wrapping<u8>>>::add;false;false;false;false
<i8 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_setr_epi64;true;false;false;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_f64x2;true;true;true;false
<&mut I as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<&net::ip_addr::Ipv6Addr as ops::bit::BitOr<&net::ip_addr::Ipv6Addr>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_or_epi32;true;true;false;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
num::nonzero::NonZero::<i64>::wrapping_abs;false;true;false;false
num::wrapping::Wrapping::<isize>::pow;false;false;false;false
num::<impl u128>::unchecked_add::precondition_check;false;false;false;false
hash::impls::<impl hash::Hash for char>::hash;false;false;true;false
core_arch::x86::fma::_mm_fmadd_ss;true;true;true;false
core_arch::x86_64::xsave::_xrstors64;true;true;true;false
<iter::adapters::GenericShunt<'_, I, R> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<usize as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check;false;false;false;false
<(EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
num::<impl i32>::checked_add;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_movedup_pd;true;true;true;false
f16::<impl f16>::is_normal;false;false;true;false
<num::wrapping::Wrapping<u64> as iter::traits::accum::Sum>::sum;false;false;false;true
<num::wrapping::Wrapping<usize> as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_max_round_ps;true;true;true;false
num::saturating::Saturating::<i128>::pow;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_range_ss;true;true;true;false
<&'a i8 as ops::bit::Shr<i16>>::shr;false;false;false;false
<u8 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_testz_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_slli_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_castps_pd;true;false;true;false
num::nonzero::NonZero::<u8>::to_le;false;true;false;false
core_arch::x86::avx512f::_mm_cmp_round_ss_mask;true;true;true;false
<num::saturating::Saturating<u64> as ops::arith::Sub>::sub;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::avx512fp16::_mm_roundscale_round_sh;true;true;true;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<slice::iter::ArrayChunks<'a, T, N> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_mask_i64gather_epi64;true;true;true;false
"tuple::<impl convert::From<[T; 9]> for (T, T, T, T, T, T, T, T, T)>::from";false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpge_epu16_mask;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shldi_epi16;true;true;false;false
<i128 as fmt::num::DisplayInt>::to_u64;false;false;false;false
slice::index::slice_start_index_len_fail::do_panic;false;false;false;false
core_arch::x86::avx2::_mm256_hadds_epi16;true;true;false;false
mem::maybe_uninit::MaybeUninit::<T>::clone_from_slice;false;false;true;false
ptr::mut_ptr::<impl *mut T>::wrapping_byte_offset;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem;false;false;false;false
num::nonzero::NonZero::<u128>::div_ceil;false;true;false;false
<char::EscapeDebug as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<iter::adapters::cycle::Cycle<I> as clone::Clone>::clone;false;false;true;false
slice::<impl [T]>::rsplit_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_add_pd;true;true;true;false
ffi::c_str::strlen::runtime;false;true;true;false
num::<impl isize>::overflowing_add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permute_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_broadcast_i64x4;true;true;false;false
<i8 as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_add_round_sd;true;true;true;false
<u16 as ops::bit::BitXor<&u16>>::bitxor;false;false;false;false
sync::atomic::AtomicI32::fetch_min;false;true;true;false
core_arch::x86::avx512f::_mm_mask_fmsub_sd;true;true;true;false
option::Option::<T>::map_or_else;false;false;true;false
num::nonzero::NonZero::<i64>::saturating_mul;false;true;false;false
<&'a T as error::Error>::cause;false;false;false;false
<isize as ops::arith::Sub>::sub;false;false;false;false
<&'a num::saturating::Saturating<u128> as ops::arith::Div<num::saturating::Saturating<u128>>>::div;false;false;false;false
iter::adapters::peekable::Peekable::<I>::new;false;false;false;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
core_arch::x86::sse42::_mm_cmpestrm;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::Rem>::rem;false;false;false;false
<core_arch::simd::f64x2 as clone::Clone>::clone;false;false;true;false
core_arch::x86::__m256i::splat;false;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&i64>>::rem_assign;false;false;true;false
<&'a u8 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::avx::_mm256_set_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u32, 4>> for core_arch::x86::__m128i>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpge_epu64_mask;true;true;false;false
core_simd::masks::mask_impl::Mask::<T, N>::all;false;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::cast;false;true;false;false
<num::saturating::Saturating<u16> as ops::arith::RemAssign<u16>>::rem_assign;false;false;true;false
sync::atomic::AtomicU8::compare_exchange;false;true;true;false
num::<impl u32>::borrowing_sub;false;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtss_sh;true;true;true;false
num::<impl i64>::strict_rem;false;false;false;false
num::<impl isize>::overflowing_shr;false;false;false;false
num::<impl usize>::isolate_least_significant_one;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_i64x2;true;true;false;false
num::<impl i64>::wrapping_sub;false;false;false;false
num::nonzero::NonZero::<u16>::checked_next_power_of_two;false;true;false;false
core_arch::x86::avx512fp16::_mm_ucomige_sh;true;true;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor;false;false;false;false
sync::atomic::AtomicU64::get_mut_slice;false;true;true;false
core_arch::x86::ssse3::_mm_hsub_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_storeu_epi8;true;true;true;false
<core_arch::x86::__m128i::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512dq::_mm512_inserti32x8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_mov_epi64;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for f128>::ge;false;false;true;false
<isize as iter::range::Step>::backward_unchecked;true;true;false;false
num::<impl usize>::div_ceil;false;false;false;false
<str::iter::RSplit<'a, P> as clone::Clone>::clone;false;false;true;false
<ops::range::Range<Idx> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epi16;true;true;true;false
<[u8] as num::dec2flt::common::ByteSlice>::read_u64;false;false;false;false
<net::ip_addr::Ipv4Addr as cmp::PartialEq>::eq;false;false;false;false
num::<impl i16>::checked_add;false;false;false;false
<array::TryFromSliceError as error::Error>::description;false;false;false;false
num::saturating::Saturating::<i16>::from_be;false;false;false;false
sync::atomic::AtomicIsize::fetch_xor;false;true;true;false
<&i16 as ops::arith::Mul<&i16>>::mul;false;false;false;false
num::wrapping::Wrapping::<i16>::to_be;false;false;false;false
net::parser::Parser::<'a>::read_ipv4_addr;false;false;true;false
<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_move_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm_sub_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fmsubadd_ps;true;true;true;false
core_arch::x86::kl::EncodeKey128Output;false;false;false;false
<option::Item<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
<num::niche_types::U64NotAllOnes as fmt::Debug>::fmt;false;false;true;false
num::<impl i16>::strict_rem;false;false;false;false
num::nonzero::NonZero::<i64>::overflowing_neg;false;true;false;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::runtime;false;false;true;false
str::pattern::Pattern::strip_suffix_of;false;true;false;false
core_arch::x86::avx512vbmi2::_mm_mask_compressstoreu_epi16;true;true;true;false
num::<impl u8>::count_ones;false;false;false;false
num::<impl u64>::overflowing_add;false;false;false;false
<u16 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
core_arch::simd::i32x32::splat::JustOne;false;false;false;false
contracts::build_check_ensures;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<f32 as convert::num::FloatToInt<isize>>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_cmple_epu32_mask;true;true;false;false
<iter::adapters::copied::Copied<I> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_compressstoreu_epi64;true;true;true;false
num::<impl i16>::from_ascii;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<net::ip_addr::IpAddr as convert::From<net::ip_addr::Ipv6Addr>>::from;false;false;false;false
core_simd::masks::Mask;false;false;true;false
<num::niche_types::NonZeroI8Inner as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_broadcast_i32x4;true;true;false;false
core_arch::x86::avx512fp16::_mm_min_round_sh;true;true;true;false
str::validations::run_utf8_validation::compiletime;false;false;false;false
net::socket_addr::SocketAddr::port;false;false;true;false
<f16 as convert::num::FloatToInt<isize>>::to_int_unchecked;true;true;true;false
cell::UnsafeCell::<T>::new;false;false;false;false
time::Duration::checked_div;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fnmsub_round_sh;true;true;true;false
core_arch::x86::avx512bw::_mm_cvtusepi16_epi8;true;true;false;false
intrinsics::atomic_min_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_load_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_pd;true;true;true;false
<num::error::TryFromIntError as clone::Clone>::clone;false;false;false;false
<ffi::va_list::VaListImpl<'f> as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::cloned::Cloned<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;false
<ffi::va_list::VaListImpl<'f> as clone::Clone>::clone;false;true;true;false
num::<impl i16>::overflowing_rem;false;false;false;false
num::<impl i16>::saturating_abs;false;false;false;false
<ops::range::RangeInclusive<T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
num::saturating::Saturating::<i128>::trailing_zeros;false;false;false;false
core_arch::x86::avx512f::_mm256_i64scatter_pd;true;true;true;false
intrinsics::mir::Goto;false;false;false;false
core_arch::x86::avx512f::_mm_loadu_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_add_ph;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_min_epi8;true;true;false;false
option::Option::<T>::map_or;false;false;true;false
core_arch::simd::f32x4::splat::JustOne;false;false;true;false
convert::num::<impl convert::TryFrom<i8> for num::nonzero::NonZero<i8>>::try_from;false;false;false;false
<&'a i64 as ops::bit::Shr<i8>>::shr;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub;false;false;false;false
num::<impl isize>::saturating_neg;false;false;false;false
intrinsics::cosf64;true;false;true;false
<marker::variance::PhantomInvariant<T> as fmt::Debug>::fmt;false;false;true;false
<slice::iter::ChunkByMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_simd::ops::deref::<impl ops::arith::Sub<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fnmsub_round_pd;true;true;true;false
range::RangeInclusive::<Idx>::iter;false;false;true;false
<i128 as ops::arith::Div<&i128>>::div;false;false;false;false
<i8 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<slice::iter::ArrayChunks<'_, T, N> as clone::Clone>::clone;false;false;true;false
<&'a i32 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpeq_epu16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepi16_ph;true;true;false;false
ops::coroutine::CoroutineState::Complete;false;false;false;false
iter::traits::iterator::Iterator::is_sorted_by_key;false;false;false;false
<i32 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
fmt::num::<impl fmt::UpperHex for isize>::fmt;false;false;true;false
intrinsics::ceilf32;true;false;true;false
ptr::read::precondition_check;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
num::<impl u8>::strict_div;false;false;false;false
char::methods::<impl char>::is_ascii_graphic;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtpd_ph;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
num::<impl i16>::checked_rem;false;false;false;false
<&num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub;false;false;false;false
iter::traits::collect::default_extend_tuple_f::extend;false;false;true;false
<core_arch::simd::u8x64 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_xor_pd;true;true;true;false
num::<impl i8>::wrapping_add_unsigned;false;false;false;false
num::<impl u8>::is_multiple_of;false;false;false;false
intrinsics::exp2f16;true;false;true;false
core_arch::x86::bmi1::_blsi_u32;true;false;false;false
core_arch::x86::avx2::_mm256_srlv_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_fcmadd_pch;true;true;true;false
<core_arch::x86::__m128 as clone::Clone>::clone;false;false;true;false
fmt::num::<impl fmt::Binary for i64>::fmt;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i32>::gt;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&num::wrapping::Wrapping<i128>>>::div_assign;false;false;true;false
<u64 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
"<net::ip_addr::Ipv4Addr as convert::From<[u8; 4]>>::from";false;false;false;false
<i64 as ops::arith::Add<&i64>>::add;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;true;true;false
core_arch::x86::avx512bw::_mm512_mask_min_epu8;true;true;false;false
core_arch::x86::sse2::_mm_slli_si128;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtusepi16_epi8;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvttps_epu32;true;true;true;false
num::wrapping::Wrapping::<u128>::pow;false;false;false;false
core_arch::x86::avx::_mm256_blendv_ps;true;true;true;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
array::from_ref;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_alignr_epi64;true;true;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::count;false;false;true;true
<panic::panic_info::PanicInfo<'_> as fmt::Display>::fmt;false;false;true;false
<&'a num::saturating::Saturating<i128> as ops::arith::Rem<num::saturating::Saturating<i128>>>::rem;false;false;false;false
<num::saturating::Saturating<i32> as ops::bit::BitOr<&num::saturating::Saturating<i32>>>::bitor;false;false;false;false
<(C, B, A) as iter::traits::collect::FromIterator<(EC, EB, EA)>>::from_iter;false;false;false;false
<u128 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
<u16 as pat::RangePattern>::sub_one;false;false;false;false
<&'a num::saturating::Saturating<i16> as ops::arith::Sub<num::saturating::Saturating<i16>>>::sub;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::append;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_broadcastd_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_div_round_ph;true;true;true;false
intrinsics::maxnumf64;false;false;true;false
<i32 as ops::bit::Shr<isize>>::shr;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
<i32 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepu8_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_movehdup_ps;true;true;true;false
core_arch::simd::f16x32::new;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_epi64;true;true;false;false
<&num::saturating::Saturating<isize> as ops::bit::Not>::not;false;false;false;false
core_arch::simd::u8x4::splat::JustOne;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::find;false;false;true;true
cmp::impls::<impl cmp::Ord for usize>::cmp;false;false;false;false
<f32 as ops::arith::SubAssign<&f32>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_i64scatter_epi32;true;true;true;false
<ascii::ascii_char::AsciiChar as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_arch::simd::f16x8 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_sllv_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask3_fmadd_round_pd;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvt_roundepu64_pd;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_permutex2var_epi32;true;true;false;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl i8>::wrapping_sub;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpbusd_avx_epi32;true;true;false;false
num::wrapping::Wrapping::<u16>::from_le;false;false;false;false
ffi::va_list::va_arg;true;false;true;false
<(G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
<(dyn any::Any + 'static)>::is;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Rem>::rem;false;false;false;false
<isize as fmt::num::DisplayInt>::to_u64;false;false;false;false
<&'a usize as ops::bit::Shr<u128>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmsub_round_sh;true;true;true;false
<u64 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<&'a u64 as ops::arith::Sub<u64>>::sub;false;false;false;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<i32 as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86_64::sse42::_mm_crc32_u64;true;true;false;false
iter::sources::from_fn::FromFn;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_permutexvar_ps;true;true;true;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u8>> for u8>::rem;false;false;false;false
num::<impl i8>::midpoint;false;false;false;false
<str::iter::RMatches<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtepu32_pd;true;true;false;false
f64::<impl f64>::clamp::do_panic::compiletime;false;false;true;false
<&i64 as ops::arith::Rem<&i64>>::rem;false;false;false;false
<iter::adapters::peekable::Peekable<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<i32 as ops::arith::MulAssign>::mul_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm_cmpneq_epu32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_and_pd;true;true;true;false
core_arch::x86::avx512dq::_mm_mullo_epi64;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXor<&num::wrapping::Wrapping<i32>>>::bitxor;false;false;false;false
<f32 as num::dec2flt::float::RawFloat>::from_u64_bits;false;false;false;false
ptr::unique::Unique::<T>::new_unchecked;true;true;true;false
sync::atomic::AtomicU32::fetch_min;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_movehdup_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cvtepi64_epi16;true;true;false;false
<pin::Pin<P> as async_iter::async_iter::AsyncIterator>::size_hint;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign<&u32>>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<str::iter::CharIndices<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_extractf64x4_pd;true;true;true;false
num::saturating::Saturating::<i16>::count_ones;false;false;false;false
result::Result::<T, E>::unwrap_err;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_scalef_sh;true;true;true;false
num::<impl i8>::wrapping_mul;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::wrapping_add;false;false;true;false
<num::wrapping::Wrapping<T> as fmt::UpperHex>::fmt;false;false;true;false
num::saturating::Saturating::<i16>::is_positive;false;false;false;false
<&u8 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'a, I> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_packs_epi32;true;true;false;false
<core_arch::simd::i8x64 as clone::Clone>::clone;false;false;false;false
core_arch::x86::sse2::_mm_adds_epu8;true;true;false;false
num::saturating::Saturating::<i128>::rotate_left;false;false;false;false
<u32 as ops::arith::RemAssign<&u32>>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_cvtpd_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fcmul_round_sch;true;true;true;false
<&i8 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
num::<impl i64>::strict_shr;false;false;false;false
num::<impl u8>::next_multiple_of;false;false;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 2>> for core_arch::x86::__m128i>::from;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<i16>>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
core_arch::x86::avx::_mm_permutevar_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask3_fmadd_round_pch;true;true;true;false
<str::error::Utf8Error as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::Mul>::mul;false;false;false;false
<core_arch::x86::__m256::splat::JustOne as clone::Clone>::clone;false;false;true;false
<num::nonzero::NonZero<i64> as str::traits::FromStr>::from_str;false;false;false;false
<&u32 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<&u128 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<marker::variance::PhantomCovariant<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_product;false;true;false;false
<core_arch::x86::__m128::splat::JustOne as clone::Clone>::clone;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOrAssign<&i64>>::bitor_assign;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand;false;false;false;false
fmt::num::<impl fmt::Binary for u64>::fmt;false;false;true;false
str::<impl str>::make_ascii_uppercase;false;true;true;false
core_arch::x86::sse::_mm_xor_ps;true;true;true;false
core_arch::x86::avx2::_mm256_sll_epi32;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i32> for usize>::try_from;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem;false;false;false;false
char::CaseMappingIter::new;false;false;false;false
core_arch::x86::avx512f::_mm512_extracti32x4_epi32;true;true;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundsd_si64;true;true;true;false
hash::sip::SipHasher13::new_with_keys;false;false;false;false
<i8 as ops::arith::Sub>::sub;false;false;false;false
<ptr::alignment::Alignment as convert::TryFrom<usize>>::try_from;false;false;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<u8, N>>::mul;false;true;false;false
<num::saturating::Saturating<usize> as ops::bit::BitAnd>::bitand;false;false;false;false
num::<impl i16>::checked_shl;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_storeu_epi8;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_epi32;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::bit::Shr<&usize>>::shr;false;false;false;false
intrinsics::vtable_align;true;false;true;false
core_arch::x86::avx512f::_mm512_mask3_fmsubadd_pd;true;true;true;false
core_arch::x86::avx::_mm256_castpd_ps;true;false;true;false
core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi8;true;true;false;false
<array::iter::IntoIter<T, N> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;true;true;false
<&num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand;false;false;false;false
<() as iter::traits::collect::Extend<()>>::extend_one;false;false;true;false
sync::atomic::AtomicI32::load;false;true;true;false
core_arch::x86::avx512vbmi2::_mm_mask_shldv_epi16;true;true;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_expandloadu_ps;true;true;true;false
core_arch::simd::i16x4;false;false;false;false
char::methods::<impl char>::is_alphabetic;false;false;false;false
core_arch::x86::avx512dq::_mm256_extracti64x2_epi64;true;true;false;false
num::nonzero::NonZero::<T>::from_mut_unchecked::precondition_check;false;false;false;false
slice::<impl [T]>::split_off_first;false;false;true;false
core_arch::x86::avx::_mm_testz_ps;true;true;true;false
<&num::saturating::Saturating<i32> as ops::bit::Not>::not;false;false;false;false
num::<impl usize>::repeat_u16;false;false;false;true
iter::adapters::flatten::FlattenCompat::<I, U>::new;false;false;false;false
<isize as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
panic::location::Location::<'a>::internal_constructor;false;false;false;false
core_arch::simd::m32x8::splat;false;true;false;false
core_arch::x86::sse2::_mm_packs_epi16;true;true;false;false
<&net::ip_addr::Ipv6Addr as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx512f::_mm512_fmsubadd_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtpd_pslo;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmpeq_epi32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_mov_epi16;true;true;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl usize>::wrapping_sub;false;false;false;false
intrinsics::type_name;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::leading_zeros;false;true;false;false
num::nonzero::<impl convert::From<num::nonzero::NonZero<T>> for T>::from;false;false;true;false
<hash::sip::Sip24Rounds as default::Default>::default;false;false;false;false
slice::<impl [T]>::is_empty;false;false;false;false
<core_arch::simd::u8x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_ph;true;true;true;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G, H, I, J, K, L)>::hash;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::next;false;false;true;true
<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_arch::x86::avx512dq::_mm512_xor_ps;true;true;true;false
core_arch::x86::avx512vnni::_mm_dpbsuds_epi32;true;true;false;false
<str::iter::LinesAny<'a> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<&'a num::saturating::Saturating<i8> as ops::bit::BitXor<num::saturating::Saturating<i8>>>::bitxor;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_fmadd_pch;true;true;true;false
<range::iter::IterRangeFrom<A> as iter::traits::iterator::Iterator>::nth;false;false;true;true
sync::atomic::AtomicU8::get_mut;false;false;true;false
<i32 as iter::traits::accum::Sum<&'a i32>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_storeu_epi32;true;true;true;false
<isize as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<ffi::c_str::CStr as cmp::PartialOrd>::partial_cmp;false;false;false;false
iter::adapters::step_by::StepBy::<I>::new;false;false;false;false
slice::<impl [T]>::sort_unstable_by_key;false;false;true;false
slice::iter::<impl iter::traits::collect::IntoIterator for &'a [T]>::into_iter;false;false;false;false
num::<impl u64>::rotate_right;false;false;false;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
tuple::<impl cmp::PartialOrd for (Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
num::<impl u128>::wrapping_div;false;false;false;false
<&'a f32 as ops::arith::Sub<f32>>::sub;false;false;true;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&usize> for core_simd::vector::Simd<usize, N>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fmaddsub_ps;true;true;true;false
num::nonzero::NonZero::<i32>::cast_unsigned;false;true;false;false
core_arch::x86::fma::_mm_fnmadd_ss;true;true;true;false
num::<impl u64>::carrying_mul_add;false;false;false;false
cell::RefMut::<'b, T>::map;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::SubAssign>::sub_assign;false;false;true;false
slice::<impl [T]>::split;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_sub_epi64;true;true;false;false
<net::ip_addr::Ipv6MulticastScope as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::nonzero::NonZero::<i64>::to_le;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_unpacklo_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_storeu_epi16;true;true;true;false
<core_simd::vector::Simd<f64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtt_roundpd_epi32;true;true;true;false
num::<impl u128>::checked_shr;false;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtps_epu32;true;true;true;false
num::<impl isize>::div_floor;false;false;false;false
num::<impl u32>::unchecked_add;true;false;false;false
<i16 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
num::<impl u64>::strict_rem;false;false;false;false
<T as array::equality::SpecArrayEq<Other, N>>::spec_ne;false;false;false;false
<f64 as iter::traits::accum::Product<&'a f64>>::product;false;false;false;true
range::iter::<impl iter::traits::collect::IntoIterator for range::Range<A>>::into_iter;false;false;true;false
<(EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(I, H, G, F, E, D, C, B, A)>>::extend;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_getexp_ss;true;true;true;false
intrinsics::truncf64;true;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmplt_epi16_mask;true;true;false;false
<iter::adapters::flatten::Flatten<I> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx::_mm256_max_pd;true;true;true;false
<u8 as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::saturating::Saturating<u32> as ops::bit::Not>::not;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
num::<impl isize>::overflowing_sub_unsigned;false;false;false;false
core_arch::x86::avx512fp16::_mm256_max_ph;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_compress_epi64;true;true;false;false
num::<impl u8>::saturating_sub_signed;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_load_sd;true;true;true;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::first_size;false;false;false;false
str::<impl str>::bytes;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_add_epi64;true;true;false;false
<&'a num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr;false;false;false;false
<&u128 as ops::bit::Not>::not;false;false;false;false
<i16 as ops::arith::DivAssign>::div_assign;false;false;true;false
fmt::num::<impl fmt::Octal for i16>::fmt;false;false;true;false
<usize as ops::bit::Shl<&i128>>::shl;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::Neg>::neg;false;false;false;false
intrinsics::volatile_load;true;false;true;false
<range::RangeFrom<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for usize>::ge;false;false;false;false
core_arch::x86::avx2::_mm256_cvtepu8_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_fpclass_ss_mask;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reduce_product;false;true;false;false
io::borrowed_buf::BorrowedCursor::<'a>::as_mut;true;true;true;false
<usize as slice::GetDisjointMutIndex>::is_overlapping;false;false;false;false
task::poll::Poll::<result::Result<T, E>>::map_ok;false;false;true;false
num::<impl isize>::overflowing_rem;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_unpacklo_epi64;true;true;false;false
num::<impl u128>::strict_div_euclid;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_mulhi_epu16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_permutevar_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtsd_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtss_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_epi16;true;true;true;false
core_arch::simd::m32x4::splat;false;true;false;false
core_arch::x86::avx512fp16::_mm_store_sh;true;true;true;false
ptr::non_null::NonNull::<T>::expose_provenance;false;true;true;false
<marker::PhantomPinned as default::Default>::default;false;false;false;false
hash::impls::<impl hash::Hash for u8>::hash;false;false;true;false
<num::saturating::Saturating<u128> as ops::arith::AddAssign<&u128>>::add_assign;false;false;true;false
<&'a u128 as ops::bit::Shl<usize>>::shl;false;false;false;false
sync::atomic::AtomicU16::fetch_min;false;true;true;false
time::Duration::as_secs_f64;false;false;false;false
num::nonzero::NonZero::<u16>::to_le;false;true;false;false
core_arch::x86::sse::_mm_rcp_ss;true;true;true;false
<i128 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::avx::_mm_permute_pd;true;true;true;false
core_arch::x86_64::sse2::_mm_cvtsi64_sd;true;true;true;false
<option::Option<T> as iter::traits::collect::IntoIterator>::into_iter;false;false;true;false
intrinsics::mir::Static::panic_cold_explicit;false;false;false;false
num::<impl isize>::checked_rem;false;false;false;false
num::<impl u32>::checked_neg;false;false;false;false
<&'a u16 as ops::bit::Shr<i16>>::shr;false;false;false;false
<option::Option<T> as iter::traits::accum::Product<option::Option<U>>>::product;false;false;false;false
<fmt::Error as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_getmant_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_set1_epi64;true;true;false;false
<isize as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
str::pattern::StrSearcher::<'a, 'b>::new;false;false;false;false
convert::num::<impl convert::TryFrom<i128> for u8>::try_from;false;false;false;false
core_arch::x86::sse2::_mm_mullo_epi16;true;true;false;false
core_arch::x86::avx::_mm256_round_pd;true;true;true;false
core_arch::x86::avxneconvert::_mm256_cvtneeph_ps;true;true;true;false
num::<impl u128>::count_ones;false;false;false;false
intrinsics::minnumf32;false;false;true;false
num::saturating::Saturating::<isize>::signum;false;false;false;false
num::bignum::Big32x40::mul_pow5;false;false;true;true
cell::UnsafeCell::<T>::get_mut;false;false;true;false
core_arch::x86::avx512vnni::_mm_dpbssd_epi32;true;true;false;false
intrinsics::atomic_and_acqrel;true;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_getmant_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvtepu32_ph;true;true;false;false
<bool as str::traits::FromStr>::from_str;false;false;false;false
<T as convert::From<!>>::from;false;false;false;false
<f64 as num::dec2flt::float::RawFloat>::pow10_fast_path;false;false;false;false
core_arch::x86::avx512f::_mm_mask_load_epi64;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_scalef_ps;true;true;true;false
iter::traits::iterator::iter_compare::compare;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cmpge_epi32_mask;true;true;false;false
<&'a u128 as ops::arith::Rem<u128>>::rem;false;false;false;false
<&i8 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<&mut I as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512fp16::_mm512_setzero_ph;true;false;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<u16, N>>::mul;false;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cmul_pch;true;true;true;false
<Iter as iter::traits::collect::TraitE<EE, ED, EC, EB, EA>>::extend;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr;false;false;false;false
slice::memchr::contains_zero_byte;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sqrt_round_ps;true;true;true;false
core_arch::x86::avx512vbmi::_mm_mask2_permutex2var_epi8;true;true;false;false
f32::<impl f32>::is_infinite;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<sync::atomic::AtomicU16 as default::Default>::default;false;false;false;false
core_arch::x86::avx512bw::_mm_loadu_epi8;true;true;true;false
<range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_avg_epu16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvttps_epi32;true;true;true;false
num::<impl u32>::overflowing_add_signed;false;false;false;false
core_arch::x86::bt::_bittestandreset;true;true;true;false
<(dyn error::Error + 'static)>::is;false;false;false;false
core_arch::x86::avx512vpopcntdq::_mm256_popcnt_epi64;true;true;false;false
<&'a u8 as ops::bit::BitOr<u8>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_set4_ps;true;true;true;false
<task::wake::LocalWaker as clone::Clone>::clone_from;false;false;true;false
core_arch::x86::avx512f::_mm512_fnmadd_ps;true;true;true;false
num::<impl u32>::checked_div_euclid;false;false;false;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::is_sorted;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&usize> for &'lhs core_simd::vector::Simd<usize, N>>::shr;false;false;false;false
num::wrapping::Wrapping::<i64>::signum;false;false;false;false
<&'a f16 as ops::arith::Div<f16>>::div;false;false;true;false
core_arch::x86::fma::_mm256_fnmadd_pd;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::SubAssign<&num::wrapping::Wrapping<i16>>>::sub_assign;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cmpeq_epi32_mask;true;true;false;false
<u32 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_set_pd1;true;true;true;false
core_arch::simd::f32x8::extract;false;true;true;false
<i128 as fmt::num::DisplayInt>::to_u128;false;false;false;false
num::<impl i16>::unchecked_neg::precondition_check;false;false;false;false
core_arch::simd::m16x16::bool_to_internal;false;false;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::extract;false;false;true;false
num::<impl u64>::wrapping_add;false;false;false;false
num::<impl usize>::strict_shr;false;false;false;false
core_arch::x86::avx512f::_mm256_cvtsepi64_epi32;true;true;false;false
num::<impl str::traits::FromStr for i16>::from_str;false;false;false;false
<slice::iter::RChunksMut<'a, T> as fmt::Debug>::fmt;false;false;true;false
num::<impl u8>::to_le;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtt_roundpd_epi32;true;true;true;false
num::<impl i64>::overflowing_add_unsigned;false;false;false;false
convert::num::<impl convert::TryFrom<i32> for num::nonzero::NonZero<i32>>::try_from;false;false;false;false
num::<impl i128>::overflowing_mul;false;false;false;false
<i64 as ops::bit::Shr<u8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm512_mulhrs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmadd_round_ph;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_product;false;true;false;false
future::ResumeTy;false;false;true;false
num::nonzero::NonZero::<u16>::isolate_least_significant_one;false;true;false;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
ptr::non_null::NonNull::<T>::as_uninit_mut;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fcmadd_pch;true;true;true;false
core_arch::x86::avx512f::_mm256_cmplt_epu32_mask;true;true;false;false
range::<impl convert::From<range::RangeFrom<T>> for ops::range::RangeFrom<T>>::from;false;false;false;false
num::<impl u32>::unchecked_shl::precondition_check;false;false;false;false
core_arch::x86::avx::_mm256_hadd_ps;true;true;true;false
<time::TryFromFloatSecsErrorKind as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::RangeInclusive<usize>>>::index_mut;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_nan;false;false;true;false
<u8 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
<async_iter::from_iter::FromIter<I> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_kshiftri_mask32;true;false;false;false
ops::range::RangeInclusive::<Idx>::is_empty;false;false;true;false
num::<impl i128>::overflowing_sub_unsigned;false;false;false;false
<core_simd::masks::Mask<isize, N> as convert::From<core_simd::masks::Mask<i8, N>>>::from;false;false;true;false
core_arch::x86::avx512dq::_cvtu32_mask8;true;false;false;false
<u64 as ops::arith::MulAssign<&u64>>::mul_assign;false;false;true;false
<slice::iter::ChunksMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
core_arch::x86::avx512f::_mm512_storeu_epi32;true;true;true;false
core_arch::x86::avx2::_mm256_permutevar8x32_epi32;true;true;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<i32>>::bitand_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&i32>>::rem_assign;false;false;true;false
<&'a num::wrapping::Wrapping<i16> as ops::arith::Add<num::wrapping::Wrapping<i16>>>::add;false;false;false;false
num::nonzero::NonZero::<u32>::ilog2;false;false;false;false
<&'a num::wrapping::Wrapping<u32> as ops::arith::Sub<num::wrapping::Wrapping<u32>>>::sub;false;false;false;false
sync::atomic::AtomicPtr::<T>::fetch_and;false;true;true;false
num::<impl i8>::carrying_mul_add;false;false;false;false
core_arch::x86::sse2::_mm_set1_epi8;true;true;false;false
iter::traits::collect::default_extend_tuple_d;false;false;true;true
slice::sort::stable::AlignedStorage::<T, N>::as_uninit_slice_mut;false;true;true;false
<range::RangeInclusive<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<i64, N>>::rem;false;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
intrinsics::atomic_cxchgweak_acqrel_seqcst;true;false;true;false
cell::SyncUnsafeCell::<T>::into_inner;false;false;true;false
<net::ip_addr::Ipv4Addr as cmp::PartialOrd<net::ip_addr::IpAddr>>::partial_cmp;false;false;true;false
char::TryFromCharError;false;false;false;false
num::nonzero::NonZero::<i16>::unsigned_abs;false;true;false;false
<num::FpCategory as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<u32 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
num::<impl i64>::overflowing_div_euclid;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<net::ip_addr::Ipv6MulticastScope as hash::Hash>::hash;false;false;true;false
slice::<impl [T]>::chunk_by;false;false;false;false
iter::adapters::filter::filter_fold;false;false;false;false
ptr::const_ptr::<impl *const [T]>::is_empty;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_cvtepi64_ps;true;true;false;false
<i8 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<u128 as pat::RangePattern>::sub_one;false;false;false;false
core_arch::x86::avx512fp16::_mm_castph_ps;true;false;true;false
core_arch::x86::avx512fp16::_mm512_rsqrt_ph;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFull>::get_unchecked;true;false;true;false
sync::atomic::AtomicUsize::fetch_min;false;true;true;false
core_arch::x86::avx512f::_mm512_maskz_load_ps;true;true;true;false
<slice::iter::SplitNMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<i128 as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpwssds_avx_epi32;true;true;false;false
future::ready::ready;false;false;false;false
<usize as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_cmp_round_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_zextpd128_pd512;true;true;true;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::saturating::Saturating<i8> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<&'a u128 as ops::arith::Add<u128>>::add;false;false;false;false
core_arch::x86::sse41::_mm_cvtepu8_epi64;true;true;false;false
core_arch::x86::avx::_mm_permute_ps;true;true;true;false
<&u128 as ops::bit::Shl<&i128>>::shl;false;false;false;false
num::<impl u16>::saturating_div;false;false;false;false
<&num::wrapping::Wrapping<usize> as ops::arith::Mul<&num::wrapping::Wrapping<usize>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpnle_pd_mask;true;true;true;false
bstr::<impl cmp::PartialEq<bstr::ByteStr> for &str>::eq;false;false;false;false
core_arch::x86::avx2::_mm_srav_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_rcp14_pd;true;true;true;false
<hash::sip::Sip13Rounds as default::Default>::default;false;false;false;false
num::<impl i32>::wrapping_add;false;false;false;false
intrinsics::simd::simd_ctpop;true;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmadd_sd;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::bit::BitAnd<&num::wrapping::Wrapping<usize>>>::bitand;false;false;false;false
num::<impl isize>::unchecked_mul::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_load_pd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::offset::precondition_check;false;false;true;false
<num::saturating::Saturating<T> as fmt::LowerHex>::fmt;false;false;true;false
array::drain::drain_array_with;false;false;false;false
<u32 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
core_arch::x86::fma::_mm_fmadd_sd;true;true;true;false
<u64 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundph_ps;true;true;false;false
core_arch::x86::avx512bf16::_mm_maskz_cvtpbh_ps;true;true;false;false
<&'a num::wrapping::Wrapping<u16> as ops::arith::Add<num::wrapping::Wrapping<u16>>>::add;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::is_negative;false;false;false;false
ptr::const_ptr::<impl *const [T]>::as_uninit_slice;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_subs_epi16;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::count_ones;false;false;false;false
<u32 as net::parser::ReadNumberHelper>::checked_mul;false;false;false;false
core_arch::x86::sse::_mm_rsqrt_ps;true;true;true;false
<num::niche_types::U64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
intrinsics::simd::simd_select_bitmask;true;false;false;false
core_arch::x86::avx512bw::_mm256_cmplt_epi8_mask;true;true;false;false
num::<impl u64>::unchecked_disjoint_bitor;true;true;false;false
intrinsics::nontemporal_store;true;false;true;false
<&num::wrapping::Wrapping<u64> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<alloc::layout::LayoutError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fnmsub_ph;true;true;true;false
<i8 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
core_arch::simd::u64x1::from_array;false;false;false;false
num::<impl i16>::from_be_bytes;false;false;false;false
<&u64 as ops::bit::Shl<&u16>>::shl;false;false;false;false
option::Option::<(T, U)>::unzip;false;false;true;false
pin::Pin::<&'a mut T>::get_unchecked_mut;true;false;true;false
num::<impl usize>::checked_rem_euclid;false;false;false;false
core_arch::simd::u32x8::from_array;false;false;false;false
<i8 as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::sse::_mm_cmpge_ps;true;true;true;false
num::<impl i32>::overflowing_abs;false;false;false;false
core_arch::x86::avx::_mm256_set1_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_testn_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_getexp_ph;true;true;true;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86_64::tbm::_blci_u64;true;false;false;false
str::iter::MatchesInternal::<'a, P>::next;false;false;true;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
<u8 as ops::bit::BitXorAssign<&u8>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi16_epi32;true;true;false;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;false
core_arch::simd::u16x16::extract;false;true;false;false
core_arch::x86::avx512f::_mm256_testn_epi32_mask;true;true;false;false
<time::TryFromFloatSecsError as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::sse2::_mm_storeu_si64;true;true;true;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::nth;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<i64>>::add_assign;false;false;true;false
convert::num::<impl convert::TryFrom<i64> for i32>::try_from;false;false;false;false
num::nonzero::NonZero::<i128>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mul_epu32;true;true;false;false
slice::iter::ChunksExactMut::<'a, T>::new;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutexvar_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpgt_epi8_mask;true;true;false;false
convert::num::<impl convert::TryFrom<u16> for i8>::try_from;false;false;false;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx::_mm256_maskload_pd;true;true;true;false
<&'a i16 as ops::arith::Div<i16>>::div;false;false;false;false
<i16 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_rcp14_ps;true;true;true;false
<&i16 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::valid;false;true;false;false
<num::wrapping::Wrapping<isize> as ops::arith::DivAssign<&isize>>::div_assign;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_range_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_storeu_epi64;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldi_epi32;true;true;false;false
<usize as ops::bit::BitOrAssign<&usize>>::bitor_assign;false;false;true;false
<&i128 as ops::bit::Shl<&i128>>::shl;false;false;false;false
cell::RefCell::<T>::borrow_mut;false;false;true;false
core_arch::x86::avx512f::_mm_alignr_epi64;true;true;false;false
<u128 as iter::range::Step>::forward;false;false;false;false
<marker::variance::PhantomContravariant<T> as hash::Hash>::hash;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&usize>>::add_assign;false;false;true;false
num::nonzero::NonZero::<i64>::unsigned_abs;false;true;false;false
result::Result::<T, E>::is_err;false;false;true;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<f64, N>>::sub;false;true;true;false
num::wrapping::Wrapping::<i64>::from_le;false;false;false;false
num::<impl i16>::wrapping_rem;false;false;false;false
num::<impl i128>::pow;false;false;false;true
core_arch::x86_64::xsave::_xsaves64;true;true;true;false
<alloc::AllocError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_cmple_epu32_mask;true;true;false;false
slice::iter::ArrayChunks::<'a, T, N>::remainder;false;false;true;false
fmt::builders::DebugStruct::<'a, 'b>::is_pretty;false;false;true;false
cell::lazy::LazyCell::<T, F>::get;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_expand_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_expandloadu_epi16;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::trailing_ones;false;false;false;false
net::display_buffer::DisplayBuffer::<SIZE>::new;false;false;false;false
str::iter::MatchIndicesInternal::<'a, P>::next_back;false;false;true;false
core_arch::x86::aes::_mm_aesenc_si128;true;true;false;false
intrinsics::breakpoint;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::trailing_zeros;false;true;false;false
sync::atomic::AtomicU8::try_update;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_getmant_pd;true;true;true;false
num::<impl i8>::unsigned_abs;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epi64;true;true;true;false
slice::iter::ChunkByMut::<'a, T, P>::new;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::arith::Neg>::neg;false;false;false;false
num::<impl i16>::swap_bytes;false;false;false;false
<usize as ops::arith::AddAssign<&usize>>::add_assign;false;false;true;false
<cell::BorrowError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_broadcastq_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_abs_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask3_fmsub_round_sh;true;true;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u128>::try_from;false;false;false;false
<char as iter::range::Step>::steps_between;false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::count_ones;false;true;false;false
core_arch::x86::avx512vbmi2::_mm256_shldv_epi16;true;true;false;false
num::<impl i32>::from_be;false;false;false;false
<u128 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_add_pd;true;true;true;false
core_arch::x86::avx512f::_mm_testn_epi32_mask;true;true;false;false
core_arch::x86::avx::_mm256_cvtepi32_pd;true;true;false;false
hash::impls::<impl hash::Hash for i128>::hash_slice;false;true;true;false
str::iter::SplitTerminator::<'a, P>::remainder;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_xor_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_range_round_pd;true;true;true;false
<u128 as ops::bit::Shr<&i64>>::shr;false;false;false;false
cell::RefCell::<T>::try_borrow;false;true;true;false
core_arch::x86::sse::_mm_setzero_ps;true;false;false;false
core_arch::x86::sse41::_mm_cvtepu16_epi64;true;true;false;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
ptr::mut_ptr::<impl *mut T>::expose_provenance;false;false;true;false
num::nonzero::NonZero::<usize>::rotate_right;false;true;false;false
cmp::impls::<impl cmp::PartialOrd for f128>::partial_cmp;false;false;true;false
num::nonzero::NonZero::<isize>::isolate_least_significant_one;false;true;false;false
core_arch::x86::avx512dq::_mm_mask_broadcast_i32x2;true;true;false;false
num::dec2flt::decimal_seq::DecimalSeq::round;false;false;false;true
core_arch::x86::sse42::_mm_cmpestrs;true;true;false;false
<u64 as ops::bit::Shr<&i8>>::shr;false;false;false;false
core_arch::x86_64::amx::_tile_dpbsud;true;true;false;false
tuple::<impl cmp::PartialEq for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::ne;false;false;false;false
ptr::non_null::NonNull::<T>::from_ref;false;false;false;false
<&num::saturating::Saturating<u16> as ops::arith::Add<&num::saturating::Saturating<u16>>>::add;false;false;false;false
net::socket_addr::SocketAddrV4::set_port;false;false;true;false
<&'a i32 as ops::bit::Shl<isize>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmplt_epi16_mask;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for f16>::lt;false;false;true;false
<ascii::EscapeDefault as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
<result::Result<T, F> as ops::try_trait::FromResidual<ops::try_trait::Yeet<E>>>::from_residual;false;false;false;false
<net::socket_addr::SocketAddr as cmp::PartialEq>::eq;false;false;true;false
sync::atomic::AtomicU16::compare_exchange;false;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_fmsub_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_movehdup_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepu64_ph;true;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::is_negative;false;false;false;false
num::<impl u128>::saturating_mul;false;false;false;false
core_arch::x86::sse3::_mm_addsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi32;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Rem<&num::wrapping::Wrapping<i32>>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_alignr_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_andnot_ps;true;true;true;false
<fmt::rt::Alignment as cmp::PartialEq>::eq;false;false;false;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Rem>::rem;false;false;false;false
slice::<impl [T]>::split_at_unchecked;true;true;false;false
<&'a num::wrapping::Wrapping<i8> as ops::arith::Mul<num::wrapping::Wrapping<i8>>>::mul;false;false;false;false
core_arch::x86::sse41::_mm_ceil_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_epi32;true;true;false;false
<i128 as ops::arith::RemAssign>::rem_assign;false;false;true;false
<core_simd::masks::Mask<i16, N> as convert::From<core_simd::masks::Mask<i32, N>>>::from;false;false;true;false
<range::Range<usize> as slice::GetDisjointMutIndex>::is_in_bounds;false;false;true;false
<num::niche_types::U64NotAllOnes as clone::Clone>::clone;false;false;false;false
<core_arch::simd::f64x2 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_cvttph_epu32;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_reduce_ps;true;true;true;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<i64, N>>::bitand;false;true;false;false
<fmt::FormattingOptions as default::Default>::default;false;false;false;false
convert::num::<impl convert::From<u8> for u128>::from;false;false;false;false
<u8 as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::__m256::as_f32x8;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_rorv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_epi64;true;true;true;false
<u8 as ops::bit::Shr<u32>>::shr;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Add>::add;false;false;false;false
intrinsics::atomic_umax_release;true;false;true;false
<&u16 as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmadd_round_sd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shldi_epi16;true;true;false;false
<(EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(F, E, D, C, B, A)>>::extend;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtpd_ph;true;true;true;false
core_arch::x86::avx::_mm256_ceil_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepu64_ph;true;true;false;false
<u8 as ops::bit::Shl<u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_scalef_ss;true;true;true;false
<&i16 as ops::bit::Shl<&u8>>::shl;false;false;false;false
num::<impl u64>::unchecked_mul::precondition_check;false;false;false;false
<i16 as fmt::num::DisplayInt>::to_u64;false;false;false;false
num::<impl usize>::widening_mul;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_xor_pd;true;true;true;false
<&u16 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_add_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_mul_round_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_permutex2var_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_cvt_roundsi32_ss;true;true;true;false
<(EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(I, H, G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
num::niche_types::U32NotAllOnes::new;false;false;false;false
intrinsics::volatile_copy_nonoverlapping_memory;true;false;true;false
<core_arch::x86::__m128d as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXor<&num::wrapping::Wrapping<i8>>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permutex_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpgt_epi8_mask;true;true;false;false
f128::<impl f128>::is_infinite;false;false;true;false
core_arch::x86::avx512fp16::_mm_castph_pd;true;false;true;false
error::Request::<'a>::provide_with;false;false;true;false
intrinsics::copy_nonoverlapping::copy_nonoverlapping;true;false;true;false
core_arch::x86::avx512f::_mm256_mask_srav_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_shuffle_f64x2;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_max_epu16;true;true;false;false
num::flt2dec::to_exact_exp_str;false;true;true;false
<core_simd::masks::Mask<i32, N> as convert::From<core_simd::masks::Mask<i64, N>>>::from;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::arith::AddAssign>::add_assign;false;false;true;false
<ascii::EscapeDefault as iter::traits::iterator::Iterator>::next;false;false;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_sum;false;true;false;false
<marker::variance::PhantomContravariantLifetime<'_> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_loadu2_m128;true;true;true;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<i32, N>>::bitxor;false;true;false;false
core_arch::x86::sse::_mm_sub_ss;true;true;true;false
iter::traits::iterator::_assert_is_dyn_compatible;false;false;false;false
fmt::num::<impl fmt::Binary for u128>::fmt;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitOr>::bitor;false;false;false;false
num::wrapping::Wrapping::<u64>::swap_bytes;false;false;false;false
<slice::iter::IterMut<'_, T> as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpord_ps_mask;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::Rem<&num::wrapping::Wrapping<i16>>>::rem;false;false;false;false
<marker::variance::PhantomCovariantLifetime<'a> as cmp::PartialEq>::eq;false;false;true;false
<i8 as ops::arith::Sub<&i8>>::sub;false;false;false;false
tuple::<impl default::Default for (Y, X, W, V, U, T)>::default;false;false;false;false
ptr::mut_ptr::<impl *mut T>::read_unaligned;true;true;true;false
num::wrapping::Wrapping::<u32>::next_power_of_two;false;false;false;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<u64, N>>::bitand;false;true;false;false
<&num::saturating::Saturating<u8> as ops::arith::Rem<&num::saturating::Saturating<u8>>>::rem;false;false;false;false
<bstr::ByteStr as ops::index::Index<usize>>::index;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_expand_epi16;true;true;false;false
<marker::PhantomPinned as hash::Hash>::hash;false;false;true;false
<&i8 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<i128 as ops::bit::BitAndAssign<&i128>>::bitand_assign;false;false;true;false
<I as iter::traits::collect::IntoIterator>::into_iter;false;false;false;false
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
<&num::wrapping::Wrapping<u16> as ops::arith::Mul<&num::wrapping::Wrapping<u16>>>::mul;false;false;false;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
core_arch::x86::sse2::_mm_cmpnlt_pd;true;true;true;false
future::ready::Ready;false;false;true;false
<u128 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_pd;true;true;true;false
ptr::swap_nonoverlapping::compiletime;false;true;true;false
<&i8 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<i64 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<ops::range::Range<Idx> as default::Default>::default;false;false;false;false
num::<impl i8>::overflowing_add_unsigned;false;false;false;false
cmp::impls::<impl cmp::PartialOrd<&mut B> for &mut A>::le;false;false;true;false
sync::atomic::AtomicU8::fetch_update;false;false;true;true
io::borrowed_buf::BorrowedBuf::<'data>::unfilled;false;false;true;false
str::<impl str>::from_utf8_unchecked_mut;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::is_positive;false;false;false;false
<net::parser::AddrKind as fmt::Debug>::fmt;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i32>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
<ops::control_flow::ControlFlow<B, C> as cmp::PartialEq>::eq;false;false;true;false
<&'a u128 as ops::bit::Shl<u16>>::shl;false;false;false;false
ptr::mut_ptr::<impl *mut T>::with_metadata_of;false;false;true;false
core_arch::x86::avx512f::_mm256_mask2_permutex2var_epi32;true;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
<num::nonzero::NonZero<T> as cmp::PartialEq>::ne;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<u32>>::bitand_assign;false;false;true;false
<(dyn any::Any + marker::Send + 'static)>::downcast_ref;false;false;false;false
f16::<impl f16>::to_int_unchecked;true;true;true;false
num::wrapping::Wrapping::<u128>::from_be;false;false;false;false
<str::iter::RSplitTerminator<'a, P> as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<usize>::ilog2;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_i32gather_epi64;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_fnmadd_pd;true;true;true;false
core_arch::x86::avx512vnni::_mm512_mask_dpwssd_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_cvtepi32_ph;true;true;true;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
intrinsics::transmute_unchecked;true;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::Shr<&usize>>::shr;false;false;false;false
<iter::sources::empty::Empty<T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_max_ph;true;true;true;false
cell::once::OnceCell::<T>::get_mut_or_try_init;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_roundscale_sh;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_broadcastd_epi32;true;true;false;false
<&'a i32 as ops::bit::Shr<i64>>::shr;false;false;false;false
num::<impl i64>::checked_mul;false;false;false;false
pin::Pin::<Ptr>::new_unchecked;true;false;false;false
<str::iter::Lines<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
char::methods::len_utf16;false;false;false;false
clone::impls::<impl clone::Clone for i16>::clone;false;false;false;false
<&'a i8 as ops::bit::Shr<u16>>::shr;false;false;false;false
<&'a i32 as ops::bit::Shr<i16>>::shr;false;false;false;false
<iter::sources::empty::Empty<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_cmpeq_epi16_mask;true;true;false;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::adapters::SourceIter>::as_inner;true;true;true;false
intrinsics::simd::simd_fexp2;true;false;false;false
<iter::adapters::map::Map<I, F> as clone::Clone>::clone;false;false;true;false
num::nonzero::NonZero::<i16>::trailing_zeros;false;true;false;false
<iter::adapters::flatten::Flatten<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u128>::gt;false;false;false;false
<u64 as fmt::num::DisplayInt>::zero;false;false;false;false
num::nonzero::NonZero::<i64>::from_be;false;true;false;false
<&usize as ops::bit::BitXor<&usize>>::bitxor;false;false;false;false
<usize as ops::bit::Shl<isize>>::shl;false;false;false;false
<&bool as ops::bit::BitOr<&bool>>::bitor;false;false;false;false
<i128 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_fold::nth;false;false;true;false
<slice::iter::RChunks<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
fmt::num::<impl fmt::Octal for i8>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_rcp_ps;true;true;true;false
<i32 as ops::bit::BitOrAssign<&i32>>::bitor_assign;false;false;true;false
panicking::panic_const::panic_const_gen_fn_none_panic;false;false;false;false
<&u8 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl i128>::wrapping_shl;false;true;false;false
num::dec2flt::parse::parse_8digits;false;false;false;false
<mem::transmutability::Assume as ops::arith::Add>::add;false;false;true;false
core_arch::x86::avx512dq::_mm_maskz_andnot_pd;true;true;true;false
clone::impls::<impl clone::Clone for isize>::clone;false;false;false;false
num::wrapping::Wrapping::<isize>::is_negative;false;false;false;false
panicking::panic_const::panic_const_div_overflow;false;false;false;false
num::<impl isize>::div_ceil;false;false;false;false
convert::num::<impl convert::TryFrom<u32> for num::nonzero::NonZero<u32>>::try_from;false;false;false;false
core_arch::x86::avx512vnni::_mm_maskz_dpwssd_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpgt_epu64_mask;true;true;false;false
<slice::iter::RSplitN<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::<impl u8>::next_power_of_two;false;false;false;false
num::<impl i32>::checked_ilog;false;false;false;false
num::<impl str::traits::FromStr for u64>::from_str;false;false;false;false
slice::<impl [T]>::partition_dedup_by_key;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epi32;true;true;true;false
char::from_u32_unchecked;true;true;false;false
num::saturating::Saturating::<u128>::trailing_zeros;false;false;false;false
<&num::wrapping::Wrapping<u16> as ops::arith::Neg>::neg;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
<str::iter::RSplitTerminator<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
"tuple::<impl convert::From<[T; 5]> for (T, T, T, T, T)>::from";false;false;false;false
num::<impl u128>::strict_add;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_epu64_mask;true;true;false;false
<Iter as iter::traits::collect::TraitH<EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
slice::sort::select::median_idx;false;false;true;false
<str::error::ParseBoolError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpge_epi64_mask;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_and_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_scalef_round_sh;true;true;true;false
<u32 as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtsh_u32;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i128>>::try_from;false;true;false;false
<core_simd::masks::Mask<i8, N> as convert::From<core_simd::masks::Mask<i16, N>>>::from;false;false;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
<num::niche_types::UsizeNoHighBit as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<str::LinesMap as ops::function::FnOnce<(&'a str,)>>::call_once;false;false;false;false
core_arch::simd::m16x16;false;false;false;false
num::nonzero::NonZero::<i64>::checked_abs;false;true;false;false
<&'a u128 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu32_epi64;true;true;false;false
<core_simd::vector::Simd<i8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<fmt::num::UpperHex as fmt::num::GenericRadix>::digit;false;false;false;false
<net::ip_addr::Ipv6Addr as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::avx512bitalg::_mm512_maskz_popcnt_epi16;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::saturating_add;false;true;false;false
ptr::non_null::NonNull::<T>::read_unaligned;true;true;true;false
core_arch::macros::SimdShuffleIdx;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::reduce_sum;false;true;true;false
num::saturating::Saturating::<i64>::reverse_bits;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi32;true;true;false;false
core_arch::x86::sse::_mm_cmpeq_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_sad_epu8;true;true;false;false
<str::iter::RSplit<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::__m512d::as_f64x8;false;false;true;false
<str::iter::EscapeDebug<'a> as fmt::Display>::fmt;false;false;true;true
<i128 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<core_arch::simd::f16x8 as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::sse::_mm_cmpngt_ss;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtsepi64_epi8;true;true;false;false
num::from_ascii_radix_panic::do_panic;false;false;false;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu16;true;true;true;false
num::flt2dec::decoder::FullDecoded::Finite;false;false;true;false
f128::<impl f128>::copysign;false;true;true;false
<num::diy_float::Fp as clone::Clone>::clone;false;false;false;false
<i32 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::try_fold;false;false;true;false
sync::atomic::atomic_max;true;true;true;false
<&'a u16 as ops::arith::Sub<u16>>::sub;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmple_epi8_mask;true;true;false;false
net::ip_addr::IpAddr::is_multicast;false;false;true;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512fp16::_mm_fmadd_sch;true;true;true;false
core_arch::x86::avx512f::_mm_mask_sub_sd;true;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitOrAssign<&i32>>::bitor_assign;false;false;true;false
<&mut I as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<&'a u16 as ops::bit::Shr<u32>>::shr;false;false;false;false
<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_checked;false;true;false;false
core_arch::x86::avx512f::_mm_cmp_round_sd_mask;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi64;true;true;false;false
range::iter::IterRangeFrom;false;false;false;false
<&'a num::wrapping::Wrapping<i128> as ops::arith::Rem<num::wrapping::Wrapping<i128>>>::rem;false;false;false;false
<&mut S as async_iter::async_iter::AsyncIterator>::size_hint;false;false;true;false
sync::atomic::AtomicU8::from_mut_slice;false;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_mul_sh;true;true;true;false
<u128 as ops::bit::Shl<u32>>::shl;false;false;false;false
<str::pattern::StrSearcher<'a, 'b> as str::pattern::Searcher<'a>>::next;false;false;true;true
<i64 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
fmt::num::<impl fmt::UpperHex for i16>::fmt;false;false;true;false
<f64 as convert::num::FloatToInt<u128>>::to_int_unchecked;true;true;true;false
sync::atomic::AtomicU64::try_update;false;false;true;false
core_arch::x86::sse::_mm_load1_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtepi64_pd;true;true;false;false
num::nonzero::NonZero::<i32>::rotate_left;false;true;false;false
num::nonzero::NonZero::<u64>::from_le;false;true;false;false
<&'a num::saturating::Saturating<u8> as ops::bit::BitAnd<num::saturating::Saturating<u8>>>::bitand;false;false;false;false
cell::BorrowRefMut::<'b>::new;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_sub_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_mul_sh;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u16> for &'lhs core_simd::vector::Simd<u16, N>>::shr;false;false;false;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_simd::ops::deref::<impl ops::bit::BitXor<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::bitxor;false;false;false;false
core_arch::x86::avx512dq::_mm256_broadcast_i32x2;true;true;false;false
mem::maybe_uninit::MaybeUninit::<T>::slice_as_mut_ptr;false;false;true;false
<u16 as ops::bit::BitAnd<&u16>>::bitand;false;false;false;false
<marker::variance::PhantomCovariantLifetime<'_> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitAnd<&num::wrapping::Wrapping<i64>>>::bitand;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::SubAssign<&num::saturating::Saturating<i64>>>::sub_assign;false;false;true;false
<usize as ops::bit::Shl<&u128>>::shl;false;false;false;false
<future::poll_fn::PollFn<F> as future::future::Future>::poll;false;true;true;false
core_arch::x86::avx512dq::_mm256_fpclass_ps_mask;true;true;true;false
core_arch::simd::u16x32::splat;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_rolv_epi64;true;true;false;false
num::wrapping::Wrapping::<u32>::pow;false;false;false;false
num::<impl i16>::unbounded_shr;false;true;false;false
core_arch::x86::avx512bw::_mm_mask_maddubs_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_mullo_epi16;true;true;false;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<u64, N>>::shl;false;true;false;false
<usize as iter::traits::accum::Product<&'a usize>>::product;false;false;false;true
<num::niche_types::I64NotAllOnes as cmp::Ord>::cmp;false;false;false;false
"array::<impl clone::Clone for [T; N]>::clone_from";false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
<&u64 as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepi64_ph;true;true;true;false
num::error::ParseIntError::kind;false;false;false;false
ptr::eq;false;false;true;false
core_arch::x86::avx512f::_mm_permutex2var_ps;true;true;true;false
convert::num::<impl convert::TryFrom<u128> for u64>::try_from;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtx_roundps_ph;true;true;true;false
<num::wrapping::Wrapping<isize> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
intrinsics::powif16;true;false;true;false
intrinsics::simd::simd_gt;true;false;false;false
<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<&num::saturating::Saturating<u32>>>::bitxor_assign;false;false;true;false
core_arch::x86_64::bt::_bittestandreset64;true;true;true;false
core_arch::x86::avx512f::_mm512_cmplt_epu32_mask;true;true;false;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::Range<A>>::advance_back_by;false;false;true;false
<f32 as convert::num::FloatToInt<u8>>::to_int_unchecked;true;true;true;false
num::nonzero::NonZero::<i16>::from_le;false;true;false;false
<num::saturating::Saturating<i32> as ops::arith::Add>::add;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<i8, 32>>::from;false;false;false;false
future::join::MaybeDone::Done;false;false;false;false
num::<impl usize>::to_le_bytes;false;false;false;false
<&'a u16 as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_getexp_sh;true;true;true;false
<num::saturating::Saturating<usize> as ops::bit::BitXor>::bitxor;false;false;false;false
num::<impl i64>::unchecked_add;true;false;false;false
core_arch::x86::avx512f::_mm512_maskz_add_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_extracti64x4_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_cvtpd_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_pch;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_sqrt_ps;true;true;true;false
<[u8] as num::dec2flt::common::ByteSlice>::parse_digits;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_ror_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_testn_epi16_mask;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i8>>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdi_epi64;true;true;false;false
hint::unreachable_unchecked;true;false;false;false
<pin::Pin<&mut G> as ops::coroutine::Coroutine<R>>::resume;false;false;true;false
core_arch::x86::avx512vnni::_mm_dpbuuds_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_sqrt_ph;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&num::wrapping::Wrapping<i64>>>::div_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::arith::Div>::div;false;false;false;false
num::<impl i64>::checked_sub;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOr<&num::wrapping::Wrapping<i8>>>::bitor;false;false;false;false
num::<impl u8>::from_be_bytes;false;false;false;false
"array::ascii::<impl [u8; N]>::as_ascii_unchecked";true;true;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T, T, T)> for [T; 8]>::from";false;false;true;false
num::<impl isize>::unchecked_shl;true;false;false;false
intrinsics::atomic_cxchg_release_relaxed;true;false;true;false
core_arch::x86::avx512f::_mm256_cmpge_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_max_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_max_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm512_fmsubadd_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_reduce_ph;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_and_pd;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div;false;false;false;false
<char::ToLowercase as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<core_arch::simd::f16x8::splat::JustOne as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicIsize::fetch_nand;false;true;true;false
<&u128 as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sub_epi64;true;true;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Div>::div;false;false;false;false
num::<impl i16>::unchecked_shr;true;false;false;false
<f64 as convert::num::FloatToInt<u16>>::to_int_unchecked;true;true;true;false
<num::saturating::Saturating<u16> as ops::arith::SubAssign<u16>>::sub_assign;false;false;true;false
sync::atomic::AtomicU16::as_ptr;false;false;true;false
core_arch::x86::avx512f::_mm256_test_epi32_mask;true;true;false;false
<(ED, EC, EB, EA) as iter::traits::collect::Extend<(D, C, B, A)>>::extend;false;false;true;false
num::<impl i8>::unbounded_shl;false;true;false;false
<&'a u32 as ops::bit::Shl<i16>>::shl;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_inserti32x8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_compress_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_permutexvar_pd;true;true;true;false
<sync::atomic::Ordering as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_kortestc_mask64_u8;true;true;false;false
core_arch::simd::u16x2::splat::JustOne;false;false;false;false
core_arch::simd::f16x16::splat::JustOne;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_scalef_round_ph;true;true;true;false
<&mut F as future::future::Future>::poll;false;false;true;false
num::<impl i128>::to_le;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;false;true;false
<num::dec2flt::FloatErrorKind as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXor>::bitxor;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_product;false;true;false;false
<num::saturating::Saturating<u32> as ops::arith::SubAssign>::sub_assign;false;false;true;false
num::<impl i8>::overflowing_pow;false;false;false;true
num::<impl i16>::strict_mul;false;false;false;false
intrinsics::maxnumf16;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmp_epi16_mask;true;true;false;false
num::saturating::Saturating::<i32>::from_be;false;false;false;false
convert::num::<impl convert::TryFrom<u8> for num::nonzero::NonZero<u8>>::try_from;false;false;false;false
<panic::location::Location<'a> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_cmp_ph_mask;true;true;true;false
async_iter::from_iter::from_iter;false;false;false;false
<core_arch::x86::__m128h as clone::Clone>::clone;false;false;true;false
core_arch::x86::sse2::_mm_cmpeq_epi32;true;true;false;false
num::<impl u128>::checked_pow;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_shuffle_ps;true;true;true;false
<&'a num::saturating::Saturating<isize> as ops::bit::BitAnd<num::saturating::Saturating<isize>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cmp_ph_mask;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu16;true;true;false;false
num::<impl i128>::unchecked_add;true;false;false;false
<u8 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_roundscale_ph;true;true;true;false
<slice::GetDisjointMutError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_compressstoreu_epi16;true;true;true;false
<&num::saturating::Saturating<i128> as ops::arith::Rem<&num::saturating::Saturating<i128>>>::rem;false;false;false;false
<i8 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::try_fold;false;false;true;true
core_arch::x86::avx512f::_mm_mask3_fmsub_ss;true;true;true;false
num::<impl u8>::checked_sub_signed;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i32> for core_simd::vector::Simd<i32, N>>::shl;false;false;false;false
num::<impl i8>::rotate_right;false;false;false;false
num::niche_types::NonZeroU32Inner;true;false;false;false
<f16 as ops::arith::Rem<&f16>>::rem;false;false;true;false
cell::once::OnceCell::<T>::into_inner;false;false;true;false
sync::atomic::AtomicU32::fetch_xor;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_or_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epu32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtusepi64_storeu_epi8;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmpeq_epu8_mask;true;true;false;false
task::wake::LocalWaker::from_raw;true;false;true;false
alloc::layout::Layout::is_size_align_valid;false;false;false;false
<&i8 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<&'a num::wrapping::Wrapping<i128> as ops::bit::BitXor<num::wrapping::Wrapping<i128>>>::bitxor;false;false;false;false
net::parser::AddrParseError;false;false;false;false
core_arch::x86::avx512fp16::_mm512_fnmsub_round_ph;true;true;true;false
core_arch::x86::__m256;false;false;true;false
num::<impl u16>::overflowing_div;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundu64_ss;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXor>::bitxor;false;false;false;false
<core_arch::simd::i8x2 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bf16::_mm_cvtsbh_ss;true;false;false;false
core_arch::x86::sse2::_mm_set_epi8;true;false;false;false
num::nonzero::NonZero::<u128>::checked_add;false;true;false;false
num::saturating::Saturating::<u128>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_max_epi32;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_epi64;true;true;false;false
core_arch::x86::avx::_mm256_unpackhi_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_reduce_or_epi8;true;true;false;false
<num::dec2flt::common::BiasedFp as clone::Clone>::clone;false;false;false;false
<range::RangeFrom<Idx> as fmt::Debug>::fmt;false;false;true;false
f16::<impl f16>::from_be_bytes;false;false;false;false
<&'a i64 as ops::bit::BitXor<i64>>::bitxor;false;false;false;false
<&'a u128 as ops::bit::Shl<u128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_and_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundsh_i32;true;true;true;false
panicking::const_panic_fmt;false;true;true;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::min;false;false;true;false
core_arch::x86::avx512f::_mm256_cmplt_epi64_mask;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::index;false;false;true;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_mulhi_epi16;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_or;false;true;false;false
num::<impl i64>::from_str_radix;false;false;false;false
core_arch::x86::avx512dq::_mm256_movm_epi32;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reverse_bits;false;true;false;false
num::<impl i128>::is_negative;false;false;false;false
hash::impls::<impl hash::Hash for i128>::hash;false;false;true;false
num::saturating::Saturating::<isize>::swap_bytes;false;false;false;false
intrinsics::mul_with_overflow;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_fpclass_pd_mask;true;true;true;false
num::<impl i8>::from_ascii;false;false;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
<&num::saturating::Saturating<u8> as ops::bit::Not>::not;false;false;false;false
num::<impl u16>::strict_sub;false;false;false;false
num::<impl i64>::wrapping_sub_unsigned;false;false;false;false
<net::socket_addr::SocketAddrV6 as cmp::PartialEq>::eq;false;false;true;false
fmt::num::<impl fmt::Binary for i16>::fmt;false;false;true;false
<fmt::DebugAsHex as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitOrAssign<&i16>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::Add>::add;false;false;false;false
num::niche_types::NonZeroI8Inner::as_inner;false;false;false;false
f32::<impl f32>::to_radians;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_roundscale_round_pd;true;true;true;false
<u128 as ops::bit::Shr<u32>>::shr;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitOr>::bitor;false;false;false;false
result::Result::<T, E>::as_ref;false;false;true;false
hash::impls::<impl hash::Hash for *const T>::hash;false;false;true;false
core_arch::simd::m32x4::new;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
<num::niche_types::NonZeroU16Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
slice::index::get_noubcheck;true;false;true;false
num::<impl u8>::checked_neg;false;false;false;false
num::<impl i64>::overflowing_sub_unsigned;false;false;false;false
option::Option::<T>::as_pin_mut;false;true;true;false
<time::Duration as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm256_ror_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_sllv_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask3_fnmadd_pd;true;true;true;false
<&'a i16 as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_cvt_roundi32_ss;true;true;true;false
core_arch::x86::avx512vnni::_mm256_maskz_dpwssd_epi32;true;true;false;false
<char::convert::ParseCharError as cmp::PartialEq>::eq;false;false;false;false
<f64 as num::dec2flt::float::RawFloat>::classify;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::DivAssign>::div_assign;false;false;true;false
<usize as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
core_arch::x86::avx::_mm256_cvtepi32_ps;true;true;false;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<cell::BorrowError as error::Error>::description;false;false;false;false
core_arch::simd::i8x4;false;false;false;false
<u16 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_reduce_max_epu16;true;true;false;false
core_arch::x86::sse41::_mm_mpsadbw_epu8;true;true;false;false
<&i16 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;true
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u32>::try_from;false;false;false;false
<T as slice::sort::shared::smallsort::StableSmallSortTypeImpl>::small_sort;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_max_epi16;true;true;false;false
<&i32 as ops::bit::Shl<&isize>>::shl;false;false;false;false
time::Duration::div_duration_f32;false;false;false;false
core_arch::x86::sse2::_mm_loadu_si64;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_cmul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtps_epu32;true;true;true;false
<panic::location::Location<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::sse41::_mm_packus_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fmadd_round_pch;true;true;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by::advance;false;false;true;false
num::<impl usize>::strict_rem_euclid;false;false;false;false
<u8 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx2::_mm256_srli_si256;true;true;false;false
num::<impl i128>::ilog;false;false;false;false
core_simd::masks::mask_impl::Mask::<T, N>::any;false;true;true;false
num::wrapping::Wrapping::<u32>::leading_zeros;false;false;false;false
core_arch::x86::avx2::_mm256_i32gather_epi32;true;true;true;false
<i16 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_min_epu64;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::reverse_bits;false;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
<num::saturating::Saturating<u8> as ops::arith::MulAssign<&u8>>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvt_roundps_ph;true;true;true;false
num::nonzero::NonZero::<i8>::unsigned_abs;false;true;false;false
<net::parser::AddrKind as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<marker::PhantomPinned as cmp::PartialEq>::eq;false;false;false;false
<i128 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_fpclass_ph_mask;true;true;true;false
cmp::impls::<impl cmp::PartialEq for u128>::eq;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<i8>>::mul_assign;false;false;true;false
<i64 as ops::bit::Shr<isize>>::shr;false;false;false;false
<fmt::Error as cmp::PartialOrd>::partial_cmp;false;false;false;false
<num::niche_types::NonZeroI16Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
slice::<impl [T]>::split_at_mut_unchecked::precondition_check;false;false;false;false
core_arch::simd::u8x8::new;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::MulAssign<isize>>::mul_assign;false;false;true;false
core_arch::simd::i8x2::new;false;false;false;false
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u32>> for u32>::rem_assign;false;false;true;false
fmt::Formatter::<'a>::sign_plus;false;false;true;false
<&mut T as fmt::UpperHex>::fmt;false;false;true;false
range::Range::<Idx>::is_empty;false;false;true;false
core_arch::x86::avx512bitalg::_mm256_bitshuffle_epi64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fnmadd_sh;true;true;true;false
<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<&i128>>::div_assign;false;false;true;false
<cmp::Reverse<T> as clone::Clone>::clone;false;false;true;false
num::<impl i16>::isolate_most_significant_one;false;false;false;false
<u32 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
slice::sort::shared::pivot::choose_pivot;false;true;true;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_i32x4;true;true;false;false
core_arch::x86::avx512vpopcntdq::_mm_maskz_popcnt_epi64;true;true;false;false
<isize as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86_64::bmi::_andn_u64;true;false;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundu64_sd;true;true;true;false
<num::niche_types::NonZeroU64Inner as clone::Clone>::clone;false;false;false;false
<u16 as net::parser::ReadNumberHelper>::checked_mul;false;false;false;false
core_simd::vector::Simd::<T, N>::load_select_or_default;false;false;true;false
<u16 as ops::arith::Sub>::sub;false;false;false;false
error::Request::<'a>::provide;false;false;true;false
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u8>> for u8>::div_assign;false;false;true;false
num::<impl i128>::saturating_div;false;false;false;false
num::<impl u128>::cast_signed;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::RemAssign<&num::wrapping::Wrapping<i32>>>::rem_assign;false;false;true;false
<net::socket_addr::SocketAddrV6 as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::with_addr;false;false;true;false
core_arch::x86::avx512fp16::_mm512_reduce_min_ph;true;true;true;false
<i128 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
<panic::location::Location<'_> as fmt::Display>::fmt;false;false;true;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<&num::wrapping::Wrapping<i32> as ops::arith::Mul<&num::wrapping::Wrapping<i32>>>::mul;false;false;false;false
<i32 as default::Default>::default;false;false;false;false
<(dyn any::Any + 'static)>::downcast_ref_unchecked;true;true;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::to_bits;false;true;true;false
num::<impl i64>::rem_euclid;false;false;false;false
num::int_sqrt::u8;false;false;false;false
<(EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(L, K, J, I, H, G, F, E, D, C, B, A)>>::extend;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i32> for core_simd::vector::Simd<i32, N>>::shl;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u32> for core_simd::vector::Simd<u32, N>>::shr;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i128> for isize>::try_from;false;false;false;false
num::<impl u8>::count_zeros;false;false;false;false
intrinsics::log2f64;true;false;true;false
sync::atomic::AtomicU32::fetch_nand;false;true;true;false
num::<impl u16>::checked_ilog10;false;false;false;false
fmt::builders::DebugMap::<'a, 'b>::finish_non_exhaustive;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_fmsubadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_epu32;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_epu32;true;true;true;false
<i64 as ops::bit::Shl<u32>>::shl;false;false;false;false
convert::num::<impl convert::From<bool> for i8>::from;false;false;false;false
<u8 as fmt::num::DisplayInt>::from_u8;false;false;false;false
<u16 as iter::range::Step>::forward;false;false;false;false
slice::index::range;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepu16_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_mulhi_epi16;true;true;false;false
core_arch::x86::avx512bf16::_mm256_dpbf16_ps;true;true;true;false
clone::impls::<impl clone::Clone for char>::clone;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f64, 2>> for core_arch::x86::__m128d>::from;false;false;true;false
<u128 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<&usize as ops::bit::Shl<&i8>>::shl;false;false;false;false
<num::dec2flt::common::BiasedFp as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicU16::get_mut_slice;false;true;true;false
core_arch::x86::avx512bw::_mm_mask_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_broadcastb_epi8;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
core_arch::x86::avx512dq::_mm512_range_pd;true;true;true;false
<&'a i128 as ops::bit::Shr<u128>>::shr;false;false;false;false
<str::iter::CharIndices<'a> as fmt::Debug>::fmt;false;false;true;false
<iter::sources::successors::Successors<T, F> as iter::traits::iterator::Iterator>::next;false;false;true;false
sync::atomic::AtomicI32::from_mut_slice;false;true;true;false
core_arch::x86::sse42::_mm_cmpistra;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_cvttpd_epi64;true;true;true;false
<i64 as ops::arith::Sub<&i64>>::sub;false;false;false;false
f64::<impl f64>::is_sign_positive;false;false;true;false
num::<impl u128>::checked_neg;false;false;false;false
slice::ascii::<impl [u8]>::escape_ascii;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::Sub>::sub;false;false;false;false
slice::ascii::<impl [u8]>::trim_ascii_start;false;false;false;true
<&'a i16 as ops::arith::Add<i16>>::add;false;false;false;false
num::overflow_panic::shl;false;false;false;false
num::<impl u16>::abs_diff;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
<u8 as ops::bit::Shr<&u64>>::shr;false;false;false;false
num::nonzero::NonZero::<u16>::isolate_most_significant_one;false;true;false;false
num::<impl i16>::checked_add_unsigned;false;false;false;false
iter::traits::collect::default_extend_tuple_c;false;false;true;true
<result::Result<T, E> as ops::try_trait::Try>::branch;false;false;true;false
core_arch::x86::avx512f::_mm512_permutex2var_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_andnot_epi32;true;true;false;false
core_arch::x86::avx512dq::_mm_cvtpd_epu64;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
num::<impl i16>::cast_unsigned;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f16>::partial_cmp;false;false;true;false
<slice::iter::Iter<'_, T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtps_epi32;true;true;true;false
<&u8 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<&i16 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_min_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_div_pd;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::is_finite;false;false;true;false
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u128>> for u128>::rem;false;false;false;false
core_arch::x86::sse2::_mm_set1_epi32;true;true;false;false
hash::Hasher::write_i32;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::SubAssign<&i128>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fnmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmple_epu64_mask;true;true;false;false
core_arch::x86::__m512h;false;false;true;false
<u32 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_min_epu64;true;true;false;false
<slice::iter::RChunks<'a, T> as fmt::Debug>::fmt;false;false;true;false
num::<impl u16>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_loadu_epi64;true;true;true;false
str::iter::Split::<'a, P>::remainder;false;false;true;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_sub_epi8;true;true;false;false
<fmt::Sign as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
iter::adapters::map_windows::Buffer::<T, N>::as_uninit_array_mut;false;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<usize, N>> for core_simd::vector::Simd<usize, N>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm_mask_move_sd;true;true;true;false
<u16 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
<u128 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
intrinsics::log2f128;true;false;true;false
<(dyn error::Error + marker::Send + 'static)>::downcast_mut;false;false;true;false
<&'a f32 as ops::arith::Div<f32>>::div;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_mov_epi16;true;true;false;false
<&i32 as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx2::_mm_sllv_epi64;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::MulAssign<&num::saturating::Saturating<u16>>>::mul_assign;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::Mul>::mul;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Sub>::sub;false;false;false;false
<u128 as ops::arith::MulAssign<&u128>>::mul_assign;false;false;true;false
<&i64 as ops::bit::Shr<&u64>>::shr;false;false;false;false
net::socket_addr::SocketAddrV6::set_ip;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_sqrt_round_pd;true;true;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;false;true;false
<cell::Cell<T> as convert::From<T>>::from;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::kl::_mm_encodekey256_u32;true;true;true;false
f32::<impl f32>::to_bits;false;false;true;false
<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&u64>>::bitxor_assign;false;false;true;false
<hash::sip::State as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_abs_epi8;true;true;false;false
<i128 as iter::range::Step>::backward_unchecked;true;true;false;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<usize, 4>>::from;false;false;false;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
net::ip_addr::IpAddr::is_documentation;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_add_round_pd;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_unpackhi_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtpd_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm_storeu_epi8;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign;false;false;true;false
net::parser::Parser::<'a>::read_port;false;false;true;false
num::<impl i16>::ilog;false;false;false;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::get;false;false;true;false
core_arch::x86::avx512f::_mm256_cvtsepi32_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_reduce_pd;true;true;true;false
num::flt2dec::strategy::grisu::format_exact;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_sllv_epi32;true;true;false;false
num::wrapping::Wrapping::<u64>::count_ones;false;false;false;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitOr>::bitor;false;false;false;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::saturating::Saturating::<i32>::from_le;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::fold;false;false;true;true
<i32 as ops::bit::Shl<i8>>::shl;false;false;false;false
<&'a u16 as ops::bit::BitOr<u16>>::bitor;false;false;false;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_next;false;true;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<&'a i32 as ops::bit::Shr<usize>>::shr;false;false;false;false
<u16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::nth;false;false;true;false
core_arch::x86_64::avx::_mm256_extract_epi64;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::Shl<usize>>::shl;false;false;false;false
<&num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_storeu_epi32;true;true;true;false
slice::<impl [T]>::first;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor;false;false;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::leading_ones;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<usize>>::rem_assign;false;false;true;false
num::flt2dec::strategy::grisu::max_pow10_no_more_than;false;false;false;false
net::ip_addr::Ipv6Addr::octets;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtepi32_epi64;true;true;false;false
<str::pattern::CharSearcher<'a> as str::pattern::Searcher<'a>>::next_match;false;true;true;true
core_arch::x86::avx512f::_mm256_maskz_permutex2var_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_reduce_sh;true;true;true;false
<ops::range::RangeInclusive<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;true;false
num::saturating::Saturating::<usize>::swap_bytes;false;false;false;false
<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_cvtsepi16_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtpd_ph;true;true;true;false
fmt::FormattingOptions::get_align;false;false;true;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<f32, N>>::mul;false;true;true;false
<marker::variance::PhantomInvariantLifetime<'a> as hash::Hash>::hash;false;false;true;false
<alloc::layout::Layout as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm256_reduce_min_epi16;true;true;false;false
<core_simd::vector::Simd<i16, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<i32>>::from;false;true;false;false
<core_simd::vector::Simd<isize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::saturating_sub;false;true;false;false
num::<impl i32>::strict_shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epu64;true;true;true;false
hash::impls::<impl hash::Hash for u8>::hash_slice;false;true;true;false
num::from_ascii_radix_panic::do_panic::compiletime;false;false;false;false
slice::<impl [T]>::contains;false;false;false;false
core_arch::x86::avx512f::_mm256_ternarylogic_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_srlv_epi16;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::Div<&num::saturating::Saturating<i16>>>::div;false;false;false;false
<f128 as convert::num::FloatToInt<i16>>::to_int_unchecked;true;true;true;false
<isize as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
tuple::<impl cmp::PartialOrd for (B, A, Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
core_arch::simd::f32x16::splat;false;true;true;false
core_arch::x86::avx512dq::_mm512_extractf64x2_pd;true;true;true;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
convert::num::<impl convert::TryFrom<i128> for u64>::try_from;false;false;false;false
ptr::mut_ptr::<impl *mut T>::with_addr;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Div>::div;false;false;false;false
intrinsics::atomic_cxchgweak_seqcst_seqcst;true;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi8;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i8, 64>> for core_arch::x86::__m512i>::from;false;false;false;false
<u16 as ops::bit::Shr>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
<num::niche_types::U64NotAllOnes as cmp::Ord>::cmp;false;false;false;false
<ops::control_flow::ControlFlow<B, C> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_abs_epi64;true;true;false;false
num::<impl u32>::div_floor;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sqrt_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_fnmadd_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepu16_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_shuffle_i64x2;true;true;false;false
num::<impl i128>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpnle_ps_mask;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_mulhrs_epi16;true;true;false;false
iter::traits::iterator::Iterator::is_sorted;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_max_ss;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cvtsepi16_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fmsub_round_ph;true;true;true;false
<ptr::non_null::NonNull<T> as cmp::Ord>::cmp;false;false;true;false
<usize as ops::bit::Shl<u64>>::shl;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<f32, N>>::product;false;false;false;true
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<i16, N>>::sum;false;false;false;true
core_arch::x86::avx512bf16::_mm512_cvtpbh_ps;true;true;false;false
option::Option::<T>::take;false;false;true;false
<fmt::Formatter<'_> as fmt::Write>::write_char;false;false;true;false
slice::<impl [T]>::rchunks_exact_mut;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::arith::AddAssign>::add_assign;false;false;true;false
ops::control_flow::ControlFlow::<B, C>::is_break;false;false;true;false
<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::rejecting;false;false;false;false
<u32 as random::Random>::random;false;false;true;false
core_arch::x86::sse2::_mm_cmpnge_pd;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&u64> for core_simd::vector::Simd<u64, N>>::shr;false;false;false;false
core_arch::x86::gfni::_mm256_mask_gf2p8mul_epi8;true;true;false;false
convert::num::<impl convert::TryFrom<i16> for i8>::try_from;false;false;false;false
core_arch::x86_64::bmi2::_pext_u64;true;true;false;false
num::niche_types::U64NotAllOnes::new_unchecked;true;false;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::__m256i::as_i32x8;false;false;false;false
num::<impl u64>::strict_shl;false;false;false;false
<num::diy_float::Fp as fmt::Debug>::fmt;false;false;true;false
num::niche_types::NonZeroI8Inner::new_unchecked;true;false;false;false
core_arch::x86::__m128bh::splat;false;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i32, 4>>::from;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_srlv_epi16;true;true;false;false
<u8 as fmt::num::DisplayInt>::to_u128;false;false;false;false
<isize as iter::traits::accum::Product<&'a isize>>::product;false;false;false;true
core_arch::simd::u32x32::splat::JustOne;false;false;false;false
num::<impl usize>::overflowing_neg;false;false;false;false
num::<impl isize>::overflowing_abs;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::advance_by;false;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtph_epi64;true;true;true;false
convert::num::<impl convert::TryFrom<i128> for u32>::try_from;false;false;false;false
<ascii::ascii_char::AsciiChar as fmt::Debug>::fmt::backslash;false;false;false;false
<iter::adapters::map::Map<I, F> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
iter::traits::collect::Extend::extend_reserve;false;false;true;false
<future::pending::Pending<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::xsave::_xsavec;true;true;true;false
core_arch::x86::avx512f::_mm_cmp_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sub_pd;true;true;true;false
<num::wrapping::Wrapping<isize> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<&i32 as ops::arith::Div<&i32>>::div;false;false;false;false
<core_arch::simd::u8x16 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_cmpeq_epi8_mask;true;true;false;false
intrinsics::atomic_cxchg_acqrel_acquire;true;false;true;false
ptr::const_ptr::<impl *const [T]>::get_unchecked;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_shldi_epi64;true;true;false;false
cell::RefCell::<T>::swap;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtusepi64_epi8;true;true;false;false
marker::variance::PhantomContravariant::<T>::new;false;false;false;false
sync::atomic::AtomicPtr::<T>::from_mut;false;true;true;false
core_arch::x86::avx::_mm256_add_pd;true;true;true;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::get;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 32>> for core_arch::x86::__m512i>::from;false;false;false;false
core_arch::simd::f32x16;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::SubAssign<&i8>>::sub_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_fmadd_pch;true;true;true;false
alloc::Allocator::by_ref;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdi_epi32;true;true;false;false
intrinsics::atomic_fence_acquire;true;false;false;false
<fmt::rt::Count as clone::Clone>::clone;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add;false;false;false;false
intrinsics::mir::CopyForDeref;false;false;false;false
<asserting::Capture<E, asserting::TryCaptureWithDebug> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXorAssign<i32>>::bitxor_assign;false;false;true;false
<cell::lazy::LazyCell<T, F> as ops::deref::Deref>::deref;false;false;true;false
iter::traits::iterator::Iterator::rposition::check;false;false;false;false
num::niche_types::NonZeroI32Inner::new;false;false;false;false
option::Option::<T>::unwrap_or_default;false;false;true;false
<core_arch::simd::u32x2 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx2::_mm256_sign_epi8;true;true;false;false
num::<impl u8>::is_utf8_char_boundary;false;false;false;false
<num::niche_types::U32NotAllOnes as cmp::PartialEq>::eq;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for usize>::le;false;false;false;false
core_arch::simd::f32x16::from_array;false;false;true;false
<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&num::saturating::Saturating<i128>>>::bitxor_assign;false;false;true;false
num::<impl i64>::unbounded_shr;false;true;false;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_nth_back;false;true;true;false
core_arch::x86::avx::_mm256_div_ps;true;true;true;false
core_arch::x86::bmi2::_mulx_u32;true;false;true;false
num::<impl u32>::is_power_of_two;false;false;false;false
<iter::adapters::map_while::MapWhile<I, P> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
intrinsics::simd::simd_xor;true;false;false;false
intrinsics::ctlz_nonzero;true;false;false;false
str::count::do_count_chars;false;true;false;true
<slice::sort::unstable::quicksort::GapGuardRaw<T> as ops::drop::Drop>::drop;false;true;true;false
core_arch::x86::avx512f::_mm512_mask3_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_knot;true;false;false;false
core_arch::x86::avx512f::_mm_cvtt_roundsd_i32;true;true;true;false
core_arch::x86::avx512bw::_mm256_loadu_epi8;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_castph256_ph512;true;true;true;false
core_arch::x86::avx512fp16::_mm256_add_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mul_round_sch;true;true;true;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
tuple::<impl default::Default for (V, U, T)>::default;false;false;false;false
<i128 as ops::bit::Shl>::shl;false;false;false;false
sync::atomic::AtomicPtr::<T>::fetch_ptr_sub;false;false;true;false
<u16 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::sse41::_mm_floor_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_storeu_ps;true;true;true;false
num::niche_types::NonZeroU8Inner;true;false;false;false
<i64 as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_permutevar_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_reduce_mul_ph;true;true;true;false
ptr::non_null::NonNull::<T>::write_unaligned;true;true;true;false
error::Error::source;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_blend_epi16;true;true;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi16_mask;true;true;false;false
<&'a num::wrapping::Wrapping<u128> as ops::arith::Add<num::wrapping::Wrapping<u128>>>::add;false;false;false;false
num::<impl u8>::strict_add_signed;false;false;false;false
<(dyn error::Error + marker::Send + marker::Sync + 'static)>::is;false;false;false;false
num::<impl i16>::to_le_bytes;false;false;false;false
<char::CaseMappingIter as fmt::Display>::fmt;false;false;true;true
range::RangeInclusive::<Idx>::contains;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi64_epi16;true;true;false;false
<core_arch::simd::f64x4 as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_blend_epi8;true;true;false;false
sync::atomic::AtomicU16::fetch_or;false;true;true;false
sync::atomic::AtomicU32::fetch_update;false;false;true;true
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i8> for usize>::try_from;false;false;false;false
fmt::num::<impl fmt::UpperHex for u64>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmple_epu8_mask;true;true;false;false
<num::saturating::Saturating<u32> as ops::arith::AddAssign<&u32>>::add_assign;false;false;true;false
num::<impl i128>::unchecked_sub::precondition_check;false;false;false;false
<num::bignum::tests::Big8x3 as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_broadcast_f32x2;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_set1_epi8;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u32>::try_from;false;false;false;false
core_arch::x86::sse::_mm_store_ps;true;true;true;false
str::<impl str>::is_char_boundary;false;false;false;false
num::<impl u16>::cast_signed;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cmul_round_pch;true;true;true;false
num::<impl u8>::wrapping_sub;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtsepi64_epi16;true;true;false;false
ptr::const_ptr::<impl *const T>::align_offset;false;true;true;false
<&'a i32 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_shuffle_ps;true;true;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::wrapping_offset;false;true;true;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::RangeInclusive<A>>::next_back;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::saturating_add;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_loadu_epi32;true;true;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
task::wake::Context::<'a>::ext;false;false;true;false
time::Duration::saturating_sub;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_epu64;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvti64_sh;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldv_epi64;true;true;false;false
<sync::atomic::AtomicUsize as convert::From<usize>>::from;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::trailing_ones;false;false;false;false
num::nonzero::NonZero::<i64>::isolate_least_significant_one;false;true;false;false
num::wrapping::Wrapping::<u32>::swap_bytes;false;false;false;false
str::iter::Chars::<'a>::as_str;false;true;true;false
core_arch::x86::avx::_mm256_broadcast_ss;true;true;true;false
intrinsics::simd::simd_select;true;false;false;false
<slice::iter::ChunksExact<'_, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
num::<impl u128>::next_power_of_two;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
str::<impl str>::split_at_mut;false;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_loadu_epi8;true;true;true;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
<usize as ops::arith::Div<&usize>>::div;false;false;false;false
<i128 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::count_zeros;false;false;false;false
num::wrapping::Wrapping::<i16>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi16_epi64;true;true;false;false
<marker::variance::PhantomCovariantLifetime<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_cmplt_epu64_mask;true;true;false;false
core_arch::x86::__m256h;false;false;true;false
hash::impls::<impl hash::Hash for i8>::hash_slice;false;true;true;false
ub_checks::check_language_ub::compiletime;false;false;false;false
<u16 as ops::bit::Shl>::shl;false;false;false;false
<panic::location::Location<'a> as cmp::Ord>::cmp;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_round_sh;true;true;true;false
<&T as fmt::Pointer>::fmt;false;false;true;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get;false;false;true;false
slice::<impl [T]>::as_chunks_unchecked;true;true;false;false
array::iter_next_chunk_erased;false;true;true;true
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::nth;false;true;true;true
<&i64 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<num::saturating::Saturating<i8> as ops::arith::AddAssign<&i8>>::add_assign;false;false;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<u32, N>>::shr;false;true;false;false
<num::flt2dec::Sign as cmp::PartialEq>::eq;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<future::ready::Ready<T> as clone::Clone>::clone;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Sub<&num::wrapping::Wrapping<u32>>>::sub;false;false;false;false
<num::wrapping::Wrapping<i16> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<i16>>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_fmaddsub_round_ps;true;true;true;false
<i128 as ops::bit::BitOr<&i128>>::bitor;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::AddAssign<&u16>>::add_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::Mul>::mul;false;false;false;false
cmp::impls::<impl cmp::Ord for i32>::cmp;false;false;false;false
<core_arch::x86::__m128h::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_unpackhi_epi32;true;true;false;false
core_arch::x86::avx::_mm256_insert_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm512_cvt_roundepi64_pd;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_fmadd_pch;true;true;true;false
intrinsics::log10f128;true;false;true;false
core_arch::x86::avx512f::_mm512_cvtt_roundpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm_permutex2var_epi64;true;true;false;false
<f32 as convert::num::FloatToInt<i8>>::to_int_unchecked;true;true;true;false
num::wrapping::Wrapping::<u16>::next_power_of_two;false;false;false;false
<&i64 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<ptr::non_null::NonNull<T> as cmp::PartialEq>::eq;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::last;false;false;true;true
<isize as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<f128 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::simd::f16x4::from_array;false;false;true;false
<isize as ops::bit::Shr<i16>>::shr;false;false;false;false
net::ip_addr::Ipv6Addr::is_documentation;false;false;false;false
core_arch::x86::avx512dq::_mm256_cvtps_epu64;true;true;true;false
<&num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div;false;false;false;false
core_arch::x86::avx512vbmi::_mm256_permutex2var_epi8;true;true;false;false
<u32 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<u64>::from_be;false;false;false;false
core_arch::x86::avx512bw::_mm512_min_epu8;true;true;false;false
core_arch::x86::avx512dq::_mm256_mask_andnot_pd;true;true;true;false
<i16 as ops::bit::Shr<i64>>::shr;false;false;false;false
<num::error::IntErrorKind as clone::Clone>::clone;false;false;false;false
<num::wrapping::Wrapping<T> as fmt::Debug>::fmt;false;false;true;false
<cell::RefCell<T> as default::Default>::default;false;false;false;false
<str::iter::SplitWhitespace<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtepu16_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_min_epu8;true;true;false;false
core_arch::x86::avx512fp16::_mm_div_round_sh;true;true;true;false
num::<impl i128>::saturating_sub_unsigned;false;false;false;false
<&'a f64 as ops::arith::Sub<f64>>::sub;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fnmadd_ps;true;true;true;false
num::wrapping::Wrapping::<u128>::trailing_zeros;false;false;false;false
<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_unchecked;true;true;false;false
<str::iter::Bytes<'_> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
core_arch::x86::avx2::_mm256_broadcastsi128_si256;true;true;false;false
<num::wrapping::Wrapping<u64> as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::wrapping::Wrapping::<usize>::rotate_left;false;false;false;false
tuple::<impl cmp::Ord for (C, B, A, Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
num::fmt::Formatted::<'a>::len;false;false;false;true
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<num::saturating::Saturating<u64> as ops::arith::AddAssign<&u64>>::add_assign;false;false;true;false
<str::iter::SplitNInternal<'a, P> as clone::Clone>::clone;false;false;true;false
<u16 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<&'a u64 as ops::bit::Shl<isize>>::shl;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign;false;false;true;false
<str::CharEscapeUnicode as ops::function::Fn<(char,)>>::call;false;false;false;false
<time::Duration as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_shuffle_i64x2;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpneq_epu8_mask;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i32, 4>> for core_arch::x86::__m128i>::from;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::signum;false;false;false;false
ptr::slice_from_raw_parts_mut;false;false;true;false
<&'a usize as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvtepi64_ps;true;true;true;false
num::<impl usize>::wrapping_next_power_of_two;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_dbsad_epu8;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundps_epi64;true;true;true;false
core_simd::masks::mask_impl::Mask::<T, N>::splat;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u16> for &'lhs core_simd::vector::Simd<u16, N>>::shl;false;false;false;false
<num::niche_types::I32NotAllOnes as cmp::PartialOrd>::partial_cmp;false;false;false;false
<iter::adapters::map_while::MapWhile<I, P> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvttps_epu32;true;true;true;false
num::<impl i16>::widening_mul;false;false;false;false
<f32 as iter::traits::accum::Product<&'a f32>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_cmpneq_epu32_mask;true;true;false;false
intrinsics::ceilf64;true;false;true;false
<&'a u16 as ops::bit::Shr<i64>>::shr;false;false;false;false
result::Result::<T, E>::or_else;false;false;true;false
slice::iter::IterMut::<'a, T>::as_mut_slice;false;true;true;false
num::<impl u128>::unchecked_shl;true;false;false;false
intrinsics::catch_unwind;true;false;true;false
<i64 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<f64 as num::flt2dec::decoder::DecodableFloat>::min_pos_norm_value;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Add>::add;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
core_arch::x86::sse2::_mm_min_epu8;true;true;false;false
<array::iter::IntoIter<T, N> as clone::Clone>::clone;false;false;true;true
num::<impl i64>::ilog;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_add_round_ps;true;true;true;false
sync::atomic::AtomicI32::store;false;true;true;false
future::async_drop::chain;false;false;false;false
core_arch::x86::avx512f::_mm256_cmpge_epi32_mask;true;true;false;false
cell::lazy::LazyCell::<T, F>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_add_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_adds_epu8;true;true;false;false
core_arch::x86::avx512f::_mm512_and_epi64;true;true;false;false
intrinsics::atomic_min_relaxed;true;false;true;false
core_arch::x86::gfni::_mm512_maskz_gf2p8affine_epi64_epi8;true;true;false;false
convert::num::<impl convert::From<bool> for f32>::from;false;false;false;false
result::unwrap_failed;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_rcp_sh;true;true;true;false
<ascii::EscapeDefault as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOr<&num::wrapping::Wrapping<u32>>>::bitor;false;false;false;false
num::<impl u64>::ilog;false;false;false;false
<(W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
<usize as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<core_arch::simd::f16x4::splat::JustOne as clone::Clone>::clone;false;false;true;false
<u8 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
<array::iter::IntoIter<T, N> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_simd::masks::Mask::<T, N>::from_array;false;true;false;false
num::<impl u128>::unchecked_shl::precondition_check;false;false;false;false
num::<impl i32>::unchecked_shr::precondition_check;false;false;false;false
<u128 as ops::bit::Shl<i32>>::shl;false;false;false;false
num::<impl i8>::overflowing_rem;false;false;false;false
intrinsics::copysignf128;true;false;true;false
num::<impl usize>::rotate_right;false;false;false;false
iter::traits::iterator::Iterator::map;false;false;false;false
<str::iter::SplitAsciiWhitespace<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepu32_ph;true;true;true;false
fmt::builders::DebugTuple::<'a, 'b>::finish_non_exhaustive;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u16>>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_srlv_epi64;true;true;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<u32, N>>::mul;false;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::DivAssign<&i64>>::div_assign;false;false;true;false
<ffi::c_str::FromBytesWithNulError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_simd::vector::Simd<f64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<str::iter::SplitWhitespace<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
hash::impls::<impl hash::Hash for u128>::hash_slice;false;true;true;false
<&f64 as ops::arith::Add<&f64>>::add;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_extracti32x4_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_roundscale_ss;true;true;true;false
<&net::ip_addr::Ipv6Addr as ops::bit::BitAnd<net::ip_addr::Ipv6Addr>>::bitand;false;false;false;false
fmt::builders::DebugSet::<'a, 'b>::entries;false;false;true;true
<&u128 as ops::bit::Shl<&i16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_min_epi64;true;true;false;false
<num::saturating::Saturating<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign;false;false;true;false
num::nonzero::NonZero::<u8>::checked_add;false;true;false;false
<&num::saturating::Saturating<isize> as ops::arith::Neg>::neg;false;false;false;false
num::<impl usize>::saturating_pow;false;false;false;false
num::<impl i32>::ilog;false;false;false;false
core_arch::x86::avx512fp16::_mm_comineq_sh;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cvtsepi16_storeu_epi8;true;true;true;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
<&'a num::wrapping::Wrapping<u32> as ops::arith::Add<num::wrapping::Wrapping<u32>>>::add;false;false;false;false
<sync::atomic::AtomicI16 as default::Default>::default;false;false;false;false
num::bignum::Big32x40::bit_length;false;false;true;true
core_arch::x86::avx512f::_mm512_loadu_epi32;true;true;true;false
slice::<impl [T]>::as_array;false;true;false;false
<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldi_epi16;true;true;false;false
num::<impl isize>::wrapping_mul;false;false;false;false
core_arch::x86::avx512f::_mm512_set_epi32;true;true;false;false
<slice::iter::ArrayWindows<'a, T, N> as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i16x32::new;false;false;false;false
core_arch::x86::avx512dq::_mm_broadcast_i32x2;true;true;false;false
num::<impl i8>::to_le;false;false;false;false
<slice::ascii::EscapeAscii<'a> as iter::traits::iterator::Iterator>::last;false;false;true;false
str::<impl str>::rsplit_once;false;true;false;false
core_arch::x86::avx512bw::_mm512_cvtusepi16_epi8;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Div<&num::wrapping::Wrapping<i8>>>::div;false;false;false;false
<hash::sip::Hasher<S> as hash::Hasher>::write_str;false;false;true;false
core_arch::x86::avx512f::_mm256_getmant_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_broadcast_f32x4;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::Div<&num::saturating::Saturating<i32>>>::div;false;false;false;false
num::<impl i32>::midpoint;false;false;false;false
convert::num::<impl convert::TryFrom<isize> for usize>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_cvt_roundpd_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_mulhrs_epi16;true;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::trailing_zeros;false;true;false;false
<&num::saturating::Saturating<i64> as ops::arith::Neg>::neg;false;false;false;false
<! as fmt::Display>::fmt;false;false;true;false
<&num::saturating::Saturating<i16> as ops::bit::BitXor<&num::saturating::Saturating<i16>>>::bitxor;false;false;false;false
<&'a i128 as ops::arith::Add<i128>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_sra_epi32;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeFrom<usize>>::index_mut;false;true;true;false
core_arch::x86::avx::_mm256_extractf128_si256;true;true;false;false
num::bignum::Big32x40::from_small;false;false;false;false
num::nonzero::NonZero::<usize>::from_be;false;true;false;false
num::wrapping::Wrapping::<u128>::count_ones;false;false;false;false
<isize as ops::bit::Shl<u128>>::shl;false;false;false;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_permutex2var_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_set1_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_test_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fmsub_ph;true;true;true;false
num::<impl u128>::ilog;false;false;false;false
intrinsics::ptr_offset_from_unsigned;true;false;true;false
array::drain::Drain;false;false;true;false
num::wrapping::Wrapping::<i8>::count_zeros;false;false;false;false
<alloc::layout::Layout as clone::Clone>::clone;false;false;false;false
<array::drain::Drain<'_, T> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512bf16::_mm512_maskz_cvtneps_pbh;true;true;true;false
num::<impl i64>::from_be;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&u32>>::div_assign;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitOr<&num::saturating::Saturating<isize>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm512_set_epi8;true;false;false;false
str::lossy::<impl [u8]>::utf8_chunks;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_adds_epi8;true;true;false;false
num::<impl u64>::wrapping_shr;false;true;false;false
<&num::saturating::Saturating<isize> as ops::arith::Mul<&num::saturating::Saturating<isize>>>::mul;false;false;false;false
<&num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepu8_epi64;true;true;false;false
core_arch::x86::avx::_mm256_movemask_pd;true;true;true;false
core_arch::simd::f32x2::new;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_unpackhi_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_storeu_epi8;true;true;true;false
<i16 as iter::range::Step>::backward;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundepu64_ps;true;true;true;false
num::<impl isize>::saturating_div;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_sra_epi32;true;true;false;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<i128 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_scalef_pd;true;true;true;false
<str::lossy::Utf8Chunk<'a> as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512dq::_kadd_mask8;true;false;false;false
<&i128 as ops::bit::Shr<&u128>>::shr;false;false;false;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<f64 as ops::arith::AddAssign<&f64>>::add_assign;false;false;true;false
<i64 as ops::arith::AddAssign<&i64>>::add_assign;false;false;true;false
<&'a num::wrapping::Wrapping<u32> as ops::bit::BitOr<num::wrapping::Wrapping<u32>>>::bitor;false;false;false;false
num::<impl i16>::abs;false;false;false;false
ptr::<impl fmt::Pointer for F>::fmt;false;false;true;false
slice::index::slice_end_index_len_fail::do_panic;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
iter::traits::iterator::Iterator::cmp_by::compare;false;false;false;false
slice::sort::unstable::quicksort::inst_partition;false;false;false;false
core_arch::x86::avx512f::_mm256_i32scatter_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_set1_epi32;true;true;false;false
cmp::impls::<impl cmp::PartialEq for i64>::ne;false;false;false;false
<iter::sources::from_coroutine::FromCoroutine<G> as clone::Clone>::clone;false;false;true;false
slice::<impl [T]>::chunk_by_mut;false;false;true;false
core_arch::x86::avx::_mm256_castps256_ps128;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_extractf32x4_ps;true;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitAnd<&num::saturating::Saturating<i32>>>::bitand;false;false;false;false
<&'a u32 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpge_epi16_mask;true;true;false;false
f16::<impl f16>::from_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_scalef_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtepi64_ph;true;true;false;false
<i64 as ops::arith::Mul<&i64>>::mul;false;false;false;false
fmt::rt::Placeholder::new;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::Shr<usize>>::shr;false;false;false;false
ptr::non_null::NonNull::<T>::as_ref;true;true;true;false
<&'a u32 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_mul_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_unpackhi_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtsh_ss;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<u64, N>> for core_simd::vector::Simd<u64, N>>::sum;false;false;false;true
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_slli_epi16;true;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i16>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_sllv_epi32;true;true;false;false
ptr::<impl fmt::Debug for F>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_set1_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_unpackhi_pd;true;true;true;false
<&bool as ops::bit::Not>::not;false;false;false;false
core_arch::x86::avx2::_mm256_movemask_epi8;true;true;false;false
char::methods::<impl char>::is_control;false;false;false;false
core_arch::x86::avx512fp16::_mm_reduce_max_ph;true;true;true;false
<result::Result<T, F> as ops::try_trait::FromResidual<result::Result<convert::Infallible, E>>>::from_residual;false;false;true;false
num::wrapping::Wrapping::<i64>::rotate_right;false;false;false;false
cell::Ref::<'b, T>::leak;false;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitAndAssign<i64>>::bitand_assign;false;false;true;false
<&'a mut result::Result<T, E> as iter::traits::collect::IntoIterator>::into_iter;false;false;true;false
<str::IsWhitespace as ops::function::Fn<(char,)>>::call;false;false;false;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::next;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::bit::BitAnd<&num::wrapping::Wrapping<i32>>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm512_cmp_epi32_mask;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
slice::sort::unstable::quicksort::quicksort;false;true;true;true
num::bignum::tests::Big8x3::add;false;false;true;true
str::iter::Lines::<'a>::remainder;false;false;true;false
intrinsics::mir::Move;false;false;false;false
num::<impl i16>::min_value;false;false;false;false
<[T] as convert::AsRef<[T]>>::as_ref;false;false;false;false
cell::lazy::LazyCell::<T, F>::really_init;true;true;true;false
<range::RangeFrom<Idx> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_fmadd_ss;true;true;true;false
core_arch::x86::avx512vnni::_mm512_dpbusd_epi32;true;true;false;false
core_arch::x86_64::bmi::_tzcnt_u64;true;false;false;false
core_arch::x86::avx512f::_mm_mask_xor_epi32;true;true;false;false
intrinsics::exp2f32;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpord_pd_mask;true;true;true;false
<&num::wrapping::Wrapping<i8> as ops::arith::Neg>::neg;false;false;false;false
<marker::PhantomData<T> as default::Default>::default;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fmsubadd_ph;true;true;true;false
cmp::impls::<impl cmp::PartialEq for u64>::eq;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmpeq_epi8_mask;true;true;false;false
str::count::contains_non_continuation_byte;false;false;false;false
<u32 as fmt::num::DisplayInt>::to_u128;false;false;false;false
num::<impl i32>::saturating_sub;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub;false;false;false;false
<async_iter::from_iter::FromIter<I> as async_iter::async_iter::AsyncIterator>::size_hint;false;false;true;false
<str::iter::SplitAsciiWhitespace<'a> as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<isize>::wrapping_abs;false;true;false;false
<core_arch::simd::u8x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_pd;true;true;true;false
<range::RangeInclusive<T> as convert::From<ops::range::RangeInclusive<T>>>::from;false;false;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<f32, N>>::rem;false;true;true;false
<i64 as ops::bit::Shr<&i64>>::shr;false;false;false;false
fmt::builders::DebugTuple::<'a, 'b>::field;false;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<&u128>>::bitor_assign;false;false;true;false
<num::saturating::Saturating<u32> as ops::arith::Rem>::rem;false;false;false;false
num::<impl u32>::rotate_left;false;false;false;false
<option::Item<A> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::trailing_zeros;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_cmpneq_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_kortest_mask64_u8;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
core_arch::x86::avx512f::_mm512_cvttps_epi32;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmpneq_epi32_mask;true;true;false;false
<num::nonzero::NonZero<T> as cmp::PartialEq>::eq;false;false;true;false
iter::adapters::copied::Copied::<I>::new;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<i8>>::bitand_assign;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<i64> for isize>::try_from;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<&num::wrapping::Wrapping<i16>>>::div_assign;false;false;true;false
<ptr::alignment::Alignment as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_div_ps;true;true;true;false
io::borrowed_buf::BorrowedCursor::<'a>::advance;false;false;true;false
<&'a i32 as ops::bit::Shr<u8>>::shr;false;false;false;false
"tuple::<impl convert::From<(T, T, T, T, T, T)> for [T; 6]>::from";false;false;true;false
core_arch::simd::f16x8::splat;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_srli_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_fmsubadd_ph;true;true;true;false
str::iter::SplitN;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmpneq_epi64_mask;true;true;false;false
num::<impl i16>::wrapping_neg;false;false;false;false
<&'a num::saturating::Saturating<u16> as ops::bit::BitXor<num::saturating::Saturating<u16>>>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm256_cvtepi16_epi8;true;true;false;false
<char::TryFromCharError as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_sum;false;true;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&num::saturating::Saturating<i128>>>::bitand_assign;false;false;true;false
fmt::num::imp::<impl usize>::_fmt;false;true;true;true
core_arch::x86::avx512dq::_mm256_broadcast_f32x2;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi64;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<iter::sources::once_with::OnceWith<F> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_rol_epi64;true;true;false;false
num::nonzero::NonZero::<u16>::checked_pow;false;true;false;false
<num::dec2flt::ParseFloatError as cmp::PartialEq>::eq;false;false;false;false
<u16 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<cell::RefMut<'_, T> as ops::deref::DerefMut>::deref_mut;false;true;true;false
core_arch::x86::avx512bw::_mm256_mask_packs_epi16;true;true;false;false
num::<impl u32>::unchecked_disjoint_bitor::precondition_check;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epi32;true;true;true;false
<future::async_drop::Noop as future::future::Future>::poll;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&usize> for core_simd::vector::Simd<usize, N>>::shl;false;false;false;false
core_arch::x86_64::tbm::_tzmsk_u64;true;false;false;false
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<i16 as ops::bit::Shr<usize>>::shr;false;false;false;false
num::<impl u16>::overflowing_add;false;false;false;false
ptr::alignment::Alignment;false;false;false;false
convert::num::<impl convert::From<i32> for i64>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_or_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_div_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_srlv_epi32;true;true;false;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::get;false;false;true;false
net::parser::Parser::<'a>::read_atomically;false;false;true;false
core_arch::simd::i8x64::new;false;false;false;false
num::saturating::Saturating::<i8>::rotate_left;false;false;false;false
intrinsics::simd::simd_scatter;true;false;false;false
core_arch::x86::avx512fp16::_mm_mask_rsqrt_ph;true;true;true;false
<num::saturating::Saturating<isize> as ops::bit::BitOrAssign<&num::saturating::Saturating<isize>>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div;false;false;false;false
<i32 as ops::arith::Rem>::rem;false;false;false;false
<&mut H as hash::Hasher>::write_i64;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_getexp_round_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmpeq_epu16_mask;true;true;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::interleave::interleave;false;false;false;true
<&num::wrapping::Wrapping<isize> as ops::bit::Shr<&usize>>::shr;false;false;false;false
num::<impl i128>::strict_shr;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
<&'a num::saturating::Saturating<u8> as ops::arith::Mul<num::saturating::Saturating<u8>>>::mul;false;false;false;false
<&num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem;false;false;false;false
<T as iter::adapters::flatten::ConstSizeIntoIterator>::size;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_srai_epi32;true;true;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::fold;false;true;true;true
<i128 as ops::bit::ShrAssign<u64>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_permutexvar_ph;true;true;true;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpnlt_pd_mask;true;true;true;false
core_simd::vector::Simd::<T, N>::scatter_select_unchecked;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 64>> for core_arch::x86::__m512i>::from;false;false;false;false
<i128 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
<&'a u32 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_min_ps;true;true;true;false
<num::saturating::Saturating<usize> as ops::arith::RemAssign<usize>>::rem_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_xor_pd;true;true;true;false
f64::<impl f64>::is_positive;false;false;true;false
core_arch::x86::sse3::_mm_addsub_pd;true;true;true;false
core_arch::x86::avx::_mm256_sqrt_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmpge_epi8_mask;true;true;false;false
core_arch::x86::sha::_mm_sha1msg2_epu32;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvt_roundsh_u64;true;true;true;false
num::<impl i32>::checked_shr;false;true;false;false
<i64 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_cmpgt_epi32;true;true;false;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::MulAssign<&num::wrapping::Wrapping<i8>>>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_castph_ps;true;false;true;false
<iter::sources::once_with::OnceWith<F> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::<impl usize>::overflowing_add;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvtph_epu32;true;true;true;false
hash::impls::<impl hash::Hash for (T, B, C)>::hash;false;false;true;false
<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt;false;true;true;true
fmt::num::<impl fmt::Binary for u32>::fmt;false;false;true;false
<&i16 as ops::bit::BitOr<&i16>>::bitor;false;false;false;false
<usize as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
num::nonzero::NonZero::<i8>::overflowing_neg;false;true;false;false
<&'a num::saturating::Saturating<i16> as ops::arith::Add<num::saturating::Saturating<i16>>>::add;false;false;false;false
intrinsics::mir::__internal_make_place;false;false;false;false
core_arch::x86::__m512i::as_array;false;true;false;false
core_arch::x86::avx2::_mm_broadcastq_epi64;true;true;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
num::<impl usize>::checked_add_signed;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_slli_epi32;true;true;false;false
num::<impl i8>::unchecked_shr;true;false;false;false
<i8 as ops::arith::Div>::div;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
array::from_trusted_iterator;false;false;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::iterator::Iterator>::count;false;false;true;false
num::<impl isize>::strict_rem;false;false;false;false
num::<impl u64>::from_be_bytes;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::count;false;true;true;false
<i128 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::xsave::_xsetbv;true;true;false;false
<(Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<i128> as ops::bit::BitXorAssign<&i128>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_reduce_and_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_cmpge_epu8_mask;true;true;false;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
ptr::alignment::Alignment::as_usize;false;false;false;false
num::<impl u8>::to_le_bytes;false;false;false;false
num::saturating::Saturating::<i128>::count_zeros;false;false;false;false
num::<impl str::traits::FromStr for i32>::from_str;false;false;false;false
<(E, D, C, B, A) as iter::traits::collect::FromIterator<(EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
core_arch::x86::avx2::_mm256_mulhi_epi16;true;true;false;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_simd::vector::Simd::<T, N>::load_select_unchecked;true;true;true;false
<f32 as ops::arith::Sub>::sub;false;false;true;false
<&i8 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_max_epu64;true;true;false;false
option::Option::<T>::unwrap_or_else;false;false;true;false
panicking::panic_const::panic_const_shl_overflow;false;false;false;false
slice::<impl [T]>::split_at_mut_unchecked;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::Sub>::sub;false;false;false;false
<ops::range::RangeFrom<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
core_arch::x86::avx2::_mm256_cvtepu16_epi64;true;true;false;false
num::<impl i32>::to_le_bytes;false;false;false;false
<&'a i16 as ops::bit::Shr<i64>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_cmpgt_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_packs_epi32;true;true;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_avg_epu8;true;true;false;false
<result::Result<T, E> as ops::try_trait::Try>::from_output;false;false;true;false
num::<impl i16>::overflowing_pow;false;false;false;true
core_arch::x86::avxneconvert::_mm_cvtneobf16_ps;true;true;true;false
<&'a isize as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_fcmul_round_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm256_cvtepi64_ph;true;true;false;false
core_simd::masks::<impl ops::bit::BitOr<core_simd::masks::Mask<T, N>> for bool>::bitor;false;false;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
"array::<impl convert::AsRef<[T]> for [T; N]>::as_ref";false;false;false;false
<iter::adapters::cycle::Cycle<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<i32 as ops::arith::AddAssign<&i32>>::add_assign;false;false;true;false
<u32 as ops::arith::Sub<&u32>>::sub;false;false;false;false
slice::<impl [T]>::swap_unchecked;true;true;true;false
num::nonzero::<impl ops::arith::DivAssign<num::nonzero::NonZero<u32>> for u32>::div_assign;false;false;true;false
core_arch::x86::avx512vnni::_mm_dpbusds_avx_epi32;true;true;false;false
ascii::ascii_char::AsciiChar::digit;false;true;false;false
core_arch::x86::sse::_mm_unpacklo_ps;true;true;true;false
num::<impl isize>::carrying_mul;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&i128>>::add_assign;false;false;true;false
<i16 as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::__m128bh::as_i16x8;false;false;false;false
<num::saturating::Saturating<i32> as ops::bit::BitAndAssign<&i32>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_testn_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm_mask_fnmsub_round_ss;true;true;true;false
core_arch::x86::vaes::_mm256_aesdec_epi128;true;true;false;false
<slice::iter::GenericSplitN<I> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
num::saturating::Saturating::<i64>::swap_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_shuffle_ps;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for f16>::gt;false;false;true;false
core_arch::x86::avx::_mm256_zeroall;true;true;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<i64, N>>::mul;false;true;false;false
<slice::iter::Chunks<'_, T> as clone::Clone>::clone;false;false;true;false
sync::atomic::AtomicU16::new;false;false;false;false
<u128 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
convert::num::<impl convert::TryFrom<i32> for u32>::try_from;false;false;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
num::<impl i32>::unchecked_shr;true;false;false;false
slice::raw::from_raw_parts;true;true;true;false
<core_arch::simd::m16x8 as clone::Clone>::clone;false;false;false;false
<&num::saturating::Saturating<isize> as ops::arith::Rem<&num::saturating::Saturating<isize>>>::rem;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_storeu_epi8;true;true;true;false
num::<impl i128>::unchecked_shl;true;false;false;false
slice::sort::stable::quicksort::quicksort;false;true;true;true
<&num::wrapping::Wrapping<u8> as ops::bit::Not>::not;false;false;false;false
<u16 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<slice::iter::RChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::bit::BitXor<&num::wrapping::Wrapping<i128>>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_mul_ps;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub;false;false;false;false
num::<impl i128>::wrapping_rem;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
<num::wrapping::Wrapping<isize> as ops::arith::SubAssign<&num::wrapping::Wrapping<isize>>>::sub_assign;false;false;true;false
<slice::iter::RSplitN<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<str::UnsafeBytesToStr as ops::function::FnOnce<(&'a [u8],)>>::call_once;false;false;false;false
core_arch::x86::avx512f::_mm256_xor_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_sd;true;true;true;false
<fmt::Error as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512vnni::_mm_maskz_dpwssds_epi32;true;true;false;false
<num::saturating::Saturating<i16> as ops::arith::Rem<&num::saturating::Saturating<i16>>>::rem;false;false;false;false
<i64 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<num::niche_types::NonZeroI32Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
<&u8 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::count;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::Mul<&num::wrapping::Wrapping<u64>>>::mul;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u16>>>::spec_next;false;false;true;false
<T as slice::sort::shared::smallsort::StableSmallSortTypeImpl>::small_sort_threshold;false;false;false;false
<num::nonzero::NonZero<T> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
fmt::FormattingOptions::get_sign;false;false;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
<num::niche_types::UsizeNoHighBit as hash::Hash>::hash;false;false;true;false
cell::RefCell::<T>::try_borrow_unguarded;true;true;true;false
<u32 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_slli_epi32;true;true;false;false
<i32 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_srav_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_fnmsub_sd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_permutevar_pd;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtepi64_pd;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::leading_ones;false;false;false;false
marker::variance::PhantomContravariant;false;false;true;false
<&'a u8 as ops::bit::Shr<i32>>::shr;false;false;false;false
num::saturating::Saturating::<u32>::count_zeros;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmsubadd_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_max_ph;true;true;true;false
<u128 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::arith::AddAssign<u128>>::add_assign;false;false;true;false
<&'a i32 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm256_reduce_min_epu8;true;true;false;false
ptr::non_null::NonNull::<T>::byte_offset_from;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::Mul>::mul;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u16>>>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cmpge_epi16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvttph_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_i64gather_ps;true;true;true;false
slice::<impl [f32]>::sort_floats;false;false;true;false
<&'a num::wrapping::Wrapping<u8> as ops::bit::BitAnd<num::wrapping::Wrapping<u8>>>::bitand;false;false;false;false
error::Request::<'a>::would_be_satisfied_by_value_of;false;false;true;false
<option::IterMut<'a, A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl u32>::overflowing_div;false;false;false;false
slice::<impl [T]>::as_chunks_mut;false;true;true;false
core_arch::x86::avx512ifma::_mm_madd52hi_epu64;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i64> for &'lhs core_simd::vector::Simd<i64, N>>::shr;false;false;false;false
<u64 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
<u16 as ops::bit::BitOr<&u16>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_sub_ph;true;true;true;false
option::Option::<&T>::copied;false;false;false;false
sync::atomic::AtomicI64::from_mut_slice;false;true;true;false
ptr::hash;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_shuffle_epi8;true;true;false;false
core_arch::x86::avx512bw::_ktest_mask64_u8;true;true;true;false
f128::<impl f128>::midpoint;false;false;true;false
<i16 as ops::arith::SubAssign<&i16>>::sub_assign;false;false;true;false
result::Result::<T, E>::inspect_err;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i64> for core_simd::vector::Simd<i64, N>>::shl;false;false;false;false
error::Request;false;false;true;false
num::<impl u64>::wrapping_div;false;false;false;false
num::<impl u32>::saturating_sub;false;false;false;false
<i8 as ops::bit::Shl<u8>>::shl;false;false;false;false
<u32 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<i8 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
"array::<impl convert::TryFrom<&mut [T]> for [T; N]>::try_from";false;false;true;false
<u64 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
<i16 as ops::bit::Shl<u32>>::shl;false;false;false;false
num::wrapping::Wrapping::<u64>::rotate_left;false;false;false;false
array::from_mut;false;true;true;false
<slice::iter::Chunks<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<&'a usize as ops::bit::Shr<u64>>::shr;false;false;false;false
<i8 as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx::_mm256_or_ps;true;true;true;false
core_arch::x86::avx512bitalg::_mm_popcnt_epi16;true;true;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
<core_simd::masks::Mask<isize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
core_arch::x86::avx2::_mm_blend_epi32;true;true;false;false
core_arch::simd::u32x2::extract;false;true;false;false
fmt::float::<impl fmt::UpperExp for f64>::fmt;false;false;true;false
"array::equality::<impl cmp::PartialEq<[U]> for [T; N]>::ne";false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi32_pd;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvtt_roundsh_u32;true;true;true;false
num::<impl u8>::unchecked_shr::precondition_check;false;false;false;false
<i8 as ops::bit::Shr<&i32>>::shr;false;false;false;false
num::saturating::Saturating::<u8>::pow;false;false;false;false
<i8 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_cmplt_epi8_mask;true;true;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reverse_bits;false;true;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::swap_bytes;false;true;false;false
cmp::impls::<impl cmp::PartialOrd for i64>::partial_cmp;false;false;false;false
ptr::mut_ptr::<impl *mut T>::is_aligned_to;false;false;true;false
<num::error::TryFromIntError as convert::From<!>>::from;false;false;false;false
sync::atomic::AtomicI32::update;false;false;true;true
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
intrinsics::mir::Field;false;false;false;false
<&'a num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_add_pd;true;true;true;false
num::<impl isize>::overflowing_neg;false;false;false;false
core_arch::x86::avx512f::_mm_mask_roundscale_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_broadcastb_epi8;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::arith::MulAssign<i128>>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_comieq_sh;true;true;true;false
<core_arch::simd::m16x16 as fmt::Debug>::fmt;false;false;true;false
<&i32 as ops::bit::BitOr<&i32>>::bitor;false;false;false;false
<i8 as ops::bit::Shl<&i128>>::shl;false;false;false;false
slice::<impl [T]>::split_off;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fixupimm_round_ps;true;true;true;false
<&'a i128 as ops::bit::Shr<u8>>::shr;false;false;false;false
num::saturating::Saturating::<u16>::swap_bytes;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg;false;false;false;false
num::wrapping::Wrapping::<usize>::count_zeros;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::RemAssign<&u32>>::rem_assign;false;false;true;false
ptr::mut_ptr::<impl *mut [T]>::as_mut_ptr;false;false;true;false
<iter::sources::repeat_with::RepeatWith<F> as iter::traits::iterator::Iterator>::size_hint;false;false;false;false
core_arch::x86::avx2::_mm256_subs_epi16;true;true;false;false
panic::location::Location::<'a>::line;false;false;true;false
iter::traits::iterator::Iterator::gt;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpge_epi8_mask;true;true;false;false
<num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_fnmsub_ph;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fmsubadd_ph;true;true;true;false
<sync::atomic::Ordering as clone::Clone>::clone;false;false;false;false
num::<impl i16>::overflowing_shr;false;false;false;false
<num::error::IntErrorKind as fmt::Debug>::fmt;false;false;true;false
<ascii::ascii_char::AsciiChar as cmp::PartialEq>::eq;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<u64, 2>>::from;false;false;false;false
<iter::adapters::map::Map<I, F> as iter::adapters::SourceIter>::as_inner;true;true;true;false
str::pattern::Utf8Pattern::StringPattern;false;false;false;false
core_arch::simd::u64x2::new;false;false;false;false
<num::nonzero::NonZero<T> as cmp::PartialOrd>::gt;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_or_epi64;true;true;false;false
core_arch::simd::u16x64::splat::JustOne;false;false;false;false
<i16 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_i32gather_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_fnmsub_ph;true;true;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<u8, N>>::shr;false;true;false;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::RangeFrom<usize>>>::index_mut;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign;false;false;true;false
core_arch::x86::avx::_mm256_floor_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_cmul_sch;true;true;true;false
num::<impl u16>::saturating_add_signed;false;false;false;false
<&'a u16 as ops::bit::Shr<usize>>::shr;false;false;false;false
<i16 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
num::wrapping::Wrapping::<u128>::rotate_right;false;false;false;false
core_arch::x86::avx512dq::_ktest_mask16_u8;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_add_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_mul_round_ps;true;true;true;false
<slice::iter::ArrayChunks<'a, T, N> as iter::traits::iterator::Iterator>::count;false;false;true;true
<core_arch::simd::i8x4 as cmp::PartialEq>::eq;false;false;false;false
str::<impl str>::rmatches;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::AddAssign<&isize>>::add_assign;false;false;true;false
num::<impl i16>::from_be;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::MulAssign<&i128>>::mul_assign;false;false;true;false
<i16 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
convert::num::<impl convert::From<u8> for u64>::from;false;false;false;false
core_arch::x86_64::avx512bw::_cvtmask64_u64;true;false;false;false
<&usize as ops::bit::Shr<&i128>>::shr;false;false;false;false
iter::traits::iterator::Iterator::partition;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_sub_pd;true;true;true;false
num::<impl i32>::next_multiple_of;false;false;false;false
num::nonzero::NonZero::<i8>::rotate_left;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_fnmsub_pd;true;true;true;false
core_arch::x86::gfni::_mm_maskz_gf2p8affineinv_epi64_epi8;true;true;false;false
intrinsics::fmuladdf128;true;false;true;false
<&f128 as ops::arith::Rem<&f128>>::rem;false;false;true;false
<u128 as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeFrom<A>>::size_hint;false;false;false;false
tuple::<impl default::Default for (W, V, U, T)>::default;false;false;false;false
<core_simd::vector::Simd<i8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_max_epi32;true;true;false;false
core_arch::x86::avx2::_mm256_broadcastq_epi64;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::last;false;false;true;true
<f16 as ops::arith::MulAssign<&f16>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_permutexvar_epi16;true;true;false;false
<&'a u128 as ops::bit::Shl<i8>>::shl;false;false;false;false
core_arch::x86_64::amx::_tile_zero;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::valid;false;true;false;false
core_arch::x86::avx512f::_mm256_i32scatter_pd;true;true;true;false
<future::pending::Pending<T> as future::future::Future>::poll;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
slice::memchr::memchr_aligned::runtime;false;true;false;true
core_arch::x86::avx512f::_mm512_castpd256_pd512;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_mullo_epi16;true;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
num::<impl u64>::strict_shr;false;false;false;false
num::<impl u128>::strict_rem;false;false;false;false
<f64 as ops::arith::Div>::div;false;false;true;false
<i16 as iter::range::Step>::forward;false;false;false;false
num::nonzero::NonZero::<i8>::isolate_most_significant_one;false;true;false;false
num::<impl isize>::saturating_abs;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::traits::iterator::Iterator>::fold;false;false;true;false
core_arch::x86::sse2::_mm_cvtps_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_mask3_fnmadd_round_ps;true;true;true;false
num::<impl i32>::to_be_bytes;false;false;false;false
<i64 as ops::bit::Shl>::shl;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;false
<marker::PhantomData<T> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_xor_epi32;true;true;false;false
core_arch::x86::avx::_mm256_andnot_pd;true;true;true;false
ptr::non_null::NonNull::<[T]>::as_mut_ptr;false;false;true;false
<f16 as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::avx2::_mm256_srai_epi16;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::arith::Div>::div;false;false;false;false
ptr::non_null::NonNull::<T>::cast;false;false;true;false
<core_arch::simd::u8x16 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_add_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_store_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_maskz_permutex2var_epi16;true;true;false;false
num::saturating::Saturating::<u128>::reverse_bits;false;false;false;false
num::fmt::Part::<'a>::write;false;false;true;true
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::bf16::to_bits;false;false;false;false
<isize as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
num::<impl u16>::checked_signed_diff;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvttpd_epu64;true;true;true;false
core_arch::x86::avx512dq::_mm_movm_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvt_roundsd_sh;true;true;true;false
num::<impl u32>::strict_shl;false;false;false;false
<usize as ops::arith::Rem<&usize>>::rem;false;false;false;false
<&num::wrapping::Wrapping<u64> as ops::bit::Not>::not;false;false;false;false
core_simd::swizzle::Swizzle::swizzle_mask;false;true;true;false
<i128 as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm512_mask_fmadd_round_pch;true;true;true;false
num::wrapping::Wrapping::<i16>::swap_bytes;false;false;false;false
core_arch::simd::u8x2::new;false;false;false;false
f16::<impl f16>::to_be_bytes;false;false;true;false
core_arch::x86::avx512f::_mm512_permutex2var_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_cmp_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_compress_pd;true;true;true;false
core_arch::x86::avx512bf16::_mm_cvtness_sbh;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor;false;false;false;false
<u32 as ops::arith::Sub>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_add_round_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_sqrt_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epi64;true;true;true;false
<net::parser::AddrParseError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86_64::bt::_bittestandset64;true;true;true;false
core_arch::x86::avx512bw::_mm_cmpneq_epi16_mask;true;true;false;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::saturating::Saturating::<i32>::trailing_zeros;false;false;false;false
<&'a num::wrapping::Wrapping<usize> as ops::arith::Add<num::wrapping::Wrapping<usize>>>::add;false;false;false;false
num::<impl u16>::from_be_bytes;false;false;false;false
num::<impl isize>::checked_mul;false;false;false;false
ptr::non_null::NonNull::<T>::without_provenance;false;false;false;false
<marker::variance::PhantomInvariantLifetime<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
num::<impl i16>::midpoint;false;false;false;false
<ops::range::Bound<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::<impl u32>::checked_ilog10;false;false;false;false
panicking::panic_const::panic_const_async_gen_fn_resumed_panic;false;false;false;false
fmt::Formatter::<'a>::width;false;false;true;false
<cell::BorrowMutError as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::traits::iterator::Iterator>::try_fold::check;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<usize>>::sub_assign;false;false;true;false
<panic::location::Location<'a> as cmp::PartialEq>::eq;false;false;true;false
<str::iter::EscapeDefault<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
<core_arch::x86::__m256i as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cmp_ps_mask;true;true;true;false
<hash::sip::SipHasher13 as hash::Hasher>::finish;false;false;true;false
core_arch::simd::i64x8::splat;false;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_subs_epu16;true;true;false;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<u8, N>>::bitxor;false;true;false;false
<&'a i8 as ops::bit::Shr<i32>>::shr;false;false;false;false
num::nonzero::NonZero::<i64>::rotate_right;false;true;false;false
slice::iter::SplitMut::<'a, T, P>::new;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::Rem>::rem;false;false;false;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::ReverseSearcher<'a>>::next_reject_back;false;false;true;false
<core_arch::simd::f32x8 as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<u16>::from_le;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_storeu_epi8;true;true;true;false
<u64 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
slice::cmp::<impl cmp::PartialEq<[U]> for [T]>::eq;false;false;false;false
core_arch::simd::u16x8::new;false;false;false;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
f32::<impl f32>::from_le_bytes;false;false;false;false
num::<impl u16>::ilog;false;false;false;false
iter::adapters::map::map_try_fold;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_sub_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmul_round_pch;true;true;true;false
ptr::non_null::NonNull::<T>::from_mut;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_epi8;true;true;false;false
<&isize as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fnmsub_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_inserti64x2;true;true;false;false
str::iter::Split;false;false;true;false
intrinsics::fabsf16;true;false;true;false
<core_arch::simd::i32x2 as cmp::PartialEq>::eq;false;false;false;false
ops::control_flow::ControlFlow::<B, C>::map_continue;false;false;true;false
<i8 as iter::traits::accum::Product<&'a i8>>::product;false;false;false;true
convert::num::<impl convert::From<i32> for f64>::from;false;false;false;false
num::nonzero::NonZero::<i8>::reverse_bits;false;true;false;false
<num::saturating::Saturating<usize> as ops::bit::BitAnd<&num::saturating::Saturating<usize>>>::bitand;false;false;false;false
num::<impl i16>::to_ne_bytes;false;false;false;false
<char::convert::ParseCharError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
num::nonzero::NonZero::<u8>::unchecked_mul;true;true;false;false
sync::atomic::AtomicBool::swap;false;true;true;false
num::nonzero::NonZero::<u64>::leading_zeros;false;true;false;false
<core_arch::simd::u32x2 as clone::Clone>::clone;false;false;false;false
<f64 as ops::arith::DivAssign<&f64>>::div_assign;false;false;true;false
<usize as ops::bit::Shr<isize>>::shr;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_fold;false;false;true;true
<isize as ops::bit::Shl<u32>>::shl;false;false;false;false
<i8 as iter::range::Step>::backward;false;false;false;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::Shr<usize>>::shr;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
tuple::<impl cmp::PartialOrd for (W, V, U, T)>::lt;false;false;false;false
<num::saturating::Saturating<i8> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
num::saturating::Saturating::<u32>::from_be;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i128>::lt;false;false;false;false
<i32 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;true
<core_arch::simd::i32x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
<i8 as ops::bit::BitXorAssign<&i8>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_sllv_epi64;true;true;false;false
num::nonzero::NonZero::<u64>::saturating_pow;false;true;false;false
num::wrapping::Wrapping::<u128>::reverse_bits;false;false;false;false
<u128 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
<result::IterMut<'a, T> as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::cloned::Cloned<I> as clone::Clone>::clone;false;false;true;false
num::saturating::Saturating::<usize>::rotate_left;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&i32>>::sub_assign;false;false;true;false
<net::ip_addr::Ipv4Addr as hash::Hash>::hash;false;false;true;false
<num::wrapping::Wrapping<u128> as iter::traits::accum::Product>::product;false;false;false;true
<u64 as ops::bit::ShrAssign<u16>>::shr_assign;false;false;true;false
slice::sort::shared::smallsort::has_efficient_in_place_swap;false;false;false;false
<slice::iter::RChunksMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::nonzero::NonZero::<isize>::saturating_abs;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<str::iter::LinesAny<'a> as clone::Clone>::clone;false;false;true;false
<core_arch::simd::u16x4 as fmt::Debug>::fmt;false;false;true;false
<core_arch::x86::cpuid::CpuidResult as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_min_epu64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask2_permutex2var_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_extractf32x4_ps;true;true;true;false
core_arch::x86::avx512f::_mm_xor_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_max_epu8;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_or_pd;true;true;true;false
core_arch::x86::avx512dq::_kortestz_mask8_u8;true;true;false;false
num::<impl u32>::overflowing_mul;false;false;false;false
<async_iter::from_iter::FromIter<I> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_fmadd_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_srav_epi64;true;true;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_sign_negative;false;false;true;false
num::<impl i128>::checked_next_multiple_of;false;false;false;false
num::<impl usize>::saturating_div;false;false;false;false
<array::TryFromSliceError as convert::From<convert::Infallible>>::from;false;false;false;false
core_arch::x86::sse::_mm_prefetch;true;true;true;false
core_arch::x86::avx512f::_mm_mask_sqrt_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_add_round_sh;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_sch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_sqrt_ph;true;true;true;false
core_arch::x86_64::avx512fp16::_mm_cvtsh_i64;true;true;true;false
<usize as random::Random>::random;false;false;true;false
net::parser::<impl str::traits::FromStr for net::socket_addr::SocketAddr>::from_str;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpeq_epi32_mask;true;true;false;false
num::saturating::Saturating::<u64>::rotate_left;false;false;false;false
<i128 as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<u16 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<&num::wrapping::Wrapping<i32> as ops::bit::Shr<&usize>>::shr;false;false;false;false
num::<impl u8>::isolate_least_significant_one;false;false;false;false
<u16 as fmt::num::DisplayInt>::to_u128;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fmaddsub_ph;true;true;true;false
<ops::coroutine::CoroutineState<Y, R> as clone::Clone>::clone;false;false;true;false
<&'a i128 as ops::arith::Div<i128>>::div;false;false;false;false
ptr::mut_ptr::<impl *mut T>::offset_from;true;true;true;false
<u16 as ops::bit::Shr<i16>>::shr;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
slice::<impl [T]>::windows;false;false;false;false
<str::iter::MatchIndicesInternal<'a, P> as clone::Clone>::clone;false;false;true;false
<u8 as iter::range::Step>::backward_checked;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_div_round_ps;true;true;true;false
<&num::nonzero::NonZero<i32> as ops::arith::Neg>::neg;false;false;false;false
<u16 as net::parser::ReadNumberHelper>::checked_add;false;false;false;false
num::<impl i128>::wrapping_rem_euclid;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u32>>::from;false;true;false;false
num::nonzero::NonZero::<u16>::to_be;false;true;false;false
<iter::adapters::zip::Zip<A, B> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
<u16 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
num::<impl u16>::is_power_of_two;false;false;false;false
core_arch::x86::avx512bf16::_mm256_mask_cvtpbh_ps;true;true;true;false
core_simd::ops::deref::<impl ops::bit::BitOr<&'rhs core_simd::vector::Simd<T, N>> for &'lhs core_simd::vector::Simd<T, N>>::bitor;false;false;false;false
ops::range::Bound::<T>::as_mut;false;false;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;false;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
<core_simd::masks::mask_impl::Mask<T, N> as clone::Clone>::clone;false;false;true;false
slice::<impl [T]>::split_mut;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_alignr_epi8;true;true;false;false
net::ip_addr::Ipv6Addr::from_segments;false;false;false;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
convert::num::<impl convert::TryFrom<i8> for u64>::try_from;false;false;false;false
net::socket_addr::SocketAddrV6::set_flowinfo;false;false;true;false
<core_arch::simd::m16x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx2::_mm256_mullo_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_fpclass_ph_mask;true;true;true;false
core_arch::x86::sse::_mm_cvtt_ss2si;true;true;true;false
core_arch::x86::avx512f::_mm512_set4_pd;true;true;true;false
<num::error::ParseIntError as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask_or_epi64;true;true;false;false
cell::RefMut::<'b, T>::filter_map;false;false;true;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_andnot_epi64;true;true;false;false
<num::wrapping::Wrapping<i64> as ops::arith::Div>::div;false;false;false;false
num::<impl i128>::checked_sub;false;false;false;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_cvtusepi16_epi8;true;true;false;false
<i16 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmple_epu8_mask;true;true;false;false
<&num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::fold;false;false;true;false
iter::traits::collect::default_extend_tuple_i;false;false;true;true
f64::<impl f64>::clamp::do_panic;false;false;true;false
<&'a i16 as ops::bit::Shr<i8>>::shr;false;false;false;false
<str as convert::AsRef<str>>::as_ref;false;false;false;false
<(dyn any::Any + marker::Send + 'static) as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicI8::compare_and_swap;false;false;true;false
<core_arch::simd::i16x8 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::rdtsc::_rdtsc;true;true;false;false
<iter::adapters::take::Take<I> as iter::adapters::take::SpecTake>::spec_fold;false;false;true;true
num::<impl u8>::unchecked_shl;true;false;false;false
core_arch::x86::avx512vbmi2::_mm_mask_expandloadu_epi8;true;true;true;false
core_arch::x86::avx512vnni::_mm512_maskz_dpwssds_epi32;true;true;false;false
core_arch::x86::avx512vnni::_mm256_mask_dpbusd_epi32;true;true;false;false
<&mut W as fmt::Write>::write_char;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitOr>::bitor;false;false;false;false
option::Option::<T>::as_slice;false;true;true;false
num::wrapping::Wrapping::<i64>::leading_zeros;false;false;false;false
<core_arch::simd::i32x2 as clone::Clone>::clone;false;false;false;false
<core_arch::simd::i32x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
<&'a usize as ops::bit::Shr<i64>>::shr;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::Add<&num::wrapping::Wrapping<u32>>>::add;false;false;false;false
<str::pattern::CharSearcher<'a> as str::pattern::Searcher<'a>>::haystack;false;false;true;false
core_arch::x86::avx512vnni::_mm256_dpbusds_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_round_pch;true;true;true;false
core_arch::x86::avx512dq::_mm_maskz_cvtepu64_pd;true;true;false;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm256_reduce_or_epi16;true;true;false;false
<isize as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_extractf64x2_pd;true;true;true;false
convert::num::<impl convert::TryFrom<u32> for u16>::try_from;false;false;false;false
<i64 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::sse2::_mm_max_pd;true;true;true;false
fmt::rt::Argument::<'_>::new_upper_exp;false;false;false;false
sync::atomic::AtomicBool::compare_and_swap;false;false;true;false
num::wrapping::Wrapping::<u64>::to_le;false;false;false;false
<u32 as ops::bit::ShlAssign<i16>>::shl_assign;false;false;true;false
<bool as ops::bit::BitOr<&bool>>::bitor;false;false;false;false
<&i32 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<(EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(K, J, I, H, G, F, E, D, C, B, A)>>::extend_one;false;false;true;false
num::dec2flt::slow::parse_long_mantissa;false;false;false;true
num::<impl u64>::checked_shl;false;true;false;false
intrinsics::atomic_load_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fnmadd_ps;true;true;true;false
time::Duration::as_millis_f64;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_ps_mask;true;true;true;false
<num::wrapping::Wrapping<i32> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
num::<impl u128>::checked_rem_euclid;false;false;false;false
<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<usize>>::bitxor_assign;false;false;true;false
f32::<impl f32>::abs;false;true;true;false
core_arch::x86::sse2::_mm_cmpnge_sd;true;true;true;false
num::wrapping::Wrapping::<u8>::next_power_of_two;false;false;false;false
num::niche_types::I32NotAllOnes::new_unchecked;true;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_sra_epi16;true;true;false;false
str::lossy::Debug;false;false;false;false
num::<impl u64>::wrapping_sub_signed;false;false;false;false
<u128 as ops::bit::Shr<&u128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_rcp14_pd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::wrapping_offset;false;true;true;false
core_arch::x86::avx512f::_mm512_set_ps;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_size_hint;false;false;true;false
cell::UnsafeCell::<T>::as_mut_unchecked;true;true;true;false
<num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub;false;false;false;false
<(EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(J, I, H, G, F, E, D, C, B, A)>>::extend;false;false;true;false
core_arch::x86::sse2::_mm_shuffle_pd;true;true;true;false
num::<impl u32>::unchecked_shl;true;false;false;false
<core_simd::masks::Mask<T, N> as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::f64x1::splat::JustOne;false;false;true;false
iter::traits::iterator::Iterator::partition_in_place::is_true;false;false;true;false
tuple::<impl cmp::PartialEq for (W, V, U, T)>::ne;false;false;false;false
<u32 as ops::bit::Shl<&isize>>::shl;false;false;false;false
bstr::<impl convert::TryFrom<&'a bstr::ByteStr> for &'a str>::try_from;false;false;false;false
fmt::num::imp::<impl u32>::_fmt;false;true;true;true
str::<impl str>::split_inclusive;false;false;false;false
num::<impl u128>::checked_ilog;false;false;false;true
core_arch::x86::__m128h::splat;false;true;true;false
core_arch::x86::avx512f::_mm512_unpacklo_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_cvt_roundsd_i32;true;true;true;false
core_arch::x86::avx512ifma::_mm_mask_madd52lo_epu64;true;true;false;false
slice::<impl [T]>::split_inclusive_mut;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvttph_epu16;true;true;true;false
f128::<impl f128>::minimum;false;false;true;false
core_arch::x86::avx512bw::_load_mask64;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::SubAssign<&u32>>::sub_assign;false;false;true;false
<slice::GetDisjointMutError as clone::Clone>::clone;false;false;false;false
cmp::impls::<impl cmp::PartialEq for ()>::eq;false;false;false;false
<f32 as ops::arith::AddAssign>::add_assign;false;false;true;false
core_arch::x86::__m128bh::as_u16x8;false;false;false;false
num::<impl i64>::saturating_add;false;false;false;false
core_arch::x86::avx512f::_mm_cmpge_epi64_mask;true;true;false;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
ptr::dangling_mut;false;false;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::masks::Mask<i32, N> as convert::From<core_simd::masks::Mask<i16, N>>>::from;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_mul_ph;true;true;true;false
ops::range::RangeInclusive::<Idx>::into_inner;false;false;true;false
<i32 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_shldv_epi32;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<i64 as ops::bit::Not>::not;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i64>>::from;false;true;false;false
<num::saturating::Saturating<u64> as ops::arith::SubAssign<&u64>>::sub_assign;false;false;true;false
core_arch::simd::f32x2::from_array;false;false;true;false
core_arch::x86::avx512f::_mm512_set1_epi8;true;false;false;false
core_arch::x86::avx512bw::_mm512_packs_epi32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_i32x4;true;true;false;false
sync::atomic::AtomicUsize::update;false;false;true;true
<u64 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<u16>>::mul_assign;false;false;true;false
<&u64 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<core_simd::vector::Simd<u16, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_min_epu32;true;true;false;false
num::flt2dec::strategy::grisu::format_shortest_opt;false;true;true;true
<num::wrapping::Wrapping<i64> as ops::arith::MulAssign<&num::wrapping::Wrapping<i64>>>::mul_assign;false;false;true;false
core_arch::x86::avx512dq::_knot_mask8;true;false;false;false
<&'a i8 as ops::bit::Shr<u32>>::shr;false;false;false;false
<&'a isize as ops::arith::Div<isize>>::div;false;false;false;false
num::<impl u64>::pow;false;false;false;true
core_arch::x86::ssse3::_mm_alignr_epi8::mask;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign;false;false;true;false
num::<impl u32>::checked_mul;false;false;false;false
<ops::range::Range<Idx> as fmt::Debug>::fmt;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<&i8> for &'lhs core_simd::vector::Simd<i8, N>>::shr;false;false;false;false
num::<impl u16>::carrying_mul;false;false;false;false
cell::RefCell::<T>::try_borrow_mut;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi32;true;true;false;false
<marker::variance::PhantomInvariant<T> as clone::Clone>::clone;false;false;true;false
num::diy_float::Fp::normalize;false;false;false;false
<isize as ops::bit::BitAnd<&isize>>::bitand;false;false;false;false
str::<impl str>::rmatch_indices;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_shuffle_pd;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvtt_roundps_epu64;true;true;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::reduce_sum;false;true;true;false
<&ffi::c_str::CStr as default::Default>::default;false;true;false;false
<slice::iter::RSplitMut<'a, T, P> as slice::iter::SplitIter>::finish;false;false;true;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::iterator::Iterator>::next;false;true;true;false
escape::EscapeIterInner::<N>::next_back;false;true;true;false
intrinsics::write_bytes::precondition_check;false;false;true;false
<core_arch::x86::cpuid::CpuidResult as cmp::PartialEq>::eq;false;false;true;false
intrinsics::mir::__debuginfo::panic_cold_explicit;false;false;false;false
core_arch::x86::avx512f::_mm512_min_pd;true;true;true;false
cmp::impls::<impl cmp::PartialEq for i32>::ne;false;false;false;false
<f16 as ops::arith::Mul<&f16>>::mul;false;false;true;false
intrinsics::mir::Deinit;false;false;false;false
<&'a u16 as ops::bit::BitAnd<u16>>::bitand;false;false;false;false
<mem::manually_drop::ManuallyDrop<T> as ops::deref::Deref>::deref;false;false;true;false
<&T as fmt::UpperHex>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_getexp_sd;true;true;true;false
core_arch::x86::ssse3::_mm_shuffle_epi8;true;true;false;false
<ptr::metadata::DynMetadata<Dyn> as cmp::PartialOrd>::partial_cmp;false;false;true;false
num::<impl u16>::unchecked_mul::precondition_check;false;false;false;false
<i16 as ops::bit::Shl<u8>>::shl;false;false;false;false
<net::ip_addr::Ipv6Addr as ops::bit::BitAndAssign>::bitand_assign;false;false;true;true
core_arch::x86::avx512bw::_mm512_maskz_min_epi8;true;true;false;false
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get_unchecked_mut;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::abs_diff;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::swap_bytes;false;true;false;false
<u8 as net::parser::ReadNumberHelper>::checked_add;false;false;false;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::next;false;false;true;true
<usize as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
iter::traits::collect::default_extend_tuple_g;false;false;true;true
<u8 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_range_round_pd;true;true;true;false
<&num::wrapping::Wrapping<u32> as ops::arith::Rem<&num::wrapping::Wrapping<u32>>>::rem;false;false;false;false
core_arch::x86::bt::_bittestandcomplement;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::index_mut;false;true;true;false
ptr::replace;true;true;true;false
core_arch::simd::m64x2::new;false;false;false;false
range::iter::<impl iter::traits::collect::IntoIterator for range::RangeInclusive<A>>::into_iter;false;false;true;false
<iter::adapters::flatten::Flatten<I> as default::Default>::default;false;false;false;false
num::<impl u32>::overflowing_sub_signed;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_shldv_epi64;true;true;false;false
<ops::range::RangeToInclusive<Idx> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvt_roundps_ph;true;true;true;false
mem::maybe_uninit::MaybeUninit::<T>::as_bytes;false;true;false;false
<&'a num::wrapping::Wrapping<i16> as ops::bit::BitOr<num::wrapping::Wrapping<i16>>>::bitor;false;false;false;false
<iter::adapters::scan::Scan<I, St, F> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sub_ps;true;true;true;false
num::<impl u16>::strict_div;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat_with::RepeatWith<F>> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<core_simd::vector::Simd<isize, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::<impl isize>::min_value;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_packus_epi32;true;true;false;false
core_arch::x86::sse2::_mm_cvtepi32_ps;true;true;false;false
<usize as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitAndAssign<&num::saturating::Saturating<u32>>>::bitand_assign;false;false;true;false
<&'a num::saturating::Saturating<i32> as ops::arith::Mul<num::saturating::Saturating<i32>>>::mul;false;false;false;false
time::Duration::from_hours;false;false;false;false
num::<impl usize>::reverse_bits;false;false;false;false
net::ip_addr::Ipv4Addr::is_reserved;false;false;false;false
intrinsics::mir::TailCall::panic_cold_explicit;false;false;false;false
fmt::num::imp::<impl fmt::UpperExp for u8>::fmt;false;false;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
<i16 as pat::RangePattern>::sub_one;false;false;false;false
<i16 as ops::bit::Not>::not;false;false;false;false
io::borrowed_buf::BorrowedBuf::<'data>::init_len;false;false;true;false
<slice::iter::Iter<'_, T> as convert::AsRef<[T]>>::as_ref;false;false;true;false
intrinsics::simd::simd_ceil;true;false;false;false
num::<impl i8>::is_positive;false;false;false;false
<isize as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::__m256::as_array;false;true;true;false
core_arch::x86::sse2::_mm_div_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_set1_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtepi8_epi16;true;true;false;false
<isize as ops::bit::Shr<&i8>>::shr;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_shrdv_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_fcmul_pch;true;true;true;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<u128 as ops::bit::BitOrAssign<&u128>>::bitor_assign;false;false;true;false
core_arch::x86::sse2::_mm_and_si128;true;true;false;false
<i32 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_fixupimm_pd;true;true;true;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::kl::WideAesOutput;false;false;false;false
<core_simd::vector::Simd<u16, 32> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::<impl i64>::saturating_sub;false;false;false;false
<i128 as ops::arith::Sub<&i128>>::sub;false;false;false;false
<i128 as ops::bit::Shl<&u64>>::shl;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<&'a num::wrapping::Wrapping<i32> as ops::bit::BitAnd<num::wrapping::Wrapping<i32>>>::bitand;false;false;false;false
<result::Iter<'_, T> as clone::Clone>::clone;false;false;true;false
f16::<impl f16>::is_subnormal;false;false;true;false
<&mut H as hash::Hasher>::write_u8;false;false;true;false
intrinsics::contract_checks;false;false;false;false
core_arch::x86::avx512f::_mm256_broadcast_f32x4;true;true;true;false
core_arch::x86::avx512fp16::_mm512_min_ph;true;true;true;false
<core_simd::masks::mask_impl::Mask<T, N> as cmp::Ord>::cmp;false;false;true;false
ptr::mut_ptr::<impl *mut [T]>::as_uninit_slice_mut;true;true;true;false
num::<impl u64>::saturating_sub_signed;false;false;false;false
<i128 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<core_arch::simd::u16x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
num::<impl u32>::ilog10;false;false;false;false
<core_arch::simd::u16x8 as cmp::PartialEq>::eq;false;false;false;false
char::methods::<impl char>::is_whitespace;false;false;false;false
core_arch::x86::avx2::_mm256_hsub_epi16;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<i128>>>::bitand_assign;false;false;true;false
<num::niche_types::U64NotAllOnes as cmp::PartialOrd>::partial_cmp;false;false;false;false
<i8 as ops::bit::ShlAssign<&u8>>::shl_assign;false;false;true;false
tuple::<impl cmp::PartialOrd for (X, W, V, U, T)>::le;false;false;false;false
core_arch::x86::avx512f::_mm512_cmple_pd_mask;true;true;true;false
task::poll::Poll::<option::Option<result::Result<T, E>>>::map_err;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;false
core_arch::x86::sse2::_mm_ucomineq_sd;true;true;true;false
core_arch::simd::i64x1::splat;false;true;false;false
core_arch::x86::avx512f::_mm_sub_round_ss;true;true;true;false
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_arch::simd::i32x16 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_test_epi32_mask;true;true;false;false
sync::atomic::AtomicU32::store;false;true;true;false
intrinsics::mir::StaticMut::panic_cold_explicit;false;false;false;false
<u32 as ops::bit::Shr<&u16>>::shr;false;false;false;false
num::niche_types::Nanoseconds::new_unchecked;true;false;false;false
<u8 as ops::bit::Shr<&i128>>::shr;false;false;false;false
core_simd::masks::mask_impl::Mask::<T, N>::to_int;false;false;true;false
num::<impl u32>::trailing_ones;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_max_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm_mask_scalef_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_mov_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtusepi64_epi8;true;true;false;false
net::socket_addr::SocketAddrV6::set_port;false;false;true;false
ptr::const_ptr::<impl *const T>::sub::runtime_sub_nowrap;false;false;true;false
<&'a i32 as ops::arith::Mul<i32>>::mul;false;false;false;false
iter::adapters::skip_while::SkipWhile::<I, P>::new;false;false;false;false
num::saturating::Saturating::<i8>::trailing_zeros;false;false;false;false
core_arch::x86::avx2::_mm256_srl_epi32;true;true;false;false
<&'a i8 as ops::bit::Shl<i64>>::shl;false;false;false;false
iter::adapters::flatten::try_flatten_one;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::SubAssign>::sub_assign;false;false;true;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;true
core_arch::x86::avx512f::_mm256_cvtepi32_epi16;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&u32> for core_simd::vector::Simd<u32, N>>::shl;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u64> for &'lhs core_simd::vector::Simd<u64, N>>::shl;false;false;false;false
intrinsics::mir::Assume;false;false;false;false
<isize as ops::arith::Add<&isize>>::add;false;false;false;false
<i16 as fmt::num::DisplayInt>::to_u128;false;false;false;false
core_arch::x86::avx512dq::_load_mask8;true;true;true;false
<num::saturating::Saturating<i16> as ops::arith::DivAssign<&num::saturating::Saturating<i16>>>::div_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_storeu_ph;true;true;true;false
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_nth;false;false;true;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
str::<impl str>::trim_ascii;false;true;false;false
num::<impl u128>::strict_div;false;false;false;false
<ffi::c_str::FromBytesWithNulError as clone::Clone>::clone;false;false;false;false
char::methods::<impl char>::encode_utf8;false;true;true;false
<core_arch::x86::__m512d as fmt::Debug>::fmt;false;false;true;false
num::saturating::Saturating::<u64>::rotate_right;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fixupimm_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_expandloadu_pd;true;true;true;false
<&'a u128 as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_cvtepi16_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fnmsub_ph;true;true;true;false
"array::<impl borrow::BorrowMut<[T]> for [T; N]>::borrow_mut";false;false;true;false
<&i64 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<usize as slice::GetDisjointMutIndex>::is_in_bounds;false;false;false;false
num::wrapping::Wrapping::<i16>::signum;false;false;false;false
sync::atomic::AtomicU32::fetch_add;false;true;true;false
<f128 as ops::arith::Rem<&f128>>::rem;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add;false;false;false;false
cmp::Ordering::is_ge;false;false;false;false
ascii::ascii_char::AsciiChar::to_u8;false;false;false;false
fmt::builders::debug_struct_new;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmplt_ps_mask;true;true;true;false
core_arch::x86::avx512bw::_mm_dbsad_epu8;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_cvtsepi16_epi8;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::to_int_unchecked;true;true;true;false
<&'a num::saturating::Saturating<i8> as ops::arith::Div<num::saturating::Saturating<i8>>>::div;false;false;false;false
<&u128 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<u32 as ops::bit::BitOrAssign<&u32>>::bitor_assign;false;false;true;false
ops::control_flow::ControlFlow::<B, C>::continue_value;false;false;true;false
<num::saturating::Saturating<isize> as ops::bit::BitAndAssign<&num::saturating::Saturating<isize>>>::bitand_assign;false;false;true;false
num::<impl usize>::saturating_add_signed;false;false;false;false
<&f16 as ops::arith::Add<&f16>>::add;false;false;true;false
<range::Range<Idx> as fmt::Debug>::fmt;false;false;true;false
"<[char; N] as str::pattern::Pattern>::into_searcher";false;false;false;false
time::Duration::div_f64;false;false;true;false
result::Result::<T, E>::unwrap_err_unchecked;true;true;true;false
<&isize as ops::bit::BitAnd<&isize>>::bitand;false;false;false;false
<&'a usize as ops::bit::Shr<i128>>::shr;false;false;false;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::nth;false;false;true;false
num::<impl isize>::count_ones;false;false;false;false
<time::Duration as ops::arith::Add>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_add_pd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_shrdv_epi64;true;true;false;false
intrinsics::mir::Retag::panic_cold_explicit;false;false;false;false
num::<impl usize>::from_le;false;false;false;false
<&'a isize as ops::bit::BitOr<isize>>::bitor;false;false;false;false
<ops::range::RangeInclusive<&T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
fmt::FormattingOptions::create_formatter;false;false;true;false
core_arch::x86::avx512f::_mm512_cvtepi64_epi32;true;true;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
str::<impl str>::as_bytes_mut;true;true;true;false
core_arch::x86::avx512dq::_mm_maskz_range_round_ss;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_storeu_epi8;true;true;true;false
core_arch::x86::avx2::_mm256_min_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_reduce_ph;true;true;true;false
core_arch::x86::sse::_MM_SET_EXCEPTION_STATE;true;true;false;false
num::<impl u32>::strict_div_euclid;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvt_roundss_sh;true;true;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<isize, N>>::rem;false;true;false;false
<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<u8>>::bitxor_assign;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::cast;false;true;false;false
<core_simd::masks::Mask<i16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_blend_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_or_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_storeu_epi16;true;true;true;false
<num::saturating::Saturating<isize> as ops::arith::Rem>::rem;false;false;false;false
sync::exclusive::Exclusive::<T>::new;false;false;false;false
num::<impl i8>::saturating_mul;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mullo_epi32;true;true;false;false
<&'a num::wrapping::Wrapping<u64> as ops::arith::Mul<num::wrapping::Wrapping<u64>>>::mul;false;false;false;false
<u128 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<ptr::non_null::NonNull<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
ptr::mut_ptr::<impl *mut T>::sub::runtime_sub_nowrap::runtime;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<i32, N>> for core_simd::vector::Simd<i32, N>>::sum;false;false;false;true
slice::sort::stable::quicksort::PartitionState::<T>::partition_one;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_fmsubadd_ps;true;true;true;false
num::<impl isize>::unchecked_neg::precondition_check;false;false;false;false
core_arch::x86::__m256i::as_i8x32;false;false;false;false
fmt::num::imp::<impl fmt::UpperExp for u16>::fmt;false;false;true;false
<panic::location::Location<'a> as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i64x2::new;false;false;false;false
core_arch::simd::i16x32::extract;false;true;false;false
result::Result::<T, E>::unwrap;false;false;true;false
fmt::rt::Argument::<'_>::as_u16;false;false;true;false
<str::pattern::EmptyNeedle as fmt::Debug>::fmt;false;false;true;false
pin::Pin::<&'a T>::map_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm256_shuffle_i64x2;true;true;false;false
str::pattern::Pattern::is_suffix_of;false;false;false;false
<&u128 as ops::arith::Mul<&u128>>::mul;false;false;false;false
num::<impl i128>::checked_ilog2;false;true;false;false
cmp::impls::<impl cmp::PartialEq for i32>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_testn_epi64_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_rsqrt14_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_mul_round_ps;true;true;true;false
<i64 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<&u64 as ops::arith::Sub<&u64>>::sub;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cvtepi16_epi8;true;true;false;false
<core_simd::vector::Simd<u16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpge_epu8_mask;true;true;false;false
<str::iter::Bytes<'_> as iter::traits::double_ended::DoubleEndedIterator>::rfind;false;false;true;false
num::nonzero::NonZero::<u8>::saturating_pow;false;true;false;false
core_arch::x86::avx512f::_mm_mask_unpacklo_pd;true;true;true;false
task::wake::ContextBuilder::<'a>::build;false;false;true;false
<&'a usize as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvtxps_ph;true;true;true;false
num::<impl i64>::strict_sub_unsigned;false;false;false;false
core_arch::x86::avx512f::_mm_cmpneq_epi32_mask;true;true;false;false
<num::niche_types::NonZeroU32Inner as cmp::Ord>::cmp;false;false;false;false
core_arch::x86::sse2::_mm_cmpneq_sd;true;true;true;false
core_arch::x86::avx512cd::_mm512_broadcastmb_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_extracti64x2_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_add_ph;true;true;true;false
async_iter::async_iter::<impl task::poll::Poll<option::Option<T>>>::async_gen_ready;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask3_fmsubadd_ph;true;true;true;false
<i64 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm_reduce_ph;true;true;true;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundpd_epu64;true;true;true;false
iter::traits::iterator::Iterator::all;false;false;true;true
core_arch::x86::avx512f::_mm512_div_round_pd;true;true;true;false
core_arch::x86::avx512dq::_mm_maskz_mullo_epi64;true;true;false;false
num::saturating::Saturating::<i8>::signum;false;false;false;false
<u32 as ops::arith::SubAssign<&u32>>::sub_assign;false;false;true;false
convert::num::<impl convert::TryFrom<i128> for i64>::try_from;false;false;false;false
<&'a usize as ops::arith::Div<usize>>::div;false;false;false;false
convert::identity;false;false;false;false
<cell::Cell<T> as cmp::PartialOrd>::gt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_moveldup_ps;true;true;true;false
<i64 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<(EB, EA) as iter::traits::collect::Extend<(B, A)>>::extend_one;false;false;true;false
num::niche_types::NonZeroUsizeInner::new_unchecked;true;false;false;false
num::<impl i8>::strict_rem_euclid;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Add<&num::wrapping::Wrapping<u16>>>::add;false;false;false;false
num::<impl u8>::checked_sub;false;false;false;false
str::<impl str>::escape_debug;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_sqrt_round_ss;true;true;true;false
task::wake::Waker::from_raw;true;false;true;false
<&u32 as ops::bit::Shr<&i32>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_adds_epu8;true;true;false;false
hash::impls::<impl hash::Hash for (T, B, C, D, E, F, G, H, I, J, K)>::hash;false;false;true;false
<&'a usize as ops::bit::Shr<u32>>::shr;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::last;false;false;true;false
<f128 as ops::arith::SubAssign<&f128>>::sub_assign;false;false;true;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
core_arch::simd::i32x2::extract;false;true;false;false
net::socket_addr::SocketAddrV4::set_ip;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_adds_epu16;true;true;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86_64::avx512f::_mm_cvtt_roundss_si64;true;true;true;false
<core_arch::simd::u16x16 as cmp::PartialEq>::eq;false;false;false;false
num::<impl u32>::overflowing_sub;false;false;false;false
error::request_ref;false;false;false;false
convert::num::<impl convert::From<i64> for i128>::from;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::DivAssign<&i32>>::div_assign;false;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
intrinsics::const_allocate;true;false;false;false
<cell::RefMut<'_, T> as ops::deref::Deref>::deref;false;true;true;false
num::wrapping::Wrapping::<i128>::count_ones;false;false;false;false
core_arch::x86::avx512f::_mm_scalef_pd;true;true;true;false
num::<impl usize>::unbounded_shr;false;true;false;false
<(T,) as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_slli_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_load_sh;true;true;true;false
ops::index_range::IndexRange::take_prefix;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::SubAssign<&isize>>::sub_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
core_arch::x86::avx512ifma::_mm512_madd52hi_epu64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask3_fmsub_ph;true;true;true;false
num::bignum::Big32x40::mul_pow2;false;false;true;true
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_finite;false;false;true;false
num::<impl u8>::saturating_add_signed;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::is_positive;false;false;false;false
<u64 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<u16 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
core_arch::x86::sse2::_mm_unpacklo_epi32;true;true;false;false
core_arch::x86::avx2::_mm_maskload_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm256_mullo_epi64;true;true;false;false
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<&f16 as ops::arith::Neg>::neg;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_min_epu32;true;true;false;false
core_arch::x86::__m256i;false;false;false;false
intrinsics::simd::simd_cast_ptr;true;false;false;false
intrinsics::atomic_nand_seqcst;true;false;true;false
sync::atomic::AtomicUsize::fetch_max;false;true;true;false
<result::IntoIter<T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<&i128 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<core_arch::x86::__m256d as clone::Clone>::clone;false;false;true;false
<str::iter::MatchIndices<'a, P> as clone::Clone>::clone;false;false;true;false
core_arch::simd::m8x16::new;false;false;false;false
<&u32 as ops::bit::Shr<&usize>>::shr;false;false;false;false
<&'a u128 as ops::bit::Shr<u8>>::shr;false;false;false;false
<i32 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
<u128 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
future::poll_fn::poll_fn;false;false;false;false
<i16 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm_cmple_epi8_mask;true;true;false;false
num::<impl i64>::overflowing_rem_euclid;false;false;false;false
<&usize as ops::arith::Div<&usize>>::div;false;false;false;false
hash::impls::<impl hash::Hash for str>::hash;false;false;true;false
num::<impl usize>::ilog10;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmplt_epi16_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_sra_epi16;true;true;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
num::nonzero::NonZero::<u8>::checked_pow;false;true;false;false
intrinsics::write_bytes::write_bytes;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_ternarylogic_epi64;true;true;false;false
num::<impl u64>::saturating_div;false;false;false;false
core_arch::x86::avx512cd::_mm_maskz_lzcnt_epi64;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shrdi_epi64;true;true;false;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
str::iter::SplitNInternal::<'a, P>::remainder;false;false;true;false
<&'a num::saturating::Saturating<i128> as ops::bit::BitOr<num::saturating::Saturating<i128>>>::bitor;false;false;false;false
core_arch::x86::avx512ifma::_mm512_mask_madd52hi_epu64;true;true;false;false
core_arch::x86::sse41::_mm_insert_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_conj_pch;true;true;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_rorv_epi32;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u128>::lt;false;false;false;false
tuple::<impl cmp::PartialOrd for (W, V, U, T)>::le;false;false;false;false
<core_arch::simd::u64x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
intrinsics::mir::PtrMetadata;false;false;true;false
num::<impl u128>::overflowing_add;false;false;false;false
<usize as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
iter::traits::double_ended::DoubleEndedIterator::rfind;false;false;true;false
core_arch::x86::__m512d::splat;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_storeu_epi32;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem;false;false;false;false
<u128 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask3_fmadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_ror_epi64;true;true;false;false
str::iter::RSplit;false;false;true;false
<&num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::index;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_or_epi64;true;true;false;false
<num::wrapping::Wrapping<usize> as ops::arith::DivAssign>::div_assign;false;false;true;false
<u64 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
intrinsics::fsub_fast;true;false;false;false
core_arch::x86::avx512f::_mm_div_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_store_epi32;true;true;true;false
num::<impl u16>::one_less_than_next_power_of_two;false;true;false;false
core_arch::x86::avx512bw::_mm512_mask_sllv_epi16;true;true;false;false
marker::variance::PhantomContravariantLifetime::<'_>::new;false;false;false;false
<&'a u64 as ops::bit::Shl<u32>>::shl;false;false;false;false
iter::traits::iterator::Iterator::ge;false;false;false;false
intrinsics::fallback::wide_mul_u128::from_low_high;false;false;false;false
<&'a i16 as ops::bit::BitOr<i16>>::bitor;false;false;false;false
iter::adapters::chain::Chain::<A, B>::new;false;false;false;false
<iter::adapters::take::Take<I> as iter::adapters::take::SpecTake>::spec_for_each;false;false;true;true
sync::atomic::AtomicI8::swap;false;true;true;false
num::wrapping::Wrapping::<i128>::from_be;false;false;false;false
core_arch::x86::avx512f::_mm512_extracti64x4_epi64;true;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_adds_epi8;true;true;false;false
core_arch::x86::avx::_mm256_load_si256;true;true;true;false
<&'a u128 as ops::arith::Div<u128>>::div;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Div<&num::wrapping::Wrapping<i32>>>::div;false;false;false;false
intrinsics::logf32;true;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAnd<&num::wrapping::Wrapping<i16>>>::bitand;false;false;false;false
core_arch::x86::avx512bw::_mm512_bsrli_epi128;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i16> for core_simd::vector::Simd<i16, N>>::shr;false;false;false;false
<&'a u8 as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512cd::_mm256_maskz_conflict_epi32;true;true;false;false
num::nonzero::NonZero::<i16>::saturating_neg;false;false;false;false
core_arch::simd::m32x4;false;false;false;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmsubadd_pd;true;true;true;false
<net::ip_addr::Ipv6Addr as iter::range::Step>::backward_checked;false;false;false;false
core_arch::x86::avx512f::_kortestc_mask16_u8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi32_storeu_epi16;true;true;true;false
iter::adapters::zip::Zip::<A, B>::new;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<u32>>::div_assign;false;false;true;false
char::EscapeDefault;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::MulAssign<&i8>>::mul_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u16>::ge;false;false;false;false
<i64 as ops::bit::Shr<&i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_permutex2var_pd;true;true;true;false
core_arch::x86::avx::_mm256_cmp_pd;true;true;true;false
core_arch::x86::sse2::_mm_cmpge_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_andnot_si512;true;true;false;false
<&[char] as str::pattern::MultiCharEq>::matches;false;false;true;false
<core_simd::vector::Simd<f64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
core_arch::x86::avx512dq::_mm256_mask_cvtepu64_ps;true;true;true;false
ptr::write::precondition_check;false;false;true;false
num::<impl u64>::leading_zeros;false;false;false;false
<num::fmt::Part<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm256_roundscale_ps;true;true;true;false
marker::variance::PhantomInvariantLifetime;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_i32x2;true;true;false;false
<i16 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
ptr::replace::precondition_check;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_blend_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_alignr_epi64;true;true;false;false
<hash::sip::SipHasher13 as hash::Hasher>::write;false;false;true;false
core_arch::x86::avx512bf16::_mm_cvtpbh_ps;true;true;false;false
num::<impl i128>::leading_zeros;false;false;false;false
core_arch::x86::sse::_mm_set_ps1;true;true;true;false
core_arch::x86::avx512f::_mm_mask_srl_epi32;true;true;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i8, 16>>::from;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi8_mask;true;true;false;false
<pin::Pin<Ptr> as fmt::Display>::fmt;false;false;true;false
num::<impl u128>::to_be;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::Div<&num::wrapping::Wrapping<u16>>>::div;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<i128>>::bitxor_assign;false;false;true;false
fmt::builders::DebugList::<'a, 'b>::entries;false;false;true;true
core_arch::x86::avx512f::_mm512_maskz_load_pd;true;true;true;false
<core_simd::vector::Simd<usize, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
sync::atomic::AtomicIsize::store;false;true;true;false
core_arch::x86::avx512fp16::_mm512_div_round_ph;true;true;true;false
<slice::iter::Windows<'a, T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::fxsr::_fxsave;true;true;true;false
core_arch::x86::avx512fp16::_mm_permutex2var_ph;true;true;true;false
cmp::impls::<impl cmp::PartialOrd for !>::partial_cmp;false;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::max;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::DivAssign<&num::saturating::Saturating<u64>>>::div_assign;false;false;true;false
<u16 as ops::arith::MulAssign<&u16>>::mul_assign;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::SubAssign<&num::saturating::Saturating<u64>>>::sub_assign;false;false;true;false
sync::atomic::AtomicIsize::new;false;false;false;false
core_arch::x86::avx512f::_mm512_broadcastq_epi64;true;true;false;false
core_arch::x86::avx512bw::_kor_mask64;true;false;false;false
iter::traits::iterator::Iterator::any::check;false;false;false;false
num::<impl usize>::unchecked_mul::precondition_check;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_and;false;true;false;false
core_arch::x86::avx512bw::_mm512_maskz_unpacklo_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_reduce_pd;true;true;true;false
<isize as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_extractf64x2_pd;true;true;true;false
core_arch::x86::avx2::_mm256_extract_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_sll_epi16;true;true;false;false
<ops::range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
num::<impl i16>::overflowing_div;false;false;false;false
<i8 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::__m128d::as_mut_array;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtss_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepu16_ph;true;true;true;false
<f128 as convert::num::FloatToInt<u128>>::to_int_unchecked;true;true;true;false
num::<impl isize>::strict_div;false;false;false;false
<num::saturating::Saturating<T> as fmt::Octal>::fmt;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<&i16>>::mul_assign;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::as_bytes_mut;false;true;true;false
<str::iter::EscapeDebug<'a> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<&i16 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<marker::variance::PhantomCovariantLifetime<'a> as cmp::PartialOrd>::partial_cmp;false;false;true;false
core_arch::x86::bt::_bittestandset;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_unpackhi_epi64;true;true;false;false
num::<impl isize>::checked_div_euclid;false;false;false;false
num::<impl isize>::wrapping_add_unsigned;false;false;false;false
<str::IsNotEmpty as ops::function::Fn<(&'a &'b str,)>>::call;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::new;false;false;false;false
<panic::unwind_safe::AssertUnwindSafe<T> as default::Default>::default;false;false;false;false
<u16 as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_getmant_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_packs_epi32;true;true;false;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_or_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_permutex_epi64;true;true;false;false
core_arch::x86::avx512vnni::_mm_mask_dpbusd_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask3_fmaddsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtusepi64_epi32;true;true;false;false
num::<impl u32>::rotate_right;false;false;false;false
num::saturating::Saturating::<i64>::pow;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_sum;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&usize>>::sub_assign;false;false;true;false
core_arch::x86::sse2::_mm_set1_epi16;true;true;false;false
ffi::c_str::CStr::count_bytes;false;false;false;false
<result::Iter<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_min_epu32;true;true;false;false
<usize as ops::arith::DivAssign>::div_assign;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::Mul<&num::saturating::Saturating<i32>>>::mul;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::DivAssign<&num::saturating::Saturating<u128>>>::div_assign;false;false;true;false
ops::control_flow::ControlFlow::<R, <R as ops::try_trait::Try>::Output>::into_try;false;false;true;false
num::<impl i32>::checked_abs;false;false;false;false
cmp::impls::<impl cmp::PartialEq for u32>::ne;false;false;false;false
fmt::num::<impl fmt::Octal for u64>::fmt;false;false;true;false
num::<impl u16>::overflowing_shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_rolv_epi64;true;true;false;false
num::bignum::Big32x40::get_bit;false;false;true;false
num::wrapping::Wrapping::<i64>::abs;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::simd_clamp;false;false;true;false
<i32 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
num::<impl u32>::max_value;false;false;false;false
<Iter as iter::traits::collect::TraitC<EC, EB, EA>>::extend;false;false;true;false
<slice::iter::RChunks<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
slice::<impl [T]>::ends_with;false;false;false;false
core_arch::x86::xsave::_xrstors;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_fcmadd_pch;true;true;true;false
core_arch::x86::avx::_mm256_blendv_pd;true;true;true;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::arith::SubAssign<&num::wrapping::Wrapping<i64>>>::sub_assign;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::trailing_zeros;false;false;false;false
num::wrapping::Wrapping::<u32>::to_be;false;false;false;false
<num::niche_types::NonZeroU16Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i128>::try_from;false;false;false;false
slice::sort::stable::quicksort::stable_partition;false;true;true;true
<i64 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask3_fmsubadd_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundpd_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_reduce_max_epu16;true;true;false;false
core_arch::x86::__m128d::splat::JustOne;false;false;true;false
cell::UnsafeCell::<T>::from_mut;false;true;true;false
ffi::c_str::CStr::is_empty;false;true;false;false
<f64 as convert::num::FloatToInt<i64>>::to_int_unchecked;true;true;true;false
<num::saturating::Saturating<usize> as ops::bit::BitXorAssign<&num::saturating::Saturating<usize>>>::bitxor_assign;false;false;true;false
num::<impl i128>::checked_abs;false;false;false;false
<u128 as ops::bit::Shr<u16>>::shr;false;false;false;false
char::methods::<impl char>::is_lowercase;false;false;false;false
fmt::num::<impl fmt::Debug for i128>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_mul_pch;true;true;true;false
ascii::ascii_char::AsciiChar::as_str;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<i32, N>>::sum;false;false;false;true
<i8 as ops::bit::Shl<u16>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u128>>::try_from;false;true;false;false
<i16 as ops::arith::Rem<&i16>>::rem;false;false;false;false
str::pattern::ReverseSearcher::next_reject_back;false;false;true;true
core_arch::x86::avx512f::_mm_roundscale_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_permutexvar_ps;true;true;true;false
<&usize as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_storeu_pd;true;true;true;false
slice::iter::RChunksExact::<'a, T>::new;false;true;false;false
<&T as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::u64x1 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_setr_epi32;true;false;false;false
<char::EscapeDebug as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512ifma::_mm256_madd52hi_avx_epu64;true;true;false;false
num::<impl u64>::ilog2;false;false;false;false
option::Option::<T>::as_deref;false;false;true;false
slice::<impl [T]>::as_simd_mut;false;true;true;false
<marker::PhantomPinned as fmt::Debug>::fmt;false;false;true;false
<&isize as ops::arith::Sub<&isize>>::sub;false;false;false;false
<u64 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as iter::traits::accum::Sum>::sum;false;false;false;true
sync::atomic::AtomicI64::compare_exchange_weak;false;true;true;false
core_arch::x86::avx512bf16::_mm_mask_cvtpbh_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundps_epi32;true;true;true;false
num::<impl u32>::wrapping_shr;false;true;false;false
<u64 as fmt::num::DisplayInt>::to_u64;false;false;false;false
core_arch::x86::avx2::_mm256_min_epu32;true;true;false;false
slice::<impl [T]>::iter_mut;false;false;true;false
<&i32 as ops::bit::Shr<&usize>>::shr;false;false;false;false
net::socket_addr::SocketAddrV6::set_scope_id;false;false;true;false
core_simd::masks::mask_impl::Mask::<T, N>::set_unchecked;true;false;true;false
f16::<impl f16>::next_down;false;false;true;false
<&'a i128 as ops::bit::BitXor<i128>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundps_epu32;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_sqrt_pd;true;true;true;false
core_arch::simd::i16x8::from_array;false;false;false;false
ffi::c_str::FromBytesUntilNulError;false;false;false;false
num::saturating::Saturating::<i128>::from_be;false;false;false;false
<num::niche_types::NonZeroI64Inner as cmp::PartialOrd>::partial_cmp;false;false;false;false
<num::nonzero::NonZero<u32> as str::traits::FromStr>::from_str;false;false;false;false
char::methods::encode_utf16_raw;false;true;true;false
intrinsics::atomic_umax_acqrel;true;false;true;false
net::socket_addr::SocketAddrV6::flowinfo;false;false;true;false
intrinsics::needs_drop;false;false;false;false
<num::bignum::tests::Big8x3 as fmt::Debug>::fmt;false;true;true;true
core_arch::x86::avx::_mm256_insertf128_pd;true;true;true;false
<f64 as ops::arith::Rem>::rem;false;false;true;false
<i16 as ops::bit::Shr<u32>>::shr;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
num::<impl u64>::strict_add_signed;false;false;false;false
cmp::impls::<impl cmp::PartialEq for f64>::eq;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitAndAssign<&num::wrapping::Wrapping<u64>>>::bitand_assign;false;false;true;false
num::<impl u64>::checked_rem_euclid;false;false;false;false
<&'a i128 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask3_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask3_fmsubadd_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_fmadd_pd;true;true;true;false
core_arch::x86::avx512f::_mm_getmant_ss;true;true;true;false
<net::ip_addr::Ipv6Addr as ops::bit::Not>::not;false;false;false;true
<iter::adapters::peekable::Peekable<I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
num::<impl u8>::unchecked_sub;true;false;false;false
tuple::<impl cmp::PartialOrd for (C, B, A, Z, Y, X, W, V, U, T)>::le;false;false;false;false
num::nonzero::NonZero::<i64>::swap_bytes;false;true;false;false
<num::saturating::Saturating<T> as cmp::PartialEq>::eq;false;false;true;false
ptr::const_ptr::<impl *const T>::copy_to_nonoverlapping;true;true;true;false
core_arch::x86::avx512f::_mm512_setr4_epi64;true;true;false;false
core_arch::x86::avx512f::_mm256_cmpgt_epu32_mask;true;true;false;false
<&num::saturating::Saturating<i16> as ops::arith::Neg>::neg;false;false;false;false
<num::dec2flt::decimal_seq::DecimalSeq as clone::Clone>::clone;false;false;false;false
convert::num::<impl convert::TryFrom<i16> for u16>::try_from;false;false;false;false
<&'a u128 as ops::bit::Shr<u16>>::shr;false;false;false;false
<usize as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_cvt_roundss_sd;true;true;true;false
<fmt::rt::Placeholder as clone::Clone>::clone;false;false;true;false
intrinsics::atomic_xor_acqrel;true;false;true;false
<num::niche_types::NonZeroUsizeInner as clone::Clone>::clone;false;false;false;false
slice::iter::IterMut::<'a, T>::make_slice;false;true;true;false
core_arch::x86::avx512dq::_ktest_mask8_u8;true;true;true;false
num::saturating::Saturating::<i64>::count_zeros;false;false;false;false
num::<impl u16>::unbounded_shr;false;true;false;false
<option::Item<A> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_fmsub_pd;true;true;true;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::avx512f::_mm512_unpacklo_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_storeu_epi16;true;true;true;false
num::nonzero::NonZero::<i32>::swap_bytes;false;true;false;false
<usize as ops::bit::Shr<u128>>::shr;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512cd::_mm256_mask_lzcnt_epi64;true;true;false;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&u32>>::sub_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<num::dec2flt::ParseFloatError as error::Error>::description;false;false;false;false
intrinsics::mir::__internal_make_place::panic_cold_explicit;false;false;false;false
core_arch::x86::avx512f::_mm512_i64gather_epi32;true;true;true;false
core_arch::x86_64::avx512f::_mm_cvt_roundss_i64;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fmsubadd_pd;true;true;true;false
num::<impl u128>::carrying_mul_add;false;false;false;false
core_arch::x86::avx512f::_mm512_roundscale_ps;true;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitXorAssign<&i32>>::bitxor_assign;false;false;true;false
<i64 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
<ptr::metadata::DynMetadata<Dyn> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm512_or_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_storeu_epi32;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::RemAssign<&num::saturating::Saturating<u32>>>::rem_assign;false;false;true;false
convert::num::<impl convert::From<bool> for i64>::from;false;false;false;false
<str::pattern::StrSearcher<'a, 'b> as clone::Clone>::clone;false;false;true;false
<convert::Infallible as error::Error>::description;false;false;false;false
iter::traits::iterator::Iterator::skip_while;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
result::Result::<T, E>::ok;false;false;true;false
cmp::min;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::get;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_rorv_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_sub_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_fmaddsub_pd;true;true;true;false
"array::<impl [T; N]>::rsplit_array_ref";false;false;false;false
<marker::variance::PhantomInvariantLifetime<'_> as fmt::Debug>::fmt;false;false;true;false
<isize as ops::bit::ShlAssign<i32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_getexp_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cvttpd_epu32;true;true;true;false
<i64 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&num::wrapping::Wrapping<u16>>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_unpackhi_epi16;true;true;false;false
num::niche_types::NonZeroU64Inner;true;false;false;false
core_arch::x86::sse42::_mm_crc32_u8;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::Div>::div;false;false;false;false
<[T] as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<&num::wrapping::Wrapping<u16>>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_sllv_epi32;true;true;false;false
core_arch::x86::gfni::_mm512_mask_gf2p8affineinv_epi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_add_epi64;true;true;false;false
core_arch::simd::f32x4;false;false;true;false
<i8 as ops::bit::Shr<u8>>::shr;false;false;false;false
f32::<impl f32>::is_normal;false;false;true;false
<char as str::pattern::Pattern>::into_searcher;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_sqrt_ph;true;true;true;false
core_arch::x86::avx::_mm256_testc_ps;true;true;true;false
<f16 as ops::arith::DivAssign>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_min_epu64;true;true;false;false
<sync::atomic::AtomicUsize as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtps_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm256_castph_pd;true;false;true;false
<u8 as ops::arith::SubAssign<&u8>>::sub_assign;false;false;true;false
<&'a i128 as ops::bit::Shl<u128>>::shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_add_epi8;true;true;false;false
<&'a u64 as ops::bit::Shr<i16>>::shr;false;false;false;false
pin::Pin::<Ptr>::as_ref;false;true;true;false
core_arch::x86::avx512f::_mm_mask2_permutex2var_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_or_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<i16, 8>> for core_arch::x86::__m128i>::from;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_unpackhi_epi32;true;true;false;false
<i16 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<any::TypeId as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86_64::bmi::_blsmsk_u64;true;false;false;false
core_arch::x86::avx512ifma::_mm256_mask_madd52hi_epu64;true;true;false;false
<isize as ops::arith::MulAssign>::mul_assign;false;false;true;false
<cmp::Reverse<T> as cmp::PartialOrd>::le;false;false;true;false
core_arch::x86::avx512bw::_mm_reduce_min_epu16;true;true;false;false
convert::num::<impl convert::TryFrom<u64> for i16>::try_from;false;false;false;false
num::nonzero::NonZero::<u32>::checked_add;false;true;false;false
core_arch::x86::avx512bw::_mm256_srlv_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_compress_ps;true;true;true;false
core_arch::x86::avx512f::_knot_mask16;true;false;false;false
<&'a u64 as ops::bit::Shr<u8>>::shr;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::AddAssign<&num::saturating::Saturating<i32>>>::add_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_maskz_sub_epi8;true;true;false;false
num::<impl u8>::unchecked_sub::precondition_check;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_shuffle_f64x2;true;true;true;false
<&num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm512_sqrt_round_ph;true;true;true;false
<u128 as ops::bit::Shl>::shl;false;false;false;false
num::saturating::Saturating::<isize>::from_le;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
core_arch::x86::avx512f::_mm512_scalef_pd;true;true;true;false
cell::Cell::<T>::get;false;true;true;false
core_arch::x86::vpclmulqdq::_mm256_clmulepi64_epi128;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_unpacklo_epi8;true;true;false;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<i32, N>>::rem;false;true;false;false
<alloc::AllocError as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_abs_epi64;true;true;false;false
core_arch::x86::avx512vbmi::_mm512_mask2_permutex2var_epi8;true;true;false;false
<(EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(K, J, I, H, G, F, E, D, C, B, A)>>::extend;false;false;true;false
<i128 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
<u8 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<isize>::swap_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fcmul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_max_epi32;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::AddAssign<&num::saturating::Saturating<isize>>>::add_assign;false;false;true;false
<u8 as ops::bit::Not>::not;false;false;false;false
<&'a i8 as ops::bit::Shl<usize>>::shl;false;false;false;false
<ops::range::Range<A> as iter::range::RangeIteratorImpl>::spec_next_back;false;false;true;false
core_arch::simd::i32x8::from_array;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtt_roundph_epi32;true;true;true;false
<i16 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
num::<impl i8>::saturating_abs;false;false;false;false
core_arch::simd::u16x4::splat;false;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtx_roundph_ps;true;true;true;false
hash::impls::<impl hash::Hash for u16>::hash;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<usize> for core_simd::vector::Simd<usize, N>>::shl;false;false;false;false
ptr::non_null::NonNull::<T>::write;true;true;true;false
<&'a usize as ops::arith::Rem<usize>>::rem;false;false;false;false
cell::Cell::<T>::new;false;false;false;false
<iter::adapters::copied::Copied<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
hash::Hasher::write_i128;false;false;true;false
core_arch::x86::sse::_mm_cvttss_si32;true;true;true;false
core_arch::x86::avx512f::_mm512_load_pd;true;true;true;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i16>::gt;false;false;false;false
<&num::wrapping::Wrapping<isize> as ops::bit::BitAnd<&num::wrapping::Wrapping<isize>>>::bitand;false;false;false;false
fmt::FormattingOptions::get_width;false;false;true;false
slice::iter::IterMut::<'a, T>::pre_dec_end;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtsd_sh;true;true;true;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
<num::saturating::Saturating<i32> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_srl_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_slli_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_sub_round_ph;true;true;true;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::sse2::_mm_load_pd;true;true;true;false
num::nonzero::NonZero::<isize>::trailing_zeros;false;true;false;false
str::iter::SplitInternal::<'a, P>::next_back;false;true;true;false
<u16 as ops::arith::AddAssign>::add_assign;false;false;true;false
<slice::iter::RSplitMut<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cmplt_epu8_mask;true;true;false;false
<isize as ops::bit::Shr<&i16>>::shr;false;false;false;false
sync::atomic::AtomicUsize::get_mut_slice;false;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
<i32 as ops::arith::RemAssign>::rem_assign;false;false;true;false
sync::atomic::AtomicU8::new;false;false;false;false
core_arch::x86::avx512bw::_mm_cmple_epu8_mask;true;true;false;false
time::Duration::from_weeks;false;false;false;false
core_arch::x86::avx512fp16::_mm_rsqrt_ph;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXor<&num::wrapping::Wrapping<i16>>>::bitxor;false;false;false;false
<num::bignum::Big32x40 as cmp::PartialEq>::eq;false;false;true;false
<u32 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::avx::_mm256_set_m128i;true;true;false;false
core_arch::x86::avx512bw::_mm_mask_packus_epi16;true;true;false;false
<iter::adapters::map_while::MapWhile<I, P> as iter::adapters::SourceIter>::as_inner;true;true;true;false
fmt::num::<impl fmt::LowerHex for u8>::fmt;false;false;true;false
<core_arch::x86::__m256i as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmple_epu32_mask;true;true;false;false
core_arch::x86::avx::_mm256_addsub_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtph_pd;true;true;true;false
core_arch::x86::avx512dq::_mm_maskz_reduce_ps;true;true;true;false
<&i128 as ops::arith::Neg>::neg;false;false;false;false
<i8 as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_mov_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_broadcast_f64x4;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_andnot_epi32;true;true;false;false
<char::ToUppercase as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm_mask_expandloadu_ps;true;true;true;false
<num::niche_types::NonZeroI32Inner as fmt::Debug>::fmt;false;false;true;false
<marker::variance::PhantomInvariantLifetime<'a> as clone::Clone>::clone;false;false;true;false
intrinsics::atomic_max_acqrel;true;false;true;false
<core_arch::simd::u32x16 as fmt::Debug>::fmt;false;false;true;false
<u128 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
intrinsics::atomic_cxchgweak_relaxed_relaxed;true;false;true;false
core_arch::x86::avx512vpopcntdq::_mm512_mask_popcnt_epi64;true;true;false;false
core_arch::x86::fma::_mm256_fmadd_ps;true;true;true;false
char::convert::<impl convert::From<char> for u128>::from;false;false;false;false
<isize as ops::bit::BitXor<&isize>>::bitxor;false;false;false;false
core_arch::x86::sse2::_mm_slli_epi16;true;true;false;false
<&num::wrapping::Wrapping<i16> as ops::arith::Neg>::neg;false;false;false;false
"tuple::<impl convert::From<(T, T)> for [T; 2]>::from";false;false;true;false
<&u8 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_permutex2var_pd;true;true;true;false
num::nonzero::NonZero::<i128>::unchecked_mul;true;true;false;false
net::ip_addr::Ipv4Addr::is_multicast;false;false;false;false
<&usize as ops::bit::Shr<&u128>>::shr;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::AddAssign<&num::saturating::Saturating<i64>>>::add_assign;false;false;true;false
ptr::non_null::NonNull::<T>::new;false;true;true;false
<&u8 as ops::bit::Shl<&i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_xor_epi32;true;true;false;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
str::iter::MatchesInternal;false;false;false;false
num::wrapping::Wrapping::<i16>::rotate_right;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpge_epu64_mask;true;true;false;false
core_arch::x86::__m256bh::as_u32x8;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::Add>::add;false;false;false;false
iter::traits::iterator::Iterator::sum;false;false;false;false
num::<impl i128>::checked_rem_euclid;false;false;false;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByImpl<I>>::spec_size_hint::other_size;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvt_roundpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm512_cvttpd_epi32;true;true;true;false
<&'a num::wrapping::Wrapping<i128> as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvttps_epi64;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_range_pd;true;true;true;false
<num::nonzero::NonZero<T> as cmp::PartialOrd>::ge;false;false;true;false
<u16 as iter::traits::accum::Sum<&'a u16>>::sum;false;false;false;true
num::<impl u16>::to_be_bytes;false;false;false;false
<cell::lazy::LazyCell<T, F>::force_mut::really_init_mut::PoisonOnPanic<T, F> as ops::drop::Drop>::drop;false;true;true;false
panicking::panic_const::panic_const_add_overflow;false;false;false;false
<isize as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_unpacklo_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_or_epi32;true;true;false;false
<char::decode::DecodeUtf16<I> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
iter::traits::iterator::Iterator::map_windows;false;false;false;false
pin::Pin::<&'a mut T>::map_unchecked_mut;true;true;true;false
core_simd::masks::mask_impl::Mask::<T, N>::to_bitmask_impl;true;true;true;false
<u8 as ops::arith::Rem>::rem;false;false;false;false
num::nonzero::NonZero::<isize>::overflowing_abs;false;true;false;false
<core_arch::simd::i64x8 as fmt::Debug>::fmt;false;false;true;false
bstr::ByteStr::new;false;false;false;false
sync::atomic::AtomicI32::fetch_update;false;false;true;true
core_simd::ops::shift_scalar::<impl ops::bit::Shl<u64> for core_simd::vector::Simd<u64, N>>::shl;false;false;false;false
num::<impl usize>::checked_shr;false;true;false;false
intrinsics::cold_path;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_shuffle_epi32;true;true;false;false
num::<impl i128>::overflowing_div;false;false;false;false
<i8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
<net::socket_addr::SocketAddrV4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fnmsub_round_pd;true;true;true;false
<usize as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<u32 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::MulAssign>::mul_assign;false;false;true;false
num::<impl usize>::checked_sub;false;false;false;false
num::<impl usize>::wrapping_shr;false;true;false;false
intrinsics::copy_nonoverlapping::precondition_check;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_sra_epi64;true;true;false;false
ptr::null_mut;false;false;false;false
core_arch::x86::sse2::_mm_loadh_pd;true;true;true;false
core_arch::x86::avx2::_mm256_permutevar8x32_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_max_round_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_scalef_ph;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
<num::wrapping::Wrapping<u128> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<&'a num::wrapping::Wrapping<u16> as ops::arith::Sub<num::wrapping::Wrapping<u16>>>::sub;false;false;false;false
<&'a num::saturating::Saturating<u128> as ops::bit::BitOr<num::saturating::Saturating<u128>>>::bitor;false;false;false;false
<i64 as ops::bit::Shl<i8>>::shl;false;false;false;false
<str::pattern::Utf8Pattern<'a> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi16;true;true;false;false
num::nonzero::NonZero::<i16>::cast_unsigned;false;true;false;false
<&'a num::saturating::Saturating<i128> as ops::bit::BitAnd<num::saturating::Saturating<i128>>>::bitand;false;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::find;false;false;true;false
str::validations::run_utf8_validation::runtime;false;false;false;false
str::<impl str>::get;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor;false;false;false;false
num::<impl u32>::wrapping_neg;false;false;false;false
<&A as alloc::Allocator>::shrink;true;true;true;false
core_arch::x86::avx::_mm256_testc_pd;true;true;true;false
intrinsics::atomic_xadd_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm_maskz_mul_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtsepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_cvt_roundpd_epi32;true;true;true;false
num::<impl i64>::strict_rem_euclid;false;false;false;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked_mut::precondition_check;false;false;false;false
iter::traits::iterator::Iterator::product;false;false;false;false
num::dec2flt::parse::parse_number;false;false;false;false
core_arch::x86::avx512bw::_mm_cmpeq_epi16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_reduce_max_ph;true;true;true;false
<i32 as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::avx512fp16::_mm512_mask_cvtxps_ph;true;true;true;false
f16::<impl f16>::is_finite;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cmple_ps_mask;true;true;true;false
core_arch::x86::avx512bitalg::_mm256_mask_popcnt_epi16;true;true;false;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::is_negative;false;false;false;false
core_arch::x86::gfni::_mm256_gf2p8affine_epi64_epi8;true;true;false;false
<(EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(F, E, D, C, B, A)>>::extend_one_unchecked;true;true;true;false
core_arch::x86::avx::_mm256_cvtps_epi32;true;true;true;false
core_arch::simd::u16x16::splat;false;true;false;false
<ascii::ascii_char::AsciiChar as iter::range::Step>::forward_checked;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_fnmadd_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_cvtpd_epu64;true;true;true;false
<&'a i64 as ops::bit::Shl<i64>>::shl;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitAndAssign<&u8>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_shuffle_ps;true;true;true;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::index;false;true;true;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<iter::adapters::intersperse::Intersperse<I> as iter::traits::iterator::Iterator>::fold;false;false;true;false
core_arch::x86::avx512f::_mm_mask_storeu_epi64;true;true;true;false
<i8 as ops::bit::Shr<&u128>>::shr;false;false;false;false
task::wake::Context::<'a>::waker;false;false;true;false
task::wake::ContextBuilder::<'a>::from;false;false;true;false
core_arch::x86::sse::_mm_min_ss;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_mul_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtt_roundps_epu32;true;true;true;false
num::<impl i128>::checked_ilog10;false;false;false;false
<T as array::SpecArrayClone>::clone;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::RemAssign<&u16>>::rem_assign;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<i8, N>> for core_simd::vector::Simd<i8, N>>::product;false;false;false;true
num::<impl u32>::wrapping_add;false;false;false;false
<isize as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<() as default::Default>::default;false;false;false;false
<&num::wrapping::Wrapping<u128> as ops::arith::Mul<&num::wrapping::Wrapping<u128>>>::mul;false;false;false;false
f16::<impl f16>::recip;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::DivAssign>::div_assign;false;false;true;false
num::niche_types::NonZeroI128Inner::new;false;false;false;false
fmt::builders::FromFn;false;false;false;false
<&'a num::saturating::Saturating<u16> as ops::bit::BitAnd<num::saturating::Saturating<u16>>>::bitand;false;false;false;false
<i8 as iter::range::Step>::forward_checked;false;false;false;false
core_arch::simd::m8x32::new;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_compressstoreu_epi64;true;true;true;false
<str::error::ParseBoolError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_simd::masks::Mask::<T, N>::from_int;false;true;true;false
core_arch::x86::avx512bw::_mm_mask_loadu_epi16;true;true;true;false
intrinsics::simd::simd_ctlz;true;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<i16>>::try_from;false;true;false;false
cell::once::OnceCell::<T>::get;false;true;true;false
<&i8 as ops::bit::Shr<&i32>>::shr;false;false;false;false
fmt::num::<impl fmt::Octal for u16>::fmt;false;false;true;false
<&num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor;false;false;false;false
num::<impl u128>::carrying_add;false;true;false;false
core_arch::x86::avx512fp16::_mm_mask_conj_pch;true;true;true;false
core_arch::x86::avx2::_mm256_slli_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_cvtusepi64_epi32;true;true;false;false
<range::RangeFrom<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<&u128>>::bitxor_assign;false;false;true;false
core_arch::simd::i16x16::splat;false;true;false;false
core_arch::x86::avx512f::_mm256_alignr_epi64;true;true;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
intrinsics::atomic_and_seqcst;true;false;true;false
<i16 as ops::bit::Shr<&usize>>::shr;false;false;false;false
fmt::num::<impl fmt::Octal for u8>::fmt;false;false;true;false
core_arch::x86::cpuid::__get_cpuid_max;true;true;false;false
<&'a u16 as ops::bit::Shr<i32>>::shr;false;false;false;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
ffi::c_str::CStr::bytes;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::Shl<&usize>>::shl;false;false;false;false
core_arch::x86::avx512bf16::_mm256_mask_cvtneps_pbh;true;true;true;false
cmp::PartialOrd::le;false;false;false;false
<i64 as ops::bit::Shr<i32>>::shr;false;false;false;false
<time::Duration as ops::arith::DivAssign<u32>>::div_assign;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::arith::DivAssign<&u64>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_srli_epi32;true;true;false;false
core_simd::vector::Simd::<T, N>::load_select_ptr;true;true;true;false
core_arch::simd::u32x8::splat::JustOne;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepi32_storeu_epi16;true;true;true;false
core_arch::x86::avx512f::_mm_scalef_ss;true;true;true;false
intrinsics::atomic_nand_relaxed;true;false;true;false
<net::ip_addr::IpAddr as fmt::Display>::fmt;false;false;true;false
str::iter::RMatchIndices;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_srai_epi64;true;true;false;false
<i8 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
num::<impl u8>::saturating_mul;false;false;false;false
<isize as ops::bit::BitOrAssign<&isize>>::bitor_assign;false;false;true;false
num::int_sqrt::panic_for_negative_argument;false;false;false;false
net::socket_addr::SocketAddr::set_port;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_min_ss;true;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::abs;false;false;false;false
<slice::iter::Chunks<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
core_arch::x86::avx512f::_mm256_max_epi64;true;true;false;false
intrinsics::atomic_store_unordered;true;false;true;false
<u8 as ops::arith::RemAssign<&u8>>::rem_assign;false;false;true;false
<&'a isize as ops::bit::Shr<i16>>::shr;false;false;false;false
<f32 as iter::traits::accum::Product>::product;false;false;false;true
"tuple::<impl convert::From<[T; 12]> for (T, T, T, T, T, T, T, T, T, T, T, T)>::from";false;false;false;false
num::niche_types::NonZeroIsizeInner;true;false;false;false
num::nonzero::NonZero::<i16>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fmsub_round_ss;true;true;true;false
<&'a num::wrapping::Wrapping<isize> as ops::arith::Mul<num::wrapping::Wrapping<isize>>>::mul;false;false;false;false
str::iter::SplitInclusive::<'a, P>::remainder;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtt_roundpd_epi64;true;true;true;false
num::<impl u16>::midpoint;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::get;false;true;false;false
<core_simd::masks::Mask<i8, N> as convert::From<core_simd::masks::Mask<i64, N>>>::from;false;false;true;false
<i128 as default::Default>::default;false;false;false;false
core_arch::x86::avx512f::_mm256_store_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm512_cmpgt_epi8_mask;true;true;false;false
num::<impl u128>::wrapping_add_signed;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cvtusepi16_epi8;true;true;false;false
core_arch::x86::avx512bf16::_mm_cvtneps_pbh;true;true;true;false
convert::num::<impl convert::TryFrom<i64> for num::nonzero::NonZero<i64>>::try_from;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold::flatten;false;false;false;false
core_arch::x86::avx2::_mm_broadcastsd_pd;true;true;true;false
convert::num::<impl convert::TryFrom<u128> for i32>::try_from;false;false;false;false
<ops::range::RangeTo<Idx> as cmp::PartialEq>::eq;false;false;true;false
<cell::lazy::LazyCell<T> as default::Default>::default;false;false;false;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::cast;false;true;false;false
<i64 as ops::bit::BitXor<&i64>>::bitxor;false;false;false;false
fmt::num::<impl fmt::Binary for i128>::fmt;false;false;true;false
tuple::<impl cmp::PartialOrd for (C, B, A, Z, Y, X, W, V, U, T)>::partial_cmp;false;false;false;false
<i64 as ops::bit::Shl<&i16>>::shl;false;false;false;false
core_arch::x86::sse::_mm_cmplt_ss;true;true;true;false
num::<impl str::traits::FromStr for u128>::from_str;false;false;false;false
<&'a u64 as ops::bit::Shr<u16>>::shr;false;false;false;false
<u64 as iter::range::Step>::forward_checked;false;false;false;false
sync::atomic::AtomicU8::into_inner;false;false;true;false
<core_arch::simd::u32x32 as fmt::Debug>::fmt;false;false;true;false
<slice::iter::ChunksExactMut<'_, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
num::<impl i64>::unchecked_mul;true;false;false;false
ptr::unique::Unique::<T>::as_ref;true;true;true;false
intrinsics::simd::simd_add;true;false;false;false
<&'a T as error::Error>::description;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi8;true;true;false;false
core_arch::x86::sse2::_mm_stream_pd;true;true;true;false
f32::<impl f32>::to_int_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm256_sra_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_unpacklo_pd;true;true;true;false
hint::likely;false;false;false;false
<marker::variance::PhantomContravariantLifetime<'a> as cmp::PartialEq>::eq;false;false;true;false
<&i128 as ops::bit::Not>::not;false;false;false;false
<u64 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
char::convert::<impl convert::TryFrom<char> for u8>::try_from;false;false;false;false
net::ip_addr::Ipv6Addr::to_bits;false;false;false;false
sync::atomic::AtomicU32::load;false;true;true;false
tuple::<impl cmp::PartialEq for (C, B, A, Z, Y, X, W, V, U, T)>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmsub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_store_si512;true;true;true;false
core_arch::simd::f32x8::new;false;false;true;false
core_arch::x86::avx512dq::_kxor_mask8;true;false;false;false
core_arch::x86::avx512fp16::_mm256_castsi256_ph;true;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAnd>::bitand;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_and;false;true;false;false
<num::wrapping::Wrapping<u128> as ops::bit::Not>::not;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::rfold::flatten;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mul_epi32;true;true;false;false
<&'a u32 as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_cmplt_epi32_mask;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u16>::lt;false;false;false;false
<u64 as ops::arith::RemAssign>::rem_assign;false;false;true;false
<&'a u16 as ops::bit::Shl<i16>>::shl;false;false;false;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::traits::iterator::Iterator>::next::check;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::Neg>::neg;false;false;false;false
error::Error::cause;false;false;false;false
"array::<impl cmp::PartialOrd for [T; N]>::ge";false;false;false;false
<slice::sort::shared::smallsort::CopyOnDrop<T> as ops::drop::Drop>::drop;false;true;true;false
task::wake::ContextBuilder::<'a>::ext;false;false;true;false
num::<impl u8>::make_ascii_uppercase;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_shuffle_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi64_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_cmpgt_epu32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_max_epu8;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mul_ph;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<&i8> for &'lhs core_simd::vector::Simd<i8, N>>::shl;false;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
num::wrapping::Wrapping::<i128>::rotate_right;false;false;false;false
num::<impl u16>::from_ascii;false;false;false;false
<&'a u8 as ops::bit::Shr<u64>>::shr;false;false;false;false
<&'a num::wrapping::Wrapping<u64> as ops::bit::BitOr<num::wrapping::Wrapping<u64>>>::bitor;false;false;false;false
intrinsics::sinf16;true;false;true;false
<&mut T as convert::AsMut<U>>::as_mut;false;false;true;false
<num::error::ParseIntError as fmt::Debug>::fmt;false;false;true;false
<i32 as iter::range::Step>::backward;false;false;false;false
<&i64 as ops::bit::Shr<&isize>>::shr;false;false;false;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmpneq_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_srli_epi32;true;true;false;false
slice::<impl [T]>::as_mut_array;false;true;true;false
<i32 as ops::bit::Shl<u8>>::shl;false;false;false;false
alloc::layout::Layout::array::inner;false;true;false;false
iter::sources::from_coroutine::from_coroutine;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_srai_epi16;true;true;false;false
<core_arch::x86::__m512i::splat::JustOne as clone::Clone>::clone;false;false;false;false
mem::zeroed;true;true;false;false
core_arch::x86::avx512f::_mm_cvt_roundss_si32;true;true;true;false
num::<impl i32>::checked_div;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::Mul>::mul;false;false;false;false
<i128 as ops::bit::Shr<&isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmp_sd_mask;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_fnmsub_ps;true;true;true;false
core_arch::x86::sse2::_mm_ucomilt_sd;true;true;true;false
num::nonzero::NonZero::<i8>::checked_abs;false;true;false;false
<num::saturating::Saturating<u32> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvtepi16_ph;true;true;false;false
core_arch::x86::sha::_mm_sha1msg1_epu32;true;true;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<usize, N>>::bitand;false;true;false;false
num::nonzero::NonZero::<i32>::wrapping_abs;false;true;false;false
<core_arch::x86::__m128 as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::m32x8::splat::JustOne;false;false;false;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_rfold::flatten;false;false;true;false
<num::saturating::Saturating<u8> as ops::bit::BitXorAssign<&u8>>::bitxor_assign;false;false;true;false
<f16 as ops::arith::RemAssign<&f16>>::rem_assign;false;false;true;false
<(EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(I, H, G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
num::<impl isize>::from_str_radix;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_shldi_epi64;true;true;false;false
<task::wake::Waker as ops::drop::Drop>::drop;false;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_mul_pch;true;true;true;false
core_arch::x86::avx512dq::_mm_mask_cvttpd_epu64;true;true;true;false
<num::saturating::Saturating<i32> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
num::<impl u16>::strict_add_signed;false;false;false;false
<(dyn error::Error + 'static)>::downcast_mut;false;true;true;false
<core_arch::simd::u16x16 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fmadd_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_movedup_pd;true;true;true;false
iter::adapters::map_windows::MapWindowsInner::<I, N>::new;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
slice::iter::ChunksMut::<'a, T>::new;false;false;true;false
core_arch::x86::sse42::_mm_cmpestri;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtepu32_pd;true;true;false;false
<array::Guard<'_, T> as ops::drop::Drop>::drop;false;true;true;false
num::<impl i32>::ilog2;false;false;false;false
<i128 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
slice::<impl [T]>::binary_search_by_key;false;false;false;false
<i32 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
intrinsics::sinf32;true;false;true;false
fmt::num::<impl fmt::LowerExp for u128>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_mul_round_sch;true;true;true;false
<slice::iter::ArrayChunksMut<'a, T, N> as fmt::Debug>::fmt;false;false;true;false
<marker::variance::PhantomContravariantLifetime<'a> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_max_ph;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_compress_epi32;true;true;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i8>::max_unsigned;false;false;false;false
<&num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvt_roundsh_sd;true;true;true;false
<usize as ops::arith::Div>::div;false;false;false;false
sync::atomic::AtomicI32::fetch_xor;false;true;true;false
<num::wrapping::Wrapping<u16> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<panic::location::Location<'a> as hash::Hash>::hash;false;false;true;false
<core_simd::vector::Simd<i32, 16> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<u8 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundph_epi64;true;true;true;false
<i8 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_reduce_round_sh;true;true;true;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<i16, N>>::neg;false;true;false;false
num::nonzero::NonZero::<u64>::checked_add;false;true;false;false
<num::nonzero::NonZero<T> as fmt::LowerExp>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_epi32;true;true;false;false
<&num::wrapping::Wrapping<u128> as ops::bit::Shr<&usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_getmant_round_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvt_roundu32_sh;true;true;true;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
iter::adapters::flatten::and_then_or_clear;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_shrdi_epi16;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::RemAssign<&isize>>::rem_assign;false;false;true;false
core_arch::x86_64::sse2::_mm_cvttsd_si64;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi16;true;true;false;false
num::<impl i32>::strict_sub_unsigned;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<&'a num::wrapping::Wrapping<u32> as ops::arith::Mul<num::wrapping::Wrapping<u32>>>::mul;false;false;false;false
<i16 as iter::traits::accum::Product>::product;false;false;false;true
<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<u32>>::mul_assign;false;false;true;false
<iter::adapters::map::Map<I, F> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
sync::atomic::AtomicPtr::<T>::fetch_or;false;true;true;false
<num::nonzero::NonZero<T> as ops::bit::BitOr>::bitor;false;true;true;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::count;false;false;true;true
<&mut W as fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_xor_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_max_epi8;true;true;false;false
core_arch::x86::avx512dq::_mm_range_round_sd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtepi8_epi32;true;true;false;false
<num::saturating::Saturating<T> as fmt::UpperHex>::fmt;false;false;true;false
<iter::sources::from_fn::FromFn<F> as fmt::Debug>::fmt;false;false;true;false
<task::wake::RawWaker as cmp::PartialEq>::eq;false;false;true;false
num::<impl i32>::from_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi32_epi8;true;true;false;false
num::<impl usize>::swap_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm256_cmplt_epu8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundepi64_ps;true;true;false;false
num::<impl i16>::saturating_mul;false;false;false;false
<&isize as ops::bit::Shl<&u32>>::shl;false;false;false;false
<T as slice::sort::shared::smallsort::UnstableSmallSortFreezeTypeImpl>::small_sort;false;false;true;false
<&'a num::wrapping::Wrapping<i8> as ops::arith::Rem<num::wrapping::Wrapping<i8>>>::rem;false;false;false;false
core_arch::x86::sse41::_mm_testc_si128;true;true;false;false
num::bignum::Big32x40::sub;false;false;true;true
<num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem;false;false;false;false
<&'a i32 as ops::arith::Div<i32>>::div;false;false;false;false
<ops::range::Range<usize> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<usize>>>::setup;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_store_pd;true;true;true;false
num::<impl u32>::to_ne_bytes;false;false;false;false
tuple::<impl cmp::Ord for (X, W, V, U, T)>::cmp;false;false;false;false
<ffi::c_str::FromBytesWithNulError as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::ssse3::_mm_abs_epi16;true;true;false;false
<&i8 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::saturating::Saturating<i16> as ops::arith::MulAssign<&i16>>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_movm_epi8;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::cast_const;false;true;true;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::sse2::_mm_or_pd;true;true;true;false
<f16 as convert::num::FloatToInt<i8>>::to_int_unchecked;true;true;true;false
ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for num::nonzero::NonZero<usize>>::from;false;false;false;false
<&'a u8 as ops::bit::Shr<i16>>::shr;false;false;false;false
<&'a u32 as ops::bit::Shl<u8>>::shl;false;false;false;false
<iter::adapters::skip::Skip<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512f::_mm512_xor_epi64;true;true;false;false
num::<impl usize>::next_power_of_two;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::last;false;false;true;true
num::niche_types::NonZeroU128Inner::new_unchecked;true;false;false;false
<f128 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::sse2::_mm_maskmoveu_si128;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u64>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u64>>>::spec_fold;false;false;true;true
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::saturating_sub;false;true;false;false
<u64 as ops::bit::Shl<i32>>::shl;false;false;false;false
<u32 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
num::saturating::Saturating::<u64>::from_le;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::DivAssign<u16>>::div_assign;false;false;true;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<usize>> for usize>::div;false;false;false;false
<i64 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
iter::sources::empty::empty;false;false;false;false
fmt::float::float_to_decimal_common_shortest;false;true;true;false
<slice::ascii::EscapeAscii<'a> as fmt::Display>::fmt::needs_escape;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<net::ip_addr::IpAddr as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<str::pattern::CharSearcher<'a> as str::pattern::ReverseSearcher<'a>>::next_match_back;false;true;true;true
<&mut I as iter::traits::iterator::IteratorRefSpec>::spec_try_fold;false;false;true;true
core_arch::x86::avx512f::_mm_maskz_sub_ss;true;true;true;false
sync::atomic::AtomicPtr::<T>::get_mut_slice;false;true;true;false
<char as str::pattern::Pattern>::strip_prefix_of;false;false;false;false
tuple::<impl cmp::PartialEq for (A, Z, Y, X, W, V, U, T)>::ne;false;false;false;false
hash::Hasher::write_usize;false;false;true;false
core_arch::x86::avx512f::_mm512_castps512_ps128;true;true;true;false
ptr::const_ptr::<impl *const T>::map_addr;false;false;true;false
<&i16 as ops::bit::Shl<&i32>>::shl;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
core_arch::x86::avx::_mm256_storeu2_m128i;true;true;true;false
core_arch::x86::avx512bw::_mm_maskz_abs_epi8;true;true;false;false
<i8 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fmsub_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm_cvtepu64_ph;true;true;false;false
<u16 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
intrinsics::saturating_sub;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<&u8>>::bitor_assign;false;false;true;false
num::<impl isize>::saturating_add_unsigned;false;false;false;false
<i128 as ops::bit::BitXor<&i128>>::bitxor;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_sub_epi16;true;true;false;false
slice::<impl [T]>::last;false;false;false;false
convert::num::<impl convert::From<u16> for i128>::from;false;false;false;false
slice::<impl [T]>::fill_with;false;false;true;true
core_arch::x86::avx512dq::_mm512_maskz_cvtps_epi64;true;true;true;false
intrinsics::mir::PtrMetadata::panic_cold_explicit;false;false;false;false
<&'a u128 as ops::bit::Shl<u8>>::shl;false;false;false;false
<&'a i128 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_fmsubadd_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_i32scatter_pd;true;true;true;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<u32, N>>::shl;false;true;false;false
<char as fmt::Display>::fmt;false;false;true;false
slice::index::slice_index_order_fail::do_panic::compiletime;false;false;false;false
<ops::range::Range<u64> as iter::adapters::step_by::SpecRangeSetup<ops::range::Range<u64>>>::setup;false;false;true;false
f64::<impl f64>::from_bits;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i8>>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mmask_i32gather_epi64;true;true;true;false
num::<impl u128>::checked_sub_signed;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_compress_pd;true;true;true;false
str::error::Utf8Error::error_len;false;false;false;false
core_arch::x86::sse::_mm_comile_ss;true;true;true;false
core_arch::x86::__m512::splat;false;true;true;false
core_arch::x86::avx512f::_mm_mask_and_epi64;true;true;false;false
core_arch::simd::u8x4;false;false;false;false
num::dec2flt::parse::try_parse_19digits;false;false;true;true
core_arch::simd::m8x16::splat::JustOne;false;false;false;false
<time::TryFromFloatSecsErrorKind as cmp::PartialEq>::eq;false;false;false;false
cmp::impls::<impl cmp::PartialEq<&B> for &A>::ne;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::arith::AddAssign<&u64>>::add_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::Div<&num::saturating::Saturating<u16>>>::div;false;false;false;false
<&mut W as fmt::Write::write_fmt::SpecWriteFmt>::spec_write_fmt;false;false;true;false
num::<impl isize>::is_positive;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_shldi_epi64;true;true;false;false
num::<impl i32>::is_negative;false;false;false;false
<str::iter::Chars<'a> as iter::traits::iterator::Iterator>::next;false;true;true;false
num::<impl isize>::strict_rem_euclid;false;false;false;false
net::parser::<impl str::traits::FromStr for net::ip_addr::Ipv4Addr>::from_str;false;false;false;false
<&'a usize as ops::bit::Shr<isize>>::shr;false;false;false;false
convert::num::<impl convert::From<u8> for u32>::from;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvttsd_i64;true;true;true;false
<range::RangeFrom<T> as convert::From<ops::range::RangeFrom<T>>>::from;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::swap_bytes;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_sqrt_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_cvtepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_mask_getmant_ss;true;true;true;false
num::nonzero::NonZero::<i8>::trailing_zeros;false;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtsh_sd;true;true;true;false
slice::index::slice_index_order_fail::do_panic;false;false;false;false
core_arch::x86::avx512f::_mm_cmpneq_epi64_mask;true;true;false;false
num::<impl i128>::saturating_neg;false;false;false;false
<error::private::Internal as fmt::Debug>::fmt;false;false;true;false
<&u32 as ops::arith::Mul<&u32>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmsubadd_pd;true;true;true;false
slice::iter::RSplit::<'a, T, P>::new;false;false;false;false
core_arch::simd::f16x32;false;false;true;false
<u8 as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<&u64>>::bitand_assign;false;false;true;false
num::<impl isize>::isolate_most_significant_one;false;false;false;false
num::nonzero::NonZero::<i16>::isolate_most_significant_one;false;true;false;false
<str::iter::SplitN<'a, P> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::AddAssign<&u32>>::add_assign;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::num::int::SimdInt>::saturating_neg;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_slli_epi16;true;true;false;false
<i8 as iter::range::Step>::forward_unchecked;true;true;false;false
<&num::saturating::Saturating<u8> as ops::arith::Add<&num::saturating::Saturating<u8>>>::add;false;false;false;false
<&'a i32 as ops::bit::Shl<u64>>::shl;false;false;false;false
<array::TryFromSliceError as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<usize> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<usize>>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_cvtsepi32_epi16;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i16>>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cmpneq_epi8_mask;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
core_arch::x86::avx512dq::_mm_cvtepu64_ps;true;true;false;false
core_arch::x86::avx512vbmi2::_mm512_shrdv_epi16;true;true;false;false
<ascii::EscapeDefault as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<net::parser::AddrKind as clone::Clone>::clone;false;false;false;false
core_simd::masks::Mask::<T, N>::test_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm512_abs_epi8;true;true;false;false
ptr::non_null::NonNull::<T>::read;true;true;true;false
core_arch::x86::avx512bw::_mm512_maddubs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_mul_pch;true;true;true;false
<num::nonzero::NonZero<i8> as str::traits::FromStr>::from_str;false;false;false;false
hash::impls::<impl hash::Hash for [T]>::hash;false;false;true;false
<ptr::non_null::NonNull<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_unpacklo_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_cvttpd_epi64;true;true;true;false
<ptr::non_null::NonNull<T> as convert::From<&mut T>>::from;false;false;true;false
<i128 as ops::arith::Mul>::mul;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<i64 as ops::arith::Div>::div;false;false;false;false
<i16 as ops::bit::Shr<i128>>::shr;false;false;false;false
convert::num::<impl convert::From<i16> for f64>::from;false;false;false;false
<core_arch::simd::i64x2 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_storeu_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepu16_ph;true;true;false;false
ptr::non_null::NonNull::<[T]>::slice_from_raw_parts;false;true;true;false
core_arch::x86::avx2::_mm256_sub_epi16;true;true;false;false
num::<impl u32>::unchecked_add::precondition_check;false;false;false;false
core_arch::x86::avx512fp16::_mm256_cvtxph_ps;true;true;true;false
core_arch::x86_64::sse2::_mm_cvttsd_si64x;true;true;true;false
core_arch::x86::avx512f::_mm_mask_compress_ps;true;true;true;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;true;true;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;true
<u64 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<u32 as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_scalef_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask3_fnmadd_round_pd;true;true;true;false
<i8 as fmt::num::DisplayInt>::to_u8;false;false;false;false
core_arch::x86::avx512fp16::_mm256_castph_si256;true;false;true;false
core_arch::x86::avx512fp16::_mm_comile_sh;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_cvtph_ps;true;true;false;false
<core_arch::simd::i32x32 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_mul_round_sch;true;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::cast;false;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;true;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u8>::from;false;false;false;false
sync::atomic::AtomicBool::get_mut;false;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_sum;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmplt_epi64_mask;true;true;false;false
<&u32 as ops::arith::Sub<&u32>>::sub;false;false;false;false
core_arch::x86::avx::_mm256_load_ps;true;true;true;false
num::niche_types::I64NotAllOnes::new_unchecked;true;false;false;false
cmp::Ordering::is_gt;false;false;false;false
<usize as slice::cmp::SliceContains>::slice_contains;false;false;false;true
num::<impl u32>::overflowing_rem;false;false;false;false
<&'a num::wrapping::Wrapping<i32> as ops::arith::Div<num::wrapping::Wrapping<i32>>>::div;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtps_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_i32scatter_ps;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<&isize as ops::bit::BitXor<&isize>>::bitxor;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitOr<&num::wrapping::Wrapping<i32>>>::bitor;false;false;false;false
f16::<impl f16>::abs;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<&i16>>::bitxor_assign;false;false;true;false
<str::LinesMap as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_sra_epi64;true;true;false;false
hash::Hasher::write_str;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_storeu_epi8;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi16;true;true;false;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::last;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cvtsepi64_epi16;true;true;false;false
sync::atomic::AtomicU16::get_mut;false;false;true;false
num::nonzero::NonZero::<usize>::is_power_of_two;false;false;false;false
<hash::sip::SipHasher13 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_add_ph;true;true;true;false
<&i64 as ops::bit::BitOr<&i64>>::bitor;false;false;false;false
ops::function::impls::<impl ops::function::Fn<A> for &F>::call;false;false;false;false
sync::atomic::atomic_umax;true;true;true;false
num::<impl u128>::overflowing_add_signed;false;false;false;false
range::iter::<impl iter::traits::collect::IntoIterator for range::RangeFrom<A>>::into_iter;false;false;false;false
num::<impl u32>::leading_ones;false;false;false;false
core_arch::x86::__m256bh::as_mut_array;false;true;true;false
core_arch::x86::sse2::_mm_ucomile_sd;true;true;true;false
core_arch::x86::avx512dq::_mm512_broadcast_f64x2;true;true;true;false
num::wrapping::Wrapping::<u32>::trailing_zeros;false;false;false;false
num::<impl u64>::borrowing_sub;false;true;false;false
core_arch::x86::gfni::_mm_gf2p8affineinv_epi64_epi8;true;true;false;false
<u32 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
<str::pattern::CharSliceSearcher<'a, 'b> as str::pattern::Searcher<'a>>::next_match;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_moveldup_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_i64scatter_pd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u64>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cmpge_epi8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_range_pd;true;true;true;false
num::<impl u16>::borrowing_sub;false;true;false;false
<char::ToLowercase as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
num::saturating::Saturating::<usize>::reverse_bits;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked::precondition_check;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_mul_epi8;true;true;false;false
<&isize as ops::bit::Shr<&i64>>::shr;false;false;false;false
<u8 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
num::<impl i32>::strict_neg;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul;false;false;false;false
<u128 as ops::arith::DivAssign<&u128>>::div_assign;false;false;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u32>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u32>>>::spec_try_fold;false;false;true;true
num::nonzero::NonZero::<u16>::rotate_left;false;true;false;false
num::nonzero::<impl ops::arith::Rem<num::nonzero::NonZero<u64>> for u64>::rem;false;false;false;false
<num::bignum::tests::Big8x3 as cmp::PartialEq>::eq;false;false;true;false
<num::saturating::Saturating<u64> as ops::arith::DivAssign<u64>>::div_assign;false;false;true;false
num::saturating::Saturating::<u8>::rotate_right;false;false;false;false
<i32 as ops::arith::AddAssign>::add_assign;false;false;true;false
"cell::Cell::<[T; N]>::as_array_of_cells";false;true;true;false
<num::wrapping::Wrapping<i64> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<i64>>>::sum;false;false;false;true
core_arch::simd::f16x4::new;false;false;true;false
core_arch::x86::avx2::_mm256_mullo_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_mov_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_add_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_i32logather_pd;true;true;true;false
"array::ascii::<impl [u8; N]>::as_ascii";false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_rolv_epi32;true;true;false;false
clone::impls::<impl clone::Clone for i8>::clone;false;false;false;false
<usize as ops::bit::Shl<i128>>::shl;false;false;false;false
<num::nonzero::NonZero<i32> as ops::arith::Neg>::neg;false;true;false;false
num::nonzero::NonZero::<u32>::unchecked_add;true;true;false;false
<isize as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_alignr_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_permute_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_cvtpd_epu32;true;true;true;false
core_arch::x86::avx512fp16::_mm512_castph_pd;true;false;true;false
<core_simd::vector::Simd<isize, 4> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<num::wrapping::Wrapping<i64> as ops::bit::BitOr<&num::wrapping::Wrapping<i64>>>::bitor;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
<&'a isize as ops::bit::Shl<i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mul_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u32, 8>>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_setr_pd;true;false;true;false
core_arch::x86::avx512f::_kshiftri_mask16;true;false;false;false
core_arch::x86::avx512bw::_mm256_movm_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_broadcastd_epi32;true;true;false;false
<i64 as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<&num::wrapping::Wrapping<i128> as ops::arith::Add<&num::wrapping::Wrapping<i128>>>::add;false;false;false;false
num::<impl i16>::strict_shl;false;false;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<i8, N>>::sum;false;false;false;true
<num::saturating::Saturating<T> as hash::Hash>::hash;false;false;true;false
num::<impl u16>::widening_mul;false;false;false;false
core_arch::x86::avx512f::_mm256_cmp_epi32_mask;true;true;false;false
<&'a num::saturating::Saturating<usize> as ops::arith::Div<num::saturating::Saturating<usize>>>::div;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::simd_min;false;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_sqrt_round_ph;true;true;true;false
num::<impl i16>::ilog2;false;false;false;false
<num::niche_types::NonZeroI16Inner as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_sub_ph;true;true;true;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::nonzero::NonZero::<usize>::div_ceil;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_i64gather_epi32;true;true;true;false
panic::PanicPayload::as_str;false;false;true;false
intrinsics::atomic_xchg_release;true;false;true;false
<&i8 as ops::arith::Sub<&i8>>::sub;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epu64;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::Add>::add;false;false;false;false
num::niche_types::I64NotAllOnes::new;false;false;false;false
str::slice_error_fail;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<f32, 4>> for core_arch::x86::__m128>::from;false;false;true;false
panicking::panic_fmt;false;true;true;false
<core_arch::simd::u16x32 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_cvtsd_i32;true;true;true;false
<&'a u16 as ops::bit::Shl<i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi8;true;true;false;false
<slice::iter::RSplitMut<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
ops::range::RangeFrom::<Idx>::contains;false;false;true;false
<core_arch::simd::f32x4 as fmt::Debug>::fmt;false;false;true;false
"tuple::<impl convert::From<(T, T, T, T, T)> for [T; 5]>::from";false;false;true;false
core_simd::ops::assign::<impl ops::bit::BitAndAssign<U> for core_simd::vector::Simd<T, N>>::bitand_assign;false;false;true;false
core_simd::vector::Simd::<T, N>::splat::splat_rt;false;false;false;false
num::<impl u128>::wrapping_sub;false;false;false;false
<i16 as ops::bit::Shr<&u16>>::shr;false;false;false;false
sync::atomic::AtomicU32::from_mut_slice;false;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdi_epi64;true;true;false;false
intrinsics::log10f64;true;false;true;false
<(dyn error::Error + marker::Send + 'static)>::downcast_ref;false;false;false;false
num::saturating::Saturating::<i16>::abs;false;false;false;false
<num::wrapping::Wrapping<i128> as iter::traits::accum::Product>::product;false;false;false;true
<ops::coroutine::CoroutineState<Y, R> as hash::Hash>::hash;false;false;true;false
num::saturating::Saturating::<u32>::to_le;false;false;false;false
iter::traits::iterator::Iterator::max_by::fold;false;false;false;false
core_arch::x86::avx512f::_mm512_srlv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_cmp_epu8_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_srai_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cmul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_sqrt_round_ps;true;true;true;false
<(dyn any::Any + marker::Send + marker::Sync + 'static)>::is;false;false;false;false
<num::wrapping::Wrapping<i16> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<i16>>>::product;false;false;false;true
str::iter::CharIndices::<'a>::offset;false;false;true;false
iter::adapters::try_process;false;false;false;false
num::nonzero::NonZero::<u32>::to_be;false;true;false;false
num::<impl i128>::checked_neg;false;false;false;false
<usize as ops::bit::Shl<&u32>>::shl;false;false;false;false
<range::RangeFrom<Idx> as clone::Clone>::clone;false;false;true;false
task::poll::Poll::<T>::is_pending;false;false;true;false
core_arch::x86::sse41::_mm_round_ss;true;true;true;false
<num::wrapping::Wrapping<u16> as ops::arith::MulAssign<&u16>>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_rsqrt14_ps;true;true;true;false
<&'a isize as ops::arith::Sub<isize>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_max_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_subs_epi8;true;true;false;false
core_arch::x86::avx512vbmi::_mm256_multishift_epi64_epi8;true;true;false;false
num::nonzero::NonZero::<i128>::checked_mul;false;true;false;false
num::<impl u8>::to_ne_bytes;false;false;false;false
<mem::Discriminant<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_cmpeq_pd_mask;true;true;true;false
alloc::layout::Layout::extend_packed;false;false;false;false
ascii::ascii_char::AsciiChar::from_u8;false;true;false;false
<&'a u8 as ops::arith::Sub<u8>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mul_round_pd;true;true;true;false
num::niche_types::NonZeroU32Inner::new;false;false;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_arch::x86::avx512f::_mm512_mask_getmant_pd;true;true;true;false
sync::atomic::AtomicI64::fetch_and;false;true;true;false
<i8 as ops::arith::Rem<&i8>>::rem;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx::_mm256_setzero_si256;true;false;false;false
core_arch::x86::avx512f::_mm256_rorv_epi32;true;true;false;false
core_arch::x86::avx512bf16::_mm256_cvtne2ps_pbh;true;true;true;false
num::dec2flt::common::is_8digits;false;false;false;false
num::<impl i8>::checked_ilog2;false;true;false;false
<i8 as ops::arith::Div<&i8>>::div;false;false;false;false
<&'a isize as ops::bit::Shr<i64>>::shr;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::bit::Not>::not;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
num::<impl u64>::unchecked_mul;true;false;false;false
ops::range::RangeBounds::is_empty;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_epi32;true;true;true;false
num::saturating::Saturating::<u64>::count_ones;false;false;false;false
result::Result::<T, E>::inspect;false;false;true;false
<&'a usize as ops::bit::Shl<u32>>::shl;false;false;false;false
<&'a i64 as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_storeu_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm512_cmp_epi16_mask;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_unpackhi_ps;true;true;true;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::last;false;false;false;true
ptr::mut_ptr::<impl *mut T>::byte_add;true;true;true;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::deinterleave;false;true;true;false
option::Option::<T>::iter;false;false;true;false
<time::Duration as ops::arith::MulAssign<u32>>::mul_assign;false;false;true;false
bool::<impl bool>::then_some;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_packs_epi32;true;true;false;false
<&mut H as hash::Hasher>::write_u64;false;false;true;false
<iter::adapters::take::Take<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_simd::swizzle_dyn::zeroing_idxs;false;false;false;false
num::nonzero::NonZero::<i32>::to_le;false;true;false;false
convert::num::<impl convert::TryFrom<i128> for i32>::try_from;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_fold;false;false;true;true
core_arch::x86::avx512f::_kortest_mask16_u8;true;true;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i128>>::from;false;true;false;false
intrinsics::atomic_umin_acqrel;true;false;true;false
num::<impl i32>::reverse_bits;false;false;false;false
<mem::manually_drop::ManuallyDrop<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_i32scatter_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_max_epi16;true;true;false;false
<bstr::ByteStr as fmt::Display>::fmt;false;false;true;true
<&'a num::saturating::Saturating<isize> as ops::bit::BitXor<num::saturating::Saturating<isize>>>::bitxor;false;false;false;false
<num::saturating::Saturating<i16> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundepu64_pd;true;true;true;false
<core_arch::x86::__m128bh as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_and_epi64;true;true;false;false
num::<impl u64>::from_be;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for (ops::range::Bound<usize>, ops::range::Bound<usize>)>::get_mut;false;false;true;false
<task::poll::Poll<option::Option<result::Result<T, F>>> as ops::try_trait::FromResidual<result::Result<convert::Infallible, E>>>::from_residual;false;false;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;false;false
core_arch::x86::avx512fp16::_mm_max_sh;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_scalef_sd;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
<num::saturating::Saturating<usize> as ops::arith::Div>::div;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<&'a i128 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx::_mm_testc_pd;true;true;true;false
tuple::<impl cmp::PartialOrd for (T,)>::lt;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_rolv_epi32;true;true;false;false
num::<impl usize>::max_value;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::init_ref;false;true;true;false
slice::sort::shared::smallsort::insertion_sort_shift_left;false;true;true;true
slice::cmp::<impl cmp::PartialEq<[U]> for [T]>::ne;false;false;false;false
core_arch::x86::avx512f::_mm_mask_sqrt_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_cmul_round_sch;true;true;true;false
<num::wrapping::Wrapping<i16> as iter::traits::accum::Product>::product;false;false;false;true
core_arch::x86::sse2::_mm_cvtsd_si32;true;true;true;false
cell::RefCell::<T>::undo_leak;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<&u128>>::div_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd<&mut B> for &mut A>::gt;false;false;true;false
num::<impl i64>::strict_div_euclid;false;false;false;false
core_arch::x86::avx::_mm256_blend_ps;true;true;true;false
num::<impl i16>::wrapping_shr;false;true;false;false
<i128 as ops::bit::Shr<&i8>>::shr;false;false;false;false
cell::RefMut::<'b, T>::map_split;false;false;true;false
intrinsics::floorf16;true;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
<slice::iter::RChunksExact<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx2::_mm256_max_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_ternarylogic_epi32;true;true;false;false
<&num::saturating::Saturating<i16> as ops::bit::BitOr<&num::saturating::Saturating<i16>>>::bitor;false;false;false;false
<i16 as intrinsics::fallback::DisjointBitOr>::disjoint_bitor;true;false;false;false
core_arch::x86::avx::_mm_testnzc_pd;true;true;true;false
core_simd::vector::Simd::<T, N>::gather_or_default;false;false;false;false
<char::ToLowercase as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_srav_epi16;true;true;false;false
mem::transmutability::Assume::but_not;false;false;true;false
fmt::Formatter::<'a>::debug_tuple_field4_finish;false;false;true;false
<&'a usize as ops::bit::BitOr<usize>>::bitor;false;false;false;false
fmt::float::float_to_exponential_common_shortest;false;true;true;false
iter::adapters::zip::TrustedRandomAccessNoCoerce::size;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvttps_epu32;true;true;true;false
convert::num::<impl convert::From<u8> for f32>::from;false;false;false;false
f32::<impl f32>::clamp::do_panic::compiletime;false;false;true;false
sync::atomic::AtomicU64::fetch_max;false;true;true;false
<i16 as default::Default>::default;false;false;false;false
<core_arch::x86::__m256i::splat::JustOne as clone::Clone>::clone;false;false;false;false
num::<impl u128>::wrapping_div_euclid;false;false;false;false
<&'a f32 as ops::arith::Mul<f32>>::mul;false;false;true;false
core_arch::x86::avx::_mm256_insert_epi16;true;true;false;false
<&u32 as ops::bit::BitOr<&u32>>::bitor;false;false;false;false
intrinsics::arith_offset;true;false;true;false
<u8 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<i16 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
num::<impl u64>::wrapping_shl;false;true;false;false
sync::atomic::AtomicU8::fetch_and;false;true;true;false
core_arch::x86::avx512f::_mm_mask_cmp_round_ss_mask;true;true;true;false
<&i8 as ops::bit::Shr<&i16>>::shr;false;false;false;false
array::try_from_trusted_iterator::next;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::nth;false;false;true;true
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<net::ip_addr::IpAddr as cmp::PartialEq<net::ip_addr::Ipv4Addr>>::eq;false;false;true;false
<escape::EscapeIterInner<N> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_setr_m128;true;true;true;false
<str as fmt::Debug>::fmt::needs_escape;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::Not>::not;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
core_arch::x86::avx512f::_mm512_store_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_adds_epu16;true;true;false;false
core_arch::x86::avx512fp16::_mm_cvtph_epi32;true;true;true;false
<ops::range::Range<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
<&num::wrapping::Wrapping<isize> as ops::arith::Rem<&num::wrapping::Wrapping<isize>>>::rem;false;false;false;false
core_arch::x86::avx512dq::_kortestc_mask8_u8;true;true;false;false
<(ops::range::Bound<T>, ops::range::Bound<T>) as ops::range::RangeBounds<T>>::start_bound;false;false;true;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
num::nonzero::NonZero::<i64>::saturating_abs;false;true;false;false
<core_simd::vector::Simd<f32, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
<usize as ops::bit::ShrAssign<&i128>>::shr_assign;false;false;true;false
char::methods::<impl char>::make_ascii_uppercase;false;false;true;false
core_arch::x86::avx::_mm256_storeu2_m128;true;true;true;false
<iter::adapters::rev::Rev<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_srli_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fcmadd_round_pch;true;true;true;false
<u16 as ops::bit::Shr<usize>>::shr;false;false;false;false
<isize as ops::bit::Shr<&u16>>::shr;false;false;false;false
<bool as ops::bit::BitOrAssign<&bool>>::bitor_assign;false;false;true;false
fmt::num::<impl fmt::Octal for i32>::fmt;false;false;true;false
<slice::iter::SplitN<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
result::Result::<&T, E>::copied;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_expandloadu_epi32;true;true;true;false
<u8 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<u8>>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_sqrt_round_sh;true;true;true;false
<Iter as iter::traits::collect::TraitF<EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
core_arch::x86::avx512f::_mm_mask_rol_epi64;true;true;false;false
<core_arch::simd::u16x64 as clone::Clone>::clone;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::SubAssign<&num::saturating::Saturating<usize>>>::sub_assign;false;false;true;false
<num::wrapping::Wrapping<u16> as ops::bit::ShlAssign<usize>>::shl_assign;false;false;true;false
<core_arch::simd::m32x4 as clone::Clone>::clone;false;false;false;false
<i64 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::sha::_mm_sha1nexte_epu32;true;true;false;false
<cell::UnsafeCell<T> as default::Default>::default;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i64>> for num::nonzero::NonZero<i32>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_abs_pd;true;true;true;false
<num::saturating::Saturating<i8> as ops::bit::BitAnd<&num::saturating::Saturating<i8>>>::bitand;false;false;false;false
<str::pattern::CharPredicateSearcher<'a, F> as str::pattern::Searcher<'a>>::haystack;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::AddAssign<&num::wrapping::Wrapping<i64>>>::add_assign;false;false;true;false
<u16 as ops::arith::Sub<&u16>>::sub;false;false;false;false
core_arch::simd::u16x4;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_loadu_epi32;true;true;true;false
<num::wrapping::Wrapping<u32> as iter::traits::accum::Sum>::sum;false;false;false;true
num::wrapping::Wrapping::<u128>::rotate_left;false;false;false;false
<time::Duration as iter::traits::accum::Sum>::sum;false;false;false;true
core_arch::x86::avx512f::_mm_div_round_ss;true;true;true;false
core_arch::x86::avx512dq::_mm256_maskz_insertf64x2;true;true;true;false
core_arch::x86::avx2::_mm256_cmpgt_epi64;true;true;false;false
iter::traits::iterator::Iterator::cycle;false;false;false;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::Range<A>>::next_back;false;false;true;false
<num::wrapping::Wrapping<usize> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<usize>>>::product;false;false;false;true
<&i64 as ops::arith::Mul<&i64>>::mul;false;false;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::saturating_neg;false;false;false;false
<&i8 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtpd_epi32;true;true;true;false
alloc::layout::Layout::dangling;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_storeu_epi16;true;true;true;false
<slice::GetDisjointMutError as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx2::_mm256_mulhrs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmsub_ph;true;true;true;false
<char::EscapeDebugInner as clone::Clone>::clone;false;false;true;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::try_fold::check;false;false;true;false
core_arch::x86::avx512fp16::_mm256_mask_fnmsub_ph;true;true;true;false
core_simd::swizzle::Swizzle::concat_swizzle;false;true;false;false
<num::saturating::Saturating<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign;false;false;true;false
char::EscapeDebugInner::Char;false;false;false;false
core_arch::x86::avx512f::_mm512_sqrt_pd;true;true;true;false
<iter::adapters::map::Map<I, F> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_simd::swizzle::Swizzle::swizzle;false;true;false;false
<num::saturating::Saturating<u64> as ops::arith::Div<&num::saturating::Saturating<u64>>>::div;false;false;false;false
tuple::<impl cmp::Ord for (D, C, B, A, Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
ptr::alignment::<impl convert::From<ptr::alignment::Alignment> for usize>::from;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::SubAssign<i64>>::sub_assign;false;false;true;false
num::<impl i128>::unsigned_abs;false;false;false;false
num::<impl i32>::div_ceil;false;false;false;false
<ops::index_range::IndexRange as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
fmt::num::<impl fmt::Binary for u8>::fmt;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_compress_epi8;true;true;false;false
<num::niche_types::NonZeroU16Inner as cmp::Ord>::cmp;false;false;false;false
<u128 as ops::arith::RemAssign<&u128>>::rem_assign;false;false;true;false
<panic::location::Location<'a> as clone::Clone>::clone;false;false;true;false
core_arch::x86::__m512bh::as_u32x16;false;false;false;false
intrinsics::mir::UnwindCleanup;false;false;false;false
num::<impl i16>::div_euclid;false;false;false;false
<i64 as ops::bit::Shl<&u64>>::shl;false;false;false;false
core_arch::simd::f64x8::splat::JustOne;false;false;true;false
<ptr::unique::Unique<T> as fmt::Pointer>::fmt;false;false;true;false
sync::atomic::AtomicIsize::fetch_min;false;true;true;false
core_arch::x86::avx512f::_mm256_permutex_epi64;true;true;false;false
<&'a u128 as ops::bit::Shl<i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_unpacklo_pd;true;true;true;false
<&'a num::saturating::Saturating<u16> as ops::bit::BitOr<num::saturating::Saturating<u16>>>::bitor;false;false;false;false
<u128 as ops::bit::Shr<i8>>::shr;false;false;false;false
slice::memchr::memchr;false;false;false;false
net::ip_addr::Ipv6Addr::is_global;false;false;false;false
num::<impl i16>::signum;false;false;false;false
<u64 as ops::bit::ShlAssign<&i128>>::shl_assign;false;false;true;false
<u16 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::__m128h::as_f16x8;false;false;true;false
num::niche_types::NonZeroI128Inner;true;false;false;false
num::<impl i128>::overflowing_shr;false;false;false;false
<i16 as ops::bit::BitOr<&i16>>::bitor;false;false;false;false
<u128 as ops::bit::Shr<usize>>::shr;false;false;false;false
<u32 as iter::range::Step>::forward_unchecked;true;true;false;false
<num::saturating::Saturating<isize> as ops::arith::SubAssign<isize>>::sub_assign;false;false;true;false
num::<impl u8>::isqrt;false;true;false;false
num::<impl u128>::overflowing_rem;false;false;false;false
core_arch::x86::sha::_mm_sha256rnds2_epu32;true;true;false;false
intrinsics::minnumf128;false;false;true;false
num::<impl u64>::trailing_zeros;false;false;false;false
<u32 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_srl_epi16;true;true;false;false
"array::<impl ops::index::IndexMut<I> for [T; N]>::index_mut";false;false;true;false
<&u64 as ops::bit::Shl<&u32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fmadd_round_ps;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_shrdi_epi32;true;true;false;false
<core_simd::vector::Simd<f64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<&i8>>::div_assign;false;false;true;false
num::saturating::Saturating::<isize>::from_be;false;false;false;false
intrinsics::mir::UnwindTerminate::panic_cold_explicit;false;false;false;false
core_arch::x86::ssse3::_mm_sign_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmsub_sh;true;true;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<i64, N>>::add;false;true;false;false
core_arch::x86::avx512f::_mm_mask_test_epi64_mask;true;true;false;false
<u128 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::simd::u16x64::from_array;false;false;false;false
<i16 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epi64;true;true;true;false
core_arch::x86::f16c::_mm_cvtps_ph;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<u16, N>>::product;false;false;false;true
<num::wrapping::Wrapping<usize> as ops::arith::MulAssign<&usize>>::mul_assign;false;false;true;false
<mem::manually_drop::ManuallyDrop<T> as fmt::Debug>::fmt;false;false;true;false
<marker::variance::PhantomCovariant<T> as clone::Clone>::clone;false;false;true;false
task::wake::LocalWaker::vtable;false;false;true;false
core_arch::x86::avx512f::_mm512_fmsubadd_round_ps;true;true;true;false
intrinsics::atomic_cxchg_release_acquire;true;false;true;false
core_arch::x86::sse::_mm_storeu_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_sub_epi64;true;true;false;false
num::<impl u128>::unchecked_sub::precondition_check;false;false;false;false
num::<impl i128>::unchecked_shr::precondition_check;false;false;false;false
core_arch::x86::avx512dq::_mm256_maskz_xor_ps;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::count_zeros;false;false;false;false
ops::range::Bound::Included;false;false;false;false
f128::<impl f128>::clamp::do_panic::compiletime;false;false;true;false
core_arch::x86::avx512f::_mm512_cmple_ps_mask;true;true;true;false
core_arch::x86::avx512vnni::_mm256_dpwssds_epi32;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::AddAssign>::add_assign;false;false;true;false
panic::panic_info::PanicInfo::<'a>::new;false;false;true;false
core_arch::x86::avx512f::_mm_mask_i64scatter_pd;true;true;true;false
<num::saturating::Saturating<u128> as ops::bit::BitOrAssign<u128>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_expand_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvttph_epu32;true;true;true;false
option::Option::<T>::zip_with;false;false;true;false
fmt::num::<impl fmt::LowerHex for isize>::fmt;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::arith::Neg>::neg;false;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i64>::eq;false;false;false;false
num::<impl i32>::max_value;false;false;false;false
num::niche_types::NonZeroI64Inner::as_inner;false;false;false;false
cell::UnsafeCell::<T>::get;false;false;true;false
core_arch::x86::avx512dq::_mm512_or_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmpgt_epu64_mask;true;true;false;false
<num::saturating::Saturating<u128> as ops::arith::Add<&num::saturating::Saturating<u128>>>::add;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_srl_epi16;true;true;false;false
<core_simd::vector::Simd<T, N> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<&u8 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<net::socket_addr::SocketAddrV4 as clone::Clone>::clone;false;false;false;false
<&'a num::wrapping::Wrapping<usize> as ops::arith::Mul<num::wrapping::Wrapping<usize>>>::mul;false;false;false;false
"<[mem::maybe_uninit::MaybeUninit<T>; N]>::transpose";false;false;false;false
<u16 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<ops::range::Range<usize> as slice::index::SliceIndex<[T]>>::index;false;true;true;false
core_arch::x86::avx512f::_mm256_mask_set1_epi64;true;true;false;false
f32::<impl f32>::to_degrees;false;false;true;false
<[T] as slice::CloneFromSpec<T>>::spec_clone_from;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldv_epi32;true;true;false;false
core_arch::simd::i32x32::new;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_cvtepu16_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_add_ps;true;true;true;false
num::<impl i8>::wrapping_shl;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmp_epi64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm_testn_epi8_mask;true;true;false;false
core_arch::x86_64::amx::_tile_loadconfig;true;true;true;false
num::saturating::Saturating::<u128>::is_power_of_two;false;false;false;false
<&i128 as ops::bit::Shr<&i128>>::shr;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::arith::AddAssign<u8>>::add_assign;false;false;true;false
<alloc::layout::LayoutError as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reverse_bits;false;true;false;false
core_arch::x86::avx2::_mm_maskstore_epi64;true;true;true;false
num::niche_types::NonZeroU16Inner;true;false;false;false
marker::variance::PhantomCovariantLifetime::<'_>::new;false;false;false;false
core_arch::x86::avx512f::_mm512_shuffle_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_div_pd;true;true;true;false
intrinsics::logf128;true;false;true;false
intrinsics::simd::simd_masked_load;true;false;false;false
<marker::PhantomPinned as clone::Clone>::clone;false;false;false;false
slice::sort::stable::drift::DriftsortRun::new_sorted;false;false;false;false
cell::RefCell::<T>::replace;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_compress_ps;true;true;true;false
cell::Ref::<'b, T>::map_split;false;false;true;false
<num::saturating::Saturating<i8> as ops::bit::BitOr>::bitor;false;false;false;false
<f64 as ops::arith::Mul<&f64>>::mul;false;false;true;false
net::ip_addr::Ipv6Addr::new;false;false;false;false
core_arch::x86::avx512f::_mm512_castpd_ps;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_add_epi32;true;true;false;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<u16, N>>::shl;false;true;false;false
<&i128 as ops::bit::Shl<&u128>>::shl;false;false;false;false
<u128 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
alloc::layout::Layout::from_size_align;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::Not>::not;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::AddAssign<u16>>::add_assign;false;false;true;false
convert::num::<impl convert::TryFrom<i128> for u128>::try_from;false;false;false;false
<i128 as iter::range::Step>::forward_unchecked;true;true;false;false
num::<impl isize>::rem_euclid;false;false;false;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u8>> for u8>::div;false;false;false;false
intrinsics::copy::copy;true;false;true;false
cmp::impls::<impl cmp::PartialOrd<&B> for &A>::gt;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvttph_epi16;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::SubAssign<&num::saturating::Saturating<i32>>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_srlv_epi32;true;true;false;false
num::<impl i16>::strict_div;false;false;false;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;false;true;false
<str::iter::LinesAny<'a> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
<&isize as ops::bit::Shr<&i128>>::shr;false;false;false;false
num::niche_types::NonZeroU64Inner::as_inner;false;false;false;false
<u8 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u32>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_product;false;true;false;false
core_arch::x86::avx512fp16::_mm_fmsub_ph;true;true;true;false
<u128 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_sub_epi8;true;true;false;false
<i128 as ops::arith::Rem<&i128>>::rem;false;false;false;false
num::<impl u64>::checked_ilog10;false;false;false;false
num::wrapping::Wrapping::<u128>::is_power_of_two;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&num::saturating::Saturating<u16>>>::bitor_assign;false;false;true;false
<&'a i64 as ops::arith::Mul<i64>>::mul;false;false;false;false
sync::atomic::AtomicPtr::<T>::load;false;true;true;false
<&u16 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<core_arch::simd::i16x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
iter::traits::iterator::Iterator::position::check;false;false;true;false
num::saturating::Saturating::<i32>::pow;false;false;false;false
num::<impl i8>::saturating_sub;false;false;false;false
num::flt2dec::strategy::dragon::div_2pow10;false;false;true;true
<&num::wrapping::Wrapping<i64> as ops::arith::Div<&num::wrapping::Wrapping<i64>>>::div;false;false;false;false
num::<impl i16>::rotate_left;false;false;false;false
num::wrapping::Wrapping::<isize>::count_zeros;false;false;false;false
num::wrapping::Wrapping::<i64>::count_ones;false;false;false;false
ptr::const_ptr::<impl *const T>::wrapping_offset;false;true;true;false
<&num::saturating::Saturating<u16> as ops::arith::Sub<&num::saturating::Saturating<u16>>>::sub;false;false;false;false
ffi::va_list::va_copy;true;false;true;false
slice::iter::Split::<'a, T, P>::new;false;false;false;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::Searcher<'a>>::next;false;false;true;false
<i128 as ops::bit::Shl<u16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_movehdup_ps;true;true;true;false
num::bignum::tests::Big8x3::div_rem;false;false;true;true
core_arch::x86::avx512f::_mm512_alignr_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_or_epi32;true;true;false;false
<f128 as ops::arith::MulAssign<&f128>>::mul_assign;false;false;true;false
iter::traits::iterator::Iterator::__iterator_get_unchecked;true;false;true;false
fmt::num::imp::<impl fmt::UpperExp for u64>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi64_epi16;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_expandloadu_epi8;true;true;true;false
<num::error::TryFromIntError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::DivAssign<i128>>::div_assign;false;false;true;false
<&i32 as ops::bit::Shl<&u64>>::shl;false;false;false;false
char::methods::<impl char>::to_uppercase;false;false;false;false
num::<impl i128>::isolate_most_significant_one;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_permute_pd;true;true;true;false
<iter::adapters::step_by::StepBy<ops::range::Range<u16>> as iter::adapters::step_by::StepByBackImpl<ops::range::Range<u16>>>::spec_try_rfold;false;false;true;true
core_arch::x86::avx512dq::_mm256_mask_cvtpd_epi64;true;true;true;false
<u32 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<char::EscapeUnicode as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_shrdi_epi16;true;true;false;false
core_simd::iter::<impl iter::traits::accum::Sum for core_simd::vector::Simd<f64, N>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_sub_round_pd;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_sub_epi8;true;true;false;false
str::<impl str>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fnmadd_ps;true;true;true;false
<&'a u64 as ops::bit::Shl<i16>>::shl;false;false;false;false
<u128 as ops::bit::BitOr<&u128>>::bitor;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<&num::wrapping::Wrapping<u32>>>::sub_assign;false;false;true;false
<range::Range<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;true;false
fmt::num::imp::<impl u16>::_fmt;false;true;true;true
<core_arch::x86::cpuid::CpuidResult as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx2::_mm256_broadcastb_epi8;true;true;false;false
core_arch::x86::avx512bw::_knot_mask32;true;false;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundsi64_ss;true;true;true;false
num::saturating::Saturating::<i64>::is_positive;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::Add<&num::saturating::Saturating<usize>>>::add;false;false;false;false
<u32 as ops::arith::Mul<&u32>>::mul;false;false;false;false
num::<impl u128>::checked_div;false;false;false;false
<Iter as iter::traits::collect::TraitL<EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
<&u64 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86_64::avx512f::_mm_cvt_roundsi64_sd;true;true;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
core_arch::x86::avx::_mm256_xor_pd;true;true;true;false
<core_arch::simd::f64x8 as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepu32_ph;true;true;false;false
<fmt::Formatter<'_> as fmt::Write>::write_fmt;false;false;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<i64, N>> for core_simd::vector::Simd<i64, N>>::product;false;false;false;true
num::wrapping::Wrapping::<i8>::reverse_bits;false;false;false;false
cmp::impls::<impl cmp::PartialEq for usize>::ne;false;false;false;false
cmp::impls::<impl cmp::PartialEq for isize>::ne;false;false;false;false
hash::Hasher::write_u8;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
<i32 as ops::bit::ShrAssign<i64>>::shr_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::arith::Sub>::sub;false;false;false;false
iter::traits::collect::default_extend_tuple_b;false;false;true;true
num::nonzero::NonZero::<u128>::unchecked_mul;true;true;false;false
core_arch::x86::sse::_mm_set_ss;true;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::size_hint;false;false;true;false
num::<impl i64>::checked_rem_euclid;false;false;false;false
cmp::impls::<impl cmp::PartialEq<&mut B> for &A>::eq;false;false;true;false
<u64 as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_fmsub_ps;true;true;true;false
<num::wrapping::Wrapping<usize> as ops::arith::RemAssign<&usize>>::rem_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_fcmadd_sch;true;true;true;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_sh;true;true;true;false
<num::wrapping::Wrapping<u64> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<marker::variance::PhantomCovariantLifetime<'a> as hash::Hash>::hash;false;false;true;false
<u32 as ops::arith::AddAssign<&u32>>::add_assign;false;false;true;false
<usize as ops::arith::Mul>::mul;false;false;false;false
<u64 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<usize as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
result::Result::<T, E>::and_then;false;false;true;false
<core_arch::simd::m32x8::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_pd;true;true;true;false
convert::num::<impl convert::From<bool> for i16>::from;false;false;false;false
<alloc::layout::LayoutError as clone::Clone>::clone;false;false;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<i16, N>>::bitand;false;true;false;false
core_arch::simd::m16x16::splat;false;true;false;false
<u128 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
ptr::non_null::NonNull::<T>::as_uninit_ref;true;true;true;false
<range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_in_bounds;false;false;true;false
core_arch::x86::avx512cd::_mm512_mask_lzcnt_epi32;true;true;false;false
<&num::wrapping::Wrapping<u16> as ops::bit::BitAnd<&num::wrapping::Wrapping<u16>>>::bitand;false;false;false;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<usize, N>>::rem;false;true;false;false
ptr::swap_nonoverlapping::precondition_check;false;false;true;false
marker::variance::PhantomContravariantLifetime;false;false;true;false
<core_simd::vector::Simd<i8, 64> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
net::socket_addr::SocketAddrV4::new;false;false;false;false
num::<impl u8>::is_ascii_graphic;false;false;false;false
<iter::adapters::flatten::Flatten<I> as fmt::Debug>::fmt;false;false;true;false
<&i64 as ops::arith::Sub<&i64>>::sub;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::arith::RemAssign<u16>>::rem_assign;false;false;true;false
core_arch::x86::sse::_mm_cmpnle_ss;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_load_epi64;true;true;true;false
intrinsics::simd::simd_mul;true;false;false;false
<bstr::ByteStr as cmp::PartialEq<&[u8]>>::eq;false;false;false;false
<&mut H as hash::Hasher>::write_i8;false;false;true;false
num::saturating::Saturating::<i16>::to_be;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_compress_epi64;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi16;true;true;false;false
ffi::c_str::CStr::to_str;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_broadcastss_ps;true;true;true;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fcmadd_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_cvtx_roundps_ph;true;true;true;false
<num::saturating::Saturating<u128> as ops::bit::BitOr>::bitor;false;false;false;false
<f64 as convert::num::FloatToInt<i32>>::to_int_unchecked;true;true;true;false
<array::iter::IntoIter<T, N> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::__m512h::as_f16x32;false;false;true;false
<result::IntoIter<T> as iter::traits::iterator::Iterator>::next;false;false;true;false
intrinsics::mir::UnwindContinue::panic_cold_explicit;false;false;false;false
num::<impl i32>::unchecked_mul;true;false;false;false
<ptr::alignment::Alignment as cmp::PartialOrd>::partial_cmp;false;false;false;false
<iter::adapters::map::Map<I, F> as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::enumerate::Enumerate<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
<u8 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<ascii::EscapeDefault as fmt::Display>::fmt;false;false;true;false
cmp::impls::<impl cmp::Ord for bool>::cmp;false;true;false;false
time::Duration::from_days;false;false;false;false
core_arch::x86::avx512bw::_mm512_testn_epi16_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_min_ph;true;true;true;false
slice::<impl [f64]>::sort_floats;false;false;true;false
<core_arch::simd::u32x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_min_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm512_set_ph;true;false;true;false
<u64 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<u64 as num::dec2flt::float::CastInto<i16>>::cast;false;false;false;false
core_arch::simd::f32x16::new;false;false;true;false
sync::atomic::AtomicU64::fetch_update;false;false;true;true
intrinsics::likely;false;false;false;false
core_arch::x86::avx512f::_mm512_cvttps_epu32;true;true;true;false
core_arch::x86::avx512f::_mm_mul_round_sd;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::is_positive;false;false;false;false
core_arch::x86::avx512f::_mm_i64scatter_epi64;true;true;true;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for i8>::try_from;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_mul_ph;true;true;true;false
<&'a i32 as ops::arith::Add<i32>>::add;false;false;false;false
char::EscapeDebug::unicode;false;false;false;false
core_arch::x86::avx::_mm256_permute2f128_ps;true;true;true;false
num::nonzero::NonZero::<i16>::checked_abs;false;true;false;false
range::Range::<Idx>::contains;false;false;true;false
<&'a num::saturating::Saturating<usize> as ops::bit::BitOr<num::saturating::Saturating<usize>>>::bitor;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mul_epi32;true;true;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::BitAnd<&num::wrapping::Wrapping<u32>>>::bitand;false;false;false;false
<&'b [char] as str::pattern::Pattern>::is_suffix_of;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_and_epi32;true;true;false;false
<num::saturating::Saturating<u128> as ops::arith::Div<&num::saturating::Saturating<u128>>>::div;false;false;false;false
<i64 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<str::IsAsciiWhitespace as ops::function::FnMut<(&u8,)>>::call_mut;false;false;true;false
<num::niche_types::U32NotAllOnes as fmt::Debug>::fmt;false;false;true;false
str::traits::<impl ops::index::Index<I> for str>::index;false;false;false;false
<u16 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
intrinsics::expf16;true;false;true;false
core_arch::x86::avx512dq::_mm256_mask_cvtps_epu64;true;true;true;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;false;true;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::deinterleave::deinterleave;false;false;false;true
num::<impl i64>::overflowing_add;false;false;false;false
<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::use_early_reject;false;false;false;false
core_arch::x86::sse2::_mm_cvtepi32_pd;true;true;false;false
core_arch::x86::avx512f::_mm_mask_min_sd;true;true;true;false
<num::wrapping::Wrapping<i16> as ops::arith::AddAssign>::add_assign;false;false;true;false
<time::TryFromFloatSecsError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_min_epi32;true;true;false;false
core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi32;true;true;false;false
ub_checks::maybe_is_aligned_and_not_null::runtime;false;false;true;false
<&i32 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundepi64_pd;true;true;true;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
num::<impl u128>::wrapping_add;false;false;false;false
num::<impl i16>::wrapping_div;false;false;false;false
iter::adapters::chain::and_then_or_clear;false;false;true;false
num::saturating::Saturating::<isize>::trailing_zeros;false;false;false;false
<(EA,) as iter::traits::collect::Extend<(A,)>>::extend_reserve;false;false;true;false
<&'a u8 as ops::bit::Shl<isize>>::shl;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::RemAssign<&usize>>::rem_assign;false;false;true;false
iter::traits::iterator::iter_compare;false;false;false;true
<&num::saturating::Saturating<usize> as ops::bit::BitOr<&num::saturating::Saturating<usize>>>::bitor;false;false;false;false
<ptr::alignment::Alignment as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<core_arch::simd::i8x8 as fmt::Debug>::fmt;false;false;true;false
num::wrapping::Wrapping::<u8>::reverse_bits;false;false;false;false
core_arch::x86::avx512dq::_mm_maskz_cvttps_epu64;true;true;true;false
core_arch::x86::sse2::_mm_comigt_sd;true;true;true;false
sync::atomic::AtomicU64::fetch_and;false;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_or;false;true;false;false
num::<impl i128>::overflowing_pow;false;false;false;true
str::pattern::Pattern::as_utf8_pattern;false;false;false;false
num::niche_types::NonZeroI32Inner;true;false;false;false
core_arch::x86::avx512f::_mm256_mask_store_epi64;true;true;true;false
core_arch::x86::avx512vbmi2::_mm256_shrdi_epi64;true;true;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::iterator::Iterator>::fold;false;false;true;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
num::<impl u64>::strict_pow;false;false;false;true
<slice::iter::ChunkByMut<'a, T, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
core_arch::x86::avx512f::_mm512_min_epi64;true;true;false;false
core_arch::x86::sse2::_mm_sub_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_unpackhi_epi8;true;true;false;false
core_arch::x86::__m256i::as_u16x16;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_add_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_reduce_add_epi64;true;true;false;false
num::saturating::Saturating::<i16>::to_le;false;false;false;false
intrinsics::volatile_copy_memory;true;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::get_unchecked;true;true;true;false
<num::wrapping::Wrapping<u8> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u8>>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<u128>>>::sum;false;false;false;true
num::nonzero::NonZero::<i64>::saturating_pow;false;true;false;false
<u32 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_reduce_round_pd;true;true;true;false
iter::traits::iterator::Iterator::max_by_key::compare;false;false;false;false
num::saturating::Saturating::<i128>::count_ones;false;false;false;false
core_arch::x86::avx::_mm_cmp_pd;true;true;true;false
<task::wake::RawWaker as fmt::Debug>::fmt;false;false;true;false
<core_arch::x86::__m128bh as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi32_epi16;true;true;false;false
<num::wrapping::Wrapping<u128> as ops::arith::DivAssign<u128>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi8;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_expandloadu_epi16;true;true;true;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::is_negative;false;false;false;false
clone::uninit::InitializingSlice::<'a, T>::push;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_min_round_sd;true;true;true;false
core_arch::x86::avx512dq::_mm_movepi64_mask;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::int_log10::u8;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::AddAssign>::add_assign;false;false;true;false
slice::ascii::<impl [u8]>::as_ascii;false;true;false;false
core_arch::x86::avx512f::_mm512_srav_epi32;true;true;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_expandloadu_epi16;true;true;true;false
num::int_sqrt::i128;true;false;false;false
<str::IsWhitespace as ops::function::FnMut<(char,)>>::call_mut;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_mask_expand_epi16;true;true;false;false
<i128 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<&num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub;false;false;false;false
<ptr::non_null::NonNull<T> as convert::From<ptr::unique::Unique<T>>>::from;false;false;true;false
f64::<impl f64>::is_subnormal;false;false;true;false
<task::poll::Poll<result::Result<T, F>> as ops::try_trait::FromResidual<result::Result<convert::Infallible, E>>>::from_residual;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for f128>::lt;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtph_epi64;true;true;true;false
core_arch::x86_64::sse41::_mm_insert_epi64;true;true;false;false
<core_simd::masks::Mask<i8, N> as convert::From<core_simd::masks::Mask<isize, N>>>::from;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u8>> for num::nonzero::NonZero<i8>>::try_from;false;true;false;false
intrinsics::sqrtf64;true;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::reduce_product;false;true;false;false
<core_arch::simd::m8x16 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepu16_epi32;true;true;false;false
intrinsics::fmul_fast;true;false;false;false
<marker::PhantomData<T> as cmp::Ord>::cmp;false;false;false;false
num::nonzero::NonZero::<isize>::saturating_pow;false;true;false;false
ptr::const_ptr::<impl *const T>::add::precondition_check;false;false;true;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::ReverseSearcher<'a>>::next_back;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtt_roundph_epi64;true;true;true;false
sync::atomic::AtomicUsize::new;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_fpclass_ps_mask;true;true;true;false
<&u16 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<str::iter::CharIndices<'a> as clone::Clone>::clone;false;false;true;false
num::<impl u64>::checked_add_signed;false;false;false;false
core_arch::x86::sse2::_mm_comilt_sd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i128>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm256_cmp_epi64_mask;true;true;false;false
core_arch::simd::f16x32::splat::JustOne;false;false;true;false
<slice::iter::SplitMut<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<cell::RefCell<T> as cmp::PartialOrd>::ge;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm512_max_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_ph;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_and_epi8;true;true;false;false
<&num::saturating::Saturating<u128> as ops::bit::BitXor<&num::saturating::Saturating<u128>>>::bitxor;false;false;false;false
sync::atomic::AtomicPtr::<T>::try_update;false;false;true;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm512_loadu_pd;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_loadu_epi16;true;true;true;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::cpuid::__cpuid_count;true;true;false;false
core_arch::simd::f16x8::splat::JustOne;false;false;true;false
num::flt2dec::digits_to_exp_str;false;true;true;false
<i8 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
panicking::panic_const::panic_const_rem_by_zero;false;false;false;false
<str::iter::MatchIndices<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
<&num::wrapping::Wrapping<i16> as ops::arith::Sub<&num::wrapping::Wrapping<i16>>>::sub;false;false;false;false
<task::poll::Poll<option::Option<result::Result<T, E>>> as ops::try_trait::Try>::branch;false;false;true;false
ptr::read_volatile;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtps_epi32;true;true;true;false
<&'a i16 as ops::bit::Shl<u64>>::shl;false;false;false;false
intrinsics::ctpop;false;false;false;false
<&'a num::wrapping::Wrapping<i32> as ops::arith::Mul<num::wrapping::Wrapping<i32>>>::mul;false;false;false;false
array::iter::IntoIter::<T, N>::new;false;false;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
num::<impl i16>::unbounded_shl;false;true;false;false
<ops::range::RangeInclusive<Idx> as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::i16x32 as clone::Clone>::clone;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::SubAssign<&num::wrapping::Wrapping<usize>>>::sub_assign;false;false;true;false
num::<impl u128>::from_be_bytes;false;false;false;false
core_arch::x86::sse::_mm_div_ss;true;true;true;false
core_arch::x86::avx::_mm256_floor_ps;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<f64, N>> for core_simd::vector::Simd<f64, N>>::product;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_cvtt_roundps_epi32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmp_epu8_mask;true;true;false;false
fmt::float::float_to_exponential_common;false;false;true;false
core_arch::x86::avx512f::_mm_i32scatter_pd;true;true;true;false
num::<impl i32>::checked_ilog10;false;false;false;false
<&i16 as ops::bit::Shr<&u64>>::shr;false;false;false;false
<cell::RefCell<T> as cmp::PartialOrd>::gt;false;false;true;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<option::Option<T> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_shufflelo_epi16;true;true;false;false
core_arch::x86::avx512ifma::_mm256_mask_madd52lo_epu64;true;true;false;false
<i128 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<u64 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<usize as slice::index::SliceIndex<[T]>>::index_mut;false;false;true;false
<isize as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
core_arch::x86::__m512i::as_mut_array;false;true;true;false
<net::ip_addr::Ipv6Addr as iter::range::Step>::forward_unchecked;true;true;false;false
core_arch::x86::avx512vbmi2::_mm_shldv_epi64;true;true;false;false
core_arch::x86::avx::_mm256_movehdup_ps;true;true;true;false
<slice::iter::IterMut<'_, T> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_scalef_round_pd;true;true;true;false
core_arch::x86::sse3::_mm_hsub_ps;true;true;true;false
<core_simd::vector::Simd<usize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm512_cvtepu8_epi16;true;true;false;false
<num::nonzero::NonZero<i128> as str::traits::FromStr>::from_str;false;false;false;false
<&num::saturating::Saturating<u8> as ops::bit::BitXor<&num::saturating::Saturating<u8>>>::bitxor;false;false;false;false
<() as iter::traits::collect::Extend<()>>::extend;false;false;true;true
core_arch::x86::avx512f::_mm512_getmant_round_ps;true;true;true;false
num::nonzero::NonZero::<u8>::is_power_of_two;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_store_pd;true;true;true;false
ops::range::RangeTo::<Idx>::contains;false;false;true;false
num::wrapping::Wrapping::<i32>::rotate_right;false;false;false;false
num::<impl i32>::rotate_left;false;false;false;false
core_arch::x86::avx512fp16::_mm_cvtsh_i32;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
core_arch::x86::avx512fp16::_mm_mask_cvtsh_sd;true;true;true;false
<task::wake::Context<'_> as fmt::Debug>::fmt;false;false;true;false
num::saturating::Saturating::<isize>::count_zeros;false;false;false;false
num::<impl i128>::to_ne_bytes;false;false;false;false
cmp::minmax_by;false;false;false;false
iter::traits::exact_size::ExactSizeIterator::len;false;false;false;false
<i16 as ops::arith::AddAssign<&i16>>::add_assign;false;false;true;false
num::<impl u32>::carrying_mul_add;false;false;false;false
<u128 as fmt::num::DisplayInt>::to_u128;false;false;false;false
core_arch::x86::avx512fp16::_mm_maskz_getexp_sh;true;true;true;false
<num::niche_types::UsizeNoHighBit as cmp::PartialEq>::eq;false;false;false;false
<u8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
core_arch::x86::avx512f::_mm512_cvt_roundpd_epu32;true;true;true;false
core_arch::x86::avx512f::_mm_mask_getmant_sd;true;true;true;false
<num::wrapping::Wrapping<i128> as ops::arith::RemAssign<&num::wrapping::Wrapping<i128>>>::rem_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_min_round_sd;true;true;true;false
<usize as ops::bit::BitXorAssign<&usize>>::bitxor_assign;false;false;true;false
core_arch::x86::__m128;false;false;true;false
char::convert::from_digit;false;false;false;false
core_arch::x86::avx::_mm256_min_pd;true;true;true;false
ptr::write_unaligned;true;true;true;false
core_arch::x86::sse::_mm_sub_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_loadu_pd;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::reduce_product;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu8_epi64;true;true;false;false
<usize as ops::arith::Sub>::sub;false;false;false;false
<u128 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
<bstr::ByteStr as ops::deref::Deref>::deref;false;false;false;false
<sync::atomic::AtomicU16 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_cvttps_epi32;true;true;true;false
core_arch::x86::avx512f::_mm256_mask2_permutex2var_ps;true;true;true;false
core_arch::x86::avx::_mm256_zextsi128_si256;true;true;false;false
<&num::saturating::Saturating<isize> as ops::bit::BitXor<&num::saturating::Saturating<isize>>>::bitxor;false;false;false;false
<isize as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
num::<impl u8>::to_be;false;false;false;false
<u128 as ops::arith::SubAssign<&u128>>::sub_assign;false;false;true;false
<ffi::c_str::Bytes<'_> as iter::traits::iterator::Iterator>::next;false;true;true;false
core_arch::x86::avx512dq::_mm_maskz_range_ps;true;true;true;false
<slice::iter::SplitInclusive<'_, T, P> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
str::iter::RSplit::<'a, P>::remainder;false;false;true;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::RangeToInclusive<usize>>>::index_mut;false;false;true;false
iter::traits::unchecked_iterator::UncheckedIterator::next_unchecked;true;true;true;false
intrinsics::simd::simd_bitreverse;true;false;false;false
core_arch::x86::avx512bitalg::_mm_bitshuffle_epi64_mask;true;true;false;false
<&'a u64 as ops::arith::Mul<u64>>::mul;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::<impl u64>::next_multiple_of;false;false;false;false
<&u16 as ops::arith::Add<&u16>>::add;false;false;false;false
result::Result::<T, E>::err;false;false;true;false
<str::iter::EscapeUnicode<'a> as iter::traits::iterator::Iterator>::fold;false;false;true;true
f64::<impl f64>::max;false;false;true;false
core_arch::x86::fma::_mm256_fnmadd_ps;true;true;true;false
<u8 as num::bignum::FullOps>::full_mul_add;false;false;false;false
<num::wrapping::Wrapping<T> as cmp::PartialEq>::eq;false;false;true;false
<num::saturating::Saturating<i16> as ops::arith::AddAssign<&i16>>::add_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<i32>>>::product;false;false;false;true
<u64 as ops::arith::AddAssign<&u64>>::add_assign;false;false;true;false
ptr::const_ptr::<impl *const T>::offset::runtime_offset_nowrap;false;false;true;false
<&i64 as ops::bit::Shl<&isize>>::shl;false;false;false;false
<&'a u8 as ops::bit::Shr<i64>>::shr;false;false;false;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::shift_elements_left;false;true;true;false
num::<impl i8>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_broadcastss_ps;true;true;true;false
"<&'b [char; N] as str::pattern::Pattern>::into_searcher";false;false;false;false
core_arch::x86::avx512bw::_mm512_loadu_epi8;true;true;true;false
<i128 as ops::arith::RemAssign<&i128>>::rem_assign;false;false;true;false
<num::wrapping::Wrapping<i32> as ops::arith::Add<&num::wrapping::Wrapping<i32>>>::add;false;false;false;false
iter::traits::iterator::Iterator::intersperse;false;false;false;false
core_arch::x86::avx::_mm256_ceil_pd;true;true;true;false
core_arch::x86::avx512f::_mm_cmpge_epu32_mask;true;true;false;false
core_arch::simd::u16x64;false;false;false;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi32_epi8;true;true;false;false
intrinsics::unchecked_rem;true;false;false;false
num::<impl u128>::div_euclid;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_div_ph;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_unpacklo_epi16;true;true;false;false
<&'a num::wrapping::Wrapping<i8> as ops::arith::Add<num::wrapping::Wrapping<i8>>>::add;false;false;false;false
core_arch::x86::__m256::splat;false;true;true;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
<&num::saturating::Saturating<u8> as ops::arith::Sub<&num::saturating::Saturating<u8>>>::sub;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u8>::try_from;false;false;false;false
core_arch::x86::avx512vbmi::_mm256_mask_multishift_epi64_epi8;true;true;false;false
<num::saturating::Saturating<u32> as ops::arith::Mul<&num::saturating::Saturating<u32>>>::mul;false;false;false;false
iter::traits::iterator::Iterator::is_sorted_by;false;false;false;true
unicode::printable::is_printable;false;false;false;false
core_arch::x86::avx512f::_mm512_load_ps;true;true;true;false
<i32 as fmt::num::DisplayInt>::zero;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::simd::f64x4::new;false;false;true;false
<i8 as ops::bit::Shr<u16>>::shr;false;false;false;false
<&i64 as ops::bit::Shr<&i16>>::shr;false;false;false;false
net::ip_addr::IpAddr::is_unspecified;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_sllv_epi64;true;true;false;false
sync::atomic::AtomicI8::compare_exchange_weak;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_rsqrt14_pd;true;true;true;false
f16::<impl f16>::minimum;false;false;true;false
arch::breakpoint;false;false;false;false
<core_simd::vector::Simd<f32, 16> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
core_arch::x86::avx512bw::_mm512_cmpeq_epi8_mask;true;true;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<u128>> for num::nonzero::NonZero<i128>>::try_from;false;true;false;false
task::wake::Waker::vtable;false;false;true;false
iter::adapters::chain::chain;false;false;false;false
iter::traits::iterator::Iterator::all::check;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mul_epu32;true;true;false;false
unicode::unicode_data::skip_search;false;false;false;true
num::bignum::tests::Big8x3::bit_length;false;false;true;true
<&'a u32 as ops::arith::Div<u32>>::div;false;false;false;false
ptr::mut_ptr::<impl *mut T>::add::runtime_add_nowrap::compiletime;false;false;true;false
core_arch::x86::avx::_mm256_max_ps;true;true;true;false
<ffi::c_str::CStr as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512fp16::_mm512_fcmadd_pch;true;true;true;false
<num::saturating::Saturating<i8> as ops::arith::MulAssign<&num::saturating::Saturating<i8>>>::mul_assign;false;false;true;false
<ffi::va_list::VaList<'a, 'f> as ops::deref::DerefMut>::deref_mut;false;false;true;false
<i64 as ops::bit::Shr<usize>>::shr;false;false;false;false
<core_simd::vector::Simd<i32, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_storeu_ps;true;true;true;false
<time::Duration as clone::Clone>::clone;false;false;false;false
<slice::iter::Iter<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtpd_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpeq_epi16_mask;true;true;false;false
num::<impl i64>::to_be;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_adds_epi16;true;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512bw::_mm256_maskz_adds_epi16;true;true;false;false
<u16 as default::Default>::default;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::RangeInclusive<usize>>::get;false;false;true;false
<iter::adapters::inspect::Inspect<I, F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<&'a u128 as ops::bit::Shr<i16>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_fmaddsub_round_pd;true;true;true;false
core_arch::x86::avx512dq::_mm256_movepi32_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_scalef_sh;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_srai_epi16;true;true;false;false
<i16 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<u16, N>>::add;false;true;false;false
num::bignum::Big32x40::div_rem;false;false;true;true
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::abs_diff;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::MulAssign<u8>>::mul_assign;false;false;true;false
<u16 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvt_roundpd_ph;true;true;true;false
num::nonzero::NonZero::<i64>::from_le;false;true;false;false
core_arch::x86::avx512f::_mm_mask_blend_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cvtsepi16_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_add_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm256_cmp_epi16_mask;true;true;false;false
<u16 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
intrinsics::floorf64;true;false;true;false
num::<impl u32>::strict_rem_euclid;false;false;false;false
intrinsics::floorf32;true;false;true;false
<isize as slice::cmp::SliceContains>::slice_contains;false;false;false;true
num::<impl isize>::overflowing_sub;false;false;false;false
tuple::<impl cmp::PartialOrd for (W, V, U, T)>::partial_cmp;false;false;false;false
<num::wrapping::Wrapping<u8> as ops::bit::BitXor>::bitxor;false;false;false;false
<i32 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::RangeInclusive<A>>::is_sorted;false;false;true;false
"array::<impl hash::Hash for [T; N]>::hash";false;false;true;false
tuple::<impl cmp::PartialOrd for (T,)>::gt;false;false;false;false
core_arch::x86::fma::_mm_fmsub_ss;true;true;true;false
num::nonzero::NonZero::<u64>::cast_signed;false;true;false;false
core_arch::x86::avx512bw::_mm_mask_reduce_add_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm512_reduce_add_ph;true;true;true;false
<i32 as ops::bit::Shr<&i16>>::shr;false;false;false;false
f64::<impl f64>::total_cmp;false;false;true;false
ops::range::RangeInclusive::<Idx>::start;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::wrapping_neg;false;false;false;false
slice::index::get_offset_len_noubcheck;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_fmsubadd_round_pd;true;true;true;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_extractf64x4_pd;true;true;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::index_mut;false;true;true;false
<&u8 as ops::bit::Shl<&i64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask3_fmsubadd_pd;true;true;true;false
str::pattern::CharSliceSearcher;false;false;false;false
<char::ToUppercase as fmt::Debug>::fmt;false;false;true;false
hash::sip::Hasher::<S>::reset;false;false;true;false
convert::num::<impl convert::From<u64> for i128>::from;false;false;false;false
<&i128 as ops::bit::Shl<&u32>>::shl;false;false;false;false
<iter::adapters::cycle::Cycle<I> as fmt::Debug>::fmt;false;false;true;false
<core_arch::x86::__m256bh::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_mul_round_pd;true;true;true;false
core_arch::x86::sse::_mm_cmpnge_ss;true;true;true;false
<usize as ops::bit::Shr<&i8>>::shr;false;false;false;false
slice::<impl [T]>::split_off_last;false;false;true;false
core_arch::x86::avx512bw::_mm_cmpge_epu16_mask;true;true;false;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<i8, N>>::not;false;false;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<u16, N>>::bitand;false;true;false;false
num::<impl i8>::saturating_pow;false;false;false;false
convert::num::<impl convert::From<bool> for u128>::from;false;false;false;false
slice::<impl [T]>::last_chunk_mut;false;true;true;false
core_arch::x86::avx512f::_mm_maskz_max_round_sd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_expandloadu_epi8;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_sqrt_round_sh;true;true;true;false
num::<impl u128>::rotate_left;false;false;false;false
<cell::RefCell<T> as clone::Clone>::clone_from;false;false;true;false
<u128 as ops::bit::Shl<u8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_add_ps;true;true;true;false
core_arch::x86::avx2::_mm_i64gather_epi64;true;true;true;false
core_arch::x86::avx::_mm256_permute_ps;true;true;true;false
<core_simd::masks::Mask<T, N> as ops::bit::BitAndAssign<bool>>::bitand_assign;false;false;true;false
<i8 as ops::bit::BitXor>::bitxor;false;false;false;false
<u8 as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_rsqrt14_ps;true;true;true;false
ptr::const_ptr::<impl *const T>::cast_mut;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u64>>::from;false;true;false;false
clone::impls::<impl clone::Clone for u16>::clone;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_compressstoreu_epi16;true;true;true;false
<core_arch::x86::cpuid::CpuidResult as cmp::Ord>::cmp;false;false;true;false
<&'a i16 as ops::bit::Shr<i128>>::shr;false;false;false;false
ptr::mut_ptr::<impl *mut T>::mask;false;false;true;false
"array::<impl [T; N]>::each_ref";false;false;false;true
core_arch::x86::__m128d::as_array;false;true;true;false
ptr::mut_ptr::<impl *mut T>::add::precondition_check;false;false;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::position;false;true;true;true
num::<impl u8>::is_ascii_alphabetic;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_shuffle_i64x2;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_maddubs_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvttph_epi64;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi32_ps;true;true;false;false
<marker::variance::PhantomContravariantLifetime<'a> as cmp::PartialOrd>::partial_cmp;false;false;true;false
num::<impl i16>::checked_div_euclid;false;false;false;false
num::<impl str::traits::FromStr for usize>::from_str;false;false;false;false
<isize as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<isize>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm512_cvtepi64_epi16;true;true;false;false
ops::index_range::IndexRange::next_unchecked;true;true;true;false
<(dyn any::Any + marker::Send + marker::Sync + 'static)>::downcast_ref;false;false;false;false
core_arch::x86::avx::_mm256_storeu_pd;true;true;true;false
"tuple::<impl convert::From<[T; 7]> for (T, T, T, T, T, T, T)>::from";false;false;false;false
<&'a i128 as ops::bit::Shr<i64>>::shr;false;false;false;false
num::nonzero::NonZero::<u32>::rotate_right;false;true;false;false
core_arch::x86::avx512bw::_mm512_mask_cmpge_epu8_mask;true;true;false;false
<i8 as ops::arith::MulAssign<&i8>>::mul_assign;false;false;true;false
fmt::rt::ArgumentType::Count;false;false;false;false
intrinsics::unaligned_volatile_store;true;false;true;false
<&num::wrapping::Wrapping<isize> as ops::arith::Neg>::neg;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmple_epi16_mask;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_reduce_round_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm_fcmul_sch;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::Neg>::neg;false;false;false;false
num::<impl u64>::carrying_add;false;true;false;false
<&u8 as ops::arith::Div<&u8>>::div;false;false;false;false
iter::traits::iterator::Iterator::nth;false;false;true;true
num::<impl u16>::overflowing_div_euclid;false;false;false;false
convert::num::<impl convert::TryFrom<i16> for num::nonzero::NonZero<i16>>::try_from;false;false;false;false
<u64 as ops::arith::MulAssign>::mul_assign;false;false;true;false
fmt::Formatter::<'a>::debug_struct_field5_finish;false;false;true;false
<str::iter::MatchIndices<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
iter::traits::iterator::Iterator::inspect;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
mem::maybe_uninit::MaybeUninit::<T>::zeroed;false;true;false;false
time::Duration::abs_diff;false;false;false;false
<i128 as ops::bit::Not>::not;false;false;false;false
core_arch::x86::fma::_mm_fnmsub_sd;true;true;true;false
<char::EscapeDebug as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fnmadd_pd;true;true;true;false
<&num::saturating::Saturating<i16> as ops::arith::Sub<&num::saturating::Saturating<i16>>>::sub;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_alignr_epi32;true;true;false;false
<range::iter::IterRange<A> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<&num::saturating::Saturating<u128> as ops::arith::Sub<&num::saturating::Saturating<u128>>>::sub;false;false;false;false
<char::ToUppercase as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
sync::exclusive::Exclusive::<T>::get_pin_mut;false;true;true;false
num::<impl i8>::unchecked_shr::precondition_check;false;false;false;false
<&u64 as ops::bit::Shl<&u64>>::shl;false;false;false;false
option::Option::<T>::unwrap_or;false;false;true;false
slice::sort::stable::drift::DriftsortRun::sorted;false;false;false;false
core_arch::x86::avx512f::_mm256_i64scatter_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmple_pd_mask;true;true;true;false
<range::RangeInclusive<usize> as slice::index::SliceIndex<[T]>>::get;false;false;true;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::ZipImpl<A, B>>::fold;false;true;true;true
<iter::adapters::map::Map<I, F> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx2::_mm256_cvtepi8_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_cmpeq_epu16_mask;true;true;false;false
clone::impls::<impl clone::Clone for !>::clone;false;false;false;false
<core_arch::simd::m8x32 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvtt_roundpd_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_storeu_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_mul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_roundscale_pd;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_simd::vector::Simd<u8, 32>> for core_arch::x86::__m256i>::from;false;false;false;false
fmt::num::<impl fmt::LowerHex for i128>::fmt;false;false;true;false
intrinsics::roundf128;true;false;true;false
ptr::const_ptr::<impl cmp::PartialEq for *const T>::eq;false;false;true;false
intrinsics::mir::Offset;false;false;false;false
core_arch::x86::avx512f::_mm_fmsub_round_sd;true;true;true;false
<u16 as ops::arith::Add>::add;false;false;false;false
<i32 as slice::cmp::SliceContains>::slice_contains;false;false;false;true
<usize as ops::bit::ShlAssign<&i64>>::shl_assign;false;false;true;false
num::<impl u128>::leading_ones;false;false;false;false
core_simd::swizzle::<impl core_simd::vector::Simd<T, N>>::rotate_elements_right;false;false;true;false
fmt::rt::Argument::<'_>::new;false;false;true;false
core_arch::simd::u16x16;false;false;false;false
core_arch::x86::avx512f::_mm_mask_min_ps;true;true;true;false
num::<impl u16>::checked_ilog;false;false;false;true
option::Option::<T>::ok_or;false;false;true;false
<option::IntoIter<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<i32 as ops::bit::Shr<i64>>::shr;false;false;false;false
num::<impl u128>::checked_next_multiple_of;false;false;false;false
core_arch::x86::avx512f::_mm_mask_add_sd;true;true;true;false
str::pattern::TwoWaySearcher::new;false;false;false;false
<u8 as ops::bit::Shl<isize>>::shl;false;false;false;false
num::<impl u32>::saturating_add;false;false;false;false
<marker::PhantomPinned as cmp::PartialOrd>::partial_cmp;false;false;false;false
<num::saturating::Saturating<u16> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_load_pd;true;true;true;false
<usize as ops::bit::Shl<&i8>>::shl;false;false;false;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::count;false;false;true;true
core_arch::x86::avx512bw::_mm256_movepi8_mask;true;true;false;false
future::join::MaybeDone::Future;false;false;false;false
convert::num::<impl convert::From<u8> for f64>::from;false;false;false;false
str::count::sum_bytes_in_usize;false;false;false;false
num::wrapping::Wrapping::<i8>::rotate_left;false;false;false;false
core_arch::x86::gfni::_mm256_maskz_gf2p8mul_epi8;true;true;false;false
"array::equality::<impl cmp::PartialEq<[U; N]> for &[T]>::ne";false;false;false;false
iter::traits::iterator::Iterator::try_reduce;false;false;true;true
<core_simd::masks::mask_impl::Mask<T, N> as ops::bit::BitAnd>::bitand;false;true;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXor<&num::wrapping::Wrapping<u128>>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_expandloadu_ps;true;true;true;false
io::borrowed_buf::BorrowedBuf::<'data>::len;false;false;true;false
<core_simd::vector::Simd<T, N> as convert::AsRef<[T]>>::as_ref;false;false;true;false
<&'a u16 as ops::bit::Shr<u64>>::shr;false;false;false;false
<f16 as ops::arith::Mul>::mul;false;false;true;false
<u16 as ops::bit::Shl<u8>>::shl;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::double_ended::DoubleEndedIterator>::advance_back_by;false;false;true;false
<str::pattern::SearchStep as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_mov_epi32;true;true;false;false
escape::backslash;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtsepi32_storeu_epi8;true;true;true;false
<num::niche_types::I64NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::avx512f::_mm_cvtusepi32_epi16;true;true;false;false
<u8 as ops::bit::Shl<i64>>::shl;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Rem>::rem;false;false;false;false
intrinsics::cttz_nonzero;true;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::BitOr>::bitor;false;false;false;false
<core_arch::x86::__m512h::splat::JustOne as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::leading_ones;false;false;false;false
intrinsics::type_id;false;false;false;false
hint::unlikely;false;false;false;false
core_arch::x86::avx512f::_mm256_srai_epi64;true;true;false;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::count;false;false;true;true
<num::error::TryFromIntError as fmt::Display>::fmt;false;false;true;false
num::nonzero::NonZero::<u8>::leading_zeros;false;true;false;false
intrinsics::rintf64;true;false;true;false
num::nonzero::NonZero::<u128>::unchecked_add;true;true;false;false
convert::num::<impl convert::TryFrom<i16> for u64>::try_from;false;false;false;false
<&'a u128 as ops::bit::Shl<u32>>::shl;false;false;false;false
iter::traits::iterator::Iterator::max;false;false;false;false
panicking::panic_str_2015;false;false;false;false
sync::atomic::AtomicI8::as_ptr;false;false;true;false
<range::RangeFrom<T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepi16_ph;true;true;false;false
num::nonzero::NonZero::<i16>::swap_bytes;false;true;false;false
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<u8>> for u8>::rem_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_pd;true;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::abs_diff;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for isize>::try_from;false;false;false;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for i16>::max_unsigned;false;false;false;false
core_simd::ops::<impl ops::bit::BitAnd for core_simd::vector::Simd<i32, N>>::bitand;false;true;false;false
core_arch::x86::avx512f::_cvtu32_mask16;true;false;false;false
<&usize as ops::bit::Shr<&u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_fmsub_round_pd;true;true;true;false
<&num::wrapping::Wrapping<u32> as ops::arith::Div<&num::wrapping::Wrapping<u32>>>::div;false;false;false;false
intrinsics::wrapping_sub;false;false;false;false
core_arch::x86::avx512bf16::_mm256_maskz_cvtpbh_ps;true;true;false;false
<marker::variance::PhantomContravariantLifetime<'a> as hash::Hash>::hash;false;false;true;false
num::wrapping::Wrapping::<isize>::is_positive;false;false;false;false
core_arch::x86::sse::_mm_unpackhi_ps;true;true;true;false
ptr::mut_ptr::<impl *mut T>::as_mut_unchecked;true;true;true;false
f128::<impl f128>::from_le_bytes;false;false;false;false
num::nonzero::NonZero::<i16>::to_le;false;true;false;false
<(EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(H, G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
net::ip_addr::IpAddr::is_loopback;false;false;true;false
slice::<impl [T]>::select_nth_unstable_by_key;false;false;true;false
core_arch::x86::avx512f::_mm_i32scatter_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_srav_epi32;true;true;false;false
core_arch::x86::avx512cd::_mm256_conflict_epi32;true;true;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::saturating_sub;false;true;false;false
core_arch::x86::avx::_mm256_storeu_ps;true;true;true;false
<num::saturating::Saturating<u8> as ops::bit::BitAnd>::bitand;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::Range<usize>>::get;false;true;true;false
core_arch::x86::sse2::_mm_srl_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_getmant_pd;true;true;true;false
core_arch::x86::avx512f::_mm_mask_ror_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_cvttph_epu64;true;true;true;false
core_arch::x86::__m512bh::as_i16x32;false;false;false;false
<net::ip_addr::Ipv4Addr as ops::bit::Not>::not;false;false;false;true
ascii::escape_default;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::MulAssign<usize>>::mul_assign;false;false;true;false
sync::atomic::AtomicI8::fetch_max;false;true;true;false
core_arch::x86::avx512f::_mm512_cvtepi16_epi64;true;true;false;false
<ops::index_range::IndexRange as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<char::decode::DecodeUtf16<I> as fmt::Debug>::fmt;false;false;true;false
<isize as ops::bit::Shl<i32>>::shl;false;false;false;false
sync::atomic::AtomicU32::from_mut;false;true;true;false
time::Duration::checked_mul;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmadd_pd;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::arith::DivAssign<&num::wrapping::Wrapping<u32>>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_compress_ps;true;true;true;false
<[T] as convert::AsMut<[T]>>::as_mut;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Product for core_simd::vector::Simd<u64, N>>::product;false;false;false;true
<num::wrapping::Wrapping<i64> as ops::arith::RemAssign<&num::wrapping::Wrapping<i64>>>::rem_assign;false;false;true;false
<i128 as ops::bit::Shr<u32>>::shr;false;false;false;false
<ops::range::RangeFrom<usize> as slice::index::SliceIndex<[T]>>::index;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_and_epi32;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign<&u32>>::bitand_assign;false;false;true;false
<u16 as ops::arith::MulAssign>::mul_assign;false;false;true;false
<usize as ops::bit::Shr<i8>>::shr;false;false;false;false
f128::<impl f128>::next_down;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitAnd<&num::saturating::Saturating<u32>>>::bitand;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::MulAssign>::mul_assign;false;false;true;false
<iter::adapters::chain::Chain<A, B> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<num::saturating::Saturating<T> as fmt::Debug>::fmt;false;false;true;false
f128::<impl f128>::clamp::do_panic::runtime;false;false;true;false
core_arch::x86::avx512bw::_mm512_adds_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_permutevar_pd;true;true;true;false
<&'a i32 as ops::bit::Shl<i32>>::shl;false;false;false;false
<core_arch::simd::i16x4 as cmp::PartialEq>::eq;false;false;false;false
<&i8 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<net::ip_addr::Ipv4Addr as iter::range::Step>::steps_between;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<u64>>::try_from;false;true;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::BitXor<&num::wrapping::Wrapping<u32>>>::bitxor;false;false;false;false
sync::atomic::AtomicU16::from_mut;false;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i64> for core_simd::vector::Simd<i64, N>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpgt_epu32_mask;true;true;false;false
<num::wrapping::Wrapping<i16> as ops::arith::RemAssign>::rem_assign;false;false;true;false
f128::<impl f128>::abs;false;false;true;false
ptr::non_null::NonNull::<T>::offset;true;false;true;false
char::methods::<impl char>::as_ascii;false;true;false;false
option::Option::<T>::xor;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_min_ps;true;true;true;false
<num::wrapping::Wrapping<i128> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
ascii::ascii_char::<impl convert::From<ascii::ascii_char::AsciiChar> for u16>::from;false;false;false;false
core_arch::simd::m32x4::bool_to_internal;false;false;false;false
core_arch::x86::vaes::_mm512_aesdeclast_epi128;true;true;false;false
core_arch::x86_64::tbm::_t1mskc_u64;true;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvtsepi32_epi16;true;true;false;false
core_arch::x86::gfni::_mm_gf2p8mul_epi8;true;true;false;false
core_arch::x86::avx2::_mm_broadcastd_epi32;true;true;false;false
<&i8 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_sd;true;true;true;false
<iter::adapters::copied::Copied<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
num::<impl u16>::strict_shl;false;false;false;false
core_arch::x86::avx512bw::_mm512_maskz_srli_epi16;true;true;false;false
<u128 as ops::bit::BitAnd<&u128>>::bitand;false;false;false;false
<array::drain::Drain<'_, T> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
cell::Ref::<'b, T>::clone;false;false;true;false
core_simd::ops::<impl ops::bit::Shl for core_simd::vector::Simd<u8, N>>::shl;false;true;false;false
<slice::iter::Iter<'a, T> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_add_round_ph;true;true;true;false
<core_simd::vector::Simd<i32, 1> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::<impl i128>::unbounded_shr;false;true;false;false
task::poll::Poll::<option::Option<result::Result<T, E>>>::map_ok;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_fmsubadd_ps;true;true;true;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_try_fold;false;false;true;true
<num::saturating::Saturating<isize> as ops::arith::RemAssign<isize>>::rem_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_srl_epi16;true;true;false;false
<num::wrapping::Wrapping<T> as hash::Hash>::hash;false;false;true;false
sync::atomic::AtomicBool::update;false;false;true;true
core_arch::x86::avx::_mm256_cvttps_epi32;true;true;true;false
<u16 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
sync::atomic::AtomicI16::from_mut_slice;false;true;true;false
core_arch::x86::avx512bw::_mm_cmpneq_epi8_mask;true;true;false;false
num::saturating::Saturating::<u128>::to_le;false;false;false;false
bstr::ByteStr::from_bytes;false;true;false;false
core_arch::x86::avx512dq::_mm512_broadcast_f32x8;true;true;true;false
<core_simd::masks::mask_impl::Mask<T, N> as cmp::PartialOrd>::partial_cmp;false;false;true;false
ptr::mut_ptr::<impl *mut T>::sub::runtime_sub_nowrap;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u128> for usize>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_set1_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_load_ps;true;true;true;false
num::nonzero::NonZero::<i8>::saturating_mul;false;true;false;false
<future::pending::Pending<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm512_maskz_rcp_ph;true;true;true;false
core_arch::simd::i8x16::extract;false;true;false;false
core_arch::x86::xsave::_xrstor;true;true;true;false
<future::async_drop::AsyncDropInPlace<T> as future::future::Future>::poll;false;true;true;false
<u8 as ops::bit::Shr<i16>>::shr;false;false;false;false
<i16 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
num::<impl u64>::count_zeros;false;false;false;false
core_arch::x86::avx512bw::_mm_reduce_or_epi16;true;true;false;false
array::iter::IntoIter::<T, N>::as_mut_slice;false;true;true;false
core_arch::x86::avx512vbmi2::_mm256_mask_expand_epi8;true;true;false;false
core_arch::x86::avx512bw::_mm512_max_epu16;true;true;false;false
<u64 as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<T as convert::From<T>>::from;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_arch::x86::avx512bw::_mm_srlv_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_compressstoreu_ps;true;true;true;false
<i32 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
<(dyn any::Any + marker::Send + marker::Sync + 'static)>::downcast_mut_unchecked;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepi64_ph;true;true;true;false
<str::iter::SplitInclusive<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<&num::saturating::Saturating<u8> as ops::arith::Mul<&num::saturating::Saturating<u8>>>::mul;false;false;false;false
<u128 as ops::bit::ShlAssign<u32>>::shl_assign;false;false;true;false
<str::iter::RSplit<'a, P> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi16_epi32;true;true;false;false
sync::atomic::AtomicI8::get_mut_slice;false;true;true;false
<core_simd::vector::Simd<i8, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::sse2::_mm_storeu_si16;true;true;true;false
num::<impl i64>::saturating_pow;false;false;false;false
num::<impl i32>::wrapping_neg;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::Sub<&num::saturating::Saturating<isize>>>::sub;false;false;false;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::AddAssign>::add_assign;false;false;true;false
num::<impl isize>::is_negative;false;false;false;false
num::<impl i8>::strict_sub_unsigned;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::Add>::add;false;false;false;false
num::diy_float::Fp::normalize_to;false;false;false;false
num::<impl i16>::strict_sub_unsigned;false;false;false;false
<&num::wrapping::Wrapping<u8> as ops::arith::Sub<&num::wrapping::Wrapping<u8>>>::sub;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::__m512bh::as_mut_array;false;true;true;false
<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&u32>>::mul_assign;false;false;true;false
<ops::range::RangeToInclusive<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
core_arch::x86::avx512f::_mm_mask_cmpge_epi64_mask;true;true;false;false
<&i32 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<usize as slice::index::SliceIndex<[T]>>::get;false;true;false;false
num::saturating::Saturating::<isize>::reverse_bits;false;false;false;false
<u32 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
core_arch::simd::u8x16::extract;false;true;false;false
num::<impl i64>::strict_add;false;false;false;false
core_arch::x86::avx2::_mm256_abs_epi16;true;true;false;false
<*const T as fmt::Debug>::fmt;false;false;true;false
<marker::variance::PhantomCovariantLifetime<'a> as cmp::Ord>::cmp;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_broadcastq_epi64;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<&i8>>::add_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundepi64_ps;true;true;true;false
core_arch::x86::avx512dq::_kortest_mask8_u8;true;true;true;false
core_arch::x86::avx512f::_mm_cvttps_epu32;true;true;true;false
num::<impl i128>::rem_euclid;false;false;false;false
sync::atomic::AtomicU32::fetch_sub;false;true;true;false
num::<impl u16>::leading_zeros;false;false;false;false
hash::Hasher::write_u16;false;false;true;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<f64, N>>::div;false;true;true;false
core_arch::x86::sse4a::_mm_stream_ss;true;true;true;false
<num::saturating::Saturating<u128> as ops::arith::AddAssign>::add_assign;false;false;true;false
<Iter as iter::traits::collect::TraitL<EL, EK, EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend;false;false;true;true
cmp::impls::<impl cmp::PartialOrd for f128>::gt;false;false;true;false
<str::pattern::RejectAndMatch as str::pattern::TwoWayStrategy>::matching;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_min_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_i64scatter_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_sra_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmpnlt_pd_mask;true;true;true;false
<num::saturating::Saturating<u8> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
fmt::Formatter::<'a>::write_str;false;false;true;false
core_arch::x86::avx512f::_kor_mask16;true;false;false;false
<core_simd::vector::Simd<i8, N> as core_simd::simd::num::int::SimdInt>::reduce_sum;false;true;false;false
core_arch::x86::avx512bw::_mm512_sll_epi16;true;true;false;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;true;false
num::<impl isize>::overflowing_div;false;false;false;false
<u16 as ops::bit::Shl<&usize>>::shl;false;false;false;false
net::ip_addr::Ipv6Addr::to_ipv4_mapped;false;false;false;false
core_arch::x86::__m256i::as_mut_array;false;true;true;false
<&'a u32 as ops::bit::Shr<u8>>::shr;false;false;false;false
<usize as ops::bit::Shr<&i128>>::shr;false;false;false;false
<task::wake::Waker as convert::AsRef<task::wake::LocalWaker>>::as_ref;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::arith::Div<&num::wrapping::Wrapping<isize>>>::div;false;false;false;false
core_arch::x86::avx::_mm256_permute_pd;true;true;true;false
core_arch::x86::avx::_mm256_testz_ps;true;true;true;false
core_arch::simd::f64x4::splat::JustOne;false;false;true;false
<num::flt2dec::Sign as fmt::Debug>::fmt;false;false;true;false
<ptr::alignment::AlignmentEnum as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&i8 as ops::bit::Shl<&u128>>::shl;false;false;false;false
core_arch::x86::avx512dq::_mm512_cvtt_roundps_epi64;true;true;true;false
f128::<impl f128>::maximum;false;false;true;false
sync::atomic::AtomicI16::fetch_min;false;true;true;false
char::convert::from_u32_unchecked;true;false;false;false
<slice::iter::ArrayChunksMut<'a, T, N> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_rcp14_pd;true;true;true;false
num::wrapping::Wrapping::<i32>::to_be;false;false;false;false
num::saturating::Saturating::<u32>::reverse_bits;false;false;false;false
<bstr::ByteStr as cmp::PartialOrd>::partial_cmp;false;false;false;false
num::<impl i32>::checked_pow;false;false;false;true
sync::atomic::AtomicI64::fetch_nand;false;true;true;false
hash::sip::SipHasher::new_with_keys;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_srl_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtt_roundph_epu64;true;true;true;false
core_arch::x86::avx512f::_mm_fmadd_round_sd;true;true;true;false
<core_arch::simd::u64x4 as cmp::PartialEq>::eq;false;false;false;false
<i32 as ops::bit::Shl<u16>>::shl;false;false;false;false
<usize as fmt::num::DisplayInt>::from_u8;false;false;false;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<i64 as ops::arith::RemAssign>::rem_assign;false;false;true;false
num::<impl u16>::checked_sub_signed;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvtepi16_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cmplt_epi32_mask;true;true;false;false
num::<impl u8>::to_be_bytes;false;false;false;false
<u64 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_or_epi64;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::arith::DivAssign<i8>>::div_assign;false;false;true;false
<num::saturating::Saturating<usize> as ops::arith::SubAssign<&usize>>::sub_assign;false;false;true;false
<num::saturating::Saturating<u128> as ops::bit::BitOr<&num::saturating::Saturating<u128>>>::bitor;false;false;false;false
core_simd::ops::deref::<impl ops::arith::Sub<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::sub;false;false;false;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::<impl u16>::isolate_least_significant_one;false;false;false;false
<ascii::ascii_char::AsciiChar as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86_64::sse2::_mm_stream_si64;true;true;true;false
iter::adapters::filter::Filter::<I, P>::new;false;false;false;false
<ops::range::RangeFull as fmt::Debug>::fmt;false;false;true;false
num::<impl u128>::trailing_zeros;false;false;false;false
core_arch::x86::avx512dq::_mm_reduce_ss;true;true;true;false
num::wrapping::Wrapping::<u64>::is_power_of_two;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAndAssign<&i8>>::bitand_assign;false;false;true;false
<*const T as fmt::Pointer>::fmt;false;false;true;false
num::saturating::Saturating::<i32>::reverse_bits;false;false;false;false
<&u128 as ops::bit::Shr<&i32>>::shr;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::adapters::zip::SpecFold>::spec_fold;false;false;true;true
core_arch::x86::avx::_mm256_castpd_si256;true;false;true;false
num::wrapping::Wrapping::<u16>::swap_bytes;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXorAssign<&i8>>::bitxor_assign;false;false;true;false
num::saturating::Saturating::<u8>::trailing_zeros;false;false;false;false
<i32 as ops::arith::Neg>::neg;false;false;false;false
intrinsics::fmaf16;true;false;true;false
<&i128 as ops::bit::Shr<&i64>>::shr;false;false;false;false
sync::atomic::AtomicPtr::<T>::fetch_byte_sub;false;true;true;false
core_arch::x86::avx512f::_mm256_maskz_add_ps;true;true;true;false
num::nonzero::NonZero::<isize>::to_be;false;true;false;false
<num::wrapping::Wrapping<i32> as ops::arith::Sub<&num::wrapping::Wrapping<i32>>>::sub;false;false;false;false
hint::assert_unchecked;true;false;false;false
<(EA,) as iter::traits::collect::Extend<(A,)>>::extend;false;false;true;false
slice::<impl [T]>::fill;false;false;true;false
core_arch::x86::avx512bw::_mm512_min_epi8;true;true;false;false
core_arch::x86::kl::_mm_aesdecwide128kl_u8;true;true;true;false
core_arch::x86::avx512vbmi::_mm256_maskz_permutexvar_epi8;true;true;false;false
sync::atomic::AtomicI32::fetch_and;false;true;true;false
<i64 as fmt::num::DisplayInt>::to_u128;false;false;false;false
<num::saturating::Saturating<u128> as ops::arith::Mul<&num::saturating::Saturating<u128>>>::mul;false;false;false;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::interleave;false;true;true;false
num::saturating::Saturating::<u128>::count_zeros;false;false;false;false
<slice::iter::ChunksExact<'_, T> as clone::Clone>::clone;false;false;true;false
num::<impl i32>::isolate_least_significant_one;false;false;false;false
<core_arch::x86::bf16 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_or_epi64;true;true;false;false
<&'a u16 as ops::bit::Shr<i128>>::shr;false;false;false;false
num::<impl isize>::max_value;false;false;false;false
<option::Option<T> as ops::try_trait::Try>::from_output;false;false;true;false
core_arch::x86::avx512bw::_mm_maskz_adds_epu8;true;true;false;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;true;false
num::<impl i32>::borrowing_sub;false;false;false;false
<Iter as iter::traits::collect::TraitJ<EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512f::_mm512_permutexvar_epi64;true;true;false;false
<char::convert::CharTryFromError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitOrAssign<u8>>::bitor_assign;false;false;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for u16>::try_from;false;false;false;false
<&i32 as ops::arith::Rem<&i32>>::rem;false;false;false;false
<&u16 as ops::bit::Shl<&isize>>::shl;false;false;false;false
ub_checks::is_valid_allocation_size;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_max_sh;true;true;true;false
core_simd::masks::Mask::<T, N>::splat;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::saturating_add;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtusepi64_epi8;true;true;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::try_fold::flatten;false;false;false;false
core_arch::x86::avx512bw::_mm512_sllv_epi16;true;true;false;false
<&'a i8 as ops::bit::Shl<i8>>::shl;false;false;false;false
ptr::non_null::NonNull::<[T]>::is_empty;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_unpacklo_epi32;true;true;false;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::iterator::Iterator>::nth;false;true;true;false
num::<impl u16>::to_le_bytes;false;false;false;false
<i128 as iter::range::Step>::backward;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_add_ph;true;true;true;false
intrinsics::mir::Call;false;false;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::iterator::Iterator>::advance_by;false;true;true;false
<u16 as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86::avx512bf16::_mm512_cvtneps_pbh;true;true;true;false
<ptr::metadata::DynMetadata<Dyn> as hash::Hash>::hash;false;false;true;false
mem::manually_drop::ManuallyDrop::<T>::new;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::arith::DivAssign<i16>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_min_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_mmask_i64gather_pd;true;true;true;false
<num::niche_types::I64NotAllOnes as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundph_pd;true;true;true;false
core_simd::ops::deref::<impl ops::bit::Shl<&core_simd::vector::Simd<T, N>> for core_simd::vector::Simd<T, N>>::shl;false;false;false;false
num::niche_types::NonZeroU32Inner::as_inner;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<i128>>>::bitor_assign;false;false;true;false
ptr::non_null::NonNull::<T>::is_aligned_to;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::RemAssign<i8>>::rem_assign;false;false;true;false
<u128 as ops::bit::Shr<i128>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_shuffle_f32x4;true;true;true;false
<f32 as convert::num::FloatToInt<u16>>::to_int_unchecked;true;true;true;false
cell::Cell::<T>::swap::is_nonoverlapping;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundepi64_pd;true;true;false;false
core_arch::x86::avx512f::_mm512_castsi256_si512;true;true;false;false
<&'a num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl;false;false;false;false
num::wrapping::Wrapping::<i128>::pow;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fmaddsub_ps;true;true;true;false
num::<impl isize>::strict_shr;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpwsud_epi32;true;true;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::simd::u64x8::splat::JustOne;false;false;false;false
core_arch::x86::vaes::_mm256_aesenc_epi128;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_compressstoreu_pd;true;true;true;false
num::saturating::Saturating::<i8>::to_be;false;false;false;false
<ops::range::RangeTo<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_min_ph;true;true;true;false
<core_simd::vector::Simd<i64, 8> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_simd::masks::Mask::<T, N>::from_bitmask;false;false;false;false
<&'a u8 as ops::arith::Div<u8>>::div;false;false;false;false
convert::num::<impl convert::TryFrom<u64> for u8>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_epu32_mask;true;true;false;false
num::saturating::Saturating::<i32>::to_be;false;false;false;false
core_arch::x86::avx2::_mm_i32gather_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_max_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpeq_epu32_mask;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_extractf32x4_ps;true;true;true;false
<usize as ops::bit::BitOr<&usize>>::bitor;false;false;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_sum;false;true;false;false
core_arch::x86::avx512f::_mm_maskz_srl_epi32;true;true;false;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::next;false;false;true;false
<iter::adapters::step_by::StepBy<I> as iter::traits::iterator::Iterator>::fold;false;false;true;false
<[T] as clone::CloneToUninit>::clone_to_uninit;true;true;true;false
<core_arch::simd::f32x4::splat::JustOne as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::leading_zeros;false;true;false;false
<&u16 as ops::bit::Shr<&i8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_sub_epi8;true;true;false;false
<ascii::ascii_char::AsciiChar as iter::range::Step>::backward_unchecked;true;true;false;false
str::<impl str>::make_ascii_lowercase;false;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::swap_bytes;false;true;false;false
<u128 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAnd<&num::wrapping::Wrapping<i8>>>::bitand;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_permutex2var_pd;true;true;true;false
<str::iter::LinesAny<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
ptr::mut_ptr::<impl *mut T>::offset::runtime_offset_nowrap::runtime;false;false;true;false
<task::poll::Poll<T> as convert::From<T>>::from;false;false;false;false
<&num::wrapping::Wrapping<i16> as ops::arith::Div<&num::wrapping::Wrapping<i16>>>::div;false;false;false;false
time::Duration::as_secs;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtph_ps;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvtph_ps;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu32lo_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_permutex_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_fnmadd_ph;true;true;true;false
<(Z, Y, X, W, V, U, T) as fmt::Debug>::fmt;false;false;true;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::adapters::SourceIter>::as_inner;true;true;true;false
num::<impl u128>::midpoint;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cmpnlt_ps_mask;true;true;true;false
num::<impl u32>::saturating_mul;false;false;false;false
io::borrowed_buf::BorrowedCursor::<'a>::written;false;false;true;false
<iter::adapters::fuse::Fuse<I> as iter::adapters::fuse::FuseImpl<I>>::nth;false;false;true;true
str::iter::SplitNInternal::<'a, P>::next;false;false;true;false
<core_simd::masks::Mask<i32, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<num::niche_types::UsizeNoHighBit as cmp::Ord>::cmp;false;false;false;false
<&'a num::saturating::Saturating<i8> as ops::arith::Mul<num::saturating::Saturating<i8>>>::mul;false;false;false;false
sync::atomic::AtomicU32::compare_exchange;false;true;true;false
tuple::<impl default::Default for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::default;false;false;false;false
core_arch::x86::avx512f::_mm_mask_mov_ps;true;true;true;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::Searcher<'a>>::next;false;false;true;false
core_arch::x86::avx512f::_mm256_shuffle_f32x4;true;true;true;false
core_arch::x86::avx512f::_mm512_cmp_epu32_mask;true;true;false;false
core_arch::x86::sse::_mm_comieq_ss;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_shuffle_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_movepi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepi32_ph;true;true;false;false
option::Option::<&T>::cloned;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fnmadd_round_ss;true;true;true;false
num::nonzero::NonZero::<i16>::checked_pow;false;true;false;false
core_arch::simd::u8x8;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_unpacklo_epi8;true;true;false;false
<i16 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::reduce_min;false;true;true;false
str::<impl str>::is_ascii;false;false;false;false
<&'a num::saturating::Saturating<u8> as ops::arith::Add<num::saturating::Saturating<u8>>>::add;false;false;false;false
<num::saturating::Saturating<u8> as ops::bit::BitXor>::bitxor;false;false;false;false
<&'a num::wrapping::Wrapping<i16> as ops::arith::Rem<num::wrapping::Wrapping<i16>>>::rem;false;false;false;false
num::nonzero::NonZero::<i32>::overflowing_neg;false;true;false;false
fmt::Formatter::<'a>::debug_set;false;false;true;false
<i8 as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_cvt_roundpd_epi32;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_expandloadu_epi32;true;true;true;false
core_arch::x86::avx512f::_mm_mask_mul_ss;true;true;true;false
num::<impl i128>::from_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvttpd_epi32;true;true;true;false
num::nonzero::NonZero::<i16>::from_be;false;true;false;false
str::iter::SplitInclusive;false;false;true;false
<ops::range::RangeFull as default::Default>::default;false;false;false;false
<i16 as ops::bit::Shl<u128>>::shl;false;false;false;false
slice::iter::RSplitNMut::<'a, T, P>::new;false;false;true;false
<&num::saturating::Saturating<i8> as ops::arith::Rem<&num::saturating::Saturating<i8>>>::rem;false;false;false;false
<u8 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::arith::Mul>::mul;false;false;false;false
<iter::sources::repeat_n::RepeatN<A> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx2::_mm256_sll_epi64;true;true;false;false
<&'a num::wrapping::Wrapping<u32> as ops::arith::Div<num::wrapping::Wrapping<u32>>>::div;false;false;false;false
intrinsics::atomic_cxchg_acquire_seqcst;true;false;true;false
core_arch::x86::avx512f::_mm512_scalef_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_rorv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm512_mask_min_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_div_sh;true;true;true;false
<num::saturating::Saturating<usize> as ops::arith::MulAssign<&usize>>::mul_assign;false;false;true;false
<usize as ops::bit::Shr<&u16>>::shr;false;false;false;false
intrinsics::atomic_or_release;true;false;true;false
core_arch::x86::avx512f::_mm512_fmadd_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi64_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_mask_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_reduce_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutevar_pd;true;true;true;false
<&'a i16 as ops::bit::Shl<u32>>::shl;false;false;false;false
num::<impl i64>::wrapping_neg;false;false;false;false
<core_arch::x86::__m512d::splat::JustOne as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
<isize as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::avx512f::_mm_mask_unpacklo_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fmadd_round_ss;true;true;true;false
core_arch::x86::sse::_mm_comige_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_test_epi16_mask;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_or;false;true;false;false
net::parser::Parser::<'a>::read_char;false;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;false
slice::<impl [T]>::rsplit_once;false;false;false;true
core_arch::x86::avx512f::_mm_maskz_div_ss;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_mask_shldi_epi16;true;true;false;false
<cell::RefCell<T> as cmp::PartialEq>::eq;false;false;true;false
<&u64 as ops::arith::Rem<&u64>>::rem;false;false;false;false
<char::CaseMappingIter as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
iter::sources::repeat::repeat;false;false;false;false
<iter::adapters::take::Take<I> as iter::traits::iterator::Iterator>::next;false;false;true;false
<marker::variance::PhantomCovariant<T> as fmt::Debug>::fmt;false;false;true;false
<u128 as ops::arith::Mul>::mul;false;false;false;false
net::socket_addr::SocketAddr::is_ipv4;false;false;true;false
core_arch::x86::avx512fp16::_mm_div_ph;true;true;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::abs_diff;false;false;false;false
<u128 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtusepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_cvtsepi32_storeu_epi8;true;true;true;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::nonzero::NonZero::<i64>::count_ones;false;true;false;false
tuple::<impl cmp::PartialOrd for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::lt;false;false;false;false
num::<impl u32>::overflowing_shl;false;false;false;false
<u32 as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::__m256bh::as_i32x8;false;false;false;false
<&'a u8 as ops::bit::BitXor<u8>>::bitxor;false;false;false;false
core_arch::x86::sse::_mm_comigt_ss;true;true;true;false
<ops::range::RangeTo<&T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
str::<impl str>::split;false;false;false;false
<iter::adapters::cloned::Cloned<I> as fmt::Debug>::fmt;false;false;true;false
convert::num::<impl convert::TryFrom<u128> for u32>::try_from;false;false;false;false
core_arch::x86::avx::_mm256_store_pd;true;true;true;false
num::<impl i32>::checked_div_euclid;false;false;false;false
<&'a i16 as ops::bit::Shr<i32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_rsqrt14_pd;true;true;true;false
<net::socket_addr::SocketAddrV4 as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_alignr_epi32;true;true;false;false
num::<impl isize>::strict_div_euclid;false;false;false;false
<&usize as ops::bit::Shl<&u8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_loadu_epi32;true;true;true;false
<num::niche_types::NonZeroU128Inner as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fnmsub_round_sd;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpgt_epu8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_fcmul_pch;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_fmsubadd_round_ph;true;true;true;false
ptr::const_ptr::<impl cmp::PartialOrd for *const T>::lt;false;false;true;false
num::<impl i8>::overflowing_abs;false;false;false;false
core_arch::simd::u16x32::splat::JustOne;false;false;false;false
<u8 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<&'a num::saturating::Saturating<i32> as ops::arith::Sub<num::saturating::Saturating<i32>>>::sub;false;false;false;false
<&f32 as ops::arith::Neg>::neg;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fixupimm_round_ps;true;true;true;false
<&usize as ops::bit::Shl<&u128>>::shl;false;false;false;false
num::saturating::Saturating::<i16>::pow;false;false;false;false
f16::<impl f16>::maximum;false;false;true;false
<num::niche_types::NonZeroI64Inner as clone::Clone>::clone;false;false;false;false
num::<impl i128>::strict_div_euclid;false;false;false;false
intrinsics::simd::simd_neg;true;false;false;false
hash::sip::u8to64_le;true;true;false;false
num::<impl u128>::min_value;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<&num::wrapping::Wrapping<u128>>>::mul_assign;false;false;true;false
cmp::impls::<impl cmp::Ord for i8>::cmp;false;false;false;false
core_arch::x86::sse::_mm_cvt_si2ss;true;true;true;false
ops::async_function::impls::<impl ops::async_function::AsyncFn<A> for &F>::async_call;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpwssd_avx_epi32;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvtt_roundsh_u64;true;true;true;false
<slice::iter::Chunks<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtusepi32_epi8;true;true;false;false
num::int_sqrt::i16;true;false;false;false
<&'b str as str::pattern::Pattern>::is_suffix_of;false;false;false;false
<&'a u8 as ops::arith::Rem<u8>>::rem;false;false;false;false
core_arch::x86::avx512f::_mm_storeu_epi64;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_min_epu64;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::RemAssign<&num::saturating::Saturating<u16>>>::rem_assign;false;false;true;false
core_arch::x86_64::sse2::_mm_cvtsd_si64;true;true;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
<i16 as ops::arith::Add<&i16>>::add;false;false;false;false
<char::EscapeUnicode as iter::traits::exact_size::ExactSizeIterator>::len;false;false;true;false
<net::ip_addr::IpAddr as clone::Clone>::clone;false;false;true;false
ptr::mut_ptr::<impl *mut T>::copy_to_nonoverlapping;true;true;true;false
<usize as ops::bit::ShlAssign<&u32>>::shl_assign;false;false;true;false
<i128 as ops::bit::ShrAssign<&u128>>::shr_assign;false;false;true;false
<num::niche_types::NonZeroIsizeInner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
array::try_from_fn_erased;false;true;true;true
core_arch::x86::avx512vnni::_mm256_dpbssd_epi32;true;true;false;false
<num::dec2flt::common::BiasedFp as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
num::nonzero::NonZero::<i8>::swap_bytes;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::arith::Mul>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fnmsub_pd;true;true;true;false
<num::saturating::Saturating<i32> as ops::arith::SubAssign<&i32>>::sub_assign;false;false;true;false
<clone::uninit::InitializingSlice<'a, T> as ops::drop::Drop>::drop;false;true;true;false
<u64 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_add_epi64;true;true;false;false
core_arch::x86::avx512f::_mm_mask_srav_epi32;true;true;false;false
net::ip_addr::Ipv6Addr::is_unicast_global;false;false;false;false
hash::sip::Hasher::<S>::new_with_keys;false;false;false;false
core_arch::x86::avx512f::_mm512_stream_si512;true;true;true;false
<task::wake::Waker as clone::Clone>::clone_from;false;false;true;false
core_arch::x86::avx512cd::_mm256_maskz_lzcnt_epi64;true;true;false;false
<i16 as ops::bit::Shl<isize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtpd_epu32;true;true;true;false
iter::traits::iterator::Iterator::take;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::DivAssign<&num::wrapping::Wrapping<i32>>>::div_assign;false;false;true;false
<i16 as ops::arith::MulAssign>::mul_assign;false;false;true;false
<&'a isize as ops::bit::Shl<u128>>::shl;false;false;false;false
<core_simd::vector::Simd<i32, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
f16::<impl f16>::from_bits;false;false;false;false
<num::wrapping::Wrapping<u128> as iter::traits::accum::Sum>::sum;false;false;false;true
<&num::saturating::Saturating<u16> as ops::arith::Mul<&num::saturating::Saturating<u16>>>::mul;false;false;false;false
<(EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(E, D, C, B, A)>>::extend;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::bit::BitXorAssign<&i64>>::bitxor_assign;false;false;true;false
num::<impl usize>::unbounded_shl;false;true;false;false
<ptr::alignment::Alignment as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<i128> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<i128>>>::sum;false;false;false;true
core_arch::x86::avx2::_mm256_or_si256;true;true;false;false
intrinsics::simd::simd_reduce_all;true;false;false;false
<num::saturating::Saturating<i128> as ops::arith::SubAssign<i128>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_kxnor;true;true;false;false
core_arch::x86::avx512vnni::_mm_dpwssds_avx_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_cmplt_epi16_mask;true;true;false;false
core_arch::x86_64::avx512f::_mm_cvttss_i64;true;true;true;false
<u8 as ops::arith::SubAssign>::sub_assign;false;false;true;false
num::<impl u16>::overflowing_rem_euclid;false;false;false;false
<u32 as ops::bit::ShlAssign<u8>>::shl_assign;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
core_arch::x86::avx512dq::_mm256_cvtepi64_pd;true;true;false;false
str::validations::utf8_char_width;false;false;false;false
core_arch::simd::i64x8;false;false;false;false
char::EscapeDebug::clear;false;false;true;false
<&T as fmt::Display>::fmt;false;false;true;false
time::Duration::as_secs_f32;false;false;false;false
<core_simd::masks::Mask<T, N> as ops::bit::BitAnd<bool>>::bitand;false;false;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_shrdv_epi32;true;true;false;false
core_arch::x86::sse2::_mm_insert_epi16;true;true;false;false
<iter::adapters::fuse::Fuse<I> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm_mask_i64scatter_epi32;true;true;true;false
hash::impls::<impl hash::Hash for i64>::hash_slice;false;true;true;false
core_arch::x86::avx512f::_mm512_roundscale_round_ps;true;true;true;false
ops::range::RangeInclusive::<Idx>::end;false;false;true;false
iter::adapters::zip::try_get_unchecked;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_fcmul_pch;true;true;true;false
num::saturating::Saturating::<i32>::is_positive;false;false;false;false
intrinsics::mir::StorageDead;false;false;false;false
core_arch::x86::sse4a::_mm_stream_sd;true;true;true;false
num::niche_types::NonZeroI32Inner::new_unchecked;true;false;false;false
num::<impl i16>::from_ne_bytes;false;false;false;false
num::<impl usize>::unchecked_shl::precondition_check;false;false;false;false
<i8 as ops::arith::SubAssign<&i8>>::sub_assign;false;false;true;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<isize, N>>::shr;false;true;false;false
<num::fmt::Part<'a> as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitOr>::bitor;false;false;false;false
<u8 as ops::bit::Shr<&i16>>::shr;false;false;false;false
<i16 as ops::bit::ShlAssign<u16>>::shl_assign;false;false;true;false
<slice::iter::Windows<'_, T> as clone::Clone>::clone;false;false;true;false
num::<impl u8>::wrapping_rem;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::SubAssign>::sub_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for f64>::ge;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::Shl<usize>>::shl;false;false;false;false
core_arch::x86::__m128bh;false;false;false;false
core_arch::x86::avx512f::_mm512_reduce_min_pd;true;true;true;false
<&'a isize as ops::bit::Shl<isize>>::shl;false;false;false;false
num::nonzero::NonZero::<u32>::is_power_of_two;false;false;false;false
<str::CharEscapeUnicode as clone::Clone>::clone;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div;false;false;false;false
sync::atomic::AtomicU32::get_mut_slice;false;true;true;false
num::<impl u32>::checked_signed_diff;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<isize>>::try_from;false;true;false;false
core_arch::x86::avx512f::_mm_mask_blend_pd;true;true;true;false
intrinsics::carrying_mul_add;false;false;false;false
core_arch::x86::avx512fp16::_mm256_maskz_mul_ph;true;true;true;false
<char::CaseMappingIter as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
core_arch::x86::avx512f::_mm512_mask3_fmsub_pd;true;true;true;false
<core_simd::vector::Simd<u32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_eq;false;true;false;false
num::<impl usize>::overflowing_add_signed;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::arith::Sub<&num::wrapping::Wrapping<i8>>>::sub;false;false;false;false
<iter::adapters::step_by::StepBy<ops::range::Range<u8>> as iter::adapters::step_by::StepByImpl<ops::range::Range<u8>>>::spec_try_fold;false;false;true;true
core_arch::x86::avx512vbmi2::_mm_mask_compress_epi8;true;true;false;false
num::nonzero::NonZero::<u32>::saturating_add;false;true;false;false
<&'a i8 as ops::bit::Shl<i128>>::shl;false;false;false;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;true;true;false
<usize as iter::range::Step>::steps_between;false;false;false;false
core_arch::x86::avx2::_mm256_mask_i64gather_ps;true;true;true;false
core_arch::x86::avx512bw::_mm512_min_epu16;true;true;false;false
core_arch::x86::avx512bw::_mm256_maskz_unpacklo_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<u128> for i64>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_rol_epi32;true;true;false;false
char::methods::encode_utf8_raw::do_panic;false;false;false;false
<num::saturating::Saturating<u16> as ops::bit::BitAndAssign<u16>>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_cvtu32_mask32;true;false;false;false
num::<impl u128>::saturating_add;false;false;false;false
ffi::c_str::strlen::compiletime;false;true;true;true
<i8 as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::arith::AddAssign<i8>>::add_assign;false;false;true;false
<u16 as ops::bit::ShlAssign<i8>>::shl_assign;false;false;true;false
<num::saturating::Saturating<i32> as ops::arith::DivAssign<&num::saturating::Saturating<i32>>>::div_assign;false;false;true;false
<&num::wrapping::Wrapping<isize> as ops::bit::BitXor<&num::wrapping::Wrapping<isize>>>::bitxor;false;false;false;false
num::<impl u32>::wrapping_add_signed;false;false;false;false
num::wrapping::Wrapping::<i128>::is_negative;false;false;false;false
ops::control_flow::ControlFlow::<T, T>::into_value;false;false;true;false
<iter::sources::empty::Empty<T> as iter::traits::iterator::Iterator>::next;false;false;true;false
<i16 as ops::bit::Shr<u16>>::shr;false;false;false;false
net::ip_addr::Ipv6Addr::is_unique_local;false;false;false;false
core_arch::x86::sse::_mm_andnot_ps;true;true;true;false
core_arch::x86::sse2::_mm_max_epu8;true;true;false;false
<char as str::pattern::Pattern>::as_utf8_pattern;false;false;false;false
core_arch::x86::avx512fp16::_mm_mask_fpclass_sh_mask;true;true;true;false
core_arch::x86_64::rdrand::_rdseed64_step;true;true;true;false
<time::Duration as hash::Hash>::hash;false;false;true;false
num::<impl u16>::checked_shl;false;true;false;false
num::dec2flt::parse::parse_partial_number;false;false;false;true
core_arch::x86::avx512f::_mm512_mask_cvtt_roundpd_epu32;true;true;true;false
num::<impl isize>::from_ne_bytes;false;false;false;false
<core_arch::simd::f64x8 as cmp::PartialEq>::eq;false;false;true;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<char::EscapeDefault as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_cvt_roundpd_epi64;true;true;true;false
<num::saturating::Saturating<u8> as ops::arith::DivAssign<&u8>>::div_assign;false;false;true;false
core_arch::simd::u16x8::splat::JustOne;false;false;false;false
core_arch::x86_64::fxsr::_fxrstor64;true;true;true;false
<f64 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::abm::_popcnt32;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_div_round_pd;true;true;true;false
convert::num::<impl convert::From<i32> for i128>::from;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::position;false;false;true;true
<str::iter::EscapeDefault<'a> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx512dq::_mm512_maskz_cvttps_epu64;true;true;true;false
<core_simd::vector::Simd<u16, 2> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<i16> for &'lhs core_simd::vector::Simd<i16, N>>::shr;false;false;false;false
<u128 as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::next;false;true;true;false
net::parser::<impl str::traits::FromStr for net::socket_addr::SocketAddrV4>::from_str;false;false;false;false
num::<impl u64>::overflowing_shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_shufflelo_epi16;true;true;false;false
<i64 as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_cmple_epi16_mask;true;true;false;false
<i16 as ops::bit::Shl<&i128>>::shl;false;false;false;false
<num::saturating::Saturating<u128> as ops::bit::BitXor>::bitxor;false;false;false;false
<ops::range::Range<T> as iter::range::RangeIteratorImpl>::spec_advance_back_by;false;true;true;false
sync::atomic::AtomicI16::get_mut;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_cmpge_epu8_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_mask_broadcast_f32x8;true;true;true;false
num::<impl i128>::from_ne_bytes;false;false;false;false
core_arch::x86::avx::_mm256_castsi128_si256;true;true;false;false
<str::iter::CharIndices<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
<&'a num::wrapping::Wrapping<isize> as ops::bit::BitXor<num::wrapping::Wrapping<isize>>>::bitxor;false;false;false;false
<option::Iter<'a, A> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi64_storeu_epi8;true;true;true;false
<core_arch::simd::i32x4 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepu16_epi64;true;true;false;false
<future::ResumeTy as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_sub_round_ps;true;true;true;false
<&num::saturating::Saturating<u128> as ops::bit::Not>::not;false;false;false;false
intrinsics::read_via_copy;true;false;true;false
core_arch::x86::avx512bw::_mm_cmpgt_epi16_mask;true;true;false;false
core_arch::x86::avx512bitalg::_mm512_popcnt_epi16;true;true;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<char::EscapeUnicode as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm512_cmple_epu64_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_getmant_sh;true;true;true;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::get_unchecked_mut;true;true;true;false
core_arch::x86::sse2::_mm_srli_si128_impl::mask;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_madd_epi16;true;true;false;false
<i8 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_simd::ops::<impl ops::arith::Div for core_simd::vector::Simd<i32, N>>::div;false;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepi64_ph;true;true;true;false
<i16 as ops::bit::Shr<i8>>::shr;false;false;false;false
num::nonzero::NonZero::<isize>::checked_pow;false;true;false;false
convert::num::<impl convert::TryFrom<u64> for u32>::try_from;false;false;false;false
iter::adapters::map::Map::<I, F>::into_inner;false;false;true;false
<usize as ops::bit::Shr<&isize>>::shr;false;false;false;false
sync::atomic::AtomicU16::update;false;false;true;true
core_arch::x86::avx2::_mm256_mul_epu32;true;true;false;false
intrinsics::fallback::wide_mul_u128;false;false;false;false
intrinsics::atomic_singlethreadfence_release;true;false;false;false
sync::atomic::AtomicBool::from_mut_slice;false;true;true;false
sync::atomic::AtomicBool::try_update;false;false;true;false
num::<impl i8>::min_value;false;false;false;false
num::wrapping::Wrapping::<usize>::to_be;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpgt_epu64_mask;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cvtpd_pslo;true;true;true;false
array::iter::IntoIter::<T, N>::new_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_cmp_epu8_mask;true;true;false;false
f64::<impl f64>::minimum;false;false;true;false
num::niche_types::I32NotAllOnes::new;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtepi32_epi64;true;true;false;false
<&i8 as ops::bit::BitAnd<&i8>>::bitand;false;false;false;false
num::<impl u8>::overflowing_rem_euclid;false;false;false;false
core_arch::x86::avx512f::_mm_getmant_ps;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_extracti32x4_epi32;true;true;false;false
<&'a u32 as ops::bit::Shl<i64>>::shl;false;false;false;false
<&'a i16 as ops::bit::Shl<i64>>::shl;false;false;false;false
<&'a u8 as ops::bit::Shr<u128>>::shr;false;false;false;false
<array::TryFromSliceError as clone::Clone>::clone;false;false;false;false
slice::<impl [T]>::starts_with;false;false;false;false
<&'a num::saturating::Saturating<u32> as ops::arith::Add<num::saturating::Saturating<u32>>>::add;false;false;false;false
str::<impl str>::from_utf8_unchecked;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_srli_epi16;true;true;false;false
intrinsics::mir::Drop;false;false;false;false
core_arch::x86::avx2::_mm256_unpackhi_epi32;true;true;false;false
num::<impl isize>::trailing_zeros;false;false;false;false
core_arch::x86::sse2::_mm_movemask_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_zextsi256_si512;true;true;false;false
intrinsics::atomic_xor_acquire;true;false;true;false
num::<impl u8>::rem_euclid;false;false;false;false
<u8 as ops::bit::Shl<u128>>::shl;false;false;false;false
<isize as ops::bit::BitXor>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm512_srai_epi64;true;true;false;false
<&'a f64 as ops::arith::Div<f64>>::div;false;false;true;false
<fmt::num::Octal as fmt::num::GenericRadix>::digit;false;false;false;false
<slice::iter::ChunksMut<'a, T> as iter::traits::iterator::Iterator>::count;false;false;true;false
<num::saturating::Saturating<u32> as ops::bit::BitOr>::bitor;false;false;false;false
num::<impl i16>::checked_div;false;false;false;false
core_arch::x86::sse41::_mm_test_all_zeros;true;true;false;false
core_arch::x86::avx::_mm256_castps_si256;true;false;true;false
<u8 as num::bignum::FullOps>::full_div_rem;false;false;false;false
num::wrapping::Wrapping::<usize>::from_le;false;false;false;false
num::<impl isize>::ilog10;false;false;false;false
iter::range::<impl iter::traits::double_ended::DoubleEndedIterator for ops::range::RangeInclusive<A>>::nth_back;false;false;true;false
sync::atomic::AtomicPtr::<T>::compare_exchange_weak;false;true;true;false
ptr::non_null::NonNull::<T>::swap;true;true;true;false
<u32 as ops::bit::ShlAssign<u64>>::shl_assign;false;false;true;false
future::ready::Ready::<T>::into_inner;false;false;true;false
core_arch::x86::avx512f::_mm_mask3_fmsub_ps;true;true;true;false
<task::wake::LocalWaker as ops::drop::Drop>::drop;false;true;true;false
core_arch::x86::avx2::_mm_mask_i64gather_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutevar_ps;true;true;true;false
num::<impl u8>::strict_add;false;false;false;false
num::saturating::Saturating::<u8>::to_be;false;false;false;false
<core_arch::simd::i8x32 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512cd::_mm256_lzcnt_epi64;true;true;false;false
<u32 as ops::bit::Shr<u16>>::shr;false;false;false;false
core_arch::x86::avx512dq::_mm256_mask_cvtepi64_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_cvt_roundepi64_ps;true;true;false;false
core_arch::x86::avx512fp16::_mm_fmul_sch;true;true;true;false
num::<impl usize>::ilog;false;false;false;false
core_arch::x86::kl::_mm_aesdecwide256kl_u8;true;true;true;false
num::<impl u64>::checked_ilog;false;false;false;true
<i64 as ops::bit::BitXor>::bitxor;false;false;false;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::Searcher<'a>>::next_match;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_cvtepi16_ph;true;true;true;false
hash::impls::<impl hash::Hash for (T,)>::hash;false;false;true;false
num::<impl u128>::overflowing_shr;false;false;false;false
<u64 as ops::bit::BitOr<&u64>>::bitor;false;false;false;false
num::nonzero::NonZero::<i128>::from_be;false;true;false;false
<num::niche_types::UsizeNoHighBit as cmp::PartialOrd>::partial_cmp;false;false;false;false
fmt::Arguments::<'a>::estimated_capacity;false;false;true;false
<iter::adapters::peekable::Peekable<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shrdi_epi16;true;true;false;false
convert::num::<impl convert::TryFrom<u16> for i16>::try_from;false;false;false;false
core_arch::x86::avx512f::_mm_cvtepi32_epi8;true;true;false;false
<&'a num::wrapping::Wrapping<isize> as ops::bit::BitOr<num::wrapping::Wrapping<isize>>>::bitor;false;false;false;false
<slice::iter::Iter<'_, T> as default::Default>::default;false;false;false;false
<&'a mut I as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::AddAssign>::add_assign;false;false;true;false
sync::atomic::AtomicI32::compare_and_swap;false;false;true;false
slice::iter::Split::<'a, T, P>::as_slice;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_scalef_round_ss;true;true;true;false
core_simd::ops::unary::<impl ops::bit::Not for core_simd::vector::Simd<i64, N>>::not;false;false;false;false
slice::iter::Iter::<'a, T>::next_back_unchecked;true;true;true;false
num::wrapping::Wrapping::<u128>::from_le;false;false;false;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::count;false;false;true;true
<u16 as ops::bit::ShrAssign<&i8>>::shr_assign;false;false;true;false
num::<impl usize>::wrapping_neg;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_fcmadd_round_pch;true;true;true;false
error::Request::<'a>::provide_ref;false;false;true;false
core_arch::x86::avx512f::_mm_mask_add_ss;true;true;true;false
<num::bignum::Big32x40 as fmt::Debug>::fmt;false;true;true;true
<slice::iter::ChunksExact<'a, T> as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_srai_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_cvtxps_ph;true;true;true;false
<iter::adapters::take_while::TakeWhile<I, P> as iter::traits::iterator::Iterator>::fold;false;false;true;true
range::RangeInclusive::<usize>::into_slice_range;false;false;true;false
num::<impl i64>::checked_ilog10;false;false;false;false
sync::atomic::AtomicUsize::into_inner;false;false;true;false
slice::<impl [T]>::align_to;true;true;false;false
core_arch::x86::sse::_mm_cvt_ss2si;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_reduce_ps;true;true;true;false
num::<impl u128>::div_floor;false;false;false;false
slice::cmp::<impl cmp::PartialOrd for [T]>::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_sqrt_ps;true;true;true;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<&'a isize as ops::bit::Shr<i32>>::shr;false;false;false;false
<u32 as ops::bit::ShrAssign<&u64>>::shr_assign;false;false;true;false
<&'a isize as ops::bit::BitXor<isize>>::bitxor;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtsepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_mask_cmpeq_epu64_mask;true;true;false;false
<core_simd::vector::Simd<i8, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
num::saturating::Saturating::<i64>::from_le;false;false;false;false
<i64 as ops::bit::Shr<i16>>::shr;false;false;false;false
<net::socket_addr::SocketAddr as convert::From<net::socket_addr::SocketAddrV6>>::from;false;false;true;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::iterator::Iterator>::nth;false;true;true;false
iter::adapters::by_ref_sized::ByRefSized;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
<cmp::Reverse<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<u128 as ops::arith::DivAssign>::div_assign;false;false;true;false
cell::panic_already_mutably_borrowed;false;false;false;false
core_arch::x86::avx512f::_mm512_sll_epi64;true;true;false;false
<marker::PhantomPinned as cmp::Ord>::cmp;false;false;false;false
num::nonzero::NonZero::<usize>::leading_zeros;false;true;false;false
<str::iter::SplitTerminator<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512dq::_mm512_mask_range_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_avg_epu16;true;true;false;false
core_arch::x86_64::amx::_tile_cmmimfp16ps;true;true;false;false
num::nonzero::NonZero::<isize>::saturating_mul;false;true;false;false
core_arch::x86::avx512fp16::_mm_fmsub_round_sh;true;true;true;false
core_arch::x86::avx512f::_mm512_getexp_ps;true;true;true;false
num::overflow_panic::shr;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::arith::SubAssign<&num::wrapping::Wrapping<i32>>>::sub_assign;false;false;true;false
sync::atomic::AtomicU16::compare_and_swap;false;false;true;false
core_arch::x86::sse2::_mm_shufflehi_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvtph_epi32;true;true;true;false
num::<impl u8>::strict_shr;false;false;false;false
time::Duration::div_duration_f64;false;false;false;false
core_arch::x86::sse2::_mm_setr_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_mov_epi64;true;true;false;false
<&'a u64 as ops::bit::Shl<i8>>::shl;false;false;false;false
iter::traits::collect::default_extend_tuple_d::extend;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_reduce_round_ph;true;true;true;false
<core_arch::simd::u32x4::splat::JustOne as clone::Clone>::clone;false;false;false;false
num::saturating::Saturating::<i16>::signum;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::Shr<&usize>>::shr;false;false;false;false
fmt::rt::Count::Param;false;false;false;false
num::nonzero::<impl ops::arith::RemAssign<num::nonzero::NonZero<usize>> for usize>::rem_assign;false;false;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u32> for &'lhs core_simd::vector::Simd<u32, N>>::shr;false;false;false;false
<&'a num::wrapping::Wrapping<i8> as ops::bit::BitOr<num::wrapping::Wrapping<i8>>>::bitor;false;false;false;false
<ops::range::RangeInclusive<usize> as slice::GetDisjointMutIndex>::is_overlapping;false;false;true;false
<core_simd::vector::Simd<f32, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
core_simd::vendor::x86::p64::<impl convert::From<core_simd::vector::Simd<usize, 8>> for core_arch::x86::__m512i>::from;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
slice::<impl [T]>::partition_point;false;false;false;false
core_arch::x86::avx512vbmi::_mm512_maskz_multishift_epi64_epi8;true;true;false;false
<i64 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm_mask_cvtepi8_epi16;true;true;false;false
num::<impl i8>::rem_euclid;false;false;false;false
<num::wrapping::Wrapping<u64> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u64>::partial_cmp;false;false;false;false
<str::iter::Matches<'a, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<&i128 as ops::bit::Shl<&i64>>::shl;false;false;false;false
intrinsics::select_unpredictable;false;false;false;false
core_arch::simd::f32x2::extract;false;true;true;false
<num::saturating::Saturating<u16> as ops::arith::SubAssign<&num::saturating::Saturating<u16>>>::sub_assign;false;false;true;false
<iter::adapters::step_by::StepBy<I> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;true;false
<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<&num::saturating::Saturating<i64>>>::bitxor_assign;false;false;true;false
intrinsics::mir::UnwindUnreachable::panic_cold_explicit;false;false;false;false
num::<impl i16>::strict_add_unsigned;false;false;false;false
escape::EscapeIterInner::<N>::backslash;false;false;false;false
core_arch::simd::i16x4::splat;false;true;false;false
<bool as ops::bit::BitAndAssign<&bool>>::bitand_assign;false;false;true;false
<core_arch::simd::i64x4 as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i16x32::from_array;false;false;false;false
panicking::panic_const::panic_const_async_fn_resumed;false;false;false;false
<T as slice::sort::shared::smallsort::StableSmallSortTypeImpl>::small_sort;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_cvtepi8_epi64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_i64scatter_ps;true;true;true;false
result::Result::<T, E>::map_err;false;false;true;false
core_arch::x86::avx512f::_mm_mask_max_ss;true;true;true;false
result::Result::<&mut T, E>::cloned;false;false;true;false
<iter::adapters::map_while::MapWhile<I, P> as iter::traits::iterator::Iterator>::fold;false;false;false;true
core_arch::x86::avx512f::_mm256_mask_cvtusepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_cmp_sd_mask;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fixupimm_round_ss;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvttph_epi32;true;true;true;false
<slice::iter::Iter<'a, T> as iter::traits::iterator::Iterator>::size_hint;false;true;true;false
core_arch::x86::avx512f::_mm_mask_max_epu32;true;true;false;false
core_arch::x86_64::avx512fp16::_mm_cvt_roundsh_i64;true;true;true;false
core_arch::x86_64::amx::_tile_stored;true;true;true;false
core_simd::swizzle::<impl core_simd::masks::Mask<T, N>>::rotate_elements_right;false;true;true;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<i64, N>>::neg;false;true;false;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;true;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::reduce_max;false;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
<u8 as iter::traits::accum::Sum<&'a u8>>::sum;false;false;false;true
<i8 as ops::bit::Shl<isize>>::shl;false;false;false;false
num::<impl isize>::from_le;false;false;false;false
<char::ToUppercase as iter::traits::iterator::Iterator>::next;false;false;true;false
<num::wrapping::Wrapping<usize> as iter::traits::accum::Product>::product;false;false;false;true
sync::atomic::AtomicU32::new;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_add_epi32;true;true;false;false
core_arch::x86::avx512bitalg::_mm_mask_bitshuffle_epi64_mask;true;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::leading_ones;false;false;false;false
core_arch::x86::avx512f::_mm512_cmplt_epi64_mask;true;true;false;false
num::<impl u128>::wrapping_next_power_of_two;false;false;false;false
<i64 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<&mut I as iter::traits::iterator::Iterator>::nth;false;false;true;true
core_arch::x86::avx512bw::_mm512_subs_epi16;true;true;false;false
<num::saturating::Saturating<usize> as ops::arith::Div<&num::saturating::Saturating<usize>>>::div;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_min_epi64;true;true;false;false
<iter::adapters::enumerate::Enumerate<I> as iter::traits::iterator::Iterator>::try_fold::enumerate;false;false;true;false
core_arch::x86::bf16;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_sllv_epi64;true;true;false;false
<str::IsWhitespace as clone::Clone>::clone;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::cast;false;true;false;false
sync::atomic::AtomicBool::get_mut_slice;false;true;true;false
time::Duration::subsec_micros;false;false;false;false
tuple::<impl cmp::PartialOrd for (X, W, V, U, T)>::gt;false;false;false;false
<u128 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cmpneq_epi32_mask;true;true;false;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_simd::vector::Simd::<T, N>::from_array;false;true;false;false
num::<impl u8>::checked_ilog;false;false;false;true
num::<impl i128>::strict_rem_euclid;false;false;false;false
core_arch::x86::kl::_mm_loadiwkey;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_roundscale_ph;true;true;true;false
intrinsics::mir::UnwindUnreachable;false;false;false;false
<u16 as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i8> as ops::arith::Sub<&num::saturating::Saturating<i8>>>::sub;false;false;false;false
<(ED, EC, EB, EA) as iter::traits::collect::Extend<(D, C, B, A)>>::extend_one;false;false;true;false
<num::wrapping::Wrapping<u8> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<u32> as ops::arith::SubAssign<u32>>::sub_assign;false;false;true;false
<num::saturating::Saturating<u16> as ops::arith::SubAssign<&u16>>::sub_assign;false;false;true;false
num::nonzero::NonZero::<u16>::checked_add;false;true;false;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;false;false
<usize as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
<ffi::c_str::Bytes<'a> as clone::Clone>::clone;false;false;true;false
num::<impl u32>::checked_sub;false;false;false;false
<core_arch::simd::f16x4 as clone::Clone>::clone;false;false;true;false
<i32 as ops::bit::Shr<&i8>>::shr;false;false;false;false
<net::socket_addr::SocketAddr as cmp::Ord>::cmp;false;false;true;false
str::pattern::StrSearcherImpl::TwoWay;false;false;true;false
convert::num::<impl convert::TryFrom<u64> for i32>::try_from;false;false;false;false
num::wrapping::Wrapping::<u32>::rotate_left;false;false;false;false
alloc::layout::Layout::from_size_align_unchecked::precondition_check;false;false;false;false
num::<impl i16>::strict_abs;false;false;false;false
<ops::range::RangeToInclusive<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
intrinsics::contract_check_requires;false;false;false;false
<i16 as ops::arith::RemAssign>::rem_assign;false;false;true;false
core_arch::x86::avx512ifma::_mm256_madd52lo_epu64;true;true;false;false
"core_simd::masks::<impl convert::From<core_simd::masks::Mask<T, N>> for [bool; N]>::from";false;false;true;false
<core_simd::vector::Simd<u32, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<iter::adapters::map::Map<I, F> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_unpackhi_ps;true;true;true;false
num::bignum::Big32x40::add;false;false;true;true
iter::traits::iterator::Iterator::try_find;false;false;true;true
num::<impl i16>::strict_add;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_inserti32x4;true;true;false;false
core_arch::x86::__m128i::as_u64x2;false;false;false;false
sync::atomic::AtomicI8::from_mut;false;true;true;false
<isize as fmt::num::DisplayInt>::to_u8;false;false;false;false
"array::<impl [T; N]>::try_map";false;false;false;false
<iter::sources::once_with::OnceWith<F> as iter::traits::exact_size::ExactSizeIterator>::len;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmadd_pd;true;true;true;false
ops::try_trait::NeverShortCircuit::<T>::wrap_mut_1;false;false;false;false
option::Option::<T>::as_mut;false;false;true;false
core_arch::x86::avx512f::_mm_mask_scalef_round_ss;true;true;true;false
iter::traits::iterator::Iterator::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_broadcastsd_pd;true;true;true;false
<&usize as ops::bit::Shr<&u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_cmp_epu64_mask;true;true;false;false
core_arch::x86::avx512dq::_mm512_broadcast_i32x8;true;true;false;false
<&'a i16 as ops::bit::Shl<i16>>::shl;false;false;false;false
<range::Range<T> as convert::From<ops::range::Range<T>>>::from;false;false;true;false
core_arch::x86::avx512f::_mm256_shuffle_f64x2;true;true;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<iter::sources::repeat::Repeat<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<num::saturating::Saturating<u16> as ops::bit::BitOrAssign<&u16>>::bitor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_store_ss;true;true;true;false
<&'a num::wrapping::Wrapping<isize> as ops::bit::Shr<usize>>::shr;false;false;false;false
<&num::saturating::Saturating<u64> as ops::arith::Sub<&num::saturating::Saturating<u64>>>::sub;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for u32>::le;false;false;false;false
f128::<impl f128>::to_ne_bytes;false;false;true;false
sync::atomic::AtomicI32::fetch_sub;false;true;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86_64::xsave::_xsave64;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_insertf64x2;true;true;true;false
core_simd::masks::mask_impl::Mask::<T, N>::from_int_unchecked;true;false;true;false
<&'a num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_load_epi64;true;true;true;false
core_arch::x86::avx512fp16::_mm512_maskz_cvtepu32_ph;true;true;false;false
<num::saturating::Saturating<u16> as ops::arith::DivAssign<&num::saturating::Saturating<u16>>>::div_assign;false;false;true;false
<iter::adapters::flatten::FlatMap<I, U, F> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_mul_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_reduce_add_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm512_cvtepi64_pd;true;true;false;false
core_simd::ops::unary::<impl ops::arith::Neg for core_simd::vector::Simd<i32, N>>::neg;false;true;false;false
num::<impl i128>::unchecked_neg::precondition_check;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::reduce_max;false;true;true;false
<iter::adapters::step_by::StepBy<I> as iter::adapters::step_by::StepByBackImpl<I>>::spec_nth_back;false;false;true;false
core_arch::x86::avx512dq::_mm_maskz_cvtpd_epi64;true;true;true;false
fmt::num::imp::<impl fmt::Display for usize>::fmt;false;false;true;false
<num::saturating::Saturating<i16> as ops::bit::BitXorAssign<i16>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_store_ps;true;true;true;false
core_arch::x86::avx512bitalg::_mm512_mask_bitshuffle_epi64_mask;true;true;false;false
num::<impl i128>::wrapping_div;false;false;false;false
core_arch::x86::avx512f::_mm512_max_epu32;true;true;false;false
<&'a i16 as ops::bit::Shl<isize>>::shl;false;false;false;false
<num::saturating::Saturating<i64> as ops::arith::MulAssign<&i64>>::mul_assign;false;false;true;false
pin::Pin::<&'a T>::get_ref;false;false;false;false
<core_simd::masks::Mask<i8, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_min;false;false;true;false
<time::Duration as iter::traits::accum::Sum<&'a time::Duration>>::sum;false;false;false;true
f64::<impl f64>::abs;false;true;true;false
num::<impl i64>::wrapping_rem;false;false;false;false
<iter::adapters::skip::Skip<I> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx::_mm256_and_pd;true;true;true;false
char::methods::<impl char>::is_ascii_control;false;false;false;false
core_arch::simd::u64x4::new;false;false;false;false
<fmt::num::LowerHex as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_mullo_epi32;true;true;false;false
<&num::wrapping::Wrapping<u32> as ops::bit::Shl<&usize>>::shl;false;false;false;false
intrinsics::atomic_fence_acqrel;true;false;false;false
<core_arch::simd::i64x2 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmsubadd_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_mul_round_sh;true;true;true;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_fold;false;false;true;true
core_arch::x86::avx512f::_mm256_mask_cvtepu16_epi64;true;true;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
panicking::panic_null_pointer_dereference;false;false;false;false
<usize as ops::bit::Shl<u16>>::shl;false;false;false;false
slice::sort::unstable::quicksort::partition_hoare_branchy_cyclic;false;true;true;true
<range::RangeInclusive<Idx> as hash::Hash>::hash;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_cvtpd_epu64;true;true;true;false
<&'a i128 as ops::bit::Shr<i8>>::shr;false;false;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<usize> for u64>::try_from;false;false;false;false
core_arch::x86_64::xsave::_xsavec64;true;true;true;false
future::async_drop::deferred_drop_in_place;true;false;true;false
<i16 as ops::bit::BitAnd<&i16>>::bitand;false;false;false;false
<range::iter::IterRange<A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;false;true;false
<u16 as ops::bit::Shl<i8>>::shl;false;false;false;false
<num::niche_types::UsizeNoHighBit as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::i8x32 as fmt::Debug>::fmt;false;false;true;false
num::nonzero::NonZero::<u32>::cast_signed;false;true;false;false
<i32 as ops::bit::Shl<&i16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_unpacklo_epi32;true;true;false;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::num::uint::SimdUint>::reduce_xor;false;true;false;false
<num::saturating::Saturating<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<core_simd::vector::Simd<T, N> as cmp::Ord>::cmp;false;false;true;false
<array::iter::IntoIter<T, N> as ops::drop::Drop>::drop;false;true;true;false
<ops::range::RangeToInclusive<Idx> as cmp::PartialEq>::eq;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fmaddsub_round_pd;true;true;true;false
<&mut H as hash::Hasher>::finish;false;false;true;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::index;false;false;false;false
core_arch::x86::avx512bw::_mm512_cmpneq_epu16_mask;true;true;false;false
<core_simd::vector::Simd<u32, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<char::EscapeUnicode as clone::Clone>::clone;false;false;true;false
slice::<impl [T]>::splitn;false;false;false;false
core_arch::x86::avx512f::_mm_getmant_round_sd;true;true;true;false
str::<impl str>::as_ptr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_testn_epi32_mask;true;true;false;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::trailing_zeros;false;false;false;false
num::nonzero::NonZero::<i128>::wrapping_neg;false;true;false;false
<&'a i8 as ops::bit::Shl<u64>>::shl;false;false;false;false
num::<impl i128>::borrowing_sub;false;false;false;false
num::<impl usize>::rotate_left;false;false;false;false
<num::niche_types::NonZeroU8Inner as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
<&'a i64 as ops::bit::Shr<isize>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm_cmpeq_epu32_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm_fmadd_ph;true;true;true;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
cell::once::OnceCell::<T>::set;false;false;true;false
core_arch::x86::avx512vnni::_mm256_dpwssd_avx_epi32;true;true;false;false
<task::poll::Poll<T> as fmt::Debug>::fmt;false;false;true;false
<char::decode::DecodeUtf16Error as cmp::PartialEq>::eq;false;false;false;false
<i64 as ops::bit::Shr<&isize>>::shr;false;false;false;false
num::nonzero::NonZero::<i8>::from_le;false;true;false;false
fmt::getcount;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Product<&'a core_simd::vector::Simd<u64, N>> for core_simd::vector::Simd<u64, N>>::product;false;false;false;true
<num::wrapping::Wrapping<u128> as ops::bit::BitAndAssign<u128>>::bitand_assign;false;false;true;false
<u128 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
<u16 as ops::bit::ShlAssign<&u16>>::shl_assign;false;false;true;false
intrinsics::atomic_and_acquire;true;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtph_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mul_pch;true;true;true;false
num::<impl u8>::checked_add;false;false;false;false
<u64 as ops::arith::Add>::add;false;false;false;false
range::iter::IterRangeInclusive::<A>::remainder;false;false;true;false
num::saturating::Saturating::<i16>::leading_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_unpackhi_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_and_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_testn_epi8_mask;true;true;false;false
num::nonzero::NonZero::<isize>::count_ones;false;true;false;false
<char::EscapeDefault as fmt::Debug>::fmt;false;false;true;false
sync::atomic::AtomicI8::fetch_update;false;false;true;true
core_arch::x86::avx512f::_mm256_maskz_ror_epi32;true;true;false;false
<&'a i64 as ops::bit::Shl<u8>>::shl;false;false;false;false
sync::atomic::AtomicU8::fetch_nand;false;true;true;false
core_arch::x86::avx512bw::_mm256_mask_min_epu8;true;true;false;false
<core_arch::x86::__m512h as clone::Clone>::clone;false;false;true;false
num::<impl u128>::checked_signed_diff;false;false;false;false
convert::num::<impl convert::From<f16> for f64>::from;false;false;true;false
core_arch::x86::__m256i::as_array;false;true;false;false
<num::saturating::Saturating<i32> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::sse41::_mm_stream_load_si128;true;true;true;false
ub_checks::maybe_is_nonoverlapping;false;false;true;false
<time::TryFromFloatSecsError as cmp::PartialEq>::eq;false;false;false;false
<&num::saturating::Saturating<u64> as ops::bit::BitAnd<&num::saturating::Saturating<u64>>>::bitand;false;false;false;false
num::<impl u128>::checked_add;false;false;false;false
intrinsics::simd::simd_saturating_add;true;false;false;false
core_arch::x86::avx512f::_mm512_rol_epi64;true;true;false;false
<&'a isize as ops::bit::Shr<i8>>::shr;false;false;false;false
result::Result::<T, E>::as_deref_mut;false;false;true;false
<ops::coroutine::CoroutineState<Y, R> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<u16 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::traits::double_ended::DoubleEndedIterator>::try_rfold;false;false;true;true
cmp::impls::<impl cmp::PartialOrd for f32>::lt;false;false;true;false
slice::sort::unstable::ipnsort;false;false;true;false
core_arch::x86::sse::_mm_ucomigt_ss;true;true;true;false
core_arch::x86::avx512bw::_mm256_reduce_min_epu16;true;true;false;false
str::converts::from_utf8_unchecked;true;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvt_roundepu64_pd;true;true;false;false
num::niche_types::NonZeroI16Inner;true;false;false;false
str::pattern::SearchStep::Match;false;false;false;false
<core_arch::simd::u16x64::splat::JustOne as clone::Clone>::clone;false;false;false;false
<i32 as ops::bit::Shr<u128>>::shr;false;false;false;false
<sync::atomic::AtomicI8 as default::Default>::default;false;false;false;false
<core_arch::simd::u32x16 as cmp::PartialEq>::eq;false;false;false;false
<i32 as ops::bit::ShrAssign<u128>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_loadu_pd;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_min_epi8;true;true;false;false
num::<impl isize>::wrapping_add;false;false;false;false
<u16 as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<hash::sip::SipHasher as fmt::Debug>::fmt;false;false;true;false
num::<impl i8>::trailing_zeros;false;false;false;false
<core_arch::simd::u8x16 as fmt::Debug>::fmt;false;false;true;false
<num::saturating::Saturating<i128> as ops::arith::MulAssign<&num::saturating::Saturating<i128>>>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_min_sh;true;true;true;false
num::saturating::Saturating::<isize>::is_positive;false;false;false;false
num::<impl u64>::wrapping_rem_euclid;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::RemAssign>::rem_assign;false;false;true;false
<isize as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
<str::iter::RSplitTerminator<'a, P> as clone::Clone>::clone;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::cast;false;true;false;false
<num::saturating::Saturating<i32> as ops::arith::AddAssign<&i32>>::add_assign;false;false;true;false
num::nonzero::NonZero::<i128>::cast_unsigned;false;true;false;false
num::<impl u64>::to_be;false;false;false;false
ptr::mut_ptr::<impl *mut T>::copy_to;true;true;true;false
<u32 as ops::bit::BitOr>::bitor;false;false;false;false
escape::hex_escape;false;false;false;false
core_arch::simd::u8x8::from_array;false;false;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_expandloadu_epi8;true;true;true;false
<i8 as ops::bit::Shr<&i64>>::shr;false;false;false;false
<u64 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<i32, 16>>::from;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_load_epi32;true;true;true;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_product;false;true;false;false
core_arch::x86::avx512vbmi2::_mm512_mask_shrdv_epi16;true;true;false;false
num::wrapping::Wrapping::<u32>::to_le;false;false;false;false
intrinsics::mir::Unreachable;false;false;false;false
<&i16 as ops::bit::Shr<&u16>>::shr;false;false;false;false
<iter::adapters::filter_map::FilterMap<I, F> as iter::traits::double_ended::DoubleEndedIterator>::rfold;false;false;false;false
fmt::Formatter::<'a>::write_formatted_parts::write_bytes;true;true;true;false
f32::<impl f32>::total_cmp;false;false;true;false
num::<impl isize>::wrapping_neg;false;false;false;false
num::nonzero::NonZero::<u16>::rotate_right;false;true;false;false
num::saturating::Saturating::<u32>::pow;false;false;false;false
result::Result::<T, E>::into_err;false;false;true;false
<u16 as core_simd::masks::mask_impl::ReverseBits>::reverse_bits;false;false;false;false
<i128 as ops::bit::Shr<&u16>>::shr;false;false;false;false
num::nonzero::NonZero::<i32>::isolate_most_significant_one;false;true;false;false
clone::impls::<impl clone::Clone for f16>::clone;false;false;true;false
<ops::try_trait::NeverShortCircuit<T> as ops::try_trait::FromResidual>::from_residual;false;false;false;false
<pin::Pin<Ptr> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_storeu_ps;true;true;true;false
num::wrapping::Wrapping::<usize>::count_ones;false;false;false;false
num::<impl usize>::carrying_mul;false;false;false;false
<slice::iter::RChunksExact<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
core_simd::ops::<impl ops::arith::Add for core_simd::vector::Simd<u8, N>>::add;false;true;false;false
core_arch::x86::avx512vnni::_mm256_dpwuuds_epi32;true;true;false;false
num::<impl i8>::checked_div_euclid;false;false;false;false
<option::Option<T> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
<&u32 as ops::arith::Div<&u32>>::div;false;false;false;false
<u64 as ops::bit::ShrAssign<&i32>>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_reduce_add_epi8;true;true;false;false
alloc::layout::Layout::extend;false;false;false;false
core_arch::x86::avx512f::_mm256_permutexvar_epi32;true;true;false;false
<&'a num::saturating::Saturating<i32> as ops::arith::Rem<num::saturating::Saturating<i32>>>::rem;false;false;false;false
num::niche_types::UsizeNoHighBit::new;false;false;false;false
num::<impl i8>::checked_neg;false;false;false;false
num::<impl u128>::rem_euclid;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for f32>::ge;false;false;true;false
<u128 as ops::bit::BitXor<&u128>>::bitxor;false;false;false;false
<char::EscapeDebug as iter::traits::iterator::Iterator>::count;false;false;true;false
<sync::atomic::AtomicPtr<T> as fmt::Pointer>::fmt;false;false;true;false
<u16 as ops::bit::Shl<&isize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_mov_epi64;true;true;false;false
<core_arch::simd::i16x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmsub_ss;true;true;true;false
core_arch::x86::avx512bw::_mm256_maskz_min_epi8;true;true;false;false
num::<impl u64>::saturating_add;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fnmsub_sd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_max_ph;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_min_ph;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_broadcastw_epi16;true;true;false;false
num::<impl u16>::leading_ones;false;false;false;false
net::parser::<impl net::socket_addr::SocketAddrV6>::parse_ascii;false;false;false;false
intrinsics::simd::simd_le;true;false;false;false
hash::impls::<impl hash::Hash for u64>::hash_slice;false;true;true;false
<num::FpCategory as clone::Clone>::clone;false;false;false;false
<i8 as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
io::borrowed_buf::BorrowedBuf::<'data>::into_filled_mut;false;true;true;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_max;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u128>::le;false;false;false;false
<core_arch::simd::f16x8 as fmt::Debug>::fmt;false;false;true;false
convert::num::<impl convert::TryFrom<i32> for u16>::try_from;false;false;false;false
num::nonzero::NonZero::<i64>::to_be;false;true;false;false
core_arch::x86::avx::_mm256_extract_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_broadcast_i32x4;true;true;false;false
sync::atomic::AtomicUsize::load;false;true;true;false
core_arch::x86::avx512f::_mm512_cmpneq_ps_mask;true;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
<core_arch::simd::u8x2 as fmt::Debug>::fmt;false;false;true;false
slice::cmp::<impl cmp::Ord for [T]>::cmp;false;false;false;false
num::<impl i16>::checked_abs;false;false;false;false
num::<impl i128>::overflowing_neg;false;false;false;false
<&num::saturating::Saturating<i128> as ops::bit::BitOr<&num::saturating::Saturating<i128>>>::bitor;false;false;false;false
core_arch::x86::avx512fp16::_mm_scalef_ph;true;true;true;false
<core_arch::simd::i32x8 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512dq::_mm256_cvttps_epi64;true;true;true;false
<core_simd::vector::Simd<i16, 32> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i128>> for num::nonzero::NonZero<u16>>::try_from;false;true;false;false
mem::align_of_val;false;true;false;false
<io::borrowed_buf::BorrowedBuf<'data> as convert::From<&'data mut [u8]>>::from;false;true;true;false
num::<impl i8>::checked_rem_euclid;false;false;false;false
num::<impl u128>::checked_ilog10;false;false;false;false
<u64 as ops::bit::Shr>::shr;false;false;false;false
core_arch::x86::avx512f::_kand_mask16;true;false;false;false
core_arch::x86::avx512f::_mm256_cmp_pd_mask;true;true;true;false
core_arch::x86::avx512fp16::_mm_mask_fmsub_sh;true;true;true;false
fmt::builders::DebugMap::<'a, 'b>::key;false;false;true;false
<&'a isize as ops::bit::Shr<isize>>::shr;false;false;false;false
num::<impl u16>::ilog2;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitAndAssign<u64>>::bitand_assign;false;false;true;false
<&'a T as error::Error>::provide;false;false;true;false
<&'a num::wrapping::Wrapping<i64> as ops::bit::Shr<usize>>::shr;false;false;false;false
<core_simd::vector::Simd<u64, 2> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_fmadd_round_pd;true;true;true;false
core_arch::x86::avx512dq::_mm256_mask_inserti64x2;true;true;false;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::simd::u64x1;false;false;false;false
core_arch::x86::avx512f::_mm_mask_srav_epi64;true;true;false;false
<&'a f64 as ops::arith::Add<f64>>::add;false;false;true;false
f16::<impl f16>::clamp::do_panic::compiletime;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for i8>::partial_cmp;false;false;false;false
num::<impl u32>::wrapping_sub_signed;false;false;false;false
<Iter as iter::traits::collect::TraitB<EB, EA>>::extend;false;false;true;false
<str::pattern::CharPredicateSearcher<'_, F> as fmt::Debug>::fmt;false;false;true;false
<f32 as fmt::float::GeneralFormat>::already_rounded_value_should_use_exponential;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAnd>::bitand;false;false;false;false
core_arch::x86::avx512dq::_cvtmask8_u32;true;false;false;false
<&num::saturating::Saturating<u8> as ops::arith::Div<&num::saturating::Saturating<u8>>>::div;false;false;false;false
core_arch::x86::avx512fp16::_mm_comilt_sh;true;true;true;false
<&'a i128 as ops::bit::Shl<i64>>::shl;false;false;false;false
fmt::builders::DebugList::<'a, 'b>::entry;false;false;true;false
<str::iter::Chars<'a> as iter::traits::iterator::Iterator>::advance_by;false;true;true;true
convert::num::<impl convert::From<bool> for u16>::from;false;false;false;false
num::<impl isize>::checked_rem_euclid;false;false;false;false
<ops::try_trait::NeverShortCircuit<T> as ops::try_trait::Try>::from_output;false;false;false;false
<&'a u128 as ops::bit::Shr<isize>>::shr;false;false;false;false
<i64 as ops::bit::Shl<i32>>::shl;false;false;false;false
num::saturating::Saturating::<i32>::to_le;false;false;false;false
num::nonzero::NonZero::<u64>::isqrt;false;true;false;false
ptr::from_ref;false;false;false;false
core_arch::x86::sse41::_mm_extract_ps;true;true;true;false
<u8 as ops::bit::Shr<u64>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi64_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvttph_epu32;true;true;true;false
<str::iter::Chars<'a> as iter::traits::iterator::Iterator>::count;false;false;true;false
<i64 as ops::bit::ShlAssign>::shl_assign;false;false;true;false
num::<impl u64>::widening_mul;false;false;false;false
num::<impl u32>::wrapping_sub;false;false;false;false
<u64 as ops::arith::RemAssign<&u64>>::rem_assign;false;false;true;false
<&'a u8 as ops::bit::Shl<i128>>::shl;false;false;false;false
<usize as ops::bit::Shl>::shl;false;false;false;false
tuple::<impl cmp::PartialEq for (V, U, T)>::ne;false;false;false;false
core_arch::x86::avx512f::_mm512_castsi512_pd;true;false;false;false
num::<impl isize>::wrapping_shr;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_srai_epi64;true;true;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_gt;false;true;true;false
core_arch::x86::avx512f::_mm512_mask_cvtpslo_pd;true;true;true;false
<num::saturating::Saturating<u32> as ops::arith::MulAssign<&u32>>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask_add_sh;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::arith::RemAssign<&u32>>::rem_assign;false;false;true;false
core_arch::x86_64::sse2::_mm_cvtsi64x_si128;true;true;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::reduce_xor;false;true;false;false
ptr::non_null::NonNull::<T>::replace;true;true;true;false
core_arch::x86::avx2::_mm256_maskstore_epi64;true;true;true;false
<ops::try_trait::NeverShortCircuit<T> as ops::try_trait::Try>::branch;false;false;true;false
<i64 as ops::bit::ShrAssign<i32>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_cvtpd_epi32;true;true;true;false
<core_simd::vector::Simd<u64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
num::saturating::Saturating::<usize>::trailing_zeros;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
core_arch::x86::fma::_mm_fnmsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_sub_epi32;true;true;false;false
net::socket_addr::SocketAddrV6::new;false;false;false;false
<core_simd::vector::Simd<i16, 1> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
<i32 as ops::bit::BitXorAssign<&i32>>::bitxor_assign;false;false;true;false
panicking::panic_const::panic_const_coroutine_resumed;false;false;false;false
slice::index::slice_index_order_fail::do_panic::runtime;false;false;false;false
core_arch::x86::avx512f::_mm512_cvtph_ps;true;true;false;false
core_arch::x86::avx512f::_mm_rorv_epi32;true;true;false;false
<u16 as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::x86::sse2::_mm_xor_pd;true;true;true;false
<&num::saturating::Saturating<i64> as ops::arith::Div<&num::saturating::Saturating<i64>>>::div;false;false;false;false
num::<impl i8>::wrapping_div;false;false;false;false
num::<impl u16>::min_value;false;false;false;false
core_arch::x86::avx512vbmi::_mm256_mask2_permutex2var_epi8;true;true;false;false
range::RangeFrom::<Idx>::contains;false;false;true;false
core_arch::x86::avx512f::_mm_mask_expandloadu_pd;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
<u32 as ops::bit::ShrAssign<&u16>>::shr_assign;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
slice::sort::select::partition_at_index;false;false;true;false
core_arch::x86::avx2::_mm256_hsub_epi32;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_unpacklo_ps;true;true;true;false
core_simd::masks::Mask::<T, N>::set_unchecked;true;true;true;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m256i> for core_simd::vector::Simd<u64, 4>>::from;false;false;false;false
core_arch::x86::sse41::_mm_max_epu16;true;true;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::recip;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reduce_min;false;true;false;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
num::<impl i64>::from_be_bytes;false;false;false;false
<core_arch::simd::u8x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_permutex2var_ps;true;true;true;false
<f64 as num::dec2flt::float::RawFloat>::to_bits;false;false;true;false
panic::panic_info::PanicMessage::<'a>::as_str;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_broadcastsd_pd;true;true;true;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<isize> for i32>::try_from;false;false;false;false
<core_arch::simd::m64x2::splat::JustOne as clone::Clone>::clone;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get;false;true;true;false
<core_simd::vector::Simd<i32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_le;false;true;false;false
num::<impl i128>::unchecked_mul::precondition_check;false;false;false;false
<ffi::c_str::FromBytesUntilNulError as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
slice::rotate::ptr_rotate;true;true;true;false
core_arch::x86::avx2::_mm256_blend_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_cvtt_roundss_i32;true;true;true;false
<&'a u128 as ops::bit::Shr<i64>>::shr;false;false;false;false
<ops::range::RangeFrom<Idx> as hash::Hash>::hash;false;false;true;false
fmt::num::<impl fmt::Octal for u128>::fmt;false;false;true;false
num::<impl i8>::checked_sub;false;false;false;false
num::<impl i32>::checked_sub_unsigned;false;false;false;false
<result::Iter<'a, T> as fmt::Debug>::fmt;false;false;true;false
<str::pattern::CharArraySearcher<'a, N> as str::pattern::ReverseSearcher<'a>>::next_reject_back;false;false;true;false
<core_arch::x86::__m512bh::splat::JustOne as clone::Clone>::clone;false;false;false;false
<f128 as convert::num::FloatToInt<i32>>::to_int_unchecked;true;true;true;false
<&f128 as ops::arith::Div<&f128>>::div;false;false;true;false
<num::saturating::Saturating<isize> as ops::arith::Div<&num::saturating::Saturating<isize>>>::div;false;false;false;false
num::saturating::Saturating::<u16>::trailing_zeros;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u8>>::try_from;false;true;false;false
<ops::range::RangeFrom<T> as ops::range::RangeBounds<T>>::end_bound;false;false;false;false
<ops::range::RangeInclusive<T> as iter::range::RangeInclusiveIteratorImpl>::spec_try_fold;false;true;true;true
str::<impl str>::chars;false;false;false;false
<slice::iter::Iter<'_, T> as iter::traits::exact_size::ExactSizeIterator>::len;false;true;true;false
future::async_drop::surface_drop_in_place;true;false;true;false
core_arch::x86::__m256bh::as_array;false;true;false;false
core_arch::x86::avx512f::_mm512_cvtepi32_epi16;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_roundscale_ss;true;true;true;false
core_arch::x86::avx512bw::_mm512_packus_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm_cvtepi64_pd;true;true;false;false
<core_arch::simd::i8x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::sse2::_mm_setzero_si128;true;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_mullo_epi64;true;true;false;false
<core_simd::vector::Simd<u16, 8> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
core_arch::x86::avx512dq::_mm_mask_xor_ps;true;true;true;false
<core_arch::simd::u64x8 as clone::Clone>::clone;false;false;false;false
<&num::saturating::Saturating<i16> as ops::arith::Add<&num::saturating::Saturating<i16>>>::add;false;false;false;false
fmt::float::float_to_general_debug;false;false;true;false
<fmt::Error as default::Default>::default;false;false;false;false
<cell::Cell<T> as cmp::Ord>::cmp;false;false;true;false
str::pattern::Searcher::next_match;false;false;true;true
core_arch::simd::i16x8::splat;false;true;false;false
num::<impl u32>::trailing_zeros;false;false;false;false
<ops::range::RangeToInclusive<T> as ops::range::RangeBounds<T>>::start_bound;false;false;false;false
core_arch::x86::avx512f::_mm_mask3_fmaddsub_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpunord_pd_mask;true;true;true;false
"<[T; N] as iter::adapters::flatten::ConstSizeIntoIterator>::size";false;false;false;false
convert::num::<impl convert::TryFrom<u32> for i32>::try_from;false;false;false;false
iter::adapters::flatten::FlattenCompat::<I, U>::iter_fold::flatten;false;false;true;false
<num::wrapping::Wrapping<i64> as ops::arith::Add<&num::wrapping::Wrapping<i64>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm_mmask_i64gather_epi64;true;true;true;false
core_arch::simd::u32x16::from_array;false;false;false;false
<fmt::num::LowerHex as cmp::PartialEq>::eq;false;false;false;false
<i64 as ops::bit::Shr<u32>>::shr;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_testn_epi32_mask;true;true;false;false
<net::ip_addr::Ipv6Addr as fmt::Display>::fmt;false;false;true;true
<i32 as ops::bit::ShrAssign<&u32>>::shr_assign;false;false;true;false
<iter::adapters::scan::Scan<I, St, F> as iter::traits::iterator::Iterator>::fold;false;false;false;true
sync::atomic::AtomicU64::fetch_add;false;true;true;false
tuple::<impl cmp::PartialOrd for (T,)>::ge;false;false;false;false
core_arch::x86::avx512f::_mm256_permutexvar_pd;true;true;true;false
fmt::builders::from_fn;false;false;false;false
core_arch::x86::avx512f::_mm_mask_abs_epi32;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitOr>::bitor;false;false;false;false
num::<impl isize>::to_le_bytes;false;false;false;false
<num::niche_types::NonZeroI8Inner as cmp::Ord>::cmp;false;false;false;false
num::<impl i32>::overflowing_mul;false;false;false;false
intrinsics::simd::simd_reduce_and;true;false;false;false
cmp::impls::<impl cmp::PartialOrd for i16>::partial_cmp;false;false;false;false
<ops::range::RangeFull as ops::range::IntoBounds<T>>::into_bounds;false;false;false;false
<u32 as ops::arith::RemAssign>::rem_assign;false;false;true;false
char::decode::DecodeUtf16Error::unpaired_surrogate;false;false;false;false
<net::ip_addr::Ipv4Addr as iter::range::Step>::forward_checked;false;false;false;false
cell::UnsafeCell::<T>::as_ref_unchecked;true;true;true;false
<str::iter::SplitN<'a, P> as fmt::Debug>::fmt;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm256_getexp_pd;true;true;true;false
option::Option::<T>::as_pin_ref;false;true;true;false
task::wake::LocalWaker::new;true;false;true;false
num::<impl i128>::saturating_sub;false;false;false;false
<isize as ops::arith::RemAssign<&isize>>::rem_assign;false;false;true;false
core_arch::x86::avx::_mm256_broadcast_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_set_ph;true;false;true;false
core_arch::x86::avx512fp16::_mm512_mul_round_pch;true;true;true;false
core_arch::x86::__m256h::splat::JustOne;false;false;true;false
core_arch::x86::avx512f::_mm256_mask_max_epi64;true;true;false;false
<any::TypeId as cmp::PartialEq>::eq;false;false;true;false
num::<impl i64>::checked_neg;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_cvtepi16_epi64;true;true;false;false
<num::saturating::Saturating<u32> as ops::arith::Rem<&num::saturating::Saturating<u32>>>::rem;false;false;false;false
intrinsics::atomic_xor_release;true;false;true;false
<cell::SyncUnsafeCell<T> as convert::From<T>>::from;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::iterator::Iterator>::last::last;false;false;false;true
cmp::impls::<impl cmp::PartialOrd<&B> for &A>::lt;false;false;false;false
<isize as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
<net::ip_addr::Ipv6MulticastScope as clone::Clone>::clone;false;false;false;false
<&'a num::wrapping::Wrapping<i8> as ops::arith::Div<num::wrapping::Wrapping<i8>>>::div;false;false;false;false
<u8 as ops::arith::Mul>::mul;false;false;false;false
<iter::adapters::take::Take<iter::sources::repeat::Repeat<T>> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
<range::iter::IterRangeInclusive<A> as iter::traits::iterator::Iterator>::nth;false;false;true;true
core_arch::x86::avx512f::_mm512_mask_cvtepi16_epi32;true;true;false;false
<u16 as ops::bit::ShlAssign<i128>>::shl_assign;false;false;true;false
num::<impl i8>::swap_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_abs_epi32;true;true;false;false
<(EJ, EI, EH, EG, EF, EE, ED, EC, EB, EA) as iter::traits::collect::Extend<(J, I, H, G, F, E, D, C, B, A)>>::extend_reserve;false;false;true;false
core_arch::x86::avx512bw::_mm_mask2_permutex2var_epi16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_permutex2var_epi64;true;true;false;false
<num::saturating::Saturating<u64> as ops::arith::RemAssign<&num::saturating::Saturating<u64>>>::rem_assign;false;false;true;false
<i32 as ops::bit::ShlAssign<u128>>::shl_assign;false;false;true;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
<&u32 as ops::bit::Shr<&u16>>::shr;false;false;false;false
num::saturating::Saturating::<u16>::is_power_of_two;false;false;false;false
intrinsics::simd::simd_fmin;true;false;false;false
core_arch::x86::sse::_mm_cmpge_ss;true;true;true;false
f16::<impl f16>::max;false;false;true;false
<i8 as ops::bit::Shr<i16>>::shr;false;false;false;false
f32::<impl f32>::clamp::do_panic::runtime;false;false;true;false
core_arch::x86::sse::_mm_cmpnle_ps;true;true;true;false
<num::nonzero::NonZero<T> as cmp::PartialOrd>::lt;false;false;true;false
intrinsics::simd::simd_masked_store;true;false;false;false
<num::error::ParseIntError as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm_store_epi32;true;true;true;false
core_arch::x86::avxneconvert::_mm256_bcstnesh_ps;true;true;true;false
core_arch::x86::avx512fp16::_mm256_castpd_ph;true;false;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmaddsub_ph;true;true;true;false
num::<impl u128>::wrapping_neg;false;false;false;false
num::<impl i32>::ilog10;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::arith::AddAssign<&u128>>::add_assign;false;false;true;false
<u16 as ops::bit::BitAnd>::bitand;false;false;false;false
slice::<impl [T]>::chunks;false;false;false;false
core_arch::x86::avx512vbmi2::_mm_maskz_shldv_epi16;true;true;false;false
core_arch::x86::fma::_mm_fmsub_ps;true;true;true;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<usize, N>>::mul;false;true;false;false
core_arch::x86::avx512fp16::_mm_castsi128_ph;true;false;false;false
iter::range::<impl iter::traits::iterator::Iterator for ops::range::Range<A>>::next;false;false;true;false
<core_arch::simd::i8x2 as cmp::PartialEq>::eq;false;false;false;false
core_arch::simd::u32x2;false;false;false;false
cmp::impls::<impl cmp::PartialEq for i64>::eq;false;false;false;false
core_arch::x86::avx512vnni::_mm256_dpwuud_epi32;true;true;false;false
<str::pattern::StrSearcher<'a, 'b> as fmt::Debug>::fmt;false;false;true;false
<core_arch::simd::f32x2 as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_cvtps_epu64;true;true;true;false
num::<impl i128>::overflowing_add_unsigned;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i32>::ge;false;false;false;false
ptr::const_ptr::<impl *const T>::byte_offset;true;true;true;false
core_arch::x86::avx512f::_mm512_cvtepi8_epi64;true;true;false;false
sync::atomic::AtomicU8::update;false;false;true;true
hash::impls::<impl hash::Hash for isize>::hash;false;false;true;false
<&'a i64 as ops::bit::Shr<i16>>::shr;false;false;false;false
intrinsics::mir::StaticMut;false;false;false;false
<num::dec2flt::decimal::Decimal as fmt::Debug>::fmt;false;false;true;false
<slice::iter::RSplit<'a, T, P> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512vbmi2::_mm256_shrdv_epi64;true;true;false;false
<core_arch::simd::u8x2 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fnmadd_pd;true;true;true;false
num::<impl u16>::from_ne_bytes;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::Shl<usize>>::shl;false;false;false;false
<marker::variance::PhantomContravariantLifetime<'a> as clone::Clone>::clone;false;false;true;false
<i16 as ops::bit::Shl<usize>>::shl;false;false;false;false
num::<impl i8>::unchecked_add;true;false;false;false
core_arch::x86::avx512f::_mm256_mask_unpacklo_pd;true;true;true;false
<u128 as ops::bit::BitOr>::bitor;false;false;false;false
intrinsics::mir::Len::panic_cold_explicit;false;false;false;false
<Iter as iter::traits::collect::TraitF<EF, EE, ED, EC, EB, EA>>::extend;false;false;true;false
slice::<impl [T]>::get_disjoint_unchecked_mut;true;true;true;true
<num::wrapping::Wrapping<u8> as ops::arith::MulAssign<&u8>>::mul_assign;false;false;true;false
core_arch::x86::sse41::_mm_min_epi8;true;true;false;false
core_arch::x86::avx512fp16::_mm_sub_ph;true;true;true;false
<u16 as iter::range::Step>::backward_checked;false;false;false;false
<&isize as ops::bit::Shr<&u8>>::shr;false;false;false;false
core_arch::x86::sse2::_mm_load_sd;true;true;true;false
core_arch::simd::u16x16::splat::JustOne;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_expand_ps;true;true;true;false
<hash::sip::Sip13Rounds as fmt::Debug>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm256_cmple_epi8_mask;true;true;false;false
num::<impl u8>::as_ascii;false;false;false;false
alloc::layout::Layout::repeat;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_reduce_add_pd;true;true;true;false
<isize as ops::arith::Rem<&isize>>::rem;false;false;false;false
intrinsics::atomic_cxchg_relaxed_acquire;true;false;true;false
<&'a u32 as ops::bit::BitOr<u32>>::bitor;false;false;false;false
str::iter::SplitInternal::<'a, P>::remainder;false;true;true;false
num::<impl i16>::saturating_neg;false;false;false;false
core_simd::vector::Simd::<T, N>::load_select;false;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_scalef_sh;true;true;true;false
<slice::iter::Windows<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
<u32 as ops::bit::Shl<i8>>::shl;false;false;false;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u128>> for u128>::div;false;false;false;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
tuple::<impl cmp::PartialOrd for (E, D, C, B, A, Z, Y, X, W, V, U, T)>::gt;false;false;false;false
iter::range::Step::backward_unchecked;true;false;false;false
core_simd::ops::deref::<impl ops::bit::Shl<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::shl;false;false;false;false
<core_simd::vector::Simd<u32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_unpacklo_epi32;true;true;false;false
<range::Range<usize> as slice::index::SliceIndex<[T]>>::index;false;false;true;false
<ops::range::RangeInclusive<Idx> as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm512_set1_epi16;true;false;false;false
core_arch::x86::avx512fp16::_mm_reduce_round_sh;true;true;true;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<u16, N>>::bitxor;false;true;false;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::RangeTo<usize>>>::index_mut;false;false;true;false
<<net::ip_addr::Ipv6Addr as fmt::Display>::fmt::Span as default::Default>::default;false;false;false;false
num::nonzero::NonZero::<i64>::checked_neg;false;true;false;false
<option::Iter<'a, A> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_arch::x86::avx512bw::_mm_cmpneq_epu16_mask;true;true;false;false
<num::niche_types::NonZeroU128Inner as fmt::Debug>::fmt;false;false;true;false
<i16 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
num::int_sqrt::i64;true;false;false;false
<iter::adapters::fuse::Fuse<I> as iter::traits::iterator::Iterator>::last;false;false;true;true
intrinsics::atomic_xsub_release;true;false;true;false
f32::<impl f32>::to_ne_bytes;false;false;true;false
convert::num::<impl convert::From<u32> for i64>::from;false;false;false;false
<range::iter::IterRangeFrom<A> as iter::traits::iterator::Iterator>::next;false;false;true;false
sync::atomic::AtomicU32::as_ptr;false;false;true;false
core_arch::x86::avx::_mm256_castps128_ps256;true;true;true;false
core_arch::x86::avx512f::_mm_mask_rolv_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_subs_epi8;true;true;false;false
<f32 as ops::arith::Mul<&f32>>::mul;false;false;true;false
core_arch::x86::avx512f::_kandn_mask16;true;true;false;false
num::<impl usize>::unchecked_mul;true;false;false;false
core_arch::x86::sse::_mm_cvtss_f32;true;true;true;false
sync::atomic::AtomicI16::fetch_xor;false;true;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_extractf64x4_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_cmpeq_epu64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_permutexvar_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_maskz_cvtepi64_ph;true;true;false;false
<core_simd::vector::Simd<u64, 1> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
core_arch::x86::avx2::_mm256_srl_epi64;true;true;false;false
num::<impl usize>::wrapping_add;false;false;false;false
<u32 as ops::bit::Shl<u16>>::shl;false;false;false;false
num::niche_types::NonZeroI64Inner;true;false;false;false
core_arch::x86::sse::_mm_ucomineq_ss;true;true;true;false
mem::size_of_val_raw;true;true;true;false
core_arch::x86::avx512f::_mm_mask_permute_ps;true;true;true;false
intrinsics::mir::UnwindTerminate;false;false;false;false
core_arch::x86::avx2::_mm256_avg_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_cvt_roundps_ph;true;true;true;false
<num::saturating::Saturating<i64> as ops::arith::Mul<&num::saturating::Saturating<i64>>>::mul;false;false;false;false
core_arch::simd::f16x4;false;false;true;false
intrinsics::simd::simd_cttz;true;false;false;false
<iter::adapters::skip::Skip<I> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
<u128 as ops::bit::Shr<&i128>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_cmpge_epu16_mask;true;true;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<u128>>>::bitxor_assign;false;false;true;false
fmt::builders::DebugMap::<'a, 'b>::key_with;false;false;true;false
core_arch::x86::avx512f::_mm_mask_add_epi32;true;true;false;false
<f128 as ops::arith::Div<&f128>>::div;false;false;true;false
<&i128 as ops::bit::Shr<&u8>>::shr;false;false;false;false
<iter::adapters::filter::Filter<I, P> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;false
core_simd::vector::Simd::<T, N>::gather_select_unchecked;true;true;true;false
<&i16 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
ptr::const_ptr::<impl cmp::PartialOrd for *const T>::gt;false;false;true;false
<num::wrapping::Wrapping<u64> as ops::bit::BitXor<&num::wrapping::Wrapping<u64>>>::bitxor;false;false;false;false
<&'a u8 as ops::bit::Shl<u16>>::shl;false;false;false;false
fmt::num::<impl fmt::Binary for usize>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm_movepi32_mask;true;true;false;false
core_simd::ops::<impl ops::arith::Sub for core_simd::vector::Simd<isize, N>>::sub;false;true;false;false
convert::num::<impl convert::From<u16> for u32>::from;false;false;false;false
core_arch::x86::avx512bf16::_mm256_maskz_cvtneps_pbh;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_max_epi32;true;true;false;false
<num::saturating::Saturating<i8> as ops::bit::BitOrAssign<&num::saturating::Saturating<i8>>>::bitor_assign;false;false;true;false
<&num::wrapping::Wrapping<u8> as ops::bit::Shr<&usize>>::shr;false;false;false;false
cmp::max_by_key;false;false;false;false
<i128 as ops::arith::MulAssign<&i128>>::mul_assign;false;false;true;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
num::<impl u8>::checked_signed_diff;false;false;false;false
sync::atomic::AtomicIsize::as_ptr;false;false;true;false
<&'a i64 as ops::arith::Div<i64>>::div;false;false;false;false
<core_simd::vector::Simd<u8, 32> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
num::nonzero::NonZero::<i16>::wrapping_abs;false;true;false;false
io::borrowed_buf::BorrowedCursor::<'a>::capacity;false;false;true;false
<F as str::pattern::Pattern>::is_contained_in;false;false;false;false
<num::wrapping::Wrapping<isize> as iter::traits::accum::Sum<&'a num::wrapping::Wrapping<isize>>>::sum;false;false;false;true
core_arch::x86::avx512f::_mm512_maskz_permutexvar_ps;true;true;true;false
num::<impl u32>::one_less_than_next_power_of_two;false;true;false;false
tuple::<impl cmp::PartialEq for (B, A, Z, Y, X, W, V, U, T)>::eq;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::saturating_sub;false;true;false;false
num::wrapping::Wrapping::<u16>::count_ones;false;false;false;false
core_arch::simd::i16x8;false;false;false;false
<core_simd::vector::Simd<u32, 16> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
sync::atomic::AtomicI64::fetch_add;false;true;true;false
sync::atomic::AtomicBool::fetch_nand;false;false;true;false
core_arch::simd::i16x8::new;false;false;false;false
<i128 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
iter::traits::iterator::Iterator::filter_map;false;false;false;false
core_arch::x86::avx512bw::_kxor_mask32;true;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<isize> for core_simd::vector::Simd<isize, N>>::shr;false;false;false;false
<core_simd::vector::Simd<u8, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::reduce_and;false;true;false;false
num::wrapping::Wrapping::<i64>::trailing_zeros;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_abs_epi64;true;true;false;false
core_arch::x86::sse2::_mm_cmpneq_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm_maskz_fcmadd_sch;true;true;true;false
intrinsics::atomic_store_release;true;false;true;false
core_arch::x86::avx512bw::_mm_cmpneq_epu8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_fnmadd_round_ph;true;true;true;false
<num::wrapping::Wrapping<T> as clone::Clone>::clone;false;false;true;false
hash::impls::<impl hash::Hash for u64>::hash;false;false;true;false
core_simd::vendor::x86::p64::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<usize, 2>>::from;false;false;false;false
ffi::c_str::Bytes::<'a>::new;false;false;false;false
num::<impl u64>::isolate_most_significant_one;false;false;false;false
num::<impl u64>::overflowing_pow;false;false;false;true
net::parser::Parser::<'a>::read_given_char;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_cvtepu8_epi16;true;true;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<i8> for &'lhs core_simd::vector::Simd<i8, N>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<i8> for u32>::try_from;false;false;false;false
core_arch::x86::sse::_MM_TRANSPOSE4_PS;true;true;true;false
<slice::iter::ArrayWindows<'a, T, N> as iter::traits::iterator::Iterator>::count;false;false;true;false
core_arch::x86::avx512fp16::_mm512_cvtph_epi16;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_i32scatter_epi32;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_blend_ps;true;true;true;false
num::<impl i32>::overflowing_sub;false;false;false;false
<u16 as ops::arith::RemAssign>::rem_assign;false;false;true;false
<i32 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<slice::iter::ChunksExactMut<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;true;true;false
core_arch::x86::sse2::_mm_cmpgt_epi8;true;true;false;false
tuple::<impl cmp::PartialOrd for (W, V, U, T)>::gt;false;false;false;false
range::RangeInclusive::<Idx>::is_empty;false;false;true;false
core_arch::x86::avx512cd::_mm256_maskz_conflict_epi64;true;true;false;false
<num::saturating::Saturating<i8> as ops::arith::Mul<&num::saturating::Saturating<i8>>>::mul;false;false;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::wrapping_neg;false;false;false;false
ops::function::impls::<impl ops::function::FnOnce<A> for &F>::call_once;false;false;false;false
num::<impl usize>::unchecked_shr;true;false;false;false
<&'a num::saturating::Saturating<i32> as ops::bit::BitAnd<num::saturating::Saturating<i32>>>::bitand;false;false;false;false
ascii::EscapeDefault::empty;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::BitOr>::bitor;false;false;false;false
<&i128 as ops::bit::Shr<&usize>>::shr;false;false;false;false
option::Option::<T>::filter;false;false;true;false
fmt::num::imp::<impl fmt::Display for i16>::fmt;false;false;true;false
fmt::num::<impl fmt::LowerHex for i64>::fmt;false;false;true;false
core_arch::x86::avx512bw::_mm512_test_epi16_mask;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::cmp::eq::SimdPartialEq>::simd_ne;false;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_mul_round_ph;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_sub_ps;true;true;true;false
<iter::adapters::map::Map<I, F> as iter::traits::iterator::Iterator>::next;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeInclusive<usize>>::get_unchecked_mut;true;true;true;false
fmt::rt::UnsafeArg::new;true;false;false;false
<num::saturating::Saturating<u64> as ops::arith::SubAssign>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_scalef_pd;true;true;true;false
intrinsics::atomic_nand_acqrel;true;false;true;false
core_arch::x86::avx512f::_mm512_maskz_fnmadd_round_ps;true;true;true;false
core_arch::x86::avx512bw::_mm256_cmp_epi8_mask;true;true;false;false
intrinsics::ceilf128;true;false;true;false
core_arch::x86::avx512f::_mm256_rcp14_ps;true;true;true;false
<isize as ops::bit::Shr<usize>>::shr;false;false;false;false
<isize as ops::bit::ShrAssign<i16>>::shr_assign;false;false;true;false
<num::niche_types::NonZeroU128Inner as clone::Clone>::clone;false;false;false;false
num::<impl u32>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_mask_max_ph;true;true;true;false
core_arch::x86::__m128d::splat;false;true;true;false
<isize as default::Default>::default;false;false;false;false
sync::atomic::AtomicU8::fetch_xor;false;true;true;false
core_arch::x86::avx512dq::_mm_maskz_range_sd;true;true;true;false
<u16 as ops::bit::BitOrAssign<&u16>>::bitor_assign;false;false;true;false
panic::panic_info::PanicInfo::<'a>::can_unwind;false;false;true;false
<iter::adapters::map::Map<I, F> as iter::traits::unchecked_iterator::UncheckedIterator>::next_unchecked;true;true;true;false
slice::<impl [T]>::chunks_exact_mut;false;false;true;false
net::parser::<impl net::ip_addr::Ipv6Addr>::parse_ascii;false;false;false;false
core_simd::ops::shift_scalar::<impl ops::bit::Shr<u64> for core_simd::vector::Simd<u64, N>>::shr;false;false;false;false
num::wrapping::Wrapping::<i64>::count_zeros;false;false;false;false
core_arch::x86::avx512f::_mm_mask_testn_epi64_mask;true;true;false;false
slice::<impl default::Default for &[T]>::default;false;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::recip;false;false;true;false
unicode::unicode_data::n::lookup;false;false;false;false
unicode::unicode_data::case_ignorable::lookup;false;false;false;false
core_arch::x86::sse2::_mm_avg_epu16;true;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_div_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_fixupimm_ps;true;true;true;false
<i32 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
intrinsics::unchecked_shr;true;false;false;false
<&'a i16 as ops::arith::Mul<i16>>::mul;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m128i> for core_simd::vector::Simd<i16, 8>>::from;false;false;false;false
<num::saturating::Saturating<i64> as ops::bit::BitAndAssign<&i64>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_fixupimm_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmp_epi64_mask;true;true;false;false
<num::saturating::Saturating<i64> as ops::bit::BitXorAssign<i64>>::bitxor_assign;false;false;true;false
<i64 as iter::traits::accum::Product<&'a i64>>::product;false;false;false;true
<num::wrapping::Wrapping<i16> as ops::bit::Not>::not;false;false;false;false
num::<impl u64>::overflowing_shl;false;false;false;false
num::<impl u128>::saturating_pow;false;false;false;false
fmt::num::imp::<impl fmt::LowerExp for i8>::fmt;false;false;true;false
<num::error::TryFromIntError as fmt::Debug>::fmt;false;false;true;false
<slice::iter::IterMut<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
core_arch::x86::avx512cd::_mm_mask_lzcnt_epi32;true;true;false;false
<num::nonzero::NonZero<T> as cmp::PartialOrd>::partial_cmp;false;false;true;false
<isize as ops::bit::ShrAssign<&i64>>::shr_assign;false;false;true;false
slice::index::slice_end_index_len_fail::do_panic::compiletime;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_sra_epi64;true;true;false;false
cmp::impls::<impl cmp::PartialOrd for u8>::lt;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::swap_bytes;false;true;false;false
<u32 as ops::arith::Rem<&u32>>::rem;false;false;false;false
core_arch::x86::avx512fp16::_mm_ucomigt_sh;true;true;true;false
num::saturating::Saturating::<usize>::to_le;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmp_epu16_mask;true;true;false;false
slice::<impl [T]>::rchunks;false;false;false;false
mem::copy;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvttps_epu32;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_xor_epi32;true;true;false;false
core_arch::x86::avx512bw::_mm_maskz_min_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_alignr_epi32;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_roundscale_round_sh;true;true;true;false
ptr::non_null::NonNull::<T>::drop_in_place;true;true;true;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepu32_ph;true;true;true;false
core_arch::x86::avx2::_mm256_packus_epi16;true;true;false;false
num::wrapping::Wrapping::<i128>::is_positive;false;false;false;false
intrinsics::ptr_mask;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitAnd>::bitand;false;false;false;false
<i64 as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
num::nonzero::NonZero::<u8>::rotate_right;false;true;false;false
<core_arch::simd::i64x1 as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<usize> as ops::bit::BitOrAssign<&num::saturating::Saturating<usize>>>::bitor_assign;false;false;true;false
<num::wrapping::Wrapping<i8> as ops::bit::BitOr>::bitor;false;false;false;false
core_arch::x86_64::sse41::_mm_extract_epi64;true;true;false;false
<future::ResumeTy as clone::Clone>::clone;false;false;true;false
<core_arch::simd::i8x16::splat::JustOne as clone::Clone>::clone;false;false;false;false
<&'a usize as ops::bit::Shl<u8>>::shl;false;false;false;false
<i128 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
core_arch::simd::i8x4::from_array;false;false;false;false
intrinsics::variant_count;false;false;false;false
core_simd::vendor::x86::<impl convert::From<core_arch::x86::__m512i> for core_simd::vector::Simd<u16, 32>>::from;false;false;false;false
core_arch::x86::avx512fp16::_mm512_div_ph;true;true;true;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::reduce_max;false;true;false;false
core_arch::simd::i64x1;false;false;false;false
core_arch::x86::avx2::_mm256_min_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_maskz_permutexvar_epi32;true;true;false;false
tuple::<impl cmp::PartialOrd for (D, C, B, A, Z, Y, X, W, V, U, T)>::lt;false;false;false;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_fixupimm_ss;true;true;true;false
core_arch::x86_64::amx::_tile_storeconfig;true;true;true;false
f64::<impl f64>::to_int_unchecked;true;true;true;false
<core_simd::masks::Mask<i16, N> as convert::From<core_simd::masks::Mask<i8, N>>>::from;false;false;true;false
core_arch::x86::avx512bf16::_mm512_mask_cvtne2ps_pbh;true;true;true;false
core_arch::x86::avx2::_mm_broadcastb_epi8;true;true;false;false
<iter::adapters::rev::Rev<I> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;true
<num::wrapping::Wrapping<i128> as ops::arith::SubAssign<i128>>::sub_assign;false;false;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<i64, N>> for core_simd::vector::Simd<i64, N>>::sum;false;false;false;true
<&num::saturating::Saturating<i128> as ops::arith::Sub<&num::saturating::Saturating<i128>>>::sub;false;false;false;false
<cmp::Reverse<T> as cmp::PartialOrd>::ge;false;false;true;false
core_arch::x86::avx512fp16::_mm_sqrt_sh;true;true;true;false
<core_simd::vector::Simd<u64, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_mask_load_epi32;true;true;true;false
core_arch::x86::avx512fp16::_mm_setzero_ph;true;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::num::int::SimdInt>::abs_diff;false;false;false;false
<u16 as ops::bit::Shl<i16>>::shl;false;false;false;false
<&'a u8 as ops::bit::Shr<u8>>::shr;false;false;false;false
<net::socket_addr::SocketAddr as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx::_mm256_set1_pd;true;true;true;false
intrinsics::sqrtf32;true;false;true;false
core_arch::x86::abm::_lzcnt_u32;true;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_fmadd_ph;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
iter::traits::collect::default_extend_tuple_j::extend;false;false;true;false
sync::atomic::AtomicU64::fetch_sub;false;true;true;false
iter::traits::iterator::Iterator::find_map;false;false;true;true
core_arch::x86::avx512f::_mm_mask_srlv_epi64;true;true;false;false
intrinsics::sinf64;true;false;true;false
fmt::Formatter::<'a>::write_formatted_parts;true;true;true;true
num::<impl usize>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_maskz_fmsub_round_sd;true;true;true;false
<core_simd::masks::Mask<i64, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;true;false
<usize as ops::bit::BitAnd<&usize>>::bitand;false;false;false;false
<cmp::Reverse<T> as cmp::PartialOrd>::lt;false;false;true;false
num::<impl i32>::rotate_right;false;false;false;false
core_arch::simd::f64x8::new;false;false;true;false
core_arch::x86::ssse3::_mm_hsubs_epi16;true;true;false;false
num::niche_types::NonZeroU128Inner::as_inner;false;false;false;false
<&u16 as ops::arith::Div<&u16>>::div;false;false;false;false
core_arch::x86::avx512f::_mm_mask_andnot_epi32;true;true;false;false
<net::socket_addr::SocketAddr as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_mulhi_epi16;true;true;false;false
<num::niche_types::NonZeroUsizeInner as cmp::PartialOrd>::partial_cmp;false;false;false;false
core_arch::x86::avx::_mm256_cmp_ps;true;true;true;false
<&u8 as ops::bit::Shl<&i32>>::shl;false;false;false;false
str::count::char_count_general_case;false;false;false;true
<str::UnsafeBytesToStr as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_set1_epi8;true;true;false;false
<&net::ip_addr::Ipv4Addr as ops::bit::BitAnd<&net::ip_addr::Ipv4Addr>>::bitand;false;false;false;false
<&mut I as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<i64 as ops::bit::ShlAssign<&i8>>::shl_assign;false;false;true;false
<&num::wrapping::Wrapping<i8> as ops::arith::Add<&num::wrapping::Wrapping<i8>>>::add;false;false;false;false
core_arch::x86::avx512f::_mm512_maskz_fnmsub_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_mask_cvtepu8_epi32;true;true;false;false
<core_simd::vector::Simd<u8, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;false;false
convert::num::<impl convert::From<bool> for isize>::from;false;false;false;false
<i64 as iter::range::Step>::backward_unchecked;true;true;false;false
core_arch::x86::avx512f::_mm_abs_epi64;true;true;false;false
<&num::wrapping::Wrapping<usize> as ops::bit::BitXor<&num::wrapping::Wrapping<usize>>>::bitxor;false;false;false;false
<fmt::num::LowerHex as fmt::num::GenericRadix>::digit;false;false;false;false
tuple::<impl cmp::PartialOrd for (V, U, T)>::gt;false;false;false;false
num::dec2flt::decimal_seq::DecimalSeq::right_shift;false;false;true;true
char::methods::<impl char>::is_alphanumeric;false;false;false;false
<slice::ascii::EscapeByte as clone::Clone>::clone;false;false;false;false
core_arch::x86::__m512i::splat;false;true;false;false
core_arch::x86::sse2::_mm_sra_epi32;true;true;false;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::is_negative;false;false;false;false
core_arch::x86::avxneconvert::_mm_bcstnebf16_ps;true;true;true;false
<i8 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_min_epi32;true;true;false;false
num::saturating::Saturating::<u32>::is_power_of_two;false;false;false;false
iter::traits::iterator::Iterator::is_partitioned;false;false;false;true
str::<impl str>::split_at_mut_unchecked;true;true;true;false
<ffi::c_str::Bytes<'_> as iter::traits::iterator::Iterator>::count;false;true;true;false
convert::num::<impl convert::TryFrom<u128> for u8>::try_from;false;false;false;false
<u128 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
<&mut G as ops::coroutine::Coroutine<R>>::resume;false;false;true;false
net::ip_addr::Ipv6Addr::from_bits;false;false;false;false
tuple::<impl cmp::Ord for (B, A, Z, Y, X, W, V, U, T)>::cmp;false;false;false;false
<cell::RefCell<T> as clone::Clone>::clone;false;false;true;false
core_arch::simd::i8x16::new;false;false;false;false
core_arch::x86::avx512f::_mm256_extracti32x4_epi32;true;true;false;false
<core_simd::vector::Simd<usize, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;true;false
core_arch::x86::tbm::_blcic_u32;true;false;false;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::signum;false;false;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::cmp::ord::SimdOrd>::simd_clamp;false;false;true;false
<&usize as ops::bit::Shr<&u8>>::shr;false;false;false;false
<isize as ops::arith::DivAssign>::div_assign;false;false;true;false
<i8 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<usize as iter::range::Step>::backward_checked;false;false;false;false
core_arch::x86::sse::_mm_cmpeq_ps;true;true;true;false
core_arch::x86::sse2::_mm_mul_pd;true;true;true;false
num::nonzero::<impl ops::arith::Div<num::nonzero::NonZero<u64>> for u64>::div;false;false;false;false
<&'a u128 as ops::bit::Shl<u64>>::shl;false;false;false;false
option::Option::<T>::as_mut_slice;false;true;true;false
<hash::sip::SipHasher as hash::Hasher>::write;false;false;true;false
<num::wrapping::Wrapping<isize> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<isize>>>::bitxor_assign;false;false;true;false
<&isize as ops::bit::Shl<&i16>>::shl;false;false;false;false
<&mut T as ops::deref::Deref>::deref;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask3_fmadd_sh;true;true;true;false
<num::wrapping::Wrapping<i64> as ops::arith::Sub<&num::wrapping::Wrapping<i64>>>::sub;false;false;false;false
core_arch::x86::sse::_mm_move_ss;true;true;true;false
<&mut I as iter::traits::iterator::IteratorRefSpec>::spec_fold;false;false;true;true
core_arch::x86::avx512dq::_mm_maskz_reduce_pd;true;true;true;false
str::<impl str>::match_indices;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitXorAssign<u32>>::bitxor_assign;false;false;true;false
num::<impl i128>::strict_rem;false;false;false;false
num::<impl u8>::checked_ilog10;false;false;false;false
num::<impl u16>::reverse_bits;false;false;false;false
future::async_drop::async_drop_in_place;true;true;true;false
<core_arch::simd::i16x32::splat::JustOne as clone::Clone>::clone;false;false;false;false
core_arch::x86::__m128i::splat;false;true;false;false
<u64 as ops::bit::Shl<&u16>>::shl;false;false;false;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<u64, N>>::shr;false;true;false;false
<core_simd::vector::Simd<u16, 16> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_ror_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtepi32_ph;true;true;false;false
<core_simd::vector::Simd<i16, 8> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
<num::wrapping::Wrapping<u16> as ops::bit::Shl<&usize>>::shl;false;false;false;false
num::<impl u16>::div_euclid;false;false;false;false
<&num::wrapping::Wrapping<u8> as ops::bit::Shl<&usize>>::shl;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAnd<&num::wrapping::Wrapping<i128>>>::bitand;false;false;false;false
ptr::non_null::NonNull::<T>::to_raw_parts;false;false;true;false
num::<impl isize>::unsigned_abs;false;false;false;false
<&'a isize as ops::bit::Shl<u16>>::shl;false;false;false;false
num::dec2flt::decimal_seq::number_of_digits_decimal_left_shift;false;false;false;true
<num::niche_types::I32NotAllOnes as cmp::Ord>::cmp;false;false;false;false
num::<impl i8>::unchecked_mul;true;false;false;false
<io::borrowed_buf::BorrowedBuf<'_> as fmt::Debug>::fmt;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for range::Range<usize>>::index_mut;false;true;true;false
<&'b [char] as str::pattern::Pattern>::strip_prefix_of;false;false;false;false
tuple::<impl default::Default for (T,)>::default;false;false;false;false
num::flt2dec::strategy::dragon::mul_pow10;false;false;true;false
convert::num::<impl convert::From<num::nonzero::NonZero<u16>> for num::nonzero::NonZero<u128>>::from;false;true;false;false
core_arch::x86::avx512f::_mm512_maskz_sqrt_pd;true;true;true;false
core_arch::x86::sse2::_mm_setr_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_add_epi64;true;true;false;false
error::Request::<'a>::provide_value_with;false;false;true;false
char::methods::<impl char>::eq_ignore_ascii_case;false;false;false;false
core_arch::x86::avx512vnni::_mm_dpbuud_epi32;true;true;false;false
num::<impl i32>::overflowing_rem_euclid;false;false;false;false
<u16 as ops::bit::BitAndAssign<&u16>>::bitand_assign;false;false;true;false
<isize as fmt::num::DisplayInt>::zero;false;false;false;false
core_arch::x86::avx512ifma::_mm256_madd52hi_epu64;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_max_round_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_rsqrt14_ps;true;true;true;false
<num::niche_types::NonZeroI128Inner as cmp::PartialEq>::eq;false;false;false;false
future::async_drop::async_drop_in_place_raw;true;true;true;false
num::saturating::Saturating::<i8>::rotate_right;false;false;false;false
core_arch::simd::m32x4::splat::JustOne;false;false;false;false
core_arch::x86::avx512bw::_mm512_adds_epi8;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_permutexvar_epi32;true;true;false;false
<num::niche_types::NonZeroI128Inner as cmp::Ord>::cmp;false;false;false;false
num::<impl u8>::unbounded_shl;false;true;false;false
hash::impls::<impl hash::Hash for usize>::hash;false;false;true;false
<char::TryFromCharError as fmt::Display>::fmt;false;false;true;false
core_arch::x86::avx512fp16::_mm256_min_ph;true;true;true;false
<range::Range<T> as ops::range::RangeBounds<T>>::end_bound;false;false;true;false
core_arch::x86::avx512f::_mm512_permute_ps;true;true;true;false
<num::saturating::Saturating<i64> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
num::<impl i32>::strict_add_unsigned;false;false;false;false
core_arch::x86::avxneconvert::_mm256_bcstnebf16_ps;true;true;true;false
<bstr::ByteStr as ops::index::IndexMut<ops::range::Range<usize>>>::index_mut;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvt_roundsh_ss;true;true;true;false
fmt::rt::Argument::<'_>::new_pointer;false;false;false;false
num::<impl i8>::strict_div;false;false;false;false
net::socket_addr::SocketAddrV6::ip;false;false;true;false
core_arch::x86::sse2::_mm_stream_si128;true;true;true;false
<&num::wrapping::Wrapping<isize> as ops::arith::Mul<&num::wrapping::Wrapping<isize>>>::mul;false;false;false;false
core_arch::x86::avx512bw::_mm_mask_packus_epi32;true;true;false;false
cmp::impls::<impl cmp::Ord for &mut A>::cmp;false;false;true;false
<f16 as convert::num::FloatToInt<i128>>::to_int_unchecked;true;true;true;false
core_arch::simd::m16x16::new;false;false;false;false
core_arch::x86::sse2::_mm_cmpeq_sd;true;true;true;false
core_arch::x86::avx512vbmi2::_mm_maskz_compress_epi8;true;true;false;false
core_arch::simd::i32x4;false;false;false;false
<str::iter::EscapeDebug<'a> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512fp16::_mm_mask3_fnmadd_sh;true;true;true;false
core_arch::x86::avx512f::_mm256_cmpge_epi64_mask;true;true;false;false
num::<impl i64>::unbounded_shl;false;true;false;false
<&'a u32 as ops::bit::Shl<i32>>::shl;false;false;false;false
core_arch::simd::u8x2::splat;false;true;false;false
intrinsics::simd::simd_floor;true;false;false;false
num::nonzero::NonZero::<u8>::saturating_add;false;true;false;false
<char::convert::CharTryFromError as cmp::PartialEq>::eq;false;false;false;false
convert::num::<impl convert::TryFrom<i16> for u128>::try_from;false;false;false;false
<i64 as ops::bit::Shl<u8>>::shl;false;false;false;false
num::<impl u8>::leading_zeros;false;false;false;false
<u8 as ops::bit::ShrAssign<u32>>::shr_assign;false;false;true;false
core_arch::x86::sse2::_mm_slli_epi64;true;true;false;false
<&i32 as ops::arith::Add<&i32>>::add;false;false;false;false
<iter::adapters::skip_while::SkipWhile<I, P> as iter::traits::iterator::Iterator>::try_fold;false;false;true;true
core_arch::x86::avx2::_mm256_bslli_epi128;true;true;false;false
core_arch::x86::avx512f::_mm512_store_epi64;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_sra_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm_mask_mul_pch;true;true;true;false
core_arch::x86::__m512d::as_mut_array;false;true;true;false
"tuple::<impl convert::From<(T,)> for [T; 1]>::from";false;false;false;false
core_arch::simd::i32x2::splat::JustOne;false;false;false;false
net::ip_addr::Ipv4Addr::is_private;false;false;false;false
<&'a isize as ops::bit::Shl<u64>>::shl;false;false;false;false
intrinsics::fmuladdf32;true;false;true;false
<iter::adapters::rev::Rev<I> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;false;false
<net::socket_addr::SocketAddrV4 as fmt::Display>::fmt;false;false;true;false
<f64 as ops::arith::Add>::add;false;false;true;false
<i64 as iter::traits::accum::Sum>::sum;false;false;false;true
slice::memchr::memrchr;false;true;false;true
<&'a num::wrapping::Wrapping<u16> as ops::arith::Mul<num::wrapping::Wrapping<u16>>>::mul;false;false;false;false
<alloc::AllocError as cmp::PartialEq>::eq;false;false;false;false
clone::impls::<impl clone::Clone for *const T>::clone;false;false;true;false
<i128 as pat::RangePattern>::sub_one;false;false;false;false
core_arch::x86::avx512fp16::_mm256_sub_ph;true;true;true;false
core_arch::simd::u8x16::from_array;false;false;false;false
<num::wrapping::Wrapping<i32> as ops::bit::BitXor>::bitxor;false;false;false;false
fmt::PostPadding::write;false;false;true;true
<num::saturating::Saturating<u64> as ops::bit::BitXor<&num::saturating::Saturating<u64>>>::bitxor;false;false;false;false
str::iter::SplitTerminator;false;false;true;false
<i8 as ops::arith::AddAssign>::add_assign;false;false;true;false
<&i64 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpge_epu32_mask;true;true;false;false
num::wrapping::Wrapping::<i32>::reverse_bits;false;false;false;false
f16::<impl f16>::clamp::do_panic::runtime;false;false;true;false
<core_simd::vector::Simd<*mut T, N> as core_simd::simd::ptr::mut_ptr::SimdMutPtr>::wrapping_sub;false;false;true;false
<num::saturating::Saturating<i8> as ops::bit::BitXorAssign<i8>>::bitxor_assign;false;false;true;false
num::<impl u32>::from_ascii;false;false;false;false
intrinsics::atomic_umax_relaxed;true;false;true;false
core_arch::x86::avx512f::_mm_mask_unpackhi_epi32;true;true;false;false
str::iter::SplitInternal::<'a, P>::next_back_inclusive;false;true;true;false
core_arch::x86::avx512vpopcntdq::_mm512_maskz_popcnt_epi32;true;true;false;false
<isize as ops::bit::ShlAssign<&i16>>::shl_assign;false;false;true;false
io::borrowed_buf::BorrowedCursor::<'a>::set_init;true;false;true;false
core_arch::x86::avx512f::_mm512_mask_getmant_round_pd;true;true;true;false
<core_simd::vector::Simd<i64, N> as core_simd::simd::num::int::SimdInt>::saturating_add;false;true;false;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_lt;false;true;false;false
<str::iter::EscapeDebug<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
cmp::impls::<impl cmp::PartialOrd for u8>::partial_cmp;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_srl_epi64;true;true;false;false
<i16 as ops::bit::BitOrAssign<&i16>>::bitor_assign;false;false;true;false
intrinsics::contract_check_ensures;false;false;false;false
core_arch::x86::avx512f::_mm512_moveldup_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_test_epi64_mask;true;true;false;false
core_arch::x86::avx512bw::_mm256_mask_reduce_max_epi16;true;true;false;false
core_arch::x86::avx512fp16::_mm512_setr_ph;true;false;true;false
<&mut T as fmt::Octal>::fmt;false;false;true;false
hash::Hasher::write_u64;false;false;true;false
core_arch::x86::avx512bw::_mm512_mask_adds_epi16;true;true;false;false
<slice::iter::RSplitN<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::swap_bytes;false;true;false;false
num::<impl i8>::abs_diff;false;false;false;false
<u16 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::Rem>::rem;false;false;false;false
<num::saturating::Saturating<usize> as ops::arith::Rem>::rem;false;false;false;false
<i64 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
option::Option::<T>::is_some_and;false;false;true;false
panic::location::Location::<'a>::file;false;false;true;false
fmt::Formatter::<'a>::debug_tuple_field3_finish;false;false;true;false
num::<impl i32>::widening_mul;false;false;false;false
<i128 as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
<T as slice::sort::shared::smallsort::UnstableSmallSortTypeImpl>::small_sort_threshold;false;false;false;false
core_arch::x86::sse2::_mm_loadu_si128;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cmplt_epi32_mask;true;true;false;false
core_arch::simd::i16x2::splat::JustOne;false;false;false;false
core_arch::x86::avx512bw::_mm512_mask_cmple_epu16_mask;true;true;false;false
<i16 as ops::bit::BitXor>::bitxor;false;false;false;false
num::<impl u16>::div_floor;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::Neg>::neg;false;false;false;false
cmp::impls::<impl cmp::PartialOrd for i32>::partial_cmp;false;false;false;false
panicking::assert_failed_inner;false;false;true;false
<u32 as ops::bit::Shr<i128>>::shr;false;false;false;false
<T as slice::sort::stable::quicksort::IsFreeze>::is_freeze;false;false;false;false
slice::index::<impl ops::index::IndexMut<I> for [T]>::index_mut;false;false;true;false
<T as clone::CloneToUninit>::clone_to_uninit;true;true;true;false
<slice::iter::ChunksExact<'a, T> as iter::traits::iterator::Iterator>::last;false;false;true;false
<range::Range<Idx> as default::Default>::default;false;false;false;false
<option::Item<A> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_sub_epi32;true;true;false;false
<cmp::Reverse<T> as hash::Hash>::hash;false;false;true;false
intrinsics::mir::ReturnTo::panic_cold_explicit;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_test_epi32_mask;true;true;false;false
core_arch::x86::avx512bw::_mm512_permutexvar_epi16;true;true;false;false
core_arch::x86::avx512dq::_mm_maskz_cvtepi64_pd;true;true;false;false
num::<impl i16>::checked_pow;false;false;false;true
core_arch::x86::avx512cd::_mm_broadcastmb_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm256_fpclass_ph_mask;true;true;true;false
<core_simd::vector::Simd<u8, 64> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_simd::vector::Simd<i32, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
core_arch::x86::avx512f::_mm512_cmpnle_pd_mask;true;true;true;false
num::<impl i32>::div_floor;false;false;false;false
num::<impl u64>::swap_bytes;false;false;false;false
num::<impl usize>::wrapping_div_euclid;false;false;false;false
<&'a usize as ops::bit::Shl<u64>>::shl;false;false;false;false
<slice::ascii::EscapeAscii<'a> as iter::traits::iterator::Iterator>::fold;false;false;true;true
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<i32, N>>::bitor;false;true;false;false
<f32 as ops::arith::Rem>::rem;false;false;true;false
<&i128 as ops::bit::Shl<&i8>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_broadcastq_epi64;true;true;false;false
num::<impl i128>::wrapping_abs;false;false;false;false
core_arch::x86::avx512dq::_mm_movm_epi64;true;true;false;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<u32, N>>::rem;false;true;false;false
<slice::iter::RSplit<'_, T, P> as fmt::Debug>::fmt;false;false;true;false
<num::wrapping::Wrapping<u128> as ops::bit::BitOrAssign<&num::wrapping::Wrapping<u128>>>::bitor_assign;false;false;true;false
intrinsics::unchecked_mul;true;false;false;false
<f32 as convert::num::FloatToInt<i32>>::to_int_unchecked;true;true;true;false
core_simd::ops::<impl ops::bit::BitXor for core_simd::vector::Simd<i8, N>>::bitxor;false;true;false;false
convert::num::ptr_try_from_impls::<impl convert::TryFrom<u32> for isize>::try_from;false;false;false;false
slice::iter::IterMut::<'a, T>::next_back_unchecked;true;true;true;false
intrinsics::roundf64;true;false;true;false
core_arch::x86::avx512f::_mm512_load_epi32;true;true;true;false
<num::niche_types::U32NotAllOnes as clone::Clone>::clone;false;false;false;false
num::<impl u128>::strict_neg;false;false;false;false
<(I, H, G, F, E, D, C, B, A) as iter::traits::collect::FromIterator<(EI, EH, EG, EF, EE, ED, EC, EB, EA)>>::from_iter;false;false;false;false
str::<impl str>::escape_default;false;false;false;false
fmt::Formatter::<'a>::debug_struct_fields_finish;false;false;true;true
core_arch::x86::sse::_mm_add_ps;true;true;true;false
f64::<impl f64>::to_degrees;false;false;true;false
<core_simd::vector::Simd<i8, 8> as core_simd::to_bytes::ToBytes>::to_le_bytes;false;false;false;false
<core_arch::simd::m16x16 as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvttpd_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_test_epi8_mask;true;true;false;false
core_arch::x86::avx512fp16::_mm512_cvt_roundepi64_ph;true;true;false;false
<core_simd::vector::Simd<u8, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
<num::saturating::Saturating<u64> as ops::arith::Div>::div;false;false;false;false
core_arch::x86::rtm::_xabort_code;false;false;false;false
<num::saturating::Saturating<u8> as ops::arith::SubAssign<&num::saturating::Saturating<u8>>>::sub_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_setzero;true;false;false;false
str::<impl str>::slice_mut_unchecked;true;true;true;false
iter::adapters::copied::copy_try_fold;false;false;false;false
core_arch::x86::avx512bw::_ktestz_mask32_u8;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::arith::MulAssign<&num::wrapping::Wrapping<u32>>>::mul_assign;false;false;true;false
core_arch::x86::avx2::_mm256_mulhi_epu16;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_extractf64x2_pd;true;true;true;false
core_arch::x86::__m256bh::as_u16x16;false;false;false;false
f128::<impl f128>::clamp;false;false;true;false
str::<impl str>::trim_left;false;false;false;false
num::<impl i64>::is_negative;false;false;false;false
core_arch::x86::avx512f::_mm512_mul_epu32;true;true;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtpd_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_reduce_min_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_roundscale_round_ps;true;true;true;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::cast;false;true;true;false
<str::pattern::CharArraySearcher<'a, N> as clone::Clone>::clone;false;false;false;false
panic::unwind_safe::AssertUnwindSafe;false;false;false;false
core_arch::x86::avx512f::_mm256_maskz_cvtpd_epi32;true;true;true;false
cmp::impls::<impl cmp::PartialEq<&mut B> for &A>::ne;false;false;true;false
<ffi::c_str::FromBytesUntilNulError as cmp::PartialEq>::eq;false;false;false;false
<&'a usize as ops::bit::Shl<i8>>::shl;false;false;false;false
num::<impl u32>::strict_mul;false;false;false;false
core_arch::simd::u16x2::extract;false;true;false;false
<F as str::pattern::MultiCharEq>::matches;false;false;true;false
<core_simd::vector::Simd<usize, N> as core_simd::simd::num::uint::SimdUint>::trailing_zeros;false;true;false;false
iter::adapters::fuse::Fuse::<I>::into_inner;false;false;true;false
core_arch::x86::avx512f::_mm_maskz_sub_epi32;true;true;false;false
iter::traits::collect::default_extend_tuple_i::extend;false;false;true;false
core_arch::x86::avx512f::_mm512_permutevar_pd;true;true;true;false
core_arch::x86::avx512f::_mm256_maskz_permutex2var_ps;true;true;true;false
core_arch::x86::avx512bw::_mm_mask_mov_epi16;true;true;false;false
core_arch::x86::avx512cd::_mm512_mask_conflict_epi32;true;true;false;false
core_arch::x86::avx512ifma::_mm512_maskz_madd52hi_epu64;true;true;false;false
tuple::<impl cmp::PartialOrd for (B, A, Z, Y, X, W, V, U, T)>::ge;false;false;false;false
core_arch::x86::avx512vbmi2::_mm512_maskz_shldi_epi32;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_cvttpd_epi32;true;true;true;false
<range::RangeInclusive<T> as ops::range::IntoBounds<T>>::into_bounds;false;false;true;false
core_arch::x86::avx2::_mm_broadcastw_epi16;true;true;false;false
<&num::wrapping::Wrapping<i128> as ops::arith::Sub<&num::wrapping::Wrapping<i128>>>::sub;false;false;false;false
<i128 as ops::bit::ShrAssign<i8>>::shr_assign;false;false;true;false
hint::cold_path;false;false;false;false
iter::traits::iterator::Iterator::count;false;false;false;true
core_arch::x86::avx::_mm_cmp_ss;true;true;true;false
<u8 as ops::arith::MulAssign>::mul_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_fmadd_sch;true;true;true;false
mem::swap;false;true;true;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reduce_min;false;true;false;false
core_arch::x86::avx512vbmi2::_mm256_mask_compress_epi16;true;true;false;false
core_simd::masks::Mask::<T, N>::test;false;true;true;false
<T as slice::sort::shared::smallsort::UnstableSmallSortTypeImpl>::small_sort_threshold;false;false;false;false
num::saturating::Saturating::<i128>::to_le;false;false;false;false
iter::traits::iterator::Iterator::unzip;false;false;false;false
<ops::range::Bound<T> as fmt::Debug>::fmt;false;false;true;false
num::saturating::Saturating::<u64>::trailing_zeros;false;false;false;false
<task::poll::Poll<T> as cmp::Ord>::cmp;false;false;true;false
str::slice_error_fail_ct;false;false;false;false
tuple::<impl cmp::Ord for (V, U, T)>::cmp;false;false;false;false
num::saturating::Saturating::<u16>::leading_zeros;false;false;false;false
core_arch::x86::avx::_mm256_addsub_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_srl_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundpd_ph;true;true;true;false
<core_simd::vector::Simd<i64, 1> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_cvtusepi16_epi8;true;true;false;false
<u16 as ops::bit::ShrAssign<isize>>::shr_assign;false;false;true;false
core_arch::x86::sse2::_mm_cmpord_sd;true;true;true;false
iter::adapters::peekable::Peekable::<I>::peek;false;false;true;false
<[T] as slice::specialize::SpecFill<T>>::spec_fill;false;false;true;true
result::Result::<&T, E>::cloned;false;false;false;false
<num::wrapping::Wrapping<i8> as ops::bit::ShrAssign<&usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512dq::_mm_cvttps_epi64;true;true;true;false
<i32 as ops::bit::Shl<u32>>::shl;false;false;false;false
core_arch::x86::sse3::_mm_loaddup_pd;true;true;true;false
<core_simd::vector::Simd<f32, N> as core_simd::simd::num::float::SimdFloat>::is_sign_positive;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_expand_epi64;true;true;false;false
io::borrowed_buf::BorrowedCursor::<'a>::advance_unchecked;true;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::Div>::div;false;false;false;false
num::<impl i64>::strict_abs;false;false;false;false
<&mut T as fmt::LowerHex>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm_mask_range_sd;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm256_maskz_popcnt_epi64;true;true;false;false
cmp::impls::<impl cmp::Ord for u64>::cmp;false;false;false;false
num::<impl i64>::from_le;false;false;false;false
num::<impl i32>::unchecked_sub;true;false;false;false
<&u32 as ops::bit::Shl<&i64>>::shl;false;false;false;false
<iter::adapters::flatten::FlattenCompat<I, U> as iter::traits::double_ended::DoubleEndedIterator>::next_back;false;false;true;true
<u16 as iter::range::Step>::forward_unchecked;true;true;false;false
<str::BytesIsNotEmpty as clone::Clone>::clone;false;false;false;false
iter::adapters::take_while::TakeWhile::<I, P>::new;false;false;false;false
<core_arch::simd::i32x2 as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i8x8::splat;false;true;false;false
<num::wrapping::Wrapping<usize> as ops::bit::Shr<usize>>::shr;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::Sub>::sub;false;false;false;false
<&num::saturating::Saturating<i32> as ops::bit::BitXor<&num::saturating::Saturating<i32>>>::bitxor;false;false;false;false
ffi::c_str::strlen;true;false;true;false
alloc::Allocator::allocate_zeroed;false;true;false;false
core_arch::x86::avx512vbmi2::_mm256_maskz_expandloadu_epi8;true;true;true;false
core_arch::x86::avx512vbmi2::_mm512_shldi_epi16;true;true;false;false
option::Option::<T>::is_none_or;false;false;true;false
intrinsics::mir::__debuginfo;false;false;false;false
unicode::unicode_data::cased::lookup;false;false;false;false
core_arch::x86::avx2::_mm256_bsrli_epi128;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_cmp_pd_mask;true;true;true;false
core_arch::x86::avx512f::_mm_mask_cvtsepi64_storeu_epi16;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundph_pd;true;true;true;false
<&'b str as str::pattern::Pattern>::strip_suffix_of;false;true;false;false
<core_arch::simd::i16x16 as fmt::Debug>::fmt;false;false;true;false
<ops::range::RangeInclusive<Idx> as hash::Hash>::hash;false;false;true;false
<u16 as ops::bit::ShrAssign<&i16>>::shr_assign;false;false;true;false
<num::saturating::Saturating<i64> as ops::arith::MulAssign<i64>>::mul_assign;false;false;true;false
num::nonzero::NonZero::<u16>::saturating_mul;false;true;false;false
core_arch::x86::avx512f::_mm512_mask_permutexvar_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_fnmadd_ss;true;true;true;false
net::ip_addr::Ipv6Addr::as_octets;false;false;false;false
core_arch::x86::avx512bw::_mm512_mulhi_epu16;true;true;false;false
<&num::saturating::Saturating<i128> as ops::arith::Div<&num::saturating::Saturating<i128>>>::div;false;false;false;false
<num::wrapping::Wrapping<usize> as ops::arith::Div<&num::wrapping::Wrapping<usize>>>::div;false;false;false;false
<&'a u16 as ops::bit::Shr<isize>>::shr;false;false;false;false
net::ip_addr::Ipv4Addr::to_ipv6_mapped;false;false;false;false
net::socket_addr::SocketAddr::new;false;false;true;false
sync::atomic::atomic_nand;true;true;true;false
<ops::range::RangeTo<usize> as slice::index::SliceIndex<[T]>>::get;false;false;false;false
core_arch::x86::sse2::_mm_subs_epu16;true;true;false;false
core_arch::x86::avx512f::_mm512_mask_min_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm512_mask_getmant_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_maskz_roundscale_round_pd;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_cvttps_epu32;true;true;true;false
core_arch::x86::avx512bw::_mm512_alignr_epi8;true;true;false;false
bstr::ByteStr::from_bytes_mut;false;true;true;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::saturating_sub;false;true;false;false
core_arch::x86::avx512f::_mm256_mask_fnmadd_pd;true;true;true;false
<(dyn any::Any + marker::Send + marker::Sync + 'static) as fmt::Debug>::fmt;false;false;true;false
<asserting::Wrapper<&E> as asserting::TryCapturePrintable<E, asserting::TryCaptureWithDebug>>::try_capture;false;false;true;false
"array::<impl convert::TryFrom<&'a mut [T]> for &'a mut [T; N]>::try_from";false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_roundscale_pd;true;true;true;false
core_arch::simd::i8x16;false;false;false;false
<core_simd::vector::Simd<u16, N> as core_simd::simd::num::uint::SimdUint>::swap_bytes;false;true;false;false
<core_arch::x86::__m256bh as fmt::Debug>::fmt;false;false;true;false
<str::IsAsciiWhitespace as ops::function::Fn<(&u8,)>>::call;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_permutex2var_epi64;true;true;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::reverse_bits;false;true;false;false
<num::wrapping::Wrapping<u8> as ops::arith::SubAssign<&u8>>::sub_assign;false;false;true;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::fold;false;false;true;true
intrinsics::unchecked_add;true;false;false;false
core_arch::x86::sse2::_mm_cmpnlt_sd;true;true;true;false
core_simd::masks::<impl core_simd::masks::sealed::Sealed for isize>::max_unsigned;false;false;false;false
num::wrapping::Wrapping::<u128>::leading_zeros;false;false;false;false
<num::wrapping::Wrapping<isize> as ops::bit::BitAndAssign<isize>>::bitand_assign;false;false;true;false
core_arch::x86::sse2::_mm_setr_epi32;true;true;false;false
<core_simd::vector::Simd<u8, N> as core_simd::simd::num::uint::SimdUint>::reverse_bits;false;true;false;false
<bool as ops::bit::BitAnd<&bool>>::bitand;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_cvt_roundepi32_ph;true;true;false;false
<isize as ops::bit::Shl<usize>>::shl;false;false;false;false
<i128 as ops::bit::Shr<i8>>::shr;false;false;false;false
<usize as ops::bit::ShlAssign<&isize>>::shl_assign;false;false;true;false
<! as ops::bit::Not>::not;false;false;false;false
core_arch::x86::fma::_mm_fnmsub_pd;true;true;true;false
<u64 as ops::bit::BitAndAssign<&u64>>::bitand_assign;false;false;true;false
core_arch::x86::avx512dq::_mm512_maskz_broadcast_f32x2;true;true;true;false
core_arch::x86::avx512bw::_mm_test_epi16_mask;true;true;false;false
<u128 as ops::arith::Add<&u128>>::add;false;false;false;false
num::<impl u8>::wrapping_sub_signed;false;false;false;false
<ops::range::Range<Idx> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::sse2::_mm_cmple_sd;true;true;true;false
<core_arch::x86::__m512 as clone::Clone>::clone;false;false;true;false
<usize as ops::bit::Shr<i16>>::shr;false;false;false;false
<u32 as ops::bit::ShlAssign<&i32>>::shl_assign;false;false;true;false
<&num::wrapping::Wrapping<i8> as ops::arith::Mul<&num::wrapping::Wrapping<i8>>>::mul;false;false;false;false
<i128 as ops::bit::Shl<&i16>>::shl;false;false;false;false
<&'a i32 as ops::bit::Shr<u128>>::shr;false;false;false;false
<iter::adapters::by_ref_sized::ByRefSized<'_, I> as iter::traits::iterator::Iterator>::advance_by;false;false;true;true
<iter::adapters::enumerate::Enumerate<I> as fmt::Debug>::fmt;false;false;true;false
f128::<impl f128>::is_nan;false;false;true;false
iter::traits::iterator::Iterator::try_fold;false;false;true;true
slice::iter::RChunksExactMut::<'a, T>::into_remainder;false;false;true;false
sync::atomic::AtomicIsize::compare_exchange;false;true;true;false
<[T] as slice::specialize::SpecFill<T>>::spec_fill;false;false;true;true
<core_arch::simd::u16x2 as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm256_conj_pch;true;true;true;false
<core_simd::vector::Simd<isize, 8> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
net::ip_addr::IpAddr::V6;false;false;false;false
<marker::PhantomData<T> as cmp::PartialEq>::eq;false;false;false;false
<num::saturating::Saturating<u64> as ops::bit::BitXorAssign<&num::saturating::Saturating<u64>>>::bitxor_assign;false;false;true;false
<num::wrapping::Wrapping<i16> as ops::arith::MulAssign<i16>>::mul_assign;false;false;true;false
num::<impl u128>::wrapping_shl;false;true;false;false
<u64 as random::Random>::random;false;false;true;false
net::ip_addr::IpAddr::is_benchmarking;false;false;true;false
<T as convert::TryFrom<U>>::try_from;false;false;false;false
<(dyn error::Error + 'static)>::downcast_ref;false;true;false;false
<u32 as ops::arith::Rem>::rem;false;false;false;false
<num::saturating::Saturating<isize> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
intrinsics::min_align_of;false;false;false;false
"array::<impl iter::traits::collect::IntoIterator for &'a mut [T; N]>::into_iter";false;false;true;false
cell::is_reading;false;false;false;false
slice::sort::unstable::sort;false;false;true;false
<slice::iter::IterMut<'_, T> as iter::traits::exact_size::ExactSizeIterator>::len;false;true;true;false
num::<impl i32>::unchecked_mul::precondition_check;false;false;false;false
<str::pattern::CharArrayRefSearcher<'a, 'b, N> as str::pattern::Searcher<'a>>::haystack;false;false;false;false
core_arch::x86::sse::_mm_loadr_ps;true;true;true;false
core_arch::x86::avx512f::_mm512_fnmsub_pd;true;true;true;false
<core_arch::x86::__m256d::splat::JustOne as clone::Clone>::clone;false;false;true;false
core_arch::x86::avx512f::_mm256_getmant_pd;true;true;true;false
char::ToLowercase;false;false;true;false
<&'a num::wrapping::Wrapping<u16> as ops::bit::Shr<usize>>::shr;false;false;false;false
"<bstr::ByteStr as cmp::PartialEq<&[u8; N]>>::eq";false;false;false;false
tuple::<impl cmp::PartialEq for (D, C, B, A, Z, Y, X, W, V, U, T)>::ne;false;false;false;false
num::<impl u64>::checked_add;false;false;false;false
num::saturating::Saturating::<i64>::signum;false;false;false;false
<&'a num::wrapping::Wrapping<i64> as ops::bit::Shl<usize>>::shl;false;false;false;false
<&num::saturating::Saturating<i64> as ops::arith::Rem<&num::saturating::Saturating<i64>>>::rem;false;false;false;false
<num::saturating::Saturating<isize> as ops::arith::Neg>::neg;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::arith::Rem>::rem;false;false;false;false
<i32 as ops::bit::ShlAssign<i64>>::shl_assign;false;false;true;false
<i128 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
num::<impl i8>::overflowing_div_euclid;false;false;false;false
<f32 as convert::num::FloatToInt<i16>>::to_int_unchecked;true;true;true;false
<ops::range::RangeFull as clone::Clone>::clone;false;false;false;false
<&'a num::wrapping::Wrapping<usize> as ops::bit::BitXor<num::wrapping::Wrapping<usize>>>::bitxor;false;false;false;false
<&'a mut option::Option<T> as iter::traits::collect::IntoIterator>::into_iter;false;false;true;false
tuple::<impl cmp::PartialOrd for (Y, X, W, V, U, T)>::gt;false;false;false;false
<alloc::layout::LayoutError as fmt::Display>::fmt;false;false;true;false
core_arch::simd::i8x8::extract;false;true;false;false
ptr::mut_ptr::<impl *mut T>::to_raw_parts;false;false;true;false
<ascii::EscapeDefault as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<u16 as ops::bit::ShrAssign>::shr_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_test_epi8_mask;true;true;false;false
core_arch::x86::sse2::_mm_store_pd1;true;true;true;false
core_arch::x86::avx512bw::_mm256_mask_testn_epi8_mask;true;true;false;false
intrinsics::roundf16;true;false;true;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
fmt::num::<impl fmt::Octal for usize>::fmt;false;false;true;false
num::wrapping::Wrapping::<i128>::leading_zeros;false;false;false;false
<num::saturating::Saturating<u32> as ops::arith::Add<&num::saturating::Saturating<u32>>>::add;false;false;false;false
<num::wrapping::Wrapping<i128> as ops::arith::AddAssign<&num::wrapping::Wrapping<i128>>>::add_assign;false;false;true;false
<u64 as ops::bit::Shl<usize>>::shl;false;false;false;false
<num::wrapping::Wrapping<isize> as iter::traits::accum::Product<&'a num::wrapping::Wrapping<isize>>>::product;false;false;false;true
<cmp::Reverse<T> as fmt::Debug>::fmt;false;false;true;false
core_arch::simd::i32x16::new;false;false;false;false
core_arch::x86::sse::_mm_storer_ps;true;true;true;false
core_arch::x86::avx512f::_mm_mask_fmadd_sd;true;true;true;false
num::saturating::Saturating::<isize>::abs;false;false;false;false
core_arch::simd::u8x4::extract;false;true;false;false
core_arch::x86::avx512bw::_mm512_mask_sub_epi16;true;true;false;false
core_arch::x86::avx512bw::_mm512_loadu_epi16;true;true;true;false
<&mut I as iter::traits::double_ended::DoubleEndedIteratorRefSpec>::spec_try_rfold;false;false;true;false
core_arch::x86::avx512bw::_mm512_cvtepi16_epi8;true;true;false;false
<i128 as ops::bit::ShlAssign<&u64>>::shl_assign;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeTo<usize>>::get_mut;false;true;true;false
core_arch::x86::avx512f::_mm256_mmask_i64gather_epi64;true;true;true;false
core_arch::x86::avx512f::_mm512_cvt_roundph_ps;true;true;false;false
<Iter as iter::traits::collect::TraitH<EH, EG, EF, EE, ED, EC, EB, EA>>::extend::extend;false;false;true;false
<ops::range::RangeFull as slice::index::SliceIndex<[T]>>::get_mut;false;false;true;false
<char as str::pattern::Pattern>::is_suffix_of;false;false;false;false
<core_simd::vector::Simd<i64, 2> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
slice::iter::IterMut::<'a, T>::new;false;true;true;false
core_arch::x86::bmi1::_blsmsk_u32;true;false;false;false
ptr::non_null::NonNull::<T>::copy_to_nonoverlapping;true;true;true;false
core_arch::x86::avx2::_mm256_mask_i32gather_ps;true;true;true;false
num::<impl i16>::is_negative;false;false;false;false
num::saturating::Saturating::<i16>::from_le;false;false;false;false
<(ops::range::Bound<usize>, ops::range::Bound<usize>) as slice::index::SliceIndex<[T]>>::get_unchecked;true;true;true;false
<&'a num::wrapping::Wrapping<u64> as ops::arith::Rem<num::wrapping::Wrapping<u64>>>::rem;false;false;false;false
<u16 as ops::bit::ShrAssign<&u8>>::shr_assign;false;false;true;false
<slice::iter::SplitMut<'a, T, P> as iter::traits::iterator::Iterator>::next;false;false;true;true
core_arch::simd::i8x32::new;false;false;false;false
<&'a u16 as ops::bit::Shr<i8>>::shr;false;false;false;false
char::methods::<impl char>::encode_utf16;false;false;true;false
<core_simd::vector::Simd<u8, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
core_arch::x86::avx512f::_mm_cvtss_i32;true;true;true;false
ptr::mut_ptr::<impl *mut T>::is_null;false;false;true;false
<iter::adapters::take::Take<I> as iter::adapters::SourceIter>::as_inner;true;true;true;false
core_simd::iter::<impl iter::traits::accum::Sum<&'a core_simd::vector::Simd<f64, N>> for core_simd::vector::Simd<f64, N>>::sum;false;false;false;true
fmt::Formatter::<'a>::debug_list;false;false;true;false
<str::iter::Lines<'a> as iter::traits::iterator::Iterator>::size_hint;false;false;true;false
<&num::saturating::Saturating<u8> as ops::bit::BitOr<&num::saturating::Saturating<u8>>>::bitor;false;false;false;false
<str::iter::Bytes<'_> as iter::traits::iterator::Iterator>::__iterator_get_unchecked;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_fnmadd_round_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_range_ps;true;true;true;false
core_arch::x86_64::amx::_tile_dpbf16ps;true;true;false;false
core_arch::x86::avx512fp16::_mm512_undefined_ph;true;false;false;false
<f64 as iter::traits::accum::Sum>::sum;false;false;false;true
num::<impl u32>::unchecked_sub::precondition_check;false;false;false;false
<&u128 as ops::bit::Shl<&i32>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_roundscale_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_and_epi32;true;true;false;false
<core_arch::x86::__m128bh::splat::JustOne as clone::Clone>::clone;false;false;false;false
num::nonzero::NonZero::<u8>::saturating_mul;false;true;false;false
<slice::iter::Windows<'a, T> as iter::traits::double_ended::DoubleEndedIterator>::nth_back;false;false;true;false
<char::EscapeDebug as fmt::Display>::fmt;false;false;true;false
<i16 as ops::bit::ShrAssign<u8>>::shr_assign;false;false;true;false
<i32 as ops::bit::BitAnd<&i32>>::bitand;false;false;false;false
option::Option::<T>::unwrap_unchecked;true;true;true;false
slice::sort::stable::drift::merge_tree_depth;false;false;false;false
num::<impl i64>::unchecked_shr;true;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepi32_epi64;true;true;false;false
core_arch::x86::avx512fp16::_mm512_mask_mul_round_pch;true;true;true;false
<&usize as ops::bit::Shr<&usize>>::shr;false;false;false;false
<num::wrapping::Wrapping<i16> as ops::bit::BitAndAssign<i16>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_maskz_min_round_pd;true;true;true;false
<num::wrapping::Wrapping<u32> as ops::bit::BitOrAssign>::bitor_assign;false;false;true;false
slice::index::get_mut_noubcheck;true;false;true;false
num::niche_types::NonZeroU128Inner::new;false;false;false;false
core_arch::x86::avx2::_mm256_cmpeq_epi16;true;true;false;false
<f64 as ops::arith::Neg>::neg;false;false;true;false
<i64 as ops::arith::Neg>::neg;false;false;false;false
<num::wrapping::Wrapping<u128> as ops::bit::BitXorAssign<u128>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_cvt_roundepi32_ph;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpneq_epi64_mask;true;true;false;false
core_arch::x86::__m256i::as_u8x32;false;false;false;false
core_arch::x86::avx512f::_mm_fixupimm_sd;true;true;true;false
hash::impls::<impl hash::Hash for &mut T>::hash;false;false;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<i64>>::try_from;false;true;false;false
<num::saturating::Saturating<u8> as ops::arith::DivAssign>::div_assign;false;false;true;false
panicking::panic;false;false;false;false
core_arch::x86::avx2::_mm256_shufflehi_epi16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_unpacklo_epi64;true;true;false;false
<char::decode::DecodeUtf16Error as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::simd::i8x4::extract;false;true;false;false
num::<impl u64>::overflowing_rem;false;false;false;false
<convert::Infallible as fmt::Debug>::fmt;false;false;true;false
intrinsics::atomic_cxchgweak_release_acquire;true;false;true;false
num::nonzero::NonZero::<u8>::reverse_bits;false;true;false;false
<core_arch::simd::i8x16 as clone::Clone>::clone;false;false;false;false
<i8 as ops::arith::RemAssign<&i8>>::rem_assign;false;false;true;false
num::<impl i32>::saturating_neg;false;false;false;false
num::<impl u8>::checked_rem_euclid;false;false;false;false
<iter::adapters::cloned::Cloned<I> as iter::traits::exact_size::ExactSizeIterator>::is_empty;false;false;false;false
hash::impls::<impl hash::Hash for bool>::hash;false;false;true;false
num::int_sqrt::u32_stages;false;true;false;false
str::<impl str>::from_utf8_mut;false;false;true;false
<fmt::num::UpperHex as clone::Clone>::clone;false;false;false;false
num::<impl i8>::unchecked_shl::precondition_check;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_or_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_inserti64x2;true;true;false;false
iter::adapters::inspect::inspect_fold;false;false;false;false
<u64 as fmt::num::DisplayInt>::to_u128;false;false;false;false
<ptr::alignment::Alignment as cmp::PartialEq>::eq;false;false;false;false
core_arch::x86::avx512dq::_mm512_maskz_cvtt_roundps_epu64;true;true;true;false
ptr::const_ptr::<impl *const T>::byte_add;true;true;true;false
num::saturating::Saturating::<i8>::reverse_bits;false;false;false;false
core_arch::x86::avx512fp16::_mm512_reduce_round_ph;true;true;true;false
<usize as ops::bit::Shr<&u8>>::shr;false;false;false;false
<core_simd::vector::Simd<u32, N> as core_simd::simd::num::uint::SimdUint>::leading_zeros;false;true;false;false
core_arch::x86::avx512fp16::_mm_mask_div_sh;true;true;true;false
fmt::builders::DebugTuple::<'a, 'b>::finish;false;false;true;false
<i8 as intrinsics::fallback::CarryingMulAdd>::carrying_mul_add;false;false;false;false
num::nonzero::NonZero::<i128>::checked_pow;false;true;false;false
<iter::adapters::array_chunks::ArrayChunks<I, N> as iter::adapters::array_chunks::SpecFold>::fold;false;false;true;true
slice::iter::SplitInclusiveMut::<'a, T, P>::new;false;false;true;false
sync::atomic::AtomicI8::fetch_add;false;true;true;false
<core_simd::vector::Simd<usize, 1> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fmadd_round_ss;true;true;true;false
<i32 as ops::bit::Shr<usize>>::shr;false;false;false;false
<core_simd::vector::Simd<i16, N> as core_simd::simd::cmp::ord::SimdPartialOrd>::simd_ge;false;true;false;false
<core_simd::vector::Simd<i16, 16> as core_simd::to_bytes::ToBytes>::from_ne_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm256_fmadd_ph;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<usize> for &'lhs core_simd::vector::Simd<usize, N>>::shl;false;false;false;false
<core_simd::vector::Simd<u64, 4> as core_simd::to_bytes::ToBytes>::to_be_bytes;false;false;false;false
<u16 as ops::bit::Shl<isize>>::shl;false;false;false;false
<&'a usize as ops::bit::Shl<i64>>::shl;false;false;false;false
<f16 as ops::arith::Sub>::sub;false;false;true;false
core_arch::x86::avx512f::_mm_mask_getexp_ps;true;true;true;false
<i8 as ops::bit::Shl<&isize>>::shl;false;false;false;false
str::validations::run_utf8_validation;false;true;false;true
core_arch::x86::avx512f::_mm256_mask_cmplt_epu64_mask;true;true;false;false
<&'a u8 as ops::bit::Shr<i8>>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm_maskz_avg_epu16;true;true;false;false
num::saturating::Saturating::<u8>::from_be;false;false;false;false
<&num::saturating::Saturating<u32> as ops::bit::BitXor<&num::saturating::Saturating<u32>>>::bitxor;false;false;false;false
<str::CharEscapeUnicode as ops::function::FnMut<(char,)>>::call_mut;false;false;true;false
<core_simd::vector::Simd<isize, N> as core_simd::simd::num::int::SimdInt>::saturating_sub;false;true;false;false
<&'a u32 as ops::bit::Shr<u16>>::shr;false;false;false;false
ptr::const_ptr::<impl *const T>::add;true;false;true;false
core_arch::x86::avx512fp16::_mm_maskz_cvtsd_sh;true;true;true;false
<&'a i8 as ops::arith::Add<i8>>::add;false;false;false;false
<core_arch::x86::__m256 as fmt::Debug>::fmt;false;false;true;false
char::methods::encode_utf16_raw::do_panic::runtime;false;true;false;false
core_arch::x86::avx512fp16::_mm256_mask_conj_pch;true;true;true;false
core_simd::ops::<impl ops::bit::BitOr for core_simd::vector::Simd<u8, N>>::bitor;false;true;false;false
core_arch::x86::avx512cd::_mm256_broadcastmw_epi32;true;true;false;false
<i32 as iter::range::Step>::forward;false;false;false;false
slice::<impl [T]>::get_mut;false;false;true;false
core_arch::x86::avx512dq::_mm256_extractf64x2_pd;true;true;true;false
ptr::mut_ptr::<impl *mut T>::as_ref_unchecked;true;true;true;false
core_arch::x86::avx512bw::_mm512_mask_abs_epi8;true;true;false;false
<(dyn any::Any + marker::Send + 'static)>::downcast_mut;false;false;true;false
<&'a i64 as ops::bit::Shl<i32>>::shl;false;false;false;false
<usize as ops::bit::Shl<&u8>>::shl;false;false;false;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<usize>> for num::nonzero::NonZero<u32>>::try_from;false;true;false;false
<&'a i128 as ops::arith::Mul<i128>>::mul;false;false;false;false
core_arch::x86::avx512f::_mm512_i32gather_pd;true;true;true;false
core_arch::x86::avx512f::_mm512_cmpeq_ps_mask;true;true;true;false
slice::<impl [T]>::iter;false;false;false;false
<&'a num::wrapping::Wrapping<u128> as ops::arith::Rem<num::wrapping::Wrapping<u128>>>::rem;false;false;false;false
<i64 as ops::bit::BitOrAssign<&i64>>::bitor_assign;false;false;true;false
fmt::builders::DebugStruct::<'a, 'b>::finish_non_exhaustive;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_storeu_epi8;true;true;true;false
num::<impl u8>::abs_diff;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fmaddsub_ph;true;true;true;false
clone::impls::<impl clone::Clone for u64>::clone;false;false;false;false
str::<impl str>::strip_suffix;false;false;false;false
core_arch::x86::avx512vpopcntdq::_mm_popcnt_epi64;true;true;false;false
<num::wrapping::Wrapping<u32> as ops::bit::BitAndAssign>::bitand_assign;false;false;true;false
core_arch::x86::avx512bw::_mm256_mask_cvtsepi16_storeu_epi8;true;true;true;false
<core_simd::vector::Simd<f32, 4> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;true;false
<i16 as ops::bit::Shr<&i8>>::shr;false;false;false;false
core_arch::x86::avx2::_mm256_srli_epi64;true;true;false;false
<cell::Cell<T> as default::Default>::default;false;false;false;false
<ffi::va_list::VaList<'a, 'f> as ops::deref::Deref>::deref;false;false;true;false
<core_arch::simd::f16x16 as cmp::PartialEq>::eq;false;false;true;false
num::<impl isize>::isolate_least_significant_one;false;false;false;false
num::<impl u64>::checked_signed_diff;false;false;false;false
core_arch::x86::avx512vnni::_mm256_mask_dpwssd_epi32;true;true;false;false
<*mut T as fmt::Pointer>::fmt;false;false;true;false
core_arch::x86::avx512dq::_mm256_maskz_reduce_ps;true;true;true;false
<&'a num::saturating::Saturating<usize> as ops::arith::Sub<num::saturating::Saturating<usize>>>::sub;false;false;false;false
convert::num::<impl convert::TryFrom<i32> for i16>::try_from;false;false;false;false
<i128 as ops::bit::BitXorAssign>::bitxor_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_cvtepi32_ps;true;true;true;false
core_arch::x86::avx512f::_mm_maskz_loadu_pd;true;true;true;false
core_arch::x86::avx512fp16::_mm256_maskz_cvtph_epu64;true;true;true;false
<char::CaseMappingIter as fmt::Debug>::fmt;false;false;true;false
<f32 as ops::arith::SubAssign>::sub_assign;false;false;true;false
<num::wrapping::Wrapping<usize> as ops::arith::AddAssign<&num::wrapping::Wrapping<usize>>>::add_assign;false;false;true;false
<&A as alloc::Allocator>::grow_zeroed;true;true;true;false
<str::iter::RMatches<'a, P> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm512_castpd512_pd256;true;true;true;false
core_arch::x86::avx512dq::_mm_maskz_reduce_sd;true;true;true;false
<&'a num::wrapping::Wrapping<isize> as ops::bit::BitAnd<num::wrapping::Wrapping<isize>>>::bitand;false;false;false;false
core_arch::x86::avx512vbmi::_mm512_multishift_epi64_epi8;true;true;false;false
tuple::<impl cmp::PartialEq for (V, U, T)>::eq;false;false;false;false
<num::saturating::Saturating<i128> as ops::arith::DivAssign<&num::saturating::Saturating<i128>>>::div_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_slli_epi32;true;true;false;false
hint::must_use;false;false;false;false
<u8 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<F as future::into_future::IntoFuture>::into_future;false;false;false;false
<num::saturating::Saturating<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign;false;false;true;false
core_arch::x86::avx512f::_mm_cvtepi64_epi8;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_add_epi32;true;true;false;false
core_arch::x86::avx512bf16::_mm256_maskz_dpbf16_ps;true;true;true;false
<iter::sources::empty::Empty<T> as clone::Clone>::clone;false;false;true;false
num::<impl u8>::min_value;false;false;false;false
core_arch::x86::avx512f::_mm_rsqrt14_ss;true;true;true;false
<num::niche_types::U32NotAllOnes as cmp::Eq>::assert_receiver_is_total_eq;false;false;false;false
core_arch::x86::sse41::_mm_test_mix_ones_zeros;true;true;false;false
core_arch::x86::avx512fp16::_mm_castpd_ph;true;false;true;false
core_arch::x86::avx512fp16::_mm512_mask_fmul_pch;true;true;true;false
iter::traits::double_ended::DoubleEndedIterator::rfold;false;false;false;true
core_arch::simd::i8x64;false;false;false;false
num::<impl isize>::overflowing_add_unsigned;false;false;false;false
<str::pattern::MatchOnly as str::pattern::TwoWayStrategy>::use_early_reject;false;false;false;false
escape::EscapeIterInner::<N>::advance_by;false;false;true;true
<num::wrapping::Wrapping<u128> as ops::arith::RemAssign<&u128>>::rem_assign;false;false;true;false
ptr::mut_ptr::<impl *mut T>::offset;true;false;true;false
num::<impl i32>::carrying_mul;false;false;false;false
core_arch::x86::sse3::_mm_hadd_pd;true;true;true;false
num::wrapping::Wrapping::<u16>::is_power_of_two;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_add_epi8;true;true;false;false
<num::wrapping::Wrapping<i128> as ops::bit::BitAndAssign<&i128>>::bitand_assign;false;false;true;false
<core_simd::vector::Simd<f32, 2> as core_simd::to_bytes::ToBytes>::to_ne_bytes;false;false;true;false
num::saturating::Saturating::<u128>::to_be;false;false;false;false
<&'a u8 as ops::bit::Shr<isize>>::shr;false;false;false;false
sync::atomic::AtomicU8::get_mut_slice;false;true;true;false
<&'a u8 as ops::arith::Add<u8>>::add;false;false;false;false
core_arch::x86::avx512f::_mm_mask_alignr_epi32;true;true;false;false
<u16 as ops::arith::Div<&u16>>::div;false;false;false;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeToInclusive<usize>>::get_unchecked;true;true;true;false
num::<impl i16>::overflowing_sub;false;false;false;false
<&'a u16 as ops::bit::Shl<i8>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm512_add_round_ph;true;true;true;false
marker::variance::PhantomCovariant::<T>::new;false;false;false;false
<[mem::maybe_uninit::MaybeUninit<T>] as mem::maybe_uninit::SpecFill<T>>::spec_fill;false;false;true;false
str::traits::<impl slice::index::SliceIndex<str> for ops::range::RangeFrom<usize>>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx::_mm256_permutevar_pd;true;true;true;false
iter::traits::iterator::Iterator::min_by_key::key;false;false;false;false
num::<impl u16>::checked_mul;false;false;false;false
<i16 as ops::bit::Shr<i32>>::shr;false;false;false;false
<isize as ops::bit::Shr>::shr;false;false;false;false
core_arch::x86::avx512bw::_mm256_mask_avg_epu16;true;true;false;false
core_arch::x86::avx512f::_mm256_mask_and_epi32;true;true;false;false
"array::<impl clone::Clone for [T; N]>::clone";false;false;false;false
<&num::wrapping::Wrapping<i64> as ops::bit::BitXor<&num::wrapping::Wrapping<i64>>>::bitxor;false;false;false;false
core_arch::x86::avx512bitalg::_mm512_mask_popcnt_epi8;true;true;false;false
core_simd::ops::deref::<impl ops::arith::Div<core_simd::vector::Simd<T, N>> for &core_simd::vector::Simd<T, N>>::div;false;false;false;false
core_simd::ops::<impl ops::bit::Shr for core_simd::vector::Simd<i32, N>>::shr;false;true;false;false
<char as iter::range::Step>::backward_unchecked;true;true;false;false
<core_simd::vector::Simd<*const T, N> as core_simd::simd::ptr::const_ptr::SimdConstPtr>::cast_mut;false;true;true;false
<core_arch::simd::u16x2 as cmp::PartialEq>::eq;false;false;false;false
<num::wrapping::Wrapping<u32> as ops::bit::ShrAssign<usize>>::shr_assign;false;false;true;false
core_arch::x86::avx512f::_mm512_mask_unpackhi_pd;true;true;true;false
convert::num::<impl convert::TryFrom<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<usize>>::try_from;false;true;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i16>> for num::nonzero::NonZero<i32>>::from;false;true;false;false
num::<impl u32>::saturating_sub_signed;false;false;false;false
<u16 as ops::bit::ShlAssign<isize>>::shl_assign;false;false;true;false
num::nonzero::NonZero::<i16>::abs;false;true;false;false
num::saturating::Saturating::<u64>::to_le;false;false;false;false
core_arch::x86::avx512f::_mm256_mask_movedup_pd;true;true;true;false
<i64 as ops::arith::RemAssign<&i64>>::rem_assign;false;false;true;false
<u8 as ops::bit::ShlAssign<&u128>>::shl_assign;false;false;true;false
<num::wrapping::Wrapping<i128> as ops::bit::BitXorAssign<&num::wrapping::Wrapping<i128>>>::bitxor_assign;false;false;true;false
core_arch::x86::avx512bw::_mm512_maskz_add_epi8;true;true;false;false
core_arch::x86::avx512vnni::_mm512_dpwssd_epi32;true;true;false;false
core_simd::ops::<impl ops::arith::Mul for core_simd::vector::Simd<f64, N>>::mul;false;true;true;false
num::nonzero::NonZero::<usize>::to_le;false;true;false;false
<i128 as ops::bit::Shr<usize>>::shr;false;false;false;false
<u16 as ops::bit::ShrAssign<&isize>>::shr_assign;false;false;true;false
<core_simd::vector::Simd<i64, 4> as core_simd::to_bytes::ToBytes>::from_le_bytes;false;false;false;false
num::saturating::Saturating::<u128>::swap_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm_mul_sch;true;true;true;false
core_arch::x86::avx512f::_mm512_mask_permutexvar_epi64;true;true;false;false
num::nonzero::NonZero::<u128>::rotate_right;false;true;false;false
num::<impl i8>::checked_pow;false;false;false;true
cmp::impls::<impl cmp::PartialEq for u8>::eq;false;false;false;false
core_arch::x86::avx512f::_mm512_mask_loadu_ps;true;true;true;false
<u16 as ops::arith::Mul>::mul;false;false;false;false
<num::saturating::Saturating<i32> as ops::arith::DivAssign<i32>>::div_assign;false;false;true;false
slice::<impl [T]>::get_unchecked_mut;true;true;true;false
core_arch::x86::avx512dq::_kxnor_mask8;true;true;false;false
core_arch::x86::avx512f::_mm_maskz_roundscale_round_sd;true;true;true;false
<u32 as ops::bit::Shr<&i128>>::shr;false;false;false;false
num::<impl u64>::abs_diff;false;false;false;false
core_arch::x86::sse2::_mm_unpackhi_epi64;true;true;false;false
core_arch::x86::avx512dq::_mm256_maskz_inserti64x2;true;true;false;false
<f16 as ops::arith::Div>::div;false;false;true;false
cmp::impls::<impl cmp::PartialEq for f16>::eq;false;false;true;false
<u128 as ops::bit::Shl<&isize>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_mask_getexp_round_ss;true;true;true;false
<&i64 as ops::bit::Shl<&i128>>::shl;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvtxph_ps;true;true;true;false
core_arch::x86::avx512dq::_mm512_maskz_xor_pd;true;true;true;false
<&'a u64 as ops::bit::Shl<u64>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm512_setr4_pd;true;true;true;false
intrinsics::atomic_or_relaxed;true;false;true;false
core_arch::x86::avx512fp16::_mm_cvtsh_ss;true;true;true;false
core_arch::x86_64::bt::_bittest64;true;true;true;false
<num::wrapping::Wrapping<u128> as ops::arith::MulAssign<u128>>::mul_assign;false;false;true;false
core_arch::x86::avx512f::_mm_mask_fixupimm_ps;true;true;true;false
core_arch::x86::avx512f::_mm_cmple_epu32_mask;true;true;false;false
num::wrapping::Wrapping::<u64>::rotate_right;false;false;false;false
<&i32 as ops::bit::Shl<&u16>>::shl;false;false;false;false
<&i16 as ops::bit::Shl<&i8>>::shl;false;false;false;false
<i16 as ops::bit::Shr<u128>>::shr;false;false;false;false
<ops::control_flow::ControlFlow<B, C> as cmp::Eq>::assert_receiver_is_total_eq;false;false;true;false
core_arch::x86::gfni::_mm_maskz_gf2p8mul_epi8;true;true;false;false
core_arch::x86::avx512f::_mm512_max_round_ps;true;true;true;false
core_simd::ops::<impl ops::arith::Rem for core_simd::vector::Simd<u16, N>>::rem;false;true;false;false
<&'a u128 as ops::bit::Shr<i32>>::shr;false;false;false;false
num::<impl i128>::signum;false;false;false;false
<i64 as ops::bit::Shl<&usize>>::shl;false;false;false;false
<iter::adapters::scan::Scan<I, St, F> as iter::traits::iterator::Iterator>::next;false;false;true;false
core_arch::x86::avx512f::_mm256_maskz_getexp_ps;true;true;true;false
core_simd::ops::shift_scalar::<impl ops::bit::Shl<isize> for &'lhs core_simd::vector::Simd<isize, N>>::shl;false;false;false;false
<iter::adapters::zip::Zip<A, B> as iter::traits::iterator::Iterator>::next;false;false;true;false
<u16 as ops::bit::Shl<&i16>>::shl;false;false;false;false
core_arch::x86::avx512f::_mm_roundscale_ps;true;true;true;false
core_arch::x86::avx512vpopcntdq::_mm256_mask_popcnt_epi32;true;true;false;false
<net::ip_addr::Ipv4Addr as fmt::Display>::fmt;false;false;true;false
num::<impl u16>::isqrt;false;true;false;false
time::Duration::checked_add;false;false;false;false
<i64 as ops::bit::ShrAssign<i128>>::shr_assign;false;false;true;false
num::wrapping::Wrapping::<i8>::trailing_zeros;false;false;false;false
convert::num::<impl convert::From<num::nonzero::NonZero<i8>> for num::nonzero::NonZero<isize>>::from;false;true;false;false
<&'a usize as ops::bit::Shl<i16>>::shl;false;false;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
core_arch::x86::avx512f::_mm512_mask_cvtepu16_epi64;true;true;false;false
<core_simd::vector::Simd<i8, 2> as core_simd::to_bytes::ToBytes>::from_be_bytes;false;false;false;false
core_arch::x86::avx512fp16::_mm512_maskz_fnmadd_ph;true;true;true;false
<i128 as random::Random>::random;false;false;true;false
core_arch::simd::i16x32::splat;false;true;false;false
<num::wrapping::Wrapping<u64> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
ptr::non_null::NonNull::<T>::byte_sub;true;true;true;false
<u32 as ops::bit::Shl<u8>>::shl;false;false;false;false
<str::iter::Lines<'a> as fmt::Debug>::fmt;false;false;true;false
<f64 as convert::num::FloatToInt<u8>>::to_int_unchecked;true;true;true;false
<&f32 as ops::arith::Div<&f32>>::div;false;false;true;false
num::<impl u64>::unbounded_shr;false;true;false;false
"array::<impl default::Default for [T; ($n - 1)]>::default";false;false;false;false
<core_simd::vector::Simd<f64, N> as core_simd::simd::num::float::SimdFloat>::reduce_product;false;true;true;false
<num::wrapping::Wrapping<i32> as ops::bit::ShlAssign<&usize>>::shl_assign;false;false;true;false
<u32 as ops::bit::Shr<&u32>>::shr;false;false;false;false
<num::niche_types::NonZeroI128Inner as clone::Clone>::clone;false;false;false;false
core_arch::x86::avx512fp16::_mm256_mask_cvtepu16_ph;true;true;true;false
